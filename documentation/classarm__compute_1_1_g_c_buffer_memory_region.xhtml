<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: GCBufferMemoryRegion Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classarm__compute_1_1_g_c_buffer_memory_region.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">GCBufferMemoryRegion Class Reference<span class="mlabels"><span class="mlabel">final</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p>GLES buffer memory region implementation.  
 <a href="classarm__compute_1_1_g_c_buffer_memory_region.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_g_c_memory_region_8h_source.xhtml">GCMemoryRegion.h</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for GCBufferMemoryRegion:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classarm__compute_1_1_g_c_buffer_memory_region__coll__graph.svg" width="184" height="187"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ac997f00b218d214813174ac5c54937ba"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_g_c_buffer_memory_region.xhtml#ac997f00b218d214813174ac5c54937ba">GCBufferMemoryRegion</a> (size_t <a class="el" href="classarm__compute_1_1_i_memory_region.xhtml#a259cb5a711406a8c3e5d937eb9350cca">size</a>)</td></tr>
<tr class="memdesc:ac997f00b218d214813174ac5c54937ba"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="#ac997f00b218d214813174ac5c54937ba">More...</a><br /></td></tr>
<tr class="separator:ac997f00b218d214813174ac5c54937ba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8ddb0bf2be1122bfa1b7f50def739d47"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_g_c_buffer_memory_region.xhtml#a8ddb0bf2be1122bfa1b7f50def739d47">~GCBufferMemoryRegion</a> ()</td></tr>
<tr class="memdesc:a8ddb0bf2be1122bfa1b7f50def739d47"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor.  <a href="#a8ddb0bf2be1122bfa1b7f50def739d47">More...</a><br /></td></tr>
<tr class="separator:a8ddb0bf2be1122bfa1b7f50def739d47"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a567fad71aedc47306dbf7b0c020257d8"><td class="memItemLeft" align="right" valign="top">void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_g_c_buffer_memory_region.xhtml#a567fad71aedc47306dbf7b0c020257d8">ptr</a> () final</td></tr>
<tr class="memdesc:a567fad71aedc47306dbf7b0c020257d8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Host/SVM pointer accessor.  <a href="#a567fad71aedc47306dbf7b0c020257d8">More...</a><br /></td></tr>
<tr class="separator:a567fad71aedc47306dbf7b0c020257d8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a00ece8dea7f4aa930272fda661da87ea"><td class="memItemLeft" align="right" valign="top">void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_g_c_buffer_memory_region.xhtml#a00ece8dea7f4aa930272fda661da87ea">map</a> (bool blocking) final</td></tr>
<tr class="memdesc:a00ece8dea7f4aa930272fda661da87ea"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enqueue a map operation of the allocated buffer on the given queue.  <a href="#a00ece8dea7f4aa930272fda661da87ea">More...</a><br /></td></tr>
<tr class="separator:a00ece8dea7f4aa930272fda661da87ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8f2f7a8fe42dbff289d4ff43c6a2414b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_g_c_buffer_memory_region.xhtml#a8f2f7a8fe42dbff289d4ff43c6a2414b">unmap</a> () final</td></tr>
<tr class="memdesc:a8f2f7a8fe42dbff289d4ff43c6a2414b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enqueue an unmap operation of the allocated buffer on the given queue.  <a href="#a8f2f7a8fe42dbff289d4ff43c6a2414b">More...</a><br /></td></tr>
<tr class="separator:a8f2f7a8fe42dbff289d4ff43c6a2414b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0e4a97cc88986a71da44362a6e4adcf6"><td class="memItemLeft" align="right" valign="top">std::unique_ptr&lt; <a class="el" href="classarm__compute_1_1_i_memory_region.xhtml">IMemoryRegion</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_g_c_buffer_memory_region.xhtml#a0e4a97cc88986a71da44362a6e4adcf6">extract_subregion</a> (size_t <a class="el" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>, size_t <a class="el" href="classarm__compute_1_1_i_memory_region.xhtml#a259cb5a711406a8c3e5d937eb9350cca">size</a>) final</td></tr>
<tr class="memdesc:a0e4a97cc88986a71da44362a6e4adcf6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Extract a sub-region from the memory.  <a href="#a0e4a97cc88986a71da44362a6e4adcf6">More...</a><br /></td></tr>
<tr class="separator:a0e4a97cc88986a71da44362a6e4adcf6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1_i_g_c_memory_region"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1_i_g_c_memory_region')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1_i_g_c_memory_region.xhtml">IGCMemoryRegion</a></td></tr>
<tr class="memitem:a1ea285b33671030e2a60eccd8dc60b55 inherit pub_methods_classarm__compute_1_1_i_g_c_memory_region"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_g_c_memory_region.xhtml#a1ea285b33671030e2a60eccd8dc60b55">IGCMemoryRegion</a> (size_t <a class="el" href="classarm__compute_1_1_i_memory_region.xhtml#a259cb5a711406a8c3e5d937eb9350cca">size</a>)</td></tr>
<tr class="memdesc:a1ea285b33671030e2a60eccd8dc60b55 inherit pub_methods_classarm__compute_1_1_i_g_c_memory_region"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="classarm__compute_1_1_i_g_c_memory_region.xhtml#a1ea285b33671030e2a60eccd8dc60b55">More...</a><br /></td></tr>
<tr class="separator:a1ea285b33671030e2a60eccd8dc60b55 inherit pub_methods_classarm__compute_1_1_i_g_c_memory_region"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a44bf2849a57a0fced75e0f67f56847a9 inherit pub_methods_classarm__compute_1_1_i_g_c_memory_region"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_g_c_memory_region.xhtml#a44bf2849a57a0fced75e0f67f56847a9">~IGCMemoryRegion</a> ()=default</td></tr>
<tr class="memdesc:a44bf2849a57a0fced75e0f67f56847a9 inherit pub_methods_classarm__compute_1_1_i_g_c_memory_region"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default Destructor.  <a href="classarm__compute_1_1_i_g_c_memory_region.xhtml#a44bf2849a57a0fced75e0f67f56847a9">More...</a><br /></td></tr>
<tr class="separator:a44bf2849a57a0fced75e0f67f56847a9 inherit pub_methods_classarm__compute_1_1_i_g_c_memory_region"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3fc929b7c49a15aabeda3efac4142383 inherit pub_methods_classarm__compute_1_1_i_g_c_memory_region"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_g_c_memory_region.xhtml#a3fc929b7c49a15aabeda3efac4142383">IGCMemoryRegion</a> (const <a class="el" href="classarm__compute_1_1_i_g_c_memory_region.xhtml">IGCMemoryRegion</a> &amp;)=delete</td></tr>
<tr class="memdesc:a3fc929b7c49a15aabeda3efac4142383 inherit pub_methods_classarm__compute_1_1_i_g_c_memory_region"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied (As this class contains pointers)  <a href="classarm__compute_1_1_i_g_c_memory_region.xhtml#a3fc929b7c49a15aabeda3efac4142383">More...</a><br /></td></tr>
<tr class="separator:a3fc929b7c49a15aabeda3efac4142383 inherit pub_methods_classarm__compute_1_1_i_g_c_memory_region"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ade6f50df2c069ce94a72ab26062b5f7c inherit pub_methods_classarm__compute_1_1_i_g_c_memory_region"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_g_c_memory_region.xhtml#ade6f50df2c069ce94a72ab26062b5f7c">IGCMemoryRegion</a> (<a class="el" href="classarm__compute_1_1_i_g_c_memory_region.xhtml">IGCMemoryRegion</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:ade6f50df2c069ce94a72ab26062b5f7c inherit pub_methods_classarm__compute_1_1_i_g_c_memory_region"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default move constructor.  <a href="classarm__compute_1_1_i_g_c_memory_region.xhtml#ade6f50df2c069ce94a72ab26062b5f7c">More...</a><br /></td></tr>
<tr class="separator:ade6f50df2c069ce94a72ab26062b5f7c inherit pub_methods_classarm__compute_1_1_i_g_c_memory_region"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9b586073abda157c8aa9cfc1d1a6baf7 inherit pub_methods_classarm__compute_1_1_i_g_c_memory_region"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_i_g_c_memory_region.xhtml">IGCMemoryRegion</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_g_c_memory_region.xhtml#a9b586073abda157c8aa9cfc1d1a6baf7">operator=</a> (const <a class="el" href="classarm__compute_1_1_i_g_c_memory_region.xhtml">IGCMemoryRegion</a> &amp;)=delete</td></tr>
<tr class="memdesc:a9b586073abda157c8aa9cfc1d1a6baf7 inherit pub_methods_classarm__compute_1_1_i_g_c_memory_region"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied (As this class contains pointers)  <a href="classarm__compute_1_1_i_g_c_memory_region.xhtml#a9b586073abda157c8aa9cfc1d1a6baf7">More...</a><br /></td></tr>
<tr class="separator:a9b586073abda157c8aa9cfc1d1a6baf7 inherit pub_methods_classarm__compute_1_1_i_g_c_memory_region"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa070a495e1556ae2dd1cbcbdc7731d01 inherit pub_methods_classarm__compute_1_1_i_g_c_memory_region"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_i_g_c_memory_region.xhtml">IGCMemoryRegion</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_g_c_memory_region.xhtml#aa070a495e1556ae2dd1cbcbdc7731d01">operator=</a> (<a class="el" href="classarm__compute_1_1_i_g_c_memory_region.xhtml">IGCMemoryRegion</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:aa070a495e1556ae2dd1cbcbdc7731d01 inherit pub_methods_classarm__compute_1_1_i_g_c_memory_region"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default move assignment operator.  <a href="classarm__compute_1_1_i_g_c_memory_region.xhtml#aa070a495e1556ae2dd1cbcbdc7731d01">More...</a><br /></td></tr>
<tr class="separator:aa070a495e1556ae2dd1cbcbdc7731d01 inherit pub_methods_classarm__compute_1_1_i_g_c_memory_region"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8fb30f2d054c3ad3e11edf5f9d477f87 inherit pub_methods_classarm__compute_1_1_i_g_c_memory_region"><td class="memItemLeft" align="right" valign="top">const GLuint &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_g_c_memory_region.xhtml#a8fb30f2d054c3ad3e11edf5f9d477f87">gc_ssbo_name</a> () const</td></tr>
<tr class="memdesc:a8fb30f2d054c3ad3e11edf5f9d477f87 inherit pub_methods_classarm__compute_1_1_i_g_c_memory_region"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the underlying CL buffer.  <a href="classarm__compute_1_1_i_g_c_memory_region.xhtml#a8fb30f2d054c3ad3e11edf5f9d477f87">More...</a><br /></td></tr>
<tr class="separator:a8fb30f2d054c3ad3e11edf5f9d477f87 inherit pub_methods_classarm__compute_1_1_i_g_c_memory_region"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3d9d196240e9b0062c953c3abd534187 inherit pub_methods_classarm__compute_1_1_i_g_c_memory_region"><td class="memItemLeft" align="right" valign="top">void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_g_c_memory_region.xhtml#a3d9d196240e9b0062c953c3abd534187">buffer</a> () override</td></tr>
<tr class="memdesc:a3d9d196240e9b0062c953c3abd534187 inherit pub_methods_classarm__compute_1_1_i_g_c_memory_region"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the pointer to the allocated data.  <a href="classarm__compute_1_1_i_g_c_memory_region.xhtml#a3d9d196240e9b0062c953c3abd534187">More...</a><br /></td></tr>
<tr class="separator:a3d9d196240e9b0062c953c3abd534187 inherit pub_methods_classarm__compute_1_1_i_g_c_memory_region"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad39124c7fd703b14af6f5bf5bc0762ec inherit pub_methods_classarm__compute_1_1_i_g_c_memory_region"><td class="memItemLeft" align="right" valign="top">const void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_g_c_memory_region.xhtml#ad39124c7fd703b14af6f5bf5bc0762ec">buffer</a> () const override</td></tr>
<tr class="memdesc:ad39124c7fd703b14af6f5bf5bc0762ec inherit pub_methods_classarm__compute_1_1_i_g_c_memory_region"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the pointer to the allocated data.  <a href="classarm__compute_1_1_i_g_c_memory_region.xhtml#ad39124c7fd703b14af6f5bf5bc0762ec">More...</a><br /></td></tr>
<tr class="separator:ad39124c7fd703b14af6f5bf5bc0762ec inherit pub_methods_classarm__compute_1_1_i_g_c_memory_region"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1_i_memory_region"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1_i_memory_region')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1_i_memory_region.xhtml">IMemoryRegion</a></td></tr>
<tr class="memitem:a92ee6f66a47e8ba4bd3d01579ad4ef42 inherit pub_methods_classarm__compute_1_1_i_memory_region"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_memory_region.xhtml#a92ee6f66a47e8ba4bd3d01579ad4ef42">IMemoryRegion</a> (size_t <a class="el" href="classarm__compute_1_1_i_memory_region.xhtml#a259cb5a711406a8c3e5d937eb9350cca">size</a>)</td></tr>
<tr class="memdesc:a92ee6f66a47e8ba4bd3d01579ad4ef42 inherit pub_methods_classarm__compute_1_1_i_memory_region"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor.  <a href="classarm__compute_1_1_i_memory_region.xhtml#a92ee6f66a47e8ba4bd3d01579ad4ef42">More...</a><br /></td></tr>
<tr class="separator:a92ee6f66a47e8ba4bd3d01579ad4ef42 inherit pub_methods_classarm__compute_1_1_i_memory_region"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaa097212d2b66253335ff2dca6385b13 inherit pub_methods_classarm__compute_1_1_i_memory_region"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_memory_region.xhtml#aaa097212d2b66253335ff2dca6385b13">~IMemoryRegion</a> ()=default</td></tr>
<tr class="memdesc:aaa097212d2b66253335ff2dca6385b13 inherit pub_methods_classarm__compute_1_1_i_memory_region"><td class="mdescLeft">&#160;</td><td class="mdescRight">Virtual Destructor.  <a href="classarm__compute_1_1_i_memory_region.xhtml#aaa097212d2b66253335ff2dca6385b13">More...</a><br /></td></tr>
<tr class="separator:aaa097212d2b66253335ff2dca6385b13 inherit pub_methods_classarm__compute_1_1_i_memory_region"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a259cb5a711406a8c3e5d937eb9350cca inherit pub_methods_classarm__compute_1_1_i_memory_region"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_memory_region.xhtml#a259cb5a711406a8c3e5d937eb9350cca">size</a> () const</td></tr>
<tr class="memdesc:a259cb5a711406a8c3e5d937eb9350cca inherit pub_methods_classarm__compute_1_1_i_memory_region"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classarm__compute_1_1_memory.xhtml" title="CPU implementation of memory object.">Memory</a> region size accessor.  <a href="classarm__compute_1_1_i_memory_region.xhtml#a259cb5a711406a8c3e5d937eb9350cca">More...</a><br /></td></tr>
<tr class="separator:a259cb5a711406a8c3e5d937eb9350cca inherit pub_methods_classarm__compute_1_1_i_memory_region"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab5c159b7d0cdca9f543019f4f47ec288 inherit pub_methods_classarm__compute_1_1_i_memory_region"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_memory_region.xhtml#ab5c159b7d0cdca9f543019f4f47ec288">set_size</a> (size_t <a class="el" href="classarm__compute_1_1_i_memory_region.xhtml#a259cb5a711406a8c3e5d937eb9350cca">size</a>)</td></tr>
<tr class="memdesc:ab5c159b7d0cdca9f543019f4f47ec288 inherit pub_methods_classarm__compute_1_1_i_memory_region"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets size of region.  <a href="classarm__compute_1_1_i_memory_region.xhtml#ab5c159b7d0cdca9f543019f4f47ec288">More...</a><br /></td></tr>
<tr class="separator:ab5c159b7d0cdca9f543019f4f47ec288 inherit pub_methods_classarm__compute_1_1_i_memory_region"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>GLES buffer memory region implementation. </p>

<p class="definition">Definition at line <a class="el" href="_g_c_memory_region_8h_source.xhtml#l00090">90</a> of file <a class="el" href="_g_c_memory_region_8h_source.xhtml">GCMemoryRegion.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="ac997f00b218d214813174ac5c54937ba"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac997f00b218d214813174ac5c54937ba">&#9670;&nbsp;</a></span>GCBufferMemoryRegion()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_g_c_buffer_memory_region.xhtml">GCBufferMemoryRegion</a> </td>
          <td>(</td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>size</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constructor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">size</td><td>Region size </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_g_c_memory_region_8cpp_source.xhtml#l00050">50</a> of file <a class="el" href="_g_c_memory_region_8cpp_source.xhtml">GCMemoryRegion.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    : <a class="code" href="classarm__compute_1_1_i_g_c_memory_region.xhtml#a1ea285b33671030e2a60eccd8dc60b55">IGCMemoryRegion</a>(<a class="code" href="classarm__compute_1_1_i_memory_region.xhtml#a259cb5a711406a8c3e5d937eb9350cca">size</a>)</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;{</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <a class="code" href="_open_g_l_e_s_8h.xhtml#a496c7b08ac063d996956854207366913">ARM_COMPUTE_GL_CHECK</a>(<a class="code" href="_open_g_l_e_s_8cpp.xhtml#a68154b66955d77ae9c5192218e02ebdc">glGenBuffers</a>(1, &amp;_ssbo_name));</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <a class="code" href="_open_g_l_e_s_8h.xhtml#a496c7b08ac063d996956854207366913">ARM_COMPUTE_GL_CHECK</a>(<a class="code" href="_open_g_l_e_s_8cpp.xhtml#ad9528d3fb71b7ee1e23fab6aed1cba83">glBindBuffer</a>(GL_SHADER_STORAGE_BUFFER, _ssbo_name));</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    <a class="code" href="_open_g_l_e_s_8h.xhtml#a496c7b08ac063d996956854207366913">ARM_COMPUTE_GL_CHECK</a>(<a class="code" href="_open_g_l_e_s_8cpp.xhtml#a4991c46050f5040b9fc85fc35f8297ed">glBufferData</a>(GL_SHADER_STORAGE_BUFFER, static_cast&lt;GLsizeiptr&gt;(<a class="code" href="classarm__compute_1_1_i_memory_region.xhtml#a259cb5a711406a8c3e5d937eb9350cca">size</a>), <span class="keyword">nullptr</span>, GL_STATIC_DRAW));</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    <a class="code" href="_open_g_l_e_s_8h.xhtml#a496c7b08ac063d996956854207366913">ARM_COMPUTE_GL_CHECK</a>(<a class="code" href="_open_g_l_e_s_8cpp.xhtml#ad9528d3fb71b7ee1e23fab6aed1cba83">glBindBuffer</a>(GL_SHADER_STORAGE_BUFFER, 0));</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;}</div><div class="ttc" id="_open_g_l_e_s_8h_xhtml_a496c7b08ac063d996956854207366913"><div class="ttname"><a href="_open_g_l_e_s_8h.xhtml#a496c7b08ac063d996956854207366913">ARM_COMPUTE_GL_CHECK</a></div><div class="ttdeci">#define ARM_COMPUTE_GL_CHECK(x)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8h_source.xhtml#l00045">OpenGLES.h:45</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_ad9528d3fb71b7ee1e23fab6aed1cba83"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#ad9528d3fb71b7ee1e23fab6aed1cba83">glBindBuffer</a></div><div class="ttdeci">void GL_APIENTRY glBindBuffer(GLenum target, GLuint buffer)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00490">OpenGLES.cpp:490</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a68154b66955d77ae9c5192218e02ebdc"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a68154b66955d77ae9c5192218e02ebdc">glGenBuffers</a></div><div class="ttdeci">void GL_APIENTRY glGenBuffers(GLsizei n, GLuint *buffers)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00568">OpenGLES.cpp:568</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_g_c_memory_region_xhtml_a1ea285b33671030e2a60eccd8dc60b55"><div class="ttname"><a href="classarm__compute_1_1_i_g_c_memory_region.xhtml#a1ea285b33671030e2a60eccd8dc60b55">arm_compute::IGCMemoryRegion::IGCMemoryRegion</a></div><div class="ttdeci">IGCMemoryRegion(size_t size)</div><div class="ttdoc">Constructor.</div><div class="ttdef"><b>Definition:</b> <a href="_g_c_memory_region_8cpp_source.xhtml#l00030">GCMemoryRegion.cpp:30</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_memory_region_xhtml_a259cb5a711406a8c3e5d937eb9350cca"><div class="ttname"><a href="classarm__compute_1_1_i_memory_region.xhtml#a259cb5a711406a8c3e5d937eb9350cca">arm_compute::IMemoryRegion::size</a></div><div class="ttdeci">size_t size() const</div><div class="ttdoc">Memory region size accessor.</div><div class="ttdef"><b>Definition:</b> <a href="_i_memory_region_8h_source.xhtml#l00073">IMemoryRegion.h:73</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a4991c46050f5040b9fc85fc35f8297ed"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a4991c46050f5040b9fc85fc35f8297ed">glBufferData</a></div><div class="ttdeci">void GL_APIENTRY glBufferData(GLenum target, GLsizeiptr size, const GLvoid *data, GLenum usage)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00516">OpenGLES.cpp:516</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_open_g_l_e_s_8h_source.xhtml#l00045">ARM_COMPUTE_GL_CHECK</a>, <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00490">glBindBuffer()</a>, <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00516">glBufferData()</a>, <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00568">glGenBuffers()</a>, and <a class="el" href="_i_memory_region_8h_source.xhtml#l00073">IMemoryRegion::size()</a>.</p>

</div>
</div>
<a id="a8ddb0bf2be1122bfa1b7f50def739d47"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8ddb0bf2be1122bfa1b7f50def739d47">&#9670;&nbsp;</a></span>~GCBufferMemoryRegion()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="classarm__compute_1_1_g_c_buffer_memory_region.xhtml">GCBufferMemoryRegion</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Destructor. </p>

<p class="definition">Definition at line <a class="el" href="_g_c_memory_region_8cpp_source.xhtml#l00059">59</a> of file <a class="el" href="_g_c_memory_region_8cpp_source.xhtml">GCMemoryRegion.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;{</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <a class="code" href="_open_g_l_e_s_8h.xhtml#a496c7b08ac063d996956854207366913">ARM_COMPUTE_GL_CHECK</a>(<a class="code" href="_open_g_l_e_s_8cpp.xhtml#a528e76a977061a313bad3ab6fe7747fe">glDeleteBuffers</a>(1, &amp;_ssbo_name));</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;}</div><div class="ttc" id="_open_g_l_e_s_8h_xhtml_a496c7b08ac063d996956854207366913"><div class="ttname"><a href="_open_g_l_e_s_8h.xhtml#a496c7b08ac063d996956854207366913">ARM_COMPUTE_GL_CHECK</a></div><div class="ttdeci">#define ARM_COMPUTE_GL_CHECK(x)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8h_source.xhtml#l00045">OpenGLES.h:45</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a528e76a977061a313bad3ab6fe7747fe"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a528e76a977061a313bad3ab6fe7747fe">glDeleteBuffers</a></div><div class="ttdeci">void GL_APIENTRY glDeleteBuffers(GLsizei n, const GLuint *buffers)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00529">OpenGLES.cpp:529</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_open_g_l_e_s_8h_source.xhtml#l00045">ARM_COMPUTE_GL_CHECK</a>, and <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00529">glDeleteBuffers()</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a0e4a97cc88986a71da44362a6e4adcf6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0e4a97cc88986a71da44362a6e4adcf6">&#9670;&nbsp;</a></span>extract_subregion()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::unique_ptr&lt; <a class="el" href="classarm__compute_1_1_i_memory_region.xhtml">IMemoryRegion</a> &gt; extract_subregion </td>
          <td>(</td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>offset</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>size</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">final</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Extract a sub-region from the memory. </p>
<dl class="section warning"><dt>Warning</dt><dd>Ownership is maintained by the parent memory, while a wrapped raw memory region is returned by this function. Thus parent memory should not be released before this.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">offset</td><td>Offset to the region </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">size</td><td>Size of the region</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A wrapped memory sub-region with no ownership of the underlying memory </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_memory_region.xhtml#ae883a66f44b3d41635c4a75cab7dacfb">IMemoryRegion</a>.</p>

<p class="definition">Definition at line <a class="el" href="_g_c_memory_region_8cpp_source.xhtml#l00091">91</a> of file <a class="el" href="_g_c_memory_region_8cpp_source.xhtml">GCMemoryRegion.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;{</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(<a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>, <a class="code" href="classarm__compute_1_1_i_memory_region.xhtml#a259cb5a711406a8c3e5d937eb9350cca">size</a>);</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;}</div><div class="ttc" id="src_2core_2_c_l_2cl__kernels_2_helpers_8h_xhtml_a009469e4d9b8fce3b6d5e97d2077827d"><div class="ttname"><a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a></div><div class="ttdeci">__global uchar * offset(const Image *img, int x, int y)</div><div class="ttdoc">Get the pointer position of a Image.</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l00510">helpers.h:510</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a6dc630a6ae9cc063b3924bcea8dee9d6"><div class="ttname"><a href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a></div><div class="ttdeci">#define ARM_COMPUTE_UNUSED(...)</div><div class="ttdoc">To avoid unused variables warnings.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00152">Error.h:152</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_memory_region_xhtml_a259cb5a711406a8c3e5d937eb9350cca"><div class="ttname"><a href="classarm__compute_1_1_i_memory_region.xhtml#a259cb5a711406a8c3e5d937eb9350cca">arm_compute::IMemoryRegion::size</a></div><div class="ttdeci">size_t size() const</div><div class="ttdoc">Memory region size accessor.</div><div class="ttdef"><b>Definition:</b> <a href="_i_memory_region_8h_source.xhtml#l00073">IMemoryRegion.h:73</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00152">ARM_COMPUTE_UNUSED</a>, <a class="el" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l00510">offset()</a>, and <a class="el" href="_i_memory_region_8h_source.xhtml#l00073">IMemoryRegion::size()</a>.</p>

</div>
</div>
<a id="a00ece8dea7f4aa930272fda661da87ea"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a00ece8dea7f4aa930272fda661da87ea">&#9670;&nbsp;</a></span>map()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void * map </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>blocking</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">final</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Enqueue a map operation of the allocated buffer on the given queue. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">blocking</td><td>If true, then the mapping will be ready to use by the time this method returns, else it is the caller's responsibility to flush the queue and wait for the mapping operation to have completed before using the returned mapping pointer.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The mapping address. </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_g_c_memory_region.xhtml#a5a589966a248f6e2a958f8dff2550418">IGCMemoryRegion</a>.</p>

<p class="definition">Definition at line <a class="el" href="_g_c_memory_region_8cpp_source.xhtml#l00069">69</a> of file <a class="el" href="_g_c_memory_region_8cpp_source.xhtml">GCMemoryRegion.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;{</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(_mapping != <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(blocking);</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <a class="code" href="_open_g_l_e_s_8h.xhtml#a496c7b08ac063d996956854207366913">ARM_COMPUTE_GL_CHECK</a>(<a class="code" href="_open_g_l_e_s_8cpp.xhtml#ad9528d3fb71b7ee1e23fab6aed1cba83">glBindBuffer</a>(GL_SHADER_STORAGE_BUFFER, _ssbo_name));</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <span class="keywordtype">void</span> *p  = <a class="code" href="_open_g_l_e_s_8h.xhtml#a496c7b08ac063d996956854207366913">ARM_COMPUTE_GL_CHECK</a>(<a class="code" href="_open_g_l_e_s_8cpp.xhtml#a7a6ac79ff4cf0bf3ed8c5cd3953ec6de">glMapBufferRange</a>(GL_SHADER_STORAGE_BUFFER, 0, static_cast&lt;GLsizeiptr&gt;(<a class="code" href="classarm__compute_1_1_i_memory_region.xhtml#a259cb5a711406a8c3e5d937eb9350cca">size</a>()), GL_MAP_READ_BIT | GL_MAP_WRITE_BIT));</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    _mapping = reinterpret_cast&lt;uint8_t *&gt;(p);</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <span class="keywordflow">return</span> _mapping;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;}</div><div class="ttc" id="_open_g_l_e_s_8h_xhtml_a496c7b08ac063d996956854207366913"><div class="ttname"><a href="_open_g_l_e_s_8h.xhtml#a496c7b08ac063d996956854207366913">ARM_COMPUTE_GL_CHECK</a></div><div class="ttdeci">#define ARM_COMPUTE_GL_CHECK(x)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8h_source.xhtml#l00045">OpenGLES.h:45</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00466">Error.h:466</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_ad9528d3fb71b7ee1e23fab6aed1cba83"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#ad9528d3fb71b7ee1e23fab6aed1cba83">glBindBuffer</a></div><div class="ttdeci">void GL_APIENTRY glBindBuffer(GLenum target, GLuint buffer)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00490">OpenGLES.cpp:490</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a6dc630a6ae9cc063b3924bcea8dee9d6"><div class="ttname"><a href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a></div><div class="ttdeci">#define ARM_COMPUTE_UNUSED(...)</div><div class="ttdoc">To avoid unused variables warnings.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00152">Error.h:152</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a7a6ac79ff4cf0bf3ed8c5cd3953ec6de"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a7a6ac79ff4cf0bf3ed8c5cd3953ec6de">glMapBufferRange</a></div><div class="ttdeci">void *GL_APIENTRY glMapBufferRange(GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00607">OpenGLES.cpp:607</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_memory_region_xhtml_a259cb5a711406a8c3e5d937eb9350cca"><div class="ttname"><a href="classarm__compute_1_1_i_memory_region.xhtml#a259cb5a711406a8c3e5d937eb9350cca">arm_compute::IMemoryRegion::size</a></div><div class="ttdeci">size_t size() const</div><div class="ttdoc">Memory region size accessor.</div><div class="ttdef"><b>Definition:</b> <a href="_i_memory_region_8h_source.xhtml#l00073">IMemoryRegion.h:73</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00466">ARM_COMPUTE_ERROR_ON</a>, <a class="el" href="_open_g_l_e_s_8h_source.xhtml#l00045">ARM_COMPUTE_GL_CHECK</a>, <a class="el" href="_error_8h_source.xhtml#l00152">ARM_COMPUTE_UNUSED</a>, <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00490">glBindBuffer()</a>, <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00607">glMapBufferRange()</a>, and <a class="el" href="_i_memory_region_8h_source.xhtml#l00073">IMemoryRegion::size()</a>.</p>

</div>
</div>
<a id="a567fad71aedc47306dbf7b0c020257d8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a567fad71aedc47306dbf7b0c020257d8">&#9670;&nbsp;</a></span>ptr()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void * ptr </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">final</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Host/SVM pointer accessor. </p>
<dl class="section return"><dt>Returns</dt><dd>Host/SVM pointer base </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_g_c_memory_region.xhtml#ab8777d03065e8c7146157148a5355dd1">IGCMemoryRegion</a>.</p>

<p class="definition">Definition at line <a class="el" href="_g_c_memory_region_8cpp_source.xhtml#l00064">64</a> of file <a class="el" href="_g_c_memory_region_8cpp_source.xhtml">GCMemoryRegion.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;{</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a8f2f7a8fe42dbff289d4ff43c6a2414b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8f2f7a8fe42dbff289d4ff43c6a2414b">&#9670;&nbsp;</a></span>unmap()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void unmap </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">final</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Enqueue an unmap operation of the allocated buffer on the given queue. </p>
<dl class="section note"><dt>Note</dt><dd>This method simply enqueue the unmap operation, it is the caller's responsibility to flush the queue and make sure the unmap is finished before the memory is accessed by the device. </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_g_c_memory_region.xhtml#a21164b8d700d97aa462e75e314048f46">IGCMemoryRegion</a>.</p>

<p class="definition">Definition at line <a class="el" href="_g_c_memory_region_8cpp_source.xhtml#l00081">81</a> of file <a class="el" href="_g_c_memory_region_8cpp_source.xhtml">GCMemoryRegion.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;{</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(_mapping == <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <a class="code" href="_open_g_l_e_s_8h.xhtml#a496c7b08ac063d996956854207366913">ARM_COMPUTE_GL_CHECK</a>(<a class="code" href="_open_g_l_e_s_8cpp.xhtml#ad9528d3fb71b7ee1e23fab6aed1cba83">glBindBuffer</a>(GL_SHADER_STORAGE_BUFFER, _ssbo_name));</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <a class="code" href="_open_g_l_e_s_8h.xhtml#a496c7b08ac063d996956854207366913">ARM_COMPUTE_GL_CHECK</a>(<a class="code" href="_open_g_l_e_s_8cpp.xhtml#ae5331c578edd6784ab4cc6e4f0710938">glUnmapBuffer</a>(GL_SHADER_STORAGE_BUFFER));</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <a class="code" href="_open_g_l_e_s_8h.xhtml#a496c7b08ac063d996956854207366913">ARM_COMPUTE_GL_CHECK</a>(<a class="code" href="_open_g_l_e_s_8cpp.xhtml#ad9528d3fb71b7ee1e23fab6aed1cba83">glBindBuffer</a>(GL_SHADER_STORAGE_BUFFER, 0));</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    _mapping = <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;}</div><div class="ttc" id="_open_g_l_e_s_8h_xhtml_a496c7b08ac063d996956854207366913"><div class="ttname"><a href="_open_g_l_e_s_8h.xhtml#a496c7b08ac063d996956854207366913">ARM_COMPUTE_GL_CHECK</a></div><div class="ttdeci">#define ARM_COMPUTE_GL_CHECK(x)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8h_source.xhtml#l00045">OpenGLES.h:45</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_ae5331c578edd6784ab4cc6e4f0710938"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#ae5331c578edd6784ab4cc6e4f0710938">glUnmapBuffer</a></div><div class="ttdeci">GLboolean GL_APIENTRY glUnmapBuffer(GLenum target)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00646">OpenGLES.cpp:646</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00466">Error.h:466</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_ad9528d3fb71b7ee1e23fab6aed1cba83"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#ad9528d3fb71b7ee1e23fab6aed1cba83">glBindBuffer</a></div><div class="ttdeci">void GL_APIENTRY glBindBuffer(GLenum target, GLuint buffer)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00490">OpenGLES.cpp:490</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00466">ARM_COMPUTE_ERROR_ON</a>, <a class="el" href="_open_g_l_e_s_8h_source.xhtml#l00045">ARM_COMPUTE_GL_CHECK</a>, <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00490">glBindBuffer()</a>, and <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00646">glUnmapBuffer()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>arm_compute/runtime/GLES_COMPUTE/<a class="el" href="_g_c_memory_region_8h_source.xhtml">GCMemoryRegion.h</a></li>
<li>src/runtime/GLES_COMPUTE/<a class="el" href="_g_c_memory_region_8cpp_source.xhtml">GCMemoryRegion.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1_g_c_buffer_memory_region.xhtml">GCBufferMemoryRegion</a></li>
    <li class="footer">Generated on Fri Feb 21 2020 11:10:27 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
