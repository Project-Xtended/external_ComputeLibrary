<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: ICLLut Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classarm__compute_1_1_i_c_l_lut.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">ICLLut Class Reference<span class="mlabels"><span class="mlabel">abstract</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p>Interface for OpenCL LUT.  
 <a href="classarm__compute_1_1_i_c_l_lut.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_i_c_l_lut_8h_source.xhtml">ICLLut.h</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for ICLLut:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classarm__compute_1_1_i_c_l_lut__coll__graph.svg" width="72" height="112"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:abc0b83809a3a81a4dced0bdf7d4d5ed7"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_lut.xhtml#abc0b83809a3a81a4dced0bdf7d4d5ed7">ICLLut</a> ()</td></tr>
<tr class="separator:abc0b83809a3a81a4dced0bdf7d4d5ed7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a783d0c1fadb33a4a6d0beca4d4d3ab81"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_lut.xhtml#a783d0c1fadb33a4a6d0beca4d4d3ab81">ICLLut</a> (const <a class="el" href="classarm__compute_1_1_i_c_l_lut.xhtml">ICLLut</a> &amp;)=delete</td></tr>
<tr class="separator:a783d0c1fadb33a4a6d0beca4d4d3ab81"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8740c6498dafc80428e500a056135bf1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_i_c_l_lut.xhtml">ICLLut</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_lut.xhtml#a8740c6498dafc80428e500a056135bf1">operator=</a> (const <a class="el" href="classarm__compute_1_1_i_c_l_lut.xhtml">ICLLut</a> &amp;)=delete</td></tr>
<tr class="separator:a8740c6498dafc80428e500a056135bf1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1fb4c50755a0ef424652246838ed91a6"><td class="memItemLeft" align="right" valign="top">virtual const cl::Buffer &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_lut.xhtml#a1fb4c50755a0ef424652246838ed91a6">cl_buffer</a> () const =0</td></tr>
<tr class="memdesc:a1fb4c50755a0ef424652246838ed91a6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Interface to be implemented by the child class to return a reference to the OpenCL buffer containing the lut's data.  <a href="#a1fb4c50755a0ef424652246838ed91a6">More...</a><br /></td></tr>
<tr class="separator:a1fb4c50755a0ef424652246838ed91a6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac0abc7a5c0d172947f0e6a0c0dde3df0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_lut.xhtml#ac0abc7a5c0d172947f0e6a0c0dde3df0">map</a> (cl::CommandQueue &amp;q, bool blocking=true)</td></tr>
<tr class="memdesc:ac0abc7a5c0d172947f0e6a0c0dde3df0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enqueue a map operation of the allocated buffer on the given queue.  <a href="#ac0abc7a5c0d172947f0e6a0c0dde3df0">More...</a><br /></td></tr>
<tr class="separator:ac0abc7a5c0d172947f0e6a0c0dde3df0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af974a2360069c2ef8df4496d00e4f6cc"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_lut.xhtml#af974a2360069c2ef8df4496d00e4f6cc">unmap</a> (cl::CommandQueue &amp;q)</td></tr>
<tr class="memdesc:af974a2360069c2ef8df4496d00e4f6cc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enqueue an unmap operation of the allocated and mapped buffer on the given queue.  <a href="#af974a2360069c2ef8df4496d00e4f6cc">More...</a><br /></td></tr>
<tr class="separator:af974a2360069c2ef8df4496d00e4f6cc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a24954cca5108a24706441fd99a7fb04c"><td class="memItemLeft" align="right" valign="top">uint8_t *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_lut.xhtml#a24954cca5108a24706441fd99a7fb04c">buffer</a> () const override</td></tr>
<tr class="memdesc:a24954cca5108a24706441fd99a7fb04c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a pointer to the start of the LUT.  <a href="#a24954cca5108a24706441fd99a7fb04c">More...</a><br /></td></tr>
<tr class="separator:a24954cca5108a24706441fd99a7fb04c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1_i_lut"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1_i_lut')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1_i_lut.xhtml">ILut</a></td></tr>
<tr class="memitem:ab90dd1556851ce4b6b1529dfb9107f68 inherit pub_methods_classarm__compute_1_1_i_lut"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_lut.xhtml#ab90dd1556851ce4b6b1529dfb9107f68">~ILut</a> ()=default</td></tr>
<tr class="memdesc:ab90dd1556851ce4b6b1529dfb9107f68 inherit pub_methods_classarm__compute_1_1_i_lut"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default virtual destructor.  <a href="classarm__compute_1_1_i_lut.xhtml#ab90dd1556851ce4b6b1529dfb9107f68">More...</a><br /></td></tr>
<tr class="separator:ab90dd1556851ce4b6b1529dfb9107f68 inherit pub_methods_classarm__compute_1_1_i_lut"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7a826fbb4f639c556352d1ede69187d7 inherit pub_methods_classarm__compute_1_1_i_lut"><td class="memItemLeft" align="right" valign="top">virtual size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_lut.xhtml#a7a826fbb4f639c556352d1ede69187d7">num_elements</a> () const =0</td></tr>
<tr class="memdesc:a7a826fbb4f639c556352d1ede69187d7 inherit pub_methods_classarm__compute_1_1_i_lut"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the total number of elements in the LUT.  <a href="classarm__compute_1_1_i_lut.xhtml#a7a826fbb4f639c556352d1ede69187d7">More...</a><br /></td></tr>
<tr class="separator:a7a826fbb4f639c556352d1ede69187d7 inherit pub_methods_classarm__compute_1_1_i_lut"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a786de36dda3773c5fb35d6700e64621e inherit pub_methods_classarm__compute_1_1_i_lut"><td class="memItemLeft" align="right" valign="top">virtual uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_lut.xhtml#a786de36dda3773c5fb35d6700e64621e">index_offset</a> () const =0</td></tr>
<tr class="memdesc:a786de36dda3773c5fb35d6700e64621e inherit pub_methods_classarm__compute_1_1_i_lut"><td class="mdescLeft">&#160;</td><td class="mdescRight">Indicates the offset that needs to be applied to the raw index before performing a lookup in the LUT.  <a href="classarm__compute_1_1_i_lut.xhtml#a786de36dda3773c5fb35d6700e64621e">More...</a><br /></td></tr>
<tr class="separator:a786de36dda3773c5fb35d6700e64621e inherit pub_methods_classarm__compute_1_1_i_lut"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6314b1e589ffe32277858c018ac3c630 inherit pub_methods_classarm__compute_1_1_i_lut"><td class="memItemLeft" align="right" valign="top">virtual size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_lut.xhtml#a6314b1e589ffe32277858c018ac3c630">size_in_bytes</a> () const =0</td></tr>
<tr class="memdesc:a6314b1e589ffe32277858c018ac3c630 inherit pub_methods_classarm__compute_1_1_i_lut"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the total size in bytes of the LUT.  <a href="classarm__compute_1_1_i_lut.xhtml#a6314b1e589ffe32277858c018ac3c630">More...</a><br /></td></tr>
<tr class="separator:a6314b1e589ffe32277858c018ac3c630 inherit pub_methods_classarm__compute_1_1_i_lut"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa1917b40b57ce0a0f1c69722b46f3f46 inherit pub_methods_classarm__compute_1_1_i_lut"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_lut.xhtml#aa1917b40b57ce0a0f1c69722b46f3f46">type</a> () const =0</td></tr>
<tr class="memdesc:aa1917b40b57ce0a0f1c69722b46f3f46 inherit pub_methods_classarm__compute_1_1_i_lut"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the type of the LUT.  <a href="classarm__compute_1_1_i_lut.xhtml#aa1917b40b57ce0a0f1c69722b46f3f46">More...</a><br /></td></tr>
<tr class="separator:aa1917b40b57ce0a0f1c69722b46f3f46 inherit pub_methods_classarm__compute_1_1_i_lut"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5eeb94d22b8366d1b68d0614384802fe inherit pub_methods_classarm__compute_1_1_i_lut"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_lut.xhtml#a5eeb94d22b8366d1b68d0614384802fe">clear</a> ()=0</td></tr>
<tr class="memdesc:a5eeb94d22b8366d1b68d0614384802fe inherit pub_methods_classarm__compute_1_1_i_lut"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clears the LUT by setting every element to zero.  <a href="classarm__compute_1_1_i_lut.xhtml#a5eeb94d22b8366d1b68d0614384802fe">More...</a><br /></td></tr>
<tr class="separator:a5eeb94d22b8366d1b68d0614384802fe inherit pub_methods_classarm__compute_1_1_i_lut"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Interface for OpenCL LUT. </p>

<p class="definition">Definition at line <a class="el" href="_i_c_l_lut_8h_source.xhtml#l00040">40</a> of file <a class="el" href="_i_c_l_lut_8h_source.xhtml">ICLLut.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="abc0b83809a3a81a4dced0bdf7d4d5ed7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abc0b83809a3a81a4dced0bdf7d4d5ed7">&#9670;&nbsp;</a></span>ICLLut() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_i_c_l_lut.xhtml">ICLLut</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_i_c_l_lut_8cpp_source.xhtml#l00028">28</a> of file <a class="el" href="_i_c_l_lut_8cpp_source.xhtml">ICLLut.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;    : _mapping(<span class="keyword">nullptr</span>)</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;{</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a783d0c1fadb33a4a6d0beca4d4d3ab81"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a783d0c1fadb33a4a6d0beca4d4d3ab81">&#9670;&nbsp;</a></span>ICLLut() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_i_c_l_lut.xhtml">ICLLut</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_c_l_lut.xhtml">ICLLut</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a24954cca5108a24706441fd99a7fb04c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a24954cca5108a24706441fd99a7fb04c">&#9670;&nbsp;</a></span>buffer()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t * buffer </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns a pointer to the start of the LUT. </p>
<p>Other elements of the LUT can be accessed using <a class="el" href="classarm__compute_1_1_i_c_l_lut.xhtml#a24954cca5108a24706441fd99a7fb04c" title="Returns a pointer to the start of the LUT.">buffer()</a>[idx] for 0 &lt;= idx &lt; <a class="el" href="classarm__compute_1_1_i_lut.xhtml#a7a826fbb4f639c556352d1ede69187d7" title="Returns the total number of elements in the LUT.">num_elements()</a>.</p>
<dl class="section return"><dt>Returns</dt><dd>Pointer to the start of the lut. </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_lut.xhtml#ab988210662dbd3bf32fd563c7dd1bdbf">ILut</a>.</p>

<p class="definition">Definition at line <a class="el" href="_i_c_l_lut_8cpp_source.xhtml#l00044">44</a> of file <a class="el" href="_i_c_l_lut_8cpp_source.xhtml">ICLLut.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;{</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <span class="keywordflow">return</span> _mapping;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;}</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_c_l_lut_accessor_8h_source.xhtml#l00067">CLLutAccessor&lt; T &gt;::operator[]()</a>.</p>

</div>
</div>
<a id="a1fb4c50755a0ef424652246838ed91a6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1fb4c50755a0ef424652246838ed91a6">&#9670;&nbsp;</a></span>cl_buffer()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const cl::Buffer&amp; cl_buffer </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Interface to be implemented by the child class to return a reference to the OpenCL buffer containing the lut's data. </p>
<dl class="section return"><dt>Returns</dt><dd>A reference to an OpenCL buffer containing the lut's data. </dd></dl>

<p>Implemented in <a class="el" href="classarm__compute_1_1_c_l_lut.xhtml#a53c338c0d76f41c472cdbf66fafdfe91">CLLut</a>.</p>

<p class="reference">Referenced by <a class="el" href="_c_l_table_lookup_kernel_8cpp_source.xhtml#l00039">CLTableLookupKernel::configure()</a>.</p>

</div>
</div>
<a id="ac0abc7a5c0d172947f0e6a0c0dde3df0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac0abc7a5c0d172947f0e6a0c0dde3df0">&#9670;&nbsp;</a></span>map()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void map </td>
          <td>(</td>
          <td class="paramtype">cl::CommandQueue &amp;&#160;</td>
          <td class="paramname"><em>q</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>blocking</em> = <code>true</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Enqueue a map operation of the allocated buffer on the given queue. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">q</td><td>The CL command queue to use for the mapping operation. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blocking</td><td>If true, then the mapping will be ready to use by the time this method returns, else it is the caller's responsibility to flush the queue and wait for the mapping operation to have completed before using the returned mapping pointer. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_i_c_l_lut_8cpp_source.xhtml#l00033">33</a> of file <a class="el" href="_i_c_l_lut_8cpp_source.xhtml">ICLLut.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;{</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    _mapping = do_map(q, blocking);</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;}</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_c_l_lut_8cpp_source.xhtml#l00081">CLLut::map()</a>.</p>

</div>
</div>
<a id="a8740c6498dafc80428e500a056135bf1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8740c6498dafc80428e500a056135bf1">&#9670;&nbsp;</a></span>operator=()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_i_c_l_lut.xhtml">ICLLut</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_c_l_lut.xhtml">ICLLut</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="af974a2360069c2ef8df4496d00e4f6cc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af974a2360069c2ef8df4496d00e4f6cc">&#9670;&nbsp;</a></span>unmap()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void unmap </td>
          <td>(</td>
          <td class="paramtype">cl::CommandQueue &amp;&#160;</td>
          <td class="paramname"><em>q</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Enqueue an unmap operation of the allocated and mapped buffer on the given queue. </p>
<dl class="section note"><dt>Note</dt><dd>This method simply enqueues the unmap operation, it is the caller's responsibility to flush the queue and make sure the unmap is finished before the memory is accessed by the device.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">q</td><td>The CL command queue to use for the mapping operation. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_i_c_l_lut_8cpp_source.xhtml#l00038">38</a> of file <a class="el" href="_i_c_l_lut_8cpp_source.xhtml">ICLLut.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;{</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    do_unmap(q);</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    _mapping = <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;}</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_c_l_lut_8cpp_source.xhtml#l00086">CLLut::unmap()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>arm_compute/core/CL/<a class="el" href="_i_c_l_lut_8h_source.xhtml">ICLLut.h</a></li>
<li>src/core/CL/<a class="el" href="_i_c_l_lut_8cpp_source.xhtml">ICLLut.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1_i_c_l_lut.xhtml">ICLLut</a></li>
    <li class="footer">Generated on Fri Feb 21 2020 11:10:28 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
