<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: NEHOGDetectorKernel Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.02.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classarm__compute_1_1_n_e_h_o_g_detector_kernel.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">NEHOGDetectorKernel Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>NEON kernel to perform <a class="el" href="classarm__compute_1_1_h_o_g.xhtml" title="CPU implementation of HOG data-object.">HOG</a> detector kernel using linear SVM.  
 <a href="classarm__compute_1_1_n_e_h_o_g_detector_kernel.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_n_e_h_o_g_detector_kernel_8h_source.xhtml">NEHOGDetectorKernel.h</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for NEHOGDetectorKernel:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classarm__compute_1_1_n_e_h_o_g_detector_kernel__coll__graph.svg" width="176" height="187"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ab5656bb5b6334bdbe6e606c715872828"><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_n_e_h_o_g_detector_kernel.xhtml#ab5656bb5b6334bdbe6e606c715872828">name</a> () const override</td></tr>
<tr class="memdesc:ab5656bb5b6334bdbe6e606c715872828"><td class="mdescLeft">&#160;</td><td class="mdescRight">Name of the kernel.  <a href="#ab5656bb5b6334bdbe6e606c715872828">More...</a><br /></td></tr>
<tr class="separator:ab5656bb5b6334bdbe6e606c715872828"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2c0f4bf7e37cb04bf2384f4bc71b84d5"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_n_e_h_o_g_detector_kernel.xhtml#a2c0f4bf7e37cb04bf2384f4bc71b84d5">NEHOGDetectorKernel</a> ()</td></tr>
<tr class="memdesc:a2c0f4bf7e37cb04bf2384f4bc71b84d5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor.  <a href="#a2c0f4bf7e37cb04bf2384f4bc71b84d5">More...</a><br /></td></tr>
<tr class="separator:a2c0f4bf7e37cb04bf2384f4bc71b84d5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a371a0938f66a7f0bf66221247b27d3b3"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_n_e_h_o_g_detector_kernel.xhtml#a371a0938f66a7f0bf66221247b27d3b3">NEHOGDetectorKernel</a> (const <a class="el" href="classarm__compute_1_1_n_e_h_o_g_detector_kernel.xhtml">NEHOGDetectorKernel</a> &amp;)=delete</td></tr>
<tr class="memdesc:a371a0938f66a7f0bf66221247b27d3b3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied (As this class contains pointers)  <a href="#a371a0938f66a7f0bf66221247b27d3b3">More...</a><br /></td></tr>
<tr class="separator:a371a0938f66a7f0bf66221247b27d3b3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1950ead36156919ea0345e72bfe91e4f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_n_e_h_o_g_detector_kernel.xhtml">NEHOGDetectorKernel</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_n_e_h_o_g_detector_kernel.xhtml#a1950ead36156919ea0345e72bfe91e4f">operator=</a> (const <a class="el" href="classarm__compute_1_1_n_e_h_o_g_detector_kernel.xhtml">NEHOGDetectorKernel</a> &amp;)=delete</td></tr>
<tr class="memdesc:a1950ead36156919ea0345e72bfe91e4f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied (As this class contains pointers)  <a href="#a1950ead36156919ea0345e72bfe91e4f">More...</a><br /></td></tr>
<tr class="separator:a1950ead36156919ea0345e72bfe91e4f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9d877f98deeda19e56f5da68fb21a939"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_n_e_h_o_g_detector_kernel.xhtml#a9d877f98deeda19e56f5da68fb21a939">NEHOGDetectorKernel</a> (<a class="el" href="classarm__compute_1_1_n_e_h_o_g_detector_kernel.xhtml">NEHOGDetectorKernel</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:a9d877f98deeda19e56f5da68fb21a939"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be moved.  <a href="#a9d877f98deeda19e56f5da68fb21a939">More...</a><br /></td></tr>
<tr class="separator:a9d877f98deeda19e56f5da68fb21a939"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afa7fbb664ca96646837a43aea8e9a5e8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_n_e_h_o_g_detector_kernel.xhtml">NEHOGDetectorKernel</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_n_e_h_o_g_detector_kernel.xhtml#afa7fbb664ca96646837a43aea8e9a5e8">operator=</a> (<a class="el" href="classarm__compute_1_1_n_e_h_o_g_detector_kernel.xhtml">NEHOGDetectorKernel</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:afa7fbb664ca96646837a43aea8e9a5e8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be moved.  <a href="#afa7fbb664ca96646837a43aea8e9a5e8">More...</a><br /></td></tr>
<tr class="separator:afa7fbb664ca96646837a43aea8e9a5e8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac8fd84865e94c9be09c574eb9abdfde6"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_n_e_h_o_g_detector_kernel.xhtml#ac8fd84865e94c9be09c574eb9abdfde6">~NEHOGDetectorKernel</a> ()=default</td></tr>
<tr class="memdesc:ac8fd84865e94c9be09c574eb9abdfde6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default destructor.  <a href="#ac8fd84865e94c9be09c574eb9abdfde6">More...</a><br /></td></tr>
<tr class="separator:ac8fd84865e94c9be09c574eb9abdfde6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab30727bb790077928853eb3c617bb632"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_n_e_h_o_g_detector_kernel.xhtml#ab30727bb790077928853eb3c617bb632">configure</a> (const <a class="el" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *input, const <a class="el" href="classarm__compute_1_1_i_h_o_g.xhtml">IHOG</a> *hog, <a class="el" href="namespacearm__compute.xhtml#a52b3b9de6092ae37321159c4c2f1bf40">IDetectionWindowArray</a> *detection_windows, const <a class="el" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> &amp;detection_window_stride, float threshold=0.0f, uint16_t idx_class=0)</td></tr>
<tr class="memdesc:ab30727bb790077928853eb3c617bb632"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialise the kernel's input, <a class="el" href="classarm__compute_1_1_h_o_g.xhtml" title="CPU implementation of HOG data-object.">HOG</a> data-object, detection window, the stride of the detection window, the threshold and index of the object to detect.  <a href="#ab30727bb790077928853eb3c617bb632">More...</a><br /></td></tr>
<tr class="separator:ab30727bb790077928853eb3c617bb632"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a112b35dd205c62ea6ed1447ef226da82"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_n_e_h_o_g_detector_kernel.xhtml#a112b35dd205c62ea6ed1447ef226da82">run</a> (const <a class="el" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;<a class="el" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>, const <a class="el" href="structarm__compute_1_1_thread_info.xhtml">ThreadInfo</a> &amp;info) override</td></tr>
<tr class="memdesc:a112b35dd205c62ea6ed1447ef226da82"><td class="mdescLeft">&#160;</td><td class="mdescRight">Execute the kernel on the passed window.  <a href="#a112b35dd205c62ea6ed1447ef226da82">More...</a><br /></td></tr>
<tr class="separator:a112b35dd205c62ea6ed1447ef226da82"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1_i_c_p_p_kernel"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1_i_c_p_p_kernel')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1_i_c_p_p_kernel.xhtml">ICPPKernel</a></td></tr>
<tr class="memitem:a033d17a97e07cea7fe83eefcf23540f6 inherit pub_methods_classarm__compute_1_1_i_c_p_p_kernel"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_p_p_kernel.xhtml#a033d17a97e07cea7fe83eefcf23540f6">~ICPPKernel</a> ()=default</td></tr>
<tr class="memdesc:a033d17a97e07cea7fe83eefcf23540f6 inherit pub_methods_classarm__compute_1_1_i_c_p_p_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default destructor.  <a href="classarm__compute_1_1_i_c_p_p_kernel.xhtml#a033d17a97e07cea7fe83eefcf23540f6">More...</a><br /></td></tr>
<tr class="separator:a033d17a97e07cea7fe83eefcf23540f6 inherit pub_methods_classarm__compute_1_1_i_c_p_p_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1_i_kernel"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1_i_kernel')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1_i_kernel.xhtml">IKernel</a></td></tr>
<tr class="memitem:a7250cb8cbaa4104a93a2d77155085507 inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_kernel.xhtml#a7250cb8cbaa4104a93a2d77155085507">IKernel</a> ()</td></tr>
<tr class="memdesc:a7250cb8cbaa4104a93a2d77155085507 inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="classarm__compute_1_1_i_kernel.xhtml#a7250cb8cbaa4104a93a2d77155085507">More...</a><br /></td></tr>
<tr class="separator:a7250cb8cbaa4104a93a2d77155085507 inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a341b60d15a5e12a5b8f3825194dd3b12 inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_kernel.xhtml#a341b60d15a5e12a5b8f3825194dd3b12">~IKernel</a> ()=default</td></tr>
<tr class="memdesc:a341b60d15a5e12a5b8f3825194dd3b12 inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor.  <a href="classarm__compute_1_1_i_kernel.xhtml#a341b60d15a5e12a5b8f3825194dd3b12">More...</a><br /></td></tr>
<tr class="separator:a341b60d15a5e12a5b8f3825194dd3b12 inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0466ee6ce6552c87595f0e88e73eeb1b inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_kernel.xhtml#a0466ee6ce6552c87595f0e88e73eeb1b">is_parallelisable</a> () const</td></tr>
<tr class="memdesc:a0466ee6ce6552c87595f0e88e73eeb1b inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">Indicates whether or not the kernel is parallelisable.  <a href="classarm__compute_1_1_i_kernel.xhtml#a0466ee6ce6552c87595f0e88e73eeb1b">More...</a><br /></td></tr>
<tr class="separator:a0466ee6ce6552c87595f0e88e73eeb1b inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4b3a97ba5dded504a2f2261c078493dd inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="structarm__compute_1_1_border_size.xhtml">BorderSize</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_kernel.xhtml#a4b3a97ba5dded504a2f2261c078493dd">border_size</a> () const</td></tr>
<tr class="memdesc:a4b3a97ba5dded504a2f2261c078493dd inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">The size of the border for that kernel.  <a href="classarm__compute_1_1_i_kernel.xhtml#a4b3a97ba5dded504a2f2261c078493dd">More...</a><br /></td></tr>
<tr class="separator:a4b3a97ba5dded504a2f2261c078493dd inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad34a46f53686c12a5c5e717cc9617fb6 inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a> () const</td></tr>
<tr class="memdesc:ad34a46f53686c12a5c5e717cc9617fb6 inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">The maximum window the kernel can be executed on.  <a href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">More...</a><br /></td></tr>
<tr class="separator:ad34a46f53686c12a5c5e717cc9617fb6 inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>NEON kernel to perform <a class="el" href="classarm__compute_1_1_h_o_g.xhtml" title="CPU implementation of HOG data-object.">HOG</a> detector kernel using linear SVM. </p>

<p class="definition">Definition at line <a class="el" href="_n_e_h_o_g_detector_kernel_8h_source.xhtml#l00037">37</a> of file <a class="el" href="_n_e_h_o_g_detector_kernel_8h_source.xhtml">NEHOGDetectorKernel.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a2c0f4bf7e37cb04bf2384f4bc71b84d5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2c0f4bf7e37cb04bf2384f4bc71b84d5">&#9670;&nbsp;</a></span>NEHOGDetectorKernel() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_n_e_h_o_g_detector_kernel.xhtml">NEHOGDetectorKernel</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Default constructor. </p>

<p class="definition">Definition at line <a class="el" href="_n_e_h_o_g_detector_kernel_8cpp_source.xhtml#l00036">36</a> of file <a class="el" href="_n_e_h_o_g_detector_kernel_8cpp_source.xhtml">NEHOGDetectorKernel.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    : _input(<span class="keyword">nullptr</span>), _detection_windows(), _hog_descriptor(<span class="keyword">nullptr</span>), _bias(0.0f), _threshold(0.0f), _idx_class(0), _num_bins_per_descriptor_x(0), _num_blocks_per_descriptor_y(0), _block_stride_width(0),</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;      _block_stride_height(0), _detection_window_width(0), _detection_window_height(0), _max_num_detection_windows(0), _mutex()</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;{</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a371a0938f66a7f0bf66221247b27d3b3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a371a0938f66a7f0bf66221247b27d3b3">&#9670;&nbsp;</a></span>NEHOGDetectorKernel() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_n_e_h_o_g_detector_kernel.xhtml">NEHOGDetectorKernel</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_n_e_h_o_g_detector_kernel.xhtml">NEHOGDetectorKernel</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prevent instances of this class from being copied (As this class contains pointers) </p>

</div>
</div>
<a id="a9d877f98deeda19e56f5da68fb21a939"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9d877f98deeda19e56f5da68fb21a939">&#9670;&nbsp;</a></span>NEHOGDetectorKernel() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_n_e_h_o_g_detector_kernel.xhtml">NEHOGDetectorKernel</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_n_e_h_o_g_detector_kernel.xhtml">NEHOGDetectorKernel</a> &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Allow instances of this class to be moved. </p>

</div>
</div>
<a id="ac8fd84865e94c9be09c574eb9abdfde6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac8fd84865e94c9be09c574eb9abdfde6">&#9670;&nbsp;</a></span>~NEHOGDetectorKernel()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="classarm__compute_1_1_n_e_h_o_g_detector_kernel.xhtml">NEHOGDetectorKernel</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Default destructor. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="ab30727bb790077928853eb3c617bb632"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab30727bb790077928853eb3c617bb632">&#9670;&nbsp;</a></span>configure()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void configure </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_h_o_g.xhtml">IHOG</a> *&#160;</td>
          <td class="paramname"><em>hog</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearm__compute.xhtml#a52b3b9de6092ae37321159c4c2f1bf40">IDetectionWindowArray</a> *&#160;</td>
          <td class="paramname"><em>detection_windows</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> &amp;&#160;</td>
          <td class="paramname"><em>detection_window_stride</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>threshold</em> = <code>0.0f</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>idx_class</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initialise the kernel's input, <a class="el" href="classarm__compute_1_1_h_o_g.xhtml" title="CPU implementation of HOG data-object.">HOG</a> data-object, detection window, the stride of the detection window, the threshold and index of the object to detect. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">input</td><td>Input tensor which stores the <a class="el" href="classarm__compute_1_1_h_o_g.xhtml" title="CPU implementation of HOG data-object.">HOG</a> descriptor obtained with <a class="el" href="classarm__compute_1_1_n_e_h_o_g_orientation_binning_kernel.xhtml">NEHOGOrientationBinningKernel</a>. Data type supported: F32. Number of channels supported: equal to the number of histogram bins per block </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">hog</td><td><a class="el" href="classarm__compute_1_1_h_o_g.xhtml" title="CPU implementation of HOG data-object.">HOG</a> data object used by <a class="el" href="classarm__compute_1_1_n_e_h_o_g_orientation_binning_kernel.xhtml">NEHOGOrientationBinningKernel</a> and <a class="el" href="classarm__compute_1_1_n_e_h_o_g_block_normalization_kernel.xhtml">NEHOGBlockNormalizationKernel</a> </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">detection_windows</td><td><a class="el" href="classarm__compute_1_1_array.xhtml" title="Basic implementation of the IArray interface which allocates a static number of T values.">Array</a> of <a class="el" href="struct_detection_window.xhtml">DetectionWindow</a>. This array stores all the detected objects </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">detection_window_stride</td><td>Distance in pixels between 2 consecutive detection windows in x and y directions. It must be multiple of the hog-&gt;<a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4f4125dba5283887b34f889b1c615c0c">info()</a>-&gt;block_stride() </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">threshold</td><td>(Optional) Threshold for the distance between features and SVM classifying plane </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">idx_class</td><td>(Optional) Index of the class used for evaluating which class the detection window belongs to </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_n_e_h_o_g_detector_kernel_8cpp_source.xhtml#l00042">42</a> of file <a class="el" href="_n_e_h_o_g_detector_kernel_8cpp_source.xhtml">NEHOGDetectorKernel.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;{</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <a class="code" href="_validate_8h.xhtml#a4264d7e3318c4188e48127a75f3f0f8a">ARM_COMPUTE_ERROR_ON_DATA_TYPE_NOT_IN</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>);</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(hog == <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(detection_windows == <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>((detection_window_stride.<a class="code" href="classarm__compute_1_1_size2_d.xhtml#a02bed8590a9ddf520e58a060059518ec">width</a> % hog-&gt;<a class="code" href="classarm__compute_1_1_i_h_o_g.xhtml#a4e9b5d4ab15fd9009b463861c1a19dbd">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml#a207391d3ac69d9a0839104f784f888fd">block_stride</a>().<a class="code" href="classarm__compute_1_1_size2_d.xhtml#a02bed8590a9ddf520e58a060059518ec">width</a>) != 0);</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>((detection_window_stride.<a class="code" href="classarm__compute_1_1_size2_d.xhtml#a02afeaaf8574e7a78d6b466ff2695052">height</a> % hog-&gt;<a class="code" href="classarm__compute_1_1_i_h_o_g.xhtml#a4e9b5d4ab15fd9009b463861c1a19dbd">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml#a207391d3ac69d9a0839104f784f888fd">block_stride</a>().<a class="code" href="classarm__compute_1_1_size2_d.xhtml#a02afeaaf8574e7a78d6b466ff2695052">height</a>) != 0);</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> &amp;detection_window_size = hog-&gt;<a class="code" href="classarm__compute_1_1_i_h_o_g.xhtml#a4e9b5d4ab15fd9009b463861c1a19dbd">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml#a7cbda2c789c461237f0c6eaee8f8cd2a">detection_window_size</a>();</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> &amp;block_size            = hog-&gt;<a class="code" href="classarm__compute_1_1_i_h_o_g.xhtml#a4e9b5d4ab15fd9009b463861c1a19dbd">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml#ae561964ccc0e0a5750676b9c7dd7cd44">block_size</a>();</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> &amp;block_stride          = hog-&gt;<a class="code" href="classarm__compute_1_1_i_h_o_g.xhtml#a4e9b5d4ab15fd9009b463861c1a19dbd">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml#a207391d3ac69d9a0839104f784f888fd">block_stride</a>();</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    _input                       = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    _detection_windows           = detection_windows;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    _threshold                   = <a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a6cae310822a46019ba25a00ddb0f7e62">threshold</a>;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    _idx_class                   = idx_class;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    _hog_descriptor              = hog-&gt;<a class="code" href="classarm__compute_1_1_i_h_o_g.xhtml#afc824305b2eaceab36baf5b66a535316">descriptor</a>();</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    _bias                        = _hog_descriptor[hog-&gt;<a class="code" href="classarm__compute_1_1_i_h_o_g.xhtml#a4e9b5d4ab15fd9009b463861c1a19dbd">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml#a2a347c64540c1d48a579f830ddff622f">descriptor_size</a>() - 1];</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    _num_bins_per_descriptor_x   = ((detection_window_size.<a class="code" href="classarm__compute_1_1_size2_d.xhtml#a02bed8590a9ddf520e58a060059518ec">width</a> - block_size.<a class="code" href="classarm__compute_1_1_size2_d.xhtml#a02bed8590a9ddf520e58a060059518ec">width</a>) / block_stride.<a class="code" href="classarm__compute_1_1_size2_d.xhtml#a02bed8590a9ddf520e58a060059518ec">width</a> + 1) * <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;info()-&gt;num_channels();</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    _num_blocks_per_descriptor_y = (detection_window_size.<a class="code" href="classarm__compute_1_1_size2_d.xhtml#a02afeaaf8574e7a78d6b466ff2695052">height</a> - block_size.<a class="code" href="classarm__compute_1_1_size2_d.xhtml#a02afeaaf8574e7a78d6b466ff2695052">height</a>) / block_stride.<a class="code" href="classarm__compute_1_1_size2_d.xhtml#a02afeaaf8574e7a78d6b466ff2695052">height</a> + 1;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    _block_stride_width          = block_stride.<a class="code" href="classarm__compute_1_1_size2_d.xhtml#a02bed8590a9ddf520e58a060059518ec">width</a>;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    _block_stride_height         = block_stride.<a class="code" href="classarm__compute_1_1_size2_d.xhtml#a02afeaaf8574e7a78d6b466ff2695052">height</a>;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    _detection_window_width      = detection_window_size.<a class="code" href="classarm__compute_1_1_size2_d.xhtml#a02bed8590a9ddf520e58a060059518ec">width</a>;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    _detection_window_height     = detection_window_size.<a class="code" href="classarm__compute_1_1_size2_d.xhtml#a02afeaaf8574e7a78d6b466ff2695052">height</a>;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    _max_num_detection_windows   = detection_windows-&gt;<a class="code" href="classarm__compute_1_1_i_array.xhtml#ad4d0d4b95cde1aa24a381859d3b80a5e">max_num_values</a>();</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>((_num_bins_per_descriptor_x * _num_blocks_per_descriptor_y + 1) != hog-&gt;<a class="code" href="classarm__compute_1_1_i_h_o_g.xhtml#a4e9b5d4ab15fd9009b463861c1a19dbd">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml#a2a347c64540c1d48a579f830ddff622f">descriptor_size</a>());</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <span class="comment">// Get the number of blocks along the x and y directions of the input tensor</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1_valid_region.xhtml">ValidRegion</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7819bcbbf45c2e7c1396a137dce54422">valid_region</a> = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;info()-&gt;valid_region();</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">size_t</span>       num_blocks_x = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7819bcbbf45c2e7c1396a137dce54422">valid_region</a>.<a class="code" href="structarm__compute_1_1_valid_region.xhtml#a1fcd64682b37ed3c2098d0094ce788d8">shape</a>[0];</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">size_t</span>       num_blocks_y = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7819bcbbf45c2e7c1396a137dce54422">valid_region</a>.<a class="code" href="structarm__compute_1_1_valid_region.xhtml#a1fcd64682b37ed3c2098d0094ce788d8">shape</a>[1];</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <span class="comment">// Get the number of blocks along the x and y directions of the detection window</span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">size_t</span> num_blocks_per_detection_window_x = detection_window_size.<a class="code" href="classarm__compute_1_1_size2_d.xhtml#a02bed8590a9ddf520e58a060059518ec">width</a> / block_stride.<a class="code" href="classarm__compute_1_1_size2_d.xhtml#a02bed8590a9ddf520e58a060059518ec">width</a>;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">size_t</span> num_blocks_per_detection_window_y = detection_window_size.<a class="code" href="classarm__compute_1_1_size2_d.xhtml#a02afeaaf8574e7a78d6b466ff2695052">height</a> / block_stride.<a class="code" href="classarm__compute_1_1_size2_d.xhtml#a02afeaaf8574e7a78d6b466ff2695052">height</a>;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">size_t</span> window_step_x = detection_window_stride.<a class="code" href="classarm__compute_1_1_size2_d.xhtml#a02bed8590a9ddf520e58a060059518ec">width</a> / block_stride.<a class="code" href="classarm__compute_1_1_size2_d.xhtml#a02bed8590a9ddf520e58a060059518ec">width</a>;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">size_t</span> window_step_y = detection_window_stride.<a class="code" href="classarm__compute_1_1_size2_d.xhtml#a02afeaaf8574e7a78d6b466ff2695052">height</a> / block_stride.<a class="code" href="classarm__compute_1_1_size2_d.xhtml#a02afeaaf8574e7a78d6b466ff2695052">height</a>;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <span class="comment">// Configure kernel window</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> win;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    win.<a class="code" href="classarm__compute_1_1_window.xhtml#acd3d2bba51cb84d34dd7656ad2375a6e">set</a>(<a class="code" href="classarm__compute_1_1_window.xhtml#aa96e81276ee4f87ab386cd05a5539a7d">Window::DimX</a>, <a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml">Window::Dimension</a>(0, <a class="code" href="namespacearm__compute.xhtml#a23062881efd3855d61bae58f330c97db">floor_to_multiple</a>(num_blocks_x - num_blocks_per_detection_window_x, window_step_x) + window_step_x, window_step_x));</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    win.<a class="code" href="classarm__compute_1_1_window.xhtml#acd3d2bba51cb84d34dd7656ad2375a6e">set</a>(<a class="code" href="classarm__compute_1_1_window.xhtml#ad2d402364fa822b0b7775081291eeca9">Window::DimY</a>, <a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml">Window::Dimension</a>(0, <a class="code" href="namespacearm__compute.xhtml#a23062881efd3855d61bae58f330c97db">floor_to_multiple</a>(num_blocks_y - num_blocks_per_detection_window_y, window_step_y) + window_step_y, window_step_y));</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    constexpr <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> num_elems_read_per_iteration = 1;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>     num_rows_read_per_iteration  = _num_blocks_per_descriptor_y;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#afc4bd8e872567d9c4c57d89eb0bb3da1">update_window_and_padding</a>(win, <a class="code" href="classarm__compute_1_1_access_window_rectangle.xhtml">AccessWindowRectangle</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;info(), 0, 0, num_elems_read_per_iteration, num_rows_read_per_iteration));</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    INEKernel::configure(win);</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;}</div><div class="ttc" id="classarm__compute_1_1_h_o_g_info_xhtml_a7cbda2c789c461237f0c6eaee8f8cd2a"><div class="ttname"><a href="classarm__compute_1_1_h_o_g_info.xhtml#a7cbda2c789c461237f0c6eaee8f8cd2a">arm_compute::HOGInfo::detection_window_size</a></div><div class="ttdeci">const Size2D &amp; detection_window_size() const</div><div class="ttdoc">The detection window size in pixels.</div><div class="ttdef"><b>Definition:</b> <a href="_h_o_g_info_8cpp_source.xhtml#l00101">HOGInfo.cpp:101</a></div></div>
<div class="ttc" id="structarm__compute_1_1_valid_region_xhtml_a1fcd64682b37ed3c2098d0094ce788d8"><div class="ttname"><a href="structarm__compute_1_1_valid_region.xhtml#a1fcd64682b37ed3c2098d0094ce788d8">arm_compute::ValidRegion::shape</a></div><div class="ttdeci">TensorShape shape</div><div class="ttdoc">Shape of the valid region.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00257">Types.h:257</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">arm_compute::Format::F32</a></div><div class="ttdoc">1 channel, 1 F32 per channel</div></div>
<div class="ttc" id="_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00466">Error.h:466</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_1_1_dimension_xhtml"><div class="ttname"><a href="classarm__compute_1_1_window_1_1_dimension.xhtml">arm_compute::Window::Dimension</a></div><div class="ttdoc">Describe one of the image's dimensions with a start, end and step.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00075">Window.h:75</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a23062881efd3855d61bae58f330c97db"><div class="ttname"><a href="namespacearm__compute.xhtml#a23062881efd3855d61bae58f330c97db">arm_compute::floor_to_multiple</a></div><div class="ttdeci">auto floor_to_multiple(S value, T divisor) -&gt; decltype((value/divisor) *divisor)</div><div class="ttdoc">Computes the largest number smaller or equal to value that is a multiple of divisor.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_utils_8h_source.xhtml#l00080">Utils.h:80</a></div></div>
<div class="ttc" id="classarm__compute_1_1_h_o_g_info_xhtml_a207391d3ac69d9a0839104f784f888fd"><div class="ttname"><a href="classarm__compute_1_1_h_o_g_info.xhtml#a207391d3ac69d9a0839104f784f888fd">arm_compute::HOGInfo::block_stride</a></div><div class="ttdeci">const Size2D &amp; block_stride() const</div><div class="ttdoc">The block stride in pixels.</div><div class="ttdef"><b>Definition:</b> <a href="_h_o_g_info_8cpp_source.xhtml#l00106">HOGInfo.cpp:106</a></div></div>
<div class="ttc" id="classarm__compute_1_1_size2_d_xhtml_a02afeaaf8574e7a78d6b466ff2695052"><div class="ttname"><a href="classarm__compute_1_1_size2_d.xhtml#a02afeaaf8574e7a78d6b466ff2695052">arm_compute::Size2D::height</a></div><div class="ttdeci">size_t height</div><div class="ttdoc">Height of the image region or rectangle.</div><div class="ttdef"><b>Definition:</b> <a href="_size2_d_8h_source.xhtml#l00093">Size2D.h:93</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a8fcf2ddd9a1d58b1b280f5c0aed71845"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">arm_compute::test::validation::input</a></div><div class="ttdeci">auto input</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00487">LSTMLayerQuantized.cpp:487</a></div></div>
<div class="ttc" id="classarm__compute_1_1_access_window_rectangle_xhtml"><div class="ttname"><a href="classarm__compute_1_1_access_window_rectangle.xhtml">arm_compute::AccessWindowRectangle</a></div><div class="ttdoc">Implementation of a rectangular access pattern.</div><div class="ttdef"><b>Definition:</b> <a href="_i_access_window_8h_source.xhtml#l00107">IAccessWindow.h:107</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_aa96e81276ee4f87ab386cd05a5539a7d"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#aa96e81276ee4f87ab386cd05a5539a7d">arm_compute::Window::DimX</a></div><div class="ttdeci">static constexpr size_t DimX</div><div class="ttdoc">Alias for dimension 0 also known as X dimension.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00043">Window.h:43</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_afc4bd8e872567d9c4c57d89eb0bb3da1"><div class="ttname"><a href="namespacearm__compute.xhtml#afc4bd8e872567d9c4c57d89eb0bb3da1">arm_compute::update_window_and_padding</a></div><div class="ttdeci">bool update_window_and_padding(Window &amp;win, Ts &amp;&amp;... patterns)</div><div class="ttdoc">Update window and padding size for each of the access patterns.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_helpers_8h_source.xhtml#l00402">Helpers.h:402</a></div></div>
<div class="ttc" id="classarm__compute_1_1_h_o_g_info_xhtml_ae561964ccc0e0a5750676b9c7dd7cd44"><div class="ttname"><a href="classarm__compute_1_1_h_o_g_info.xhtml#ae561964ccc0e0a5750676b9c7dd7cd44">arm_compute::HOGInfo::block_size</a></div><div class="ttdeci">const Size2D &amp; block_size() const</div><div class="ttdoc">The block size in pixels.</div><div class="ttdef"><b>Definition:</b> <a href="_h_o_g_info_8cpp_source.xhtml#l00096">HOGInfo.cpp:96</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_h_o_g_xhtml_afc824305b2eaceab36baf5b66a535316"><div class="ttname"><a href="classarm__compute_1_1_i_h_o_g.xhtml#afc824305b2eaceab36baf5b66a535316">arm_compute::IHOG::descriptor</a></div><div class="ttdeci">virtual float * descriptor() const =0</div><div class="ttdoc">Pointer to the first element of the array which stores the linear SVM coefficients of HOG descriptor.</div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_acd3d2bba51cb84d34dd7656ad2375a6e"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#acd3d2bba51cb84d34dd7656ad2375a6e">arm_compute::Window::set</a></div><div class="ttdeci">void set(size_t dimension, const Dimension &amp;dim)</div><div class="ttdoc">Set the values of a given dimension.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8inl_source.xhtml#l00049">Window.inl:49</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a7819bcbbf45c2e7c1396a137dce54422"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a7819bcbbf45c2e7c1396a137dce54422">arm_compute::test::validation::valid_region</a></div><div class="ttdeci">const ValidRegion valid_region</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_absolute_difference_8cpp_source.xhtml#l00109">AbsoluteDifference.cpp:109</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_ad2d402364fa822b0b7775081291eeca9"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#ad2d402364fa822b0b7775081291eeca9">arm_compute::Window::DimY</a></div><div class="ttdeci">static constexpr size_t DimY</div><div class="ttdoc">Alias for dimension 1 also known as Y dimension.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00045">Window.h:45</a></div></div>
<div class="ttc" id="classarm__compute_1_1_size2_d_xhtml_a02bed8590a9ddf520e58a060059518ec"><div class="ttname"><a href="classarm__compute_1_1_size2_d.xhtml#a02bed8590a9ddf520e58a060059518ec">arm_compute::Size2D::width</a></div><div class="ttdeci">size_t width</div><div class="ttdoc">Width of the image region or rectangle.</div><div class="ttdef"><b>Definition:</b> <a href="_size2_d_8h_source.xhtml#l00092">Size2D.h:92</a></div></div>
<div class="ttc" id="classarm__compute_1_1_size2_d_xhtml"><div class="ttname"><a href="classarm__compute_1_1_size2_d.xhtml">arm_compute::Size2D</a></div><div class="ttdoc">Class for specifying the size of an image or rectangle.</div><div class="ttdef"><b>Definition:</b> <a href="_size2_d_8h_source.xhtml#l00034">Size2D.h:34</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_array_xhtml_ad4d0d4b95cde1aa24a381859d3b80a5e"><div class="ttname"><a href="classarm__compute_1_1_i_array.xhtml#ad4d0d4b95cde1aa24a381859d3b80a5e">arm_compute::IArray::max_num_values</a></div><div class="ttdeci">size_t max_num_values() const</div><div class="ttdoc">Maximum number of values which can be stored in this array.</div><div class="ttdef"><b>Definition:</b> <a href="_i_array_8h_source.xhtml#l00058">IArray.h:58</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_h_o_g_xhtml_a4e9b5d4ab15fd9009b463861c1a19dbd"><div class="ttname"><a href="classarm__compute_1_1_i_h_o_g.xhtml#a4e9b5d4ab15fd9009b463861c1a19dbd">arm_compute::IHOG::info</a></div><div class="ttdeci">virtual const HOGInfo * info() const =0</div><div class="ttdoc">Interface to be implemented by the child class to return the HOG's metadata.</div></div>
<div class="ttc" id="structarm__compute_1_1_valid_region_xhtml"><div class="ttname"><a href="structarm__compute_1_1_valid_region.xhtml">arm_compute::ValidRegion</a></div><div class="ttdoc">Container for valid region of a window.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00184">Types.h:184</a></div></div>
<div class="ttc" id="classarm__compute_1_1_h_o_g_info_xhtml_a2a347c64540c1d48a579f830ddff622f"><div class="ttname"><a href="classarm__compute_1_1_h_o_g_info.xhtml#a2a347c64540c1d48a579f830ddff622f">arm_compute::HOGInfo::descriptor_size</a></div><div class="ttdeci">size_t descriptor_size() const</div><div class="ttdoc">The size of HOG descriptor.</div><div class="ttdef"><b>Definition:</b> <a href="_h_o_g_info_8cpp_source.xhtml#l00131">HOGInfo.cpp:131</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_1_1reference_xhtml_a6cae310822a46019ba25a00ddb0f7e62"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a6cae310822a46019ba25a00ddb0f7e62">arm_compute::test::validation::reference::threshold</a></div><div class="ttdeci">SimpleTensor&lt; T &gt; threshold(const SimpleTensor&lt; T &gt; &amp;src, T threshold, T false_value, T true_value, ThresholdType type, T upper)</div><div class="ttdef"><b>Definition:</b> <a href="reference_2_threshold_8cpp_source.xhtml#l00035">Threshold.cpp:35</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml">arm_compute::Window</a></div><div class="ttdoc">Describe a multidimensional execution window.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00039">Window.h:39</a></div></div>
<div class="ttc" id="_validate_8h_xhtml_a4264d7e3318c4188e48127a75f3f0f8a"><div class="ttname"><a href="_validate_8h.xhtml#a4264d7e3318c4188e48127a75f3f0f8a">ARM_COMPUTE_ERROR_ON_DATA_TYPE_NOT_IN</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_DATA_TYPE_NOT_IN(t,...)</div><div class="ttdef"><b>Definition:</b> <a href="_validate_8h_source.xhtml#l00692">Validate.h:692</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00466">ARM_COMPUTE_ERROR_ON</a>, <a class="el" href="_validate_8h_source.xhtml#l00692">ARM_COMPUTE_ERROR_ON_DATA_TYPE_NOT_IN</a>, <a class="el" href="_h_o_g_info_8cpp_source.xhtml#l00096">HOGInfo::block_size()</a>, <a class="el" href="_h_o_g_info_8cpp_source.xhtml#l00106">HOGInfo::block_stride()</a>, <a class="el" href="classarm__compute_1_1_i_h_o_g.xhtml#afc824305b2eaceab36baf5b66a535316">IHOG::descriptor()</a>, <a class="el" href="_h_o_g_info_8cpp_source.xhtml#l00131">HOGInfo::descriptor_size()</a>, <a class="el" href="_h_o_g_info_8cpp_source.xhtml#l00101">HOGInfo::detection_window_size()</a>, <a class="el" href="_window_8h_source.xhtml#l00043">Window::DimX</a>, <a class="el" href="_window_8h_source.xhtml#l00045">Window::DimY</a>, <a class="el" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">arm_compute::F32</a>, <a class="el" href="arm__compute_2core_2_utils_8h_source.xhtml#l00080">arm_compute::floor_to_multiple()</a>, <a class="el" href="_size2_d_8h_source.xhtml#l00093">Size2D::height</a>, <a class="el" href="classarm__compute_1_1_i_h_o_g.xhtml#a4e9b5d4ab15fd9009b463861c1a19dbd">IHOG::info()</a>, <a class="el" href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00487">arm_compute::test::validation::input</a>, <a class="el" href="_i_array_8h_source.xhtml#l00058">IArray&lt; T &gt;::max_num_values()</a>, <a class="el" href="_window_8inl_source.xhtml#l00049">Window::set()</a>, <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l00257">ValidRegion::shape</a>, <a class="el" href="reference_2_threshold_8cpp_source.xhtml#l00035">arm_compute::test::validation::reference::threshold()</a>, <a class="el" href="arm__compute_2core_2_helpers_8h_source.xhtml#l00402">arm_compute::update_window_and_padding()</a>, <a class="el" href="_c_l_2_absolute_difference_8cpp_source.xhtml#l00109">arm_compute::test::validation::valid_region</a>, and <a class="el" href="_size2_d_8h_source.xhtml#l00092">Size2D::width</a>.</p>

</div>
</div>
<a id="ab5656bb5b6334bdbe6e606c715872828"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab5656bb5b6334bdbe6e606c715872828">&#9670;&nbsp;</a></span>name()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const char* name </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Name of the kernel. </p>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="classarm__compute_1_1_kernel.xhtml" title="Kernel class.">Kernel</a> name </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_c_p_p_kernel.xhtml#a1a30ad8f276a2310571c36239554831a">ICPPKernel</a>.</p>

<p class="definition">Definition at line <a class="el" href="_n_e_h_o_g_detector_kernel_8h_source.xhtml#l00040">40</a> of file <a class="el" href="_n_e_h_o_g_detector_kernel_8h_source.xhtml">NEHOGDetectorKernel.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    {</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;        <span class="keywordflow">return</span> <span class="stringliteral">&quot;NEHOGDetectorKernel&quot;</span>;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="a1950ead36156919ea0345e72bfe91e4f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1950ead36156919ea0345e72bfe91e4f">&#9670;&nbsp;</a></span>operator=() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_n_e_h_o_g_detector_kernel.xhtml">NEHOGDetectorKernel</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_n_e_h_o_g_detector_kernel.xhtml">NEHOGDetectorKernel</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prevent instances of this class from being copied (As this class contains pointers) </p>

</div>
</div>
<a id="afa7fbb664ca96646837a43aea8e9a5e8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afa7fbb664ca96646837a43aea8e9a5e8">&#9670;&nbsp;</a></span>operator=() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_n_e_h_o_g_detector_kernel.xhtml">NEHOGDetectorKernel</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_n_e_h_o_g_detector_kernel.xhtml">NEHOGDetectorKernel</a> &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Allow instances of this class to be moved. </p>

</div>
</div>
<a id="a112b35dd205c62ea6ed1447ef226da82"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a112b35dd205c62ea6ed1447ef226da82">&#9670;&nbsp;</a></span>run()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void run </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;&#160;</td>
          <td class="paramname"><em>window</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarm__compute_1_1_thread_info.xhtml">ThreadInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>info</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Execute the kernel on the passed window. </p>
<dl class="section warning"><dt>Warning</dt><dd>If <a class="el" href="classarm__compute_1_1_i_kernel.xhtml#a0466ee6ce6552c87595f0e88e73eeb1b" title="Indicates whether or not the kernel is parallelisable.">is_parallelisable()</a> returns false then the passed window must be equal to <a class="el" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6" title="The maximum window the kernel can be executed on.">window()</a></dd></dl>
<dl class="section note"><dt>Note</dt><dd>The window has to be a region within the window returned by the <a class="el" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6" title="The maximum window the kernel can be executed on.">window()</a> method</dd>
<dd>
The width of the window has to be a multiple of <a class="el" href="_c_l_im2_col_kernel_8cpp.xhtml#a4e45c1f5e4280813a78a77dda71d8799">num_elems_processed_per_iteration()</a>.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">window</td><td>Region on which to execute the kernel. (Must be a region of the window returned by <a class="el" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6" title="The maximum window the kernel can be executed on.">window()</a>) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">info</td><td>Info about executing thread and CPU. </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_c_p_p_kernel.xhtml#af814ff5e96f40f1cccf809b2b4ee19ef">ICPPKernel</a>.</p>

<p class="definition">Definition at line <a class="el" href="_n_e_h_o_g_detector_kernel_8cpp_source.xhtml#l00095">95</a> of file <a class="el" href="_n_e_h_o_g_detector_kernel_8cpp_source.xhtml">NEHOGDetectorKernel.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;{</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4f4125dba5283887b34f889b1c615c0c">info</a>);</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    <a class="code" href="_validate_8h.xhtml#a1b35b0d258183cf9ef36adf684d0b88c">ARM_COMPUTE_ERROR_ON_UNCONFIGURED_KERNEL</a>(<span class="keyword">this</span>);</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <a class="code" href="_validate_8h.xhtml#a6eb9ce82815fe429250189da7592ba75">ARM_COMPUTE_ERROR_ON_INVALID_SUBWINDOW</a>(<a class="code" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">IKernel::window</a>(), <a class="code" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>);</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(_hog_descriptor == <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">size_t</span> in_step_y = _input-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a6b14f175bf5281f57b561e2d4e4b1f1f">strides_in_bytes</a>()[<a class="code" href="classarm__compute_1_1_window.xhtml#ad2d402364fa822b0b7775081291eeca9">Window::DimY</a>] / <a class="code" href="namespacearm__compute.xhtml#abb7e0f23a4f2e63f39433f158dad47ab">data_size_from_type</a>(_input-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">data_type</a>());</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> in(_input, <a class="code" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>);</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a5002bf7ec46d52971f9526e94172cfee">execute_window_loop</a>(<a class="code" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>, [&amp;](<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_coordinates.xhtml">Coordinates</a> &amp; <span class="keywordtype">id</span>)</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    {</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> *in_row_ptr = reinterpret_cast&lt;const float *&gt;(in.ptr());</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        <span class="comment">// Init score_f32 with 0</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        float32x4_t score_f32 = vdupq_n_f32(0.0f);</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        <span class="comment">// Init score with bias</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        <span class="keywordtype">float</span> score = _bias;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        <span class="comment">// Compute Linear SVM</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;        <span class="keywordflow">for</span>(<span class="keywordtype">size_t</span> yb = 0; yb &lt; _num_blocks_per_descriptor_y; ++yb, in_row_ptr += in_step_y)</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;        {</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;            int32_t xb = 0;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;            <span class="keyword">const</span> int32_t offset_y = yb * _num_bins_per_descriptor_x;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;            <span class="keywordflow">for</span>(; xb &lt; static_cast&lt;int32_t&gt;(_num_bins_per_descriptor_x) - 16; xb += 16)</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;            {</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;                <span class="comment">// Load descriptor values</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;                <span class="keyword">const</span> float32x4x4_t a_f32 =</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;                {</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;                    {</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;                        vld1q_f32(&amp;in_row_ptr[xb + 0]),</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;                        vld1q_f32(&amp;in_row_ptr[xb + 4]),</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;                        vld1q_f32(&amp;in_row_ptr[xb + 8]),</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;                        vld1q_f32(&amp;in_row_ptr[xb + 12])</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;                    }</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;                };</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;                <span class="comment">// Load detector values</span></div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;                <span class="keyword">const</span> float32x4x4_t b_f32 =</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;                {</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;                    {</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;                        vld1q_f32(&amp;_hog_descriptor[xb + 0 + offset_y]),</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;                        vld1q_f32(&amp;_hog_descriptor[xb + 4 + offset_y]),</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;                        vld1q_f32(&amp;_hog_descriptor[xb + 8 + offset_y]),</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;                        vld1q_f32(&amp;_hog_descriptor[xb + 12 + offset_y])</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;                    }</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;                };</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;                <span class="comment">// Multiply accumulate</span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;                score_f32 = vmlaq_f32(score_f32, a_f32.val[0], b_f32.val[0]);</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;                score_f32 = vmlaq_f32(score_f32, a_f32.val[1], b_f32.val[1]);</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;                score_f32 = vmlaq_f32(score_f32, a_f32.val[2], b_f32.val[2]);</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;                score_f32 = vmlaq_f32(score_f32, a_f32.val[3], b_f32.val[3]);</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;            }</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;            <span class="keywordflow">for</span>(; xb &lt; static_cast&lt;int32_t&gt;(_num_bins_per_descriptor_x); ++xb)</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;            {</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;                <span class="keyword">const</span> <span class="keywordtype">float</span> a = in_row_ptr[xb];</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;                <span class="keyword">const</span> <span class="keywordtype">float</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a> = _hog_descriptor[xb + offset_y];</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;                score += a * <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;            }</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;        }</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;        score += vgetq_lane_f32(score_f32, 0);</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;        score += vgetq_lane_f32(score_f32, 1);</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;        score += vgetq_lane_f32(score_f32, 2);</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;        score += vgetq_lane_f32(score_f32, 3);</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;        <span class="keywordflow">if</span>(score &gt; _threshold)</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;        {</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;            <span class="keywordflow">if</span>(_detection_windows-&gt;<a class="code" href="classarm__compute_1_1_i_array.xhtml#aac8e28a698cd201286d75eb3f5ad3e1c">num_values</a>() &lt; _max_num_detection_windows)</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;            {</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;                <a class="code" href="structarm__compute_1_1_detection_window.xhtml">DetectionWindow</a> win;</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;                win.<a class="code" href="structarm__compute_1_1_detection_window.xhtml#a4dde988b1b2adba65ae3efa69f65d960">x</a>         = (<span class="keywordtype">id</span>.x() * _block_stride_width);</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;                win.<a class="code" href="structarm__compute_1_1_detection_window.xhtml#ab0580f504a7428539be299fa71565f30">y</a>         = (<span class="keywordtype">id</span>.y() * _block_stride_height);</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;                win.<a class="code" href="structarm__compute_1_1_detection_window.xhtml#ad0eab1042455a2067c812ab8071d5376">width</a>     = _detection_window_width;</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;                win.<a class="code" href="structarm__compute_1_1_detection_window.xhtml#a81c9f8d0b8c3b49d770be14dbe9f0d37">height</a>    = _detection_window_height;</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;                win.<a class="code" href="structarm__compute_1_1_detection_window.xhtml#ae5c4999829285e20d3b491807fa46fd1">idx_class</a> = _idx_class;</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;                win.<a class="code" href="structarm__compute_1_1_detection_window.xhtml#a8c5cd9b525ee73a24b1d9d8e34982d1c">score</a>     = score;</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;                <a class="code" href="namespacearm__compute.xhtml#a83308d038c8dbe8b7d5525aa6cc2193a">arm_compute::unique_lock&lt;arm_compute::Mutex&gt;</a> lock(_mutex);</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;                _detection_windows-&gt;<a class="code" href="classarm__compute_1_1_i_array.xhtml#a9031bfcabdaae3ac3e6e349446e282ff">push_back</a>(win);</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;                lock.unlock();</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;            }</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;        }</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    },</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    in);</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;}</div><div class="ttc" id="classarm__compute_1_1_i_kernel_xhtml_ad34a46f53686c12a5c5e717cc9617fb6"><div class="ttname"><a href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">arm_compute::IKernel::window</a></div><div class="ttdeci">const Window &amp; window() const</div><div class="ttdoc">The maximum window the kernel can be executed on.</div><div class="ttdef"><b>Definition:</b> <a href="_i_kernel_8cpp_source.xhtml#l00028">IKernel.cpp:28</a></div></div>
<div class="ttc" id="structarm__compute_1_1_detection_window_xhtml_a4dde988b1b2adba65ae3efa69f65d960"><div class="ttname"><a href="structarm__compute_1_1_detection_window.xhtml#a4dde988b1b2adba65ae3efa69f65d960">arm_compute::DetectionWindow::x</a></div><div class="ttdeci">uint16_t x</div><div class="ttdoc">Top-left x coordinate.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00556">Types.h:556</a></div></div>
<div class="ttc" id="structarm__compute_1_1_detection_window_xhtml_a8c5cd9b525ee73a24b1d9d8e34982d1c"><div class="ttname"><a href="structarm__compute_1_1_detection_window.xhtml#a8c5cd9b525ee73a24b1d9d8e34982d1c">arm_compute::DetectionWindow::score</a></div><div class="ttdeci">float score</div><div class="ttdoc">Confidence value for the detection window.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00561">Types.h:561</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_aa76b4a6e74940dabc5b7fc6b2dab3545"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">arm_compute::test::validation::b</a></div><div class="ttdeci">SimpleTensor&lt; float &gt; b</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00157">DFT.cpp:157</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_a7cfb31af63202568efef5214acfbf3ba"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">arm_compute::ITensorInfo::data_type</a></div><div class="ttdeci">virtual DataType data_type() const =0</div><div class="ttdoc">Data type used for each element of the tensor.</div></div>
<div class="ttc" id="_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00466">Error.h:466</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a83308d038c8dbe8b7d5525aa6cc2193a"><div class="ttname"><a href="namespacearm__compute.xhtml#a83308d038c8dbe8b7d5525aa6cc2193a">arm_compute::unique_lock</a></div><div class="ttdeci">std::unique_lock&lt; Mutex &gt; unique_lock</div><div class="ttdoc">Wrapper of lock_guard data-object.</div><div class="ttdef"><b>Definition:</b> <a href="_mutex_8h_source.xhtml#l00041">Mutex.h:41</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a6dc630a6ae9cc063b3924bcea8dee9d6"><div class="ttname"><a href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a></div><div class="ttdeci">#define ARM_COMPUTE_UNUSED(...)</div><div class="ttdoc">To avoid unused variables warnings.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00152">Error.h:152</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_array_xhtml_aac8e28a698cd201286d75eb3f5ad3e1c"><div class="ttname"><a href="classarm__compute_1_1_i_array.xhtml#aac8e28a698cd201286d75eb3f5ad3e1c">arm_compute::IArray::num_values</a></div><div class="ttdeci">size_t num_values() const</div><div class="ttdoc">Number of values currently stored in the array.</div><div class="ttdef"><b>Definition:</b> <a href="_i_array_8h_source.xhtml#l00068">IArray.h:68</a></div></div>
<div class="ttc" id="structarm__compute_1_1_detection_window_xhtml_ad0eab1042455a2067c812ab8071d5376"><div class="ttname"><a href="structarm__compute_1_1_detection_window.xhtml#ad0eab1042455a2067c812ab8071d5376">arm_compute::DetectionWindow::width</a></div><div class="ttdeci">uint16_t width</div><div class="ttdoc">Width of the detection window.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00558">Types.h:558</a></div></div>
<div class="ttc" id="classarm__compute_1_1_coordinates_xhtml"><div class="ttname"><a href="classarm__compute_1_1_coordinates.xhtml">arm_compute::Coordinates</a></div><div class="ttdoc">Coordinates of an item.</div><div class="ttdef"><b>Definition:</b> <a href="_coordinates_8h_source.xhtml#l00037">Coordinates.h:37</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_xhtml_a0e95dc1e53c361348314873b168ae237"><div class="ttname"><a href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">arm_compute::ITensor::info</a></div><div class="ttdeci">virtual ITensorInfo * info() const =0</div><div class="ttdoc">Interface to be implemented by the child class to return the tensor's metadata.</div></div>
<div class="ttc" id="namespacearm__compute_xhtml_abb7e0f23a4f2e63f39433f158dad47ab"><div class="ttname"><a href="namespacearm__compute.xhtml#abb7e0f23a4f2e63f39433f158dad47ab">arm_compute::data_size_from_type</a></div><div class="ttdeci">size_t data_size_from_type(DataType data_type)</div><div class="ttdoc">The size in bytes of the data type.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_utils_8h_source.xhtml#l00109">Utils.h:109</a></div></div>
<div class="ttc" id="structarm__compute_1_1_detection_window_xhtml_ae5c4999829285e20d3b491807fa46fd1"><div class="ttname"><a href="structarm__compute_1_1_detection_window.xhtml#ae5c4999829285e20d3b491807fa46fd1">arm_compute::DetectionWindow::idx_class</a></div><div class="ttdeci">uint16_t idx_class</div><div class="ttdoc">Index of the class.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00560">Types.h:560</a></div></div>
<div class="ttc" id="structarm__compute_1_1_detection_window_xhtml_a81c9f8d0b8c3b49d770be14dbe9f0d37"><div class="ttname"><a href="structarm__compute_1_1_detection_window.xhtml#a81c9f8d0b8c3b49d770be14dbe9f0d37">arm_compute::DetectionWindow::height</a></div><div class="ttdeci">uint16_t height</div><div class="ttdoc">Height of the detection window.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00559">Types.h:559</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_ad2d402364fa822b0b7775081291eeca9"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#ad2d402364fa822b0b7775081291eeca9">arm_compute::Window::DimY</a></div><div class="ttdeci">static constexpr size_t DimY</div><div class="ttdoc">Alias for dimension 1 also known as Y dimension.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00045">Window.h:45</a></div></div>
<div class="ttc" id="structarm__compute_1_1_detection_window_xhtml"><div class="ttname"><a href="structarm__compute_1_1_detection_window.xhtml">arm_compute::DetectionWindow</a></div><div class="ttdoc">Detection window used for the object detection.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00554">Types.h:554</a></div></div>
<div class="ttc" id="structarm__compute_1_1_detection_window_xhtml_ab0580f504a7428539be299fa71565f30"><div class="ttname"><a href="structarm__compute_1_1_detection_window.xhtml#ab0580f504a7428539be299fa71565f30">arm_compute::DetectionWindow::y</a></div><div class="ttdeci">uint16_t y</div><div class="ttdoc">Top-left y coordinate.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00557">Types.h:557</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a5002bf7ec46d52971f9526e94172cfee"><div class="ttname"><a href="namespacearm__compute.xhtml#a5002bf7ec46d52971f9526e94172cfee">arm_compute::execute_window_loop</a></div><div class="ttdeci">void execute_window_loop(const Window &amp;w, L &amp;&amp;lambda_function, Ts &amp;&amp;... iterators)</div><div class="ttdoc">Iterate through the passed window, automatically adjusting the iterators and calling the lambda_funct...</div><div class="ttdef"><b>Definition:</b> <a href="_helpers_8inl_source.xhtml#l00123">Helpers.inl:123</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_a6b14f175bf5281f57b561e2d4e4b1f1f"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a6b14f175bf5281f57b561e2d4e4b1f1f">arm_compute::ITensorInfo::strides_in_bytes</a></div><div class="ttdeci">virtual const Strides &amp; strides_in_bytes() const =0</div><div class="ttdoc">The strides in bytes for accessing each dimension of the tensor.</div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a4f4125dba5283887b34f889b1c615c0c"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a4f4125dba5283887b34f889b1c615c0c">arm_compute::test::validation::info</a></div><div class="ttdeci">info</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_convolution_layer_8cpp_source.xhtml#l00182">ConvolutionLayer.cpp:182</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_array_xhtml_a9031bfcabdaae3ac3e6e349446e282ff"><div class="ttname"><a href="classarm__compute_1_1_i_array.xhtml#a9031bfcabdaae3ac3e6e349446e282ff">arm_compute::IArray::push_back</a></div><div class="ttdeci">bool push_back(const T &amp;val)</div><div class="ttdoc">Append the passed argument to the end of the array if there is room.</div><div class="ttdef"><b>Definition:</b> <a href="_i_array_8h_source.xhtml#l00078">IArray.h:78</a></div></div>
<div class="ttc" id="classarm__compute_1_1_iterator_xhtml"><div class="ttname"><a href="classarm__compute_1_1_iterator.xhtml">arm_compute::Iterator</a></div><div class="ttdoc">Iterator updated by execute_window_loop for each window element.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_helpers_8h_source.xhtml#l00318">Helpers.h:318</a></div></div>
<div class="ttc" id="_validate_8h_xhtml_a6eb9ce82815fe429250189da7592ba75"><div class="ttname"><a href="_validate_8h.xhtml#a6eb9ce82815fe429250189da7592ba75">ARM_COMPUTE_ERROR_ON_INVALID_SUBWINDOW</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_INVALID_SUBWINDOW(f, s)</div><div class="ttdef"><b>Definition:</b> <a href="_validate_8h_source.xhtml#l00205">Validate.h:205</a></div></div>
<div class="ttc" id="_validate_8h_xhtml_a1b35b0d258183cf9ef36adf684d0b88c"><div class="ttname"><a href="_validate_8h.xhtml#a1b35b0d258183cf9ef36adf684d0b88c">ARM_COMPUTE_ERROR_ON_UNCONFIGURED_KERNEL</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_UNCONFIGURED_KERNEL(k)</div><div class="ttdef"><b>Definition:</b> <a href="_validate_8h_source.xhtml#l00941">Validate.h:941</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00466">ARM_COMPUTE_ERROR_ON</a>, <a class="el" href="_validate_8h_source.xhtml#l00205">ARM_COMPUTE_ERROR_ON_INVALID_SUBWINDOW</a>, <a class="el" href="_validate_8h_source.xhtml#l00941">ARM_COMPUTE_ERROR_ON_UNCONFIGURED_KERNEL</a>, <a class="el" href="_error_8h_source.xhtml#l00152">ARM_COMPUTE_UNUSED</a>, <a class="el" href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00157">arm_compute::test::validation::b</a>, <a class="el" href="arm__compute_2core_2_utils_8h_source.xhtml#l00109">arm_compute::data_size_from_type()</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">ITensorInfo::data_type()</a>, <a class="el" href="_window_8h_source.xhtml#l00045">Window::DimY</a>, <a class="el" href="_helpers_8inl_source.xhtml#l00123">arm_compute::execute_window_loop()</a>, <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l00559">DetectionWindow::height</a>, <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l00560">DetectionWindow::idx_class</a>, <a class="el" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">ITensor::info()</a>, <a class="el" href="_c_l_2_convolution_layer_8cpp_source.xhtml#l00182">arm_compute::test::validation::info</a>, <a class="el" href="_i_array_8h_source.xhtml#l00068">IArray&lt; T &gt;::num_values()</a>, <a class="el" href="_i_array_8h_source.xhtml#l00078">IArray&lt; T &gt;::push_back()</a>, <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l00561">DetectionWindow::score</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a6b14f175bf5281f57b561e2d4e4b1f1f">ITensorInfo::strides_in_bytes()</a>, <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l00558">DetectionWindow::width</a>, <a class="el" href="_i_kernel_8cpp_source.xhtml#l00028">IKernel::window()</a>, <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l00556">DetectionWindow::x</a>, and <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l00557">DetectionWindow::y</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>arm_compute/core/NEON/kernels/<a class="el" href="_n_e_h_o_g_detector_kernel_8h_source.xhtml">NEHOGDetectorKernel.h</a></li>
<li>src/core/NEON/kernels/<a class="el" href="_n_e_h_o_g_detector_kernel_8cpp_source.xhtml">NEHOGDetectorKernel.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1_n_e_h_o_g_detector_kernel.xhtml">NEHOGDetectorKernel</a></li>
    <li class="footer">Generated on Thu Mar 5 2020 16:07:15 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
