<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: arm_compute/runtime/NEON/functions/NEDepthwiseConvolutionLayer.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_n_e_depthwise_convolution_layer_8h_source.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">NEDepthwiseConvolutionLayer.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_n_e_depthwise_convolution_layer_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2017-2020 ARM Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#ifndef ARM_COMPUTE_NEDEPTHWISECONVOLUTION_H</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#define ARM_COMPUTE_NEDEPTHWISECONVOLUTION_H</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_n_e_depthwise_convolution_layer3x3_kernel_8h.xhtml">arm_compute/core/NEON/kernels/NEDepthwiseConvolutionLayer3x3Kernel.h</a>&quot;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_n_e_depthwise_convolution_layer_native_kernel_8h.xhtml">arm_compute/core/NEON/kernels/NEDepthwiseConvolutionLayerNativeKernel.h</a>&quot;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_n_e_direct_convolution_layer_output_stage_kernel_8h.xhtml">arm_compute/core/NEON/kernels/NEDirectConvolutionLayerOutputStageKernel.h</a>&quot;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_n_e_fill_border_kernel_8h.xhtml">arm_compute/core/NEON/kernels/NEFillBorderKernel.h</a>&quot;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_n_e_activation_layer_8h.xhtml">arm_compute/runtime/NEON/functions/NEActivationLayer.h</a>&quot;</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_n_e_permute_8h.xhtml">arm_compute/runtime/NEON/functions/NEPermute.h</a>&quot;</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_n_e_depthwise_convolution_assembly_dispatch_8h.xhtml">arm_compute/runtime/NEON/functions/assembly/NEDepthwiseConvolutionAssemblyDispatch.h</a>&quot;</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;{</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="comment">// Forward declarations</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keyword">class </span>ITensor;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="comment">/** Function to execute a depthwise convolution.</span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00042"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_depthwise_convolution_layer.xhtml">   42</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1_n_e_depthwise_convolution_layer.xhtml">NEDepthwiseConvolutionLayer</a> : <span class="keyword">public</span> <a class="code" href="classarm__compute_1_1_i_function.xhtml">IFunction</a></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;{</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="keyword">public</span>:<span class="comment"></span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="comment">    /** Default constructor */</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <a class="code" href="classarm__compute_1_1_n_e_depthwise_convolution_layer.xhtml#aceb582e096b2871c92271876223eb7b6">NEDepthwiseConvolutionLayer</a>(std::shared_ptr&lt;IMemoryManager&gt; memory_manager = <span class="keyword">nullptr</span>);<span class="comment"></span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="comment">    /** Prevent instances of this class from being copied (As this class contains pointers) */</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <a class="code" href="classarm__compute_1_1_n_e_depthwise_convolution_layer.xhtml#aceb582e096b2871c92271876223eb7b6">NEDepthwiseConvolutionLayer</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_n_e_depthwise_convolution_layer.xhtml">NEDepthwiseConvolutionLayer</a> &amp;) = <span class="keyword">delete</span>;<span class="comment"></span></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="comment">    /** Default move constructor */</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <a class="code" href="classarm__compute_1_1_n_e_depthwise_convolution_layer.xhtml#aceb582e096b2871c92271876223eb7b6">NEDepthwiseConvolutionLayer</a>(<a class="code" href="classarm__compute_1_1_n_e_depthwise_convolution_layer.xhtml">NEDepthwiseConvolutionLayer</a> &amp;&amp;) = <span class="keywordflow">default</span>;<span class="comment"></span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="comment">    /** Prevent instances of this class from being copied (As this class contains pointers) */</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <a class="code" href="classarm__compute_1_1_n_e_depthwise_convolution_layer.xhtml">NEDepthwiseConvolutionLayer</a> &amp;<a class="code" href="classarm__compute_1_1_n_e_depthwise_convolution_layer.xhtml#aa450bb01e6984892ca2a04078b9c653d">operator=</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_n_e_depthwise_convolution_layer.xhtml">NEDepthwiseConvolutionLayer</a> &amp;) = <span class="keyword">delete</span>;<span class="comment"></span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="comment">    /** Default move assignment operator */</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <a class="code" href="classarm__compute_1_1_n_e_depthwise_convolution_layer.xhtml">NEDepthwiseConvolutionLayer</a> &amp;<a class="code" href="classarm__compute_1_1_n_e_depthwise_convolution_layer.xhtml#aa450bb01e6984892ca2a04078b9c653d">operator=</a>(<a class="code" href="classarm__compute_1_1_n_e_depthwise_convolution_layer.xhtml">NEDepthwiseConvolutionLayer</a> &amp;&amp;) = <span class="keywordflow">default</span>;<span class="comment"></span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="comment">    /** Initialize the function&#39;s source, destination, weights and convolution information.</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="comment">     * @param[in, out] input            Source tensor. Data type supported: QASYMM8/QASYMM8_SIGNED/F16/F32</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="comment">     * @param[out]     output           Destination tensor. Data type supported: same as @p input.</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="comment">     * @param[in]      weights          Weights tensor. These are 3D tensors with shape [kernel_x, kernel_y, IFM].</span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="comment">     *                                  Data type supported: Same as @p input or QASYMM8/QASYMM8_SIGNED/QSYMM8_PER_CHANNEL when @p input is QASYMM8/QASYMM8_SIGNED.</span></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="comment">     * @param[in]      biases           Biases tensor. A 1D tensor with shape [IFM]. Must be nullptr if not needed.</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="comment">     *                                  Data type supported: Same as @p input, S32 when input is QASYMM8/QASYMM8_SIGNED.</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="comment">     * @param[in]      conv_info        Padding and stride information to use for the convolution.</span></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="comment">     * @param[in]      depth_multiplier (Optional) Multiplier to apply to the input&#39;s depth in order to retrieve the output&#39;s depth. Defaults to 1.</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="comment">     * @param[in]      act_info         (Optional) Activation layer information in case of a fused activation.</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="comment">     * @param[in]      dilation         (Optional) Dilation, in elements, across x and y. Defaults to (1, 1).</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_n_e_depthwise_convolution_layer.xhtml#ac83f79ff17ee77e2b71166de83478c86">configure</a>(<a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a64a08a9fec5aeee8650e7182b6d171d0">weights</a>, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *biases, <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *output, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>,</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;                   <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> depth_multiplier = 1, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1f8aca235c095df227e7444f6b237eb1">act_info</a> = <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a>(), <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad3fd4136244e42ad89b01c02b904336d">dilation</a> = <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a>(1<a class="code" href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa4c614360da93c0a041b22e537de151eb">U</a>, 1<a class="code" href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa4c614360da93c0a041b22e537de151eb">U</a>));</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="comment">    /** Static function to check if given info will lead to a valid configuration of @ref NEDepthwiseConvolutionLayer</span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="comment">     * @param[in] input            Source tensor. Data type supported: QASYMM8/QASYMM8_SIGNED/F16/F32</span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="comment">     * @param[in] output           Destination tensor. Data type supported: same as @p input.</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="comment">     * @param[in] weights          Weights tensor. These are 3D tensors with shape [kernel_x, kernel_y, IFM].</span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="comment">     *                             Data type supported: Same as @p input or QASYMM8/QASYMM8_SIGNED/QSYMM8_PER_CHANNEL when @p input is QASYMM8/QASYMM8_SIGNED.</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="comment">     * @param[in] biases           Biases tensor. A 1D tensor with shape [IFM]. Must be nullptr if not needed.</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="comment">     *                             Data type supported: Same as @p input, S32 when input is QASYMM8/QASYMM8_SIGNED.</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="comment">     * @param[in] conv_info        Padding and stride information to use for the convolution.</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="comment">     * @param[in] depth_multiplier (Optional) Multiplier to apply to the input&#39;s depth in order to retrieve the output&#39;s depth. Defaults to 1.</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="comment">     * @param[in] act_info         (Optional) Activation layer information in case of a fused activation.</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="comment">     * @param[in] dilation         (Optional) Dilation, in elements, across x and y. Defaults to (1, 1).</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="comment">     * @return a status</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <span class="keyword">static</span> <a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> <a class="code" href="classarm__compute_1_1_n_e_depthwise_convolution_layer.xhtml#a4bc5903a6da554c4cd38d2b123d30a4f">validate</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a64a08a9fec5aeee8650e7182b6d171d0">weights</a>, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *biases, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *output, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>,</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;                           <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> depth_multiplier = 1, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1f8aca235c095df227e7444f6b237eb1">act_info</a> = <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a>(), <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad3fd4136244e42ad89b01c02b904336d">dilation</a> = <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a>(1<a class="code" href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa4c614360da93c0a041b22e537de151eb">U</a>, 1<a class="code" href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa4c614360da93c0a041b22e537de151eb">U</a>));</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <span class="comment">// Inherited methods overriden:</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_n_e_depthwise_convolution_layer.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>() <span class="keyword">override</span>;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_n_e_depthwise_convolution_layer.xhtml#aa9b93ef660fc3c5b4b19d3fc7b891b77">prepare</a>() <span class="keyword">override</span>;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="keyword">private</span>:<span class="comment"></span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="comment">    /** Static function to choose the best depthwise convolution function for @ref NEDepthwiseConvolutionLayer</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="comment">     * @param[in] input            Source tensor info. Data type supported: QASYMM8/QASYMM8_SIGNED/F16/F32</span></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="comment">     * @param[in] weights          Weights tensor info. These are 3D tensors with shape [kernel_x, kernel_y, IFM].</span></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="comment">     *                             Data type supported: Same as @p input or QASYMM8/QASYMM8_SIGNED/QSYMM8_PER_CHANNEL when @p input is QASYMM8/QASYMM8_SIGNED.</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="comment">     * @param[in] biases           Biases tensor info. A 1D tensor with shape [IFM]. Must be nullptr if not needed.</span></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="comment">     *                             Data type supported: Same as @p input, S32 when input is QASYMM8/QASYMM8_SIGNED.</span></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="comment">     * @param[in] output           Destination tensor. Data type supported: same as @p input.</span></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="comment">     * @param[in] conv_info        Padding and stride information to use for the convolution.</span></div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="comment">     * @param[in] depth_multiplier (Optional) Multiplier to apply to the input&#39;s depth in order to retrieve the output&#39;s depth. Defaults to 1.</span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="comment">     * @param[in] act_info         (Optional) Activation layer information in case of a fused activation. Only RELU, BOUNDED_RELU and LU_BOUNDED_RELU for 3x3 quantized are supported.</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="comment">     * @param[in] dilation         (Optional) Dilation, in elements, across x and y. Defaults to (1, 1).</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="comment">     * @return a Depthwise Convolution Function</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    <span class="keyword">static</span> <a class="code" href="namespacearm__compute.xhtml#a0255421478a6f5ab8a2596d966411a5b">DepthwiseConvolutionFunction</a> get_depthwiseconvolution_function(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a64a08a9fec5aeee8650e7182b6d171d0">weights</a>, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *biases, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *output,</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;                                                                          <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> depth_multiplier = 1,</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;                                                                          <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1f8aca235c095df227e7444f6b237eb1">act_info</a> = <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a>(), <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad3fd4136244e42ad89b01c02b904336d">dilation</a> = <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a>(1<a class="code" href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa4c614360da93c0a041b22e537de151eb">U</a>, 1<a class="code" href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa4c614360da93c0a041b22e537de151eb">U</a>));</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="comment">    /** Basic function to execute optimized depthwise convolution routines. This function calls the following NEON kernels:</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="comment">    *</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="comment">    * @note At the moment 3x3 and 5x5 convolution of stride 1, 2 are supported</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="comment">    *</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="comment">    * -# @ref NEFillBorderKernel (if pad_x or pad_y &gt; 0) and no assembly kernel implementation is present</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="comment">    * -# @ref NEDepthwiseConvolutionLayer3x3Kernel if 3x3 and no assembly kernel implementation is present</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="comment">    * -# @ref NEDepthwiseConvolutionAssemblyDispatch if assembly kernel implementation is present</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="comment">    * -# @ref NEDirectConvolutionLayerOutputStageKernel if re-quantization of output is required</span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="comment">    * -# @ref NEActivationLayer if fused activation is required</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="comment">    *</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="comment">    */</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    <span class="keyword">class </span>NEDepthwiseConvolutionLayerOptimizedInternal : <span class="keyword">public</span> <a class="code" href="classarm__compute_1_1_i_function.xhtml">IFunction</a></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    {</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    <span class="keyword">public</span>:<span class="comment"></span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="comment">        /** Default constructor */</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        NEDepthwiseConvolutionLayerOptimizedInternal(std::shared_ptr&lt;IMemoryManager&gt; memory_manager = <span class="keyword">nullptr</span>);<span class="comment"></span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="comment">        /** Prevent instances of this class from being copied (As this class contains pointers) */</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;        NEDepthwiseConvolutionLayerOptimizedInternal(<span class="keyword">const</span> NEDepthwiseConvolutionLayerOptimizedInternal &amp;) = <span class="keyword">delete</span>;<span class="comment"></span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="comment">        /** Default move constructor */</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        NEDepthwiseConvolutionLayerOptimizedInternal(NEDepthwiseConvolutionLayerOptimizedInternal &amp;&amp;) = <span class="keywordflow">default</span>;<span class="comment"></span></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="comment">        /** Prevent instances of this class from being copied (As this class contains pointers) */</span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;        NEDepthwiseConvolutionLayerOptimizedInternal &amp;<a class="code" href="classarm__compute_1_1_n_e_depthwise_convolution_layer.xhtml#aa450bb01e6984892ca2a04078b9c653d">operator=</a>(<span class="keyword">const</span> NEDepthwiseConvolutionLayerOptimizedInternal &amp;) = <span class="keyword">delete</span>;<span class="comment"></span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="comment">        /** Default move assignment operator */</span></div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        NEDepthwiseConvolutionLayerOptimizedInternal &amp;<a class="code" href="classarm__compute_1_1_n_e_depthwise_convolution_layer.xhtml#aa450bb01e6984892ca2a04078b9c653d">operator=</a>(NEDepthwiseConvolutionLayerOptimizedInternal &amp;&amp;) = <span class="keywordflow">default</span>;<span class="comment"></span></div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="comment">        /** Initialize the function&#39;s source, destination, kernels and border_size.</span></div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="comment">         *</span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="comment">         * @param[in, out] input            Source tensor. Data type supported: QASYMM8/QASYMM8_SIGNED/F16/F32. (Written to only for border filling).</span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="comment">         * @param[in]      weights          Weights tensor. These are 3D tensors with shape [kernel_x, kernel_y, IFM]. Data type supported: Same as @p input.</span></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="comment">         * @param[in]      biases           Biases tensor. A 1D tensor with shape [IFM]. Must be nullptr if not needed.</span></div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="comment">         *                                  Data type supported: Same as @p input, S32 when input is QASYMM8/QASYMM8_SIGNED.</span></div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<span class="comment">         * @param[out]     output           Destination tensor. Data type supported: same as @p input.</span></div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;<span class="comment">         * @param[in]      conv_info        Padding and stride information to use for the convolution.</span></div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="comment">         * @param[in]      depth_multiplier (Optional) Multiplier to apply to the input&#39;s depth in order to retrieve the output&#39;s depth. Defaults to 1.</span></div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="comment">         * @param[in]      act_info         (Optional) Activation layer information in case of a fused activation.</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="comment">         * @param[in]      dilation         (Optional) Dilation, in elements, across x and y. Defaults to (1, 1).</span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="comment">         */</span></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_n_e_depthwise_convolution_layer.xhtml#ac83f79ff17ee77e2b71166de83478c86">configure</a>(<a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a64a08a9fec5aeee8650e7182b6d171d0">weights</a>, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *biases, <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *output, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>,</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;                       <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> depth_multiplier = 1, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1f8aca235c095df227e7444f6b237eb1">act_info</a> = <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a>(), <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad3fd4136244e42ad89b01c02b904336d">dilation</a> = <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a>(1<a class="code" href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa4c614360da93c0a041b22e537de151eb">U</a>, 1<a class="code" href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa4c614360da93c0a041b22e537de151eb">U</a>));</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="comment">        /** Static function to check if given info will lead to a valid configuration of @ref NEDepthwiseConvolutionLayer3x3</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="comment">         *</span></div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="comment">         * @param[in] input            Source tensor. Data type supported: QASYMM8/QASYMM8_SIGNED/F16/F32. (Written to only for border filling).</span></div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="comment">         * @param[in] weights          Weights tensor. These are 3D tensors with shape [kernel_x, kernel_y, IFM]. Data type supported: Same as @p input.</span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="comment">         * @param[in] biases           Biases tensor. A 1D tensor with shape [IFM]. Must be nullptr if not needed.</span></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;<span class="comment">         *                             Data type supported: Same as @p input, S32 when input is QASYMM8/QASYMM8_SIGNED.</span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;<span class="comment">         * @param[in] output           Destination tensor. Data type supported: same as @p input.</span></div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;<span class="comment">         * @param[in] conv_info        Padding and stride information to use for the convolution.</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="comment">         * @param[in] depth_multiplier (Optional) Multiplier to apply to the input&#39;s depth in order to retrieve the output&#39;s depth. Defaults to 1.</span></div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;<span class="comment">         * @param[in] act_info         (Optional) Activation layer information in case of a fused activation.</span></div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="comment">         * @param[in] dilation         (Optional) Dilation, in elements, across x and y. Defaults to (1, 1).</span></div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;<span class="comment">         *</span></div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="comment">         * @return a status</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="comment">         */</span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;        <span class="keyword">static</span> <a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> <a class="code" href="classarm__compute_1_1_n_e_depthwise_convolution_layer.xhtml#a4bc5903a6da554c4cd38d2b123d30a4f">validate</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a64a08a9fec5aeee8650e7182b6d171d0">weights</a>, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *biases, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *output, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>,</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;                               <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> depth_multiplier = 1, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1f8aca235c095df227e7444f6b237eb1">act_info</a> = <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a>(), <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad3fd4136244e42ad89b01c02b904336d">dilation</a> = <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a>(1<a class="code" href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa4c614360da93c0a041b22e537de151eb">U</a>, 1<a class="code" href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa4c614360da93c0a041b22e537de151eb">U</a>));</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;        <span class="comment">// Inherited methods overriden:</span></div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_n_e_depthwise_convolution_layer.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>() <span class="keyword">override</span>;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_n_e_depthwise_convolution_layer.xhtml#aa9b93ef660fc3c5b4b19d3fc7b891b77">prepare</a>() <span class="keyword">override</span>;</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    <span class="keyword">private</span>:<span class="comment"></span></div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;<span class="comment">        /** Configure the kernels/functions for the generic pipeline.</span></div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;<span class="comment">         *</span></div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;<span class="comment">         * @param[in, out] input            Source tensor. Data type supported: QASYMM8/QASYMM8_SIGNED/F16/F32. (Written to only for border filling).</span></div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;<span class="comment">         * @param[in]      weights          Weights tensor. These are 3D tensors with shape [kernel_x, kernel_y, IFM]. Data type supported: Same as @p input.</span></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<span class="comment">         * @param[in]      biases           Biases tensor. A 1D tensor with shape [IFM]. Must be nullptr if not needed.</span></div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="comment">         *                                  Data type supported: Same as @p input, S32 when input is QASYMM8/QASYMM8_SIGNED.</span></div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;<span class="comment">         * @param[out]     output           Destination tensor. Data type supported: same as @p input.</span></div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="comment">         * @param[in]      conv_info        Padding and stride information to use for the convolution.</span></div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;<span class="comment">         * @param[in]      depth_multiplier Multiplier to apply to the input&#39;s depth in order to retrieve the output&#39;s depth. Defaults to 1.</span></div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;<span class="comment">         * @param[in]      act_info         Activation layer information in case of a fused activation.</span></div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="comment">         * @param[in]      dilation         (Optional) Dilation, in elements, across x and y. Defaults to (1, 1).</span></div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;<span class="comment">         *</span></div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<span class="comment">         */</span></div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;        <span class="keywordtype">void</span> configure_generic(<a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a64a08a9fec5aeee8650e7182b6d171d0">weights</a>, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *biases, <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *output, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>,</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;                               <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> depth_multiplier, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1f8aca235c095df227e7444f6b237eb1">act_info</a>, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad3fd4136244e42ad89b01c02b904336d">dilation</a> = <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a>(1<a class="code" href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa4c614360da93c0a041b22e537de151eb">U</a>, 1<a class="code" href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa4c614360da93c0a041b22e537de151eb">U</a>));<span class="comment"></span></div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;<span class="comment">        /** Configure the kernels/functions for the optimized pipeline.</span></div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="comment">         *</span></div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<span class="comment">         * @param[in]  input            Source tensor. Data type supported: QASYMM8/QASYMM8_SIGNED/F16/F32. (Written to only for border filling).</span></div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;<span class="comment">         * @param[in]  weights          Weights tensor. These are 3D tensors with shape [kernel_x, kernel_y, IFM]. Data type supported: Same as @p input.</span></div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;<span class="comment">         * @param[in]  biases           Biases tensor. A 1D tensor with shape [IFM]. Must be nullptr if not needed.</span></div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;<span class="comment">         *                              Data type supported: Same as @p input, S32 when input is QASYMM8/QASYMM8_SIGNED.</span></div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;<span class="comment">         * @param[out] output           Destination tensor. Data type supported: same as @p input.</span></div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;<span class="comment">         * @param[in]  conv_info        Padding and stride information to use for the convolution.</span></div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<span class="comment">         * @param[in]  depth_multiplier Multiplier to apply to the input&#39;s depth in order to retrieve the output&#39;s depth. Defaults to 1.</span></div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="comment">         * @param[in]  act_info         Activation layer information in case of a fused activation.</span></div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;<span class="comment">         */</span></div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;        <span class="keywordtype">void</span> configure_optimized(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a64a08a9fec5aeee8650e7182b6d171d0">weights</a>, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *biases, <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *output, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>,</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;                                 <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> depth_multiplier, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1f8aca235c095df227e7444f6b237eb1">act_info</a>, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad3fd4136244e42ad89b01c02b904336d">dilation</a> = <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a>(1<a class="code" href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa4c614360da93c0a041b22e537de151eb">U</a>, 1<a class="code" href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa4c614360da93c0a041b22e537de151eb">U</a>));<span class="comment"></span></div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;<span class="comment">        /** Run generic kernel */</span></div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;        <span class="keywordtype">void</span> run_generic();<span class="comment"></span></div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<span class="comment">        /** Run optimized function */</span></div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;        <span class="keywordtype">void</span> run_optimized();</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;        <a class="code" href="classarm__compute_1_1_memory_group.xhtml">MemoryGroup</a>                               _memory_group;</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;        <a class="code" href="classarm__compute_1_1_n_e_depthwise_convolution_layer3x3_kernel.xhtml">NEDepthwiseConvolutionLayer3x3Kernel</a>      _dwc_kernel;</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;        <a class="code" href="classarm__compute_1_1_n_e_depthwise_convolution_assembly_dispatch.xhtml">NEDepthwiseConvolutionAssemblyDispatch</a>    _dwc_optimized_func;</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;        <a class="code" href="classarm__compute_1_1_n_e_direct_convolution_layer_output_stage_kernel.xhtml">NEDirectConvolutionLayerOutputStageKernel</a> _output_stage_kernel;</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;        <a class="code" href="classarm__compute_1_1_n_e_fill_border_kernel.xhtml">NEFillBorderKernel</a>                        _border_handler;</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;        <a class="code" href="classarm__compute_1_1_n_e_permute.xhtml">NEPermute</a>                                 _permute_input;</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;        <a class="code" href="classarm__compute_1_1_n_e_permute.xhtml">NEPermute</a>                                 _permute_weights;</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;        <a class="code" href="classarm__compute_1_1_n_e_permute.xhtml">NEPermute</a>                                 _permute_output;</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;        <a class="code" href="classarm__compute_1_1_n_e_activation_layer.xhtml">NEActivationLayer</a>                         _activationlayer_function;</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;        <a class="code" href="classarm__compute_1_1_tensor.xhtml">Tensor</a>                                    _accumulator;</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;        <a class="code" href="classarm__compute_1_1_tensor.xhtml">Tensor</a>                                    _permuted_input;</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;        <a class="code" href="classarm__compute_1_1_tensor.xhtml">Tensor</a>                                    _permuted_weights;</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;        <a class="code" href="classarm__compute_1_1_tensor.xhtml">Tensor</a>                                    _permuted_output;</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a>                            *_original_weights;</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;        <span class="keywordtype">bool</span>                                      _has_bias;</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;        <span class="keywordtype">bool</span>                                      _is_quantized;</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;        <span class="keywordtype">bool</span>                                      _is_optimized;</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;        <span class="keywordtype">bool</span>                                      _is_nchw;</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;        <span class="keywordtype">bool</span>                                      _permute;</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;        <span class="keywordtype">bool</span>                                      _is_activationlayer_enabled;</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;        <span class="keywordtype">bool</span>                                      _is_prepared;</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;    };</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;<span class="comment">    /** Basic function to execute a generic depthwise convolution. This function calls the following NEON kernel:</span></div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;<span class="comment">     * -# @ref NEDepthwiseConvolutionLayerNativeKernel</span></div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;    <span class="keyword">class </span>NEDepthwiseConvolutionLayerGeneric : <span class="keyword">public</span> <a class="code" href="classarm__compute_1_1_i_function.xhtml">IFunction</a></div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;    {</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;    <span class="keyword">public</span>:<span class="comment"></span></div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;<span class="comment">        /** Default constructor */</span></div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;        NEDepthwiseConvolutionLayerGeneric();<span class="comment"></span></div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;<span class="comment">        /** Prevent instances of this class from being copied (As this class contains pointers) */</span></div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;        NEDepthwiseConvolutionLayerGeneric(<span class="keyword">const</span> NEDepthwiseConvolutionLayerGeneric &amp;) = <span class="keyword">delete</span>;<span class="comment"></span></div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;<span class="comment">        /** Default move constructor */</span></div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;        NEDepthwiseConvolutionLayerGeneric(NEDepthwiseConvolutionLayerGeneric &amp;&amp;) = <span class="keywordflow">default</span>;<span class="comment"></span></div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;<span class="comment">        /** Prevent instances of this class from being copied (As this class contains pointers) */</span></div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;        NEDepthwiseConvolutionLayerGeneric &amp;<a class="code" href="classarm__compute_1_1_n_e_depthwise_convolution_layer.xhtml#aa450bb01e6984892ca2a04078b9c653d">operator=</a>(<span class="keyword">const</span> NEDepthwiseConvolutionLayerGeneric &amp;) = <span class="keyword">delete</span>;<span class="comment"></span></div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;<span class="comment">        /** Default move assignment operator */</span></div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;        NEDepthwiseConvolutionLayerGeneric &amp;<a class="code" href="classarm__compute_1_1_n_e_depthwise_convolution_layer.xhtml#aa450bb01e6984892ca2a04078b9c653d">operator=</a>(NEDepthwiseConvolutionLayerGeneric &amp;&amp;) = <span class="keywordflow">default</span>;<span class="comment"></span></div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;<span class="comment">        /** Initialize the function&#39;s source, destination, weights and convolution information.</span></div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;<span class="comment">         *</span></div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;<span class="comment">         * @param[in, out] input            Source tensor. Data type supported: QASYMM8/QASYMM8_SIGNED/F16/F32. (Written to only for border filling).</span></div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;<span class="comment">         * @param[out]     output           Destination tensor. Data type supported: same as @p input.</span></div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;<span class="comment">         * @param[in]      weights          Weights tensor. These are 3D tensors with shape [kernel_x, kernel_y, IFM].</span></div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;<span class="comment">         *                                  Data type supported: Same as @p input or QASYMM8/QASYMM8_SIGNED/QSYMM8_PER_CHANNEL when @p input is QASYMM8/QASYMM8_SIGNED.</span></div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;<span class="comment">         * @param[in]      biases           Biases tensor. A 1D tensor with shape [IFM]. Must be nullptr if not needed.</span></div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;<span class="comment">         *                                  Data type supported: Same as @p input, S32 when input is QASYMM8/QASYMM8_SIGNED.</span></div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;<span class="comment">         * @param[in]      conv_info        Padding and stride information to use for the convolution.</span></div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;<span class="comment">         * @param[in]      depth_multiplier (Optional) Multiplier to apply to the input&#39;s depth in order to retrieve the output&#39;s depth. Defaults to 1.</span></div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;<span class="comment">         * @param[in]      act_info         (Optional) Activation layer information in case of a fused activation.</span></div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;<span class="comment">         * @param[in]      dilation         (Optional) Dilation, in elements, across x and y. Defaults to (1, 1).</span></div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;<span class="comment">         */</span></div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_n_e_depthwise_convolution_layer.xhtml#ac83f79ff17ee77e2b71166de83478c86">configure</a>(<a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a64a08a9fec5aeee8650e7182b6d171d0">weights</a>, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *biases, <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *output, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>,</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;                       <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> depth_multiplier = 1, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1f8aca235c095df227e7444f6b237eb1">act_info</a> = <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a>(), <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad3fd4136244e42ad89b01c02b904336d">dilation</a> = <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a>(1<a class="code" href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa4c614360da93c0a041b22e537de151eb">U</a>, 1<a class="code" href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa4c614360da93c0a041b22e537de151eb">U</a>));</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;<span class="comment">        /** Static function to check if given info will lead to a valid configuration of @ref NEDepthwiseConvolutionLayerGeneric</span></div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;<span class="comment">         *</span></div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;<span class="comment">         * @param[in] input            Source tensor. Data type supported: QASYMM8/QASYMM8_SIGNED/F16/F32. (Written to only for border filling).</span></div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;<span class="comment">         * @param[in] output           Destination tensor. Data type supported: same as @p input.</span></div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;<span class="comment">         * @param[in] weights          Weights tensor. These are 3D tensors with shape [kernel_x, kernel_y, IFM].</span></div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;<span class="comment">         *                             Data type supported: Same as @p input or QASYMM8/QASYMM8_SIGNED/QSYMM8_PER_CHANNEL when @p input is QASYMM8/QASYMM8_SIGNED.</span></div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;<span class="comment">         * @param[in] biases           Biases tensor. A 1D tensor with shape [IFM]. Must be nullptr if not needed.</span></div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;<span class="comment">         *                             Data type supported: Same as @p input, S32 when input is QASYMM8/QASYMM8_SIGNED.</span></div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;<span class="comment">         * @param[in] conv_info        Padding and stride information to use for the convolution.</span></div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;<span class="comment">         * @param[in] depth_multiplier (Optional) Multiplier to apply to the input&#39;s depth in order to retrieve the output&#39;s depth. Defaults to 1.</span></div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;<span class="comment">         * @param[in] act_info         (Optional) Activation layer information in case of a fused activation.</span></div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;<span class="comment">         * @param[in] dilation         (Optional) Dilation, in elements, across x and y. Defaults to (1, 1).</span></div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;<span class="comment">         *</span></div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;<span class="comment">         * @return a status</span></div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;<span class="comment">         */</span></div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;        <span class="keyword">static</span> <a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> <a class="code" href="classarm__compute_1_1_n_e_depthwise_convolution_layer.xhtml#a4bc5903a6da554c4cd38d2b123d30a4f">validate</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a64a08a9fec5aeee8650e7182b6d171d0">weights</a>, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *biases, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *output, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>,</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;                               <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> depth_multiplier = 1, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1f8aca235c095df227e7444f6b237eb1">act_info</a> = <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a>(), <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad3fd4136244e42ad89b01c02b904336d">dilation</a> = <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a>(1<a class="code" href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa4c614360da93c0a041b22e537de151eb">U</a>, 1<a class="code" href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa4c614360da93c0a041b22e537de151eb">U</a>));</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;        <span class="comment">// Inherited methods overriden:</span></div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_n_e_depthwise_convolution_layer.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>() <span class="keyword">override</span>;</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_n_e_depthwise_convolution_layer.xhtml#aa9b93ef660fc3c5b4b19d3fc7b891b77">prepare</a>() <span class="keyword">override</span>;</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;    <span class="keyword">private</span>:</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;        <a class="code" href="classarm__compute_1_1_n_e_depthwise_convolution_layer_native_kernel.xhtml">NEDepthwiseConvolutionLayerNativeKernel</a> _depthwise_conv_kernel;</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;        <a class="code" href="classarm__compute_1_1_n_e_fill_border_kernel.xhtml">NEFillBorderKernel</a>                      _fill_border;</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;        <a class="code" href="classarm__compute_1_1_n_e_permute.xhtml">NEPermute</a>                               _permute_input;</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;        <a class="code" href="classarm__compute_1_1_n_e_permute.xhtml">NEPermute</a>                               _permute_weights;</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;        <a class="code" href="classarm__compute_1_1_n_e_permute.xhtml">NEPermute</a>                               _permute_output;</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;        <a class="code" href="classarm__compute_1_1_n_e_activation_layer.xhtml">NEActivationLayer</a>                       _activationlayer_function;</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;        <a class="code" href="classarm__compute_1_1_tensor.xhtml">Tensor</a>                                  _permuted_input;</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;        <a class="code" href="classarm__compute_1_1_tensor.xhtml">Tensor</a>                                  _permuted_weights;</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;        <a class="code" href="classarm__compute_1_1_tensor.xhtml">Tensor</a>                                  _permuted_output;</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;        <span class="keywordtype">bool</span>                                    _is_prepared;</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;        <span class="keywordtype">bool</span>                                    _is_nchw;</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;        <span class="keywordtype">bool</span>                                    _is_activationlayer_enabled;</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a>                          *_original_weights;</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;    };</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a0255421478a6f5ab8a2596d966411a5b">DepthwiseConvolutionFunction</a>                 _depth_conv_func;</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;    NEDepthwiseConvolutionLayerOptimizedInternal _func_optimized;</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;    NEDepthwiseConvolutionLayerGeneric           _func_generic;</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;};</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;<span class="comment">/** Basic function to execute optimized depthwise convolution routines. This function calls the following NEON kernels:</span></div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;<span class="comment"> * @note At the moment 3x3 and 5x5 convolution of stride 1, 2 are supported</span></div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;<span class="comment"> * -# @ref NEFillBorderKernel (if pad_x or pad_y &gt; 0) and no assembly kernel implementation is present</span></div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;<span class="comment"> * -# @ref NEDepthwiseConvolutionLayer3x3Kernel if 3x3 and no assembly kernel implementation is present</span></div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;<span class="comment"> * -# @ref NEDepthwiseConvolutionAssemblyDispatch if assembly kernel implementation is present</span></div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;<span class="comment"> * -# @ref NEDirectConvolutionLayerOutputStageKernel if re-quantization of output is required</span></div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;<span class="comment"> * -# @ref NEActivationLayer if fused activation is required</span></div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00318"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_depthwise_convolution_layer_optimized.xhtml">  318</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1_n_e_depthwise_convolution_layer_optimized.xhtml">NEDepthwiseConvolutionLayerOptimized</a> : <span class="keyword">public</span> <a class="code" href="classarm__compute_1_1_i_function.xhtml">IFunction</a></div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;{</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;<span class="keyword">public</span>:<span class="comment"></span></div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;<span class="comment">    /** Default constructor */</span></div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;    <a class="code" href="classarm__compute_1_1_n_e_depthwise_convolution_layer_optimized.xhtml#afbb9307112fea2f5f71a94702bc104d7">NEDepthwiseConvolutionLayerOptimized</a>(std::shared_ptr&lt;IMemoryManager&gt; memory_manager = <span class="keyword">nullptr</span>);<span class="comment"></span></div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;<span class="comment">    /** Prevent instances of this class from being copied (As this class contains pointers) */</span></div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;    <a class="code" href="classarm__compute_1_1_n_e_depthwise_convolution_layer_optimized.xhtml#afbb9307112fea2f5f71a94702bc104d7">NEDepthwiseConvolutionLayerOptimized</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_n_e_depthwise_convolution_layer_optimized.xhtml">NEDepthwiseConvolutionLayerOptimized</a> &amp;) = <span class="keyword">delete</span>;<span class="comment"></span></div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;<span class="comment">    /** Default move constructor */</span></div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;    <a class="code" href="classarm__compute_1_1_n_e_depthwise_convolution_layer_optimized.xhtml#afbb9307112fea2f5f71a94702bc104d7">NEDepthwiseConvolutionLayerOptimized</a>(<a class="code" href="classarm__compute_1_1_n_e_depthwise_convolution_layer_optimized.xhtml">NEDepthwiseConvolutionLayerOptimized</a> &amp;&amp;) = <span class="keywordflow">default</span>;<span class="comment"></span></div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;<span class="comment">    /** Prevent instances of this class from being copied (As this class contains pointers) */</span></div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;    <a class="code" href="classarm__compute_1_1_n_e_depthwise_convolution_layer_optimized.xhtml">NEDepthwiseConvolutionLayerOptimized</a> &amp;<a class="code" href="classarm__compute_1_1_n_e_depthwise_convolution_layer_optimized.xhtml#a7e043a4a3c6fa18bf7fa308eff583ca8">operator=</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_n_e_depthwise_convolution_layer_optimized.xhtml">NEDepthwiseConvolutionLayerOptimized</a> &amp;) = <span class="keyword">delete</span>;<span class="comment"></span></div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;<span class="comment">    /** Default move assignment operator */</span></div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;    <a class="code" href="classarm__compute_1_1_n_e_depthwise_convolution_layer_optimized.xhtml">NEDepthwiseConvolutionLayerOptimized</a> &amp;<a class="code" href="classarm__compute_1_1_n_e_depthwise_convolution_layer_optimized.xhtml#a7e043a4a3c6fa18bf7fa308eff583ca8">operator=</a>(<a class="code" href="classarm__compute_1_1_n_e_depthwise_convolution_layer_optimized.xhtml">NEDepthwiseConvolutionLayerOptimized</a> &amp;&amp;) = <span class="keywordflow">default</span>;<span class="comment"></span></div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;<span class="comment">    /** Initialize the function&#39;s source, destination, kernels and border_size.</span></div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;<span class="comment">     * @param[in, out] input            Source tensor. Data type supported: QASYMM8/QASYMM8_SIGNED/F16/F32. (Written to only for border filling).</span></div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;<span class="comment">     * @param[in]      weights          Weights tensor. These are 3D tensors with shape [W, H, IFM]. Data type supported: Same as @p input.</span></div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;<span class="comment">     * @param[in]      biases           Biases tensor. A 1D tensor with shape [IFM]. Must be nullptr if not needed.</span></div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;<span class="comment">     *                                  Data type supported: Same as @p input, S32 when input is QASYMM8/QASYMM8_SIGNED.</span></div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;<span class="comment">     * @param[out]     output           Destination tensor. Data type supported: same as @p input.</span></div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;<span class="comment">     * @param[in]      conv_info        Padding and stride information to use for the convolution.</span></div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;<span class="comment">     * @param[in]      depth_multiplier (Optional) Multiplier to apply to the input&#39;s depth in order to retrieve the output&#39;s depth. Defaults to 1.</span></div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;<span class="comment">     * @param[in]      act_info         (Optional) Activation layer information in case of a fused activation.</span></div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;<span class="comment">     * @param[in]      dilation         (Optional) Dilation, in elements, across x and y. Defaults to (1, 1).</span></div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;    <a class="code" href="arm__compute_2core_2utils_2misc_2_macros_8h.xhtml#a751a15de75311d62d12f9fc9998368e1">ARM_COMPUTE_DEPRECATED_REL_REPLACE</a>(20.02, <a class="code" href="classarm__compute_1_1_n_e_depthwise_convolution_layer.xhtml">NEDepthwiseConvolutionLayer</a>)</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_n_e_depthwise_convolution_layer_optimized.xhtml#ac83f79ff17ee77e2b71166de83478c86">configure</a>(<a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a64a08a9fec5aeee8650e7182b6d171d0">weights</a>, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *biases, <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *output, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>,</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;                   <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> depth_multiplier = 1, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1f8aca235c095df227e7444f6b237eb1">act_info</a> = <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a>(), <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad3fd4136244e42ad89b01c02b904336d">dilation</a> = <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a>(1<a class="code" href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa4c614360da93c0a041b22e537de151eb">U</a>, 1<a class="code" href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa4c614360da93c0a041b22e537de151eb">U</a>));</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;<span class="comment">    /** Static function to check if given info will lead to a valid configuration of @ref NEDepthwiseConvolutionLayerOptimized</span></div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;<span class="comment">     * @param[in] input            Source tensor. Data type supported: QASYMM8/QASYMM8_SIGNED/F16/F32. (Written to only for border filling).</span></div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;<span class="comment">     * @param[in] weights          Weights tensor. These are 3D tensors with shape [W, H, IFM]. Data type supported: Same as @p input.</span></div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;<span class="comment">     * @param[in] biases           Biases tensor. A 1D tensor with shape [IFM]. Must be nullptr if not needed.</span></div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;<span class="comment">     *                             Data type supported: Same as @p input, S32 when input is QASYMM8/QASYMM8_SIGNED.</span></div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;<span class="comment">     * @param[in] output           Destination tensor. Data type supported: same as @p input.</span></div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;<span class="comment">     * @param[in] conv_info        Padding and stride information to use for the convolution.</span></div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;<span class="comment">     * @param[in] depth_multiplier (Optional) Multiplier to apply to the input&#39;s depth in order to retrieve the output&#39;s depth. Defaults to 1.</span></div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;<span class="comment">     * @param[in] act_info         (Optional) Activation layer information in case of a fused activation.</span></div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;<span class="comment">     * @param[in] dilation         (Optional) Dilation, in elements, across x and y. Defaults to (1, 1).</span></div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;<span class="comment">     * @return a status</span></div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;    <span class="keyword">static</span> <a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> <a class="code" href="classarm__compute_1_1_n_e_depthwise_convolution_layer_optimized.xhtml#a4bc5903a6da554c4cd38d2b123d30a4f">validate</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a64a08a9fec5aeee8650e7182b6d171d0">weights</a>, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *biases, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *output, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>,</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;                           <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> depth_multiplier = 1, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1f8aca235c095df227e7444f6b237eb1">act_info</a> = <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a>(), <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad3fd4136244e42ad89b01c02b904336d">dilation</a> = <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a>(1<a class="code" href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa4c614360da93c0a041b22e537de151eb">U</a>, 1<a class="code" href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa4c614360da93c0a041b22e537de151eb">U</a>));</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;    <span class="comment">// Inherited methods overriden:</span></div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_n_e_depthwise_convolution_layer_optimized.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>() <span class="keyword">override</span>;</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_n_e_depthwise_convolution_layer_optimized.xhtml#aa9b93ef660fc3c5b4b19d3fc7b891b77">prepare</a>() <span class="keyword">override</span>;</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;    <a class="code" href="classarm__compute_1_1_n_e_depthwise_convolution_layer.xhtml">NEDepthwiseConvolutionLayer</a> _func;</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;};</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;} <span class="comment">// namespace arm_compute</span></div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* ARM_COMPUTE_NEDEPTHWISECONVOLUTION_H */</span><span class="preprocessor"></span></div><div class="ttc" id="classarm__compute_1_1_n_e_depthwise_convolution_layer_optimized_xhtml_ac83f79ff17ee77e2b71166de83478c86"><div class="ttname"><a href="classarm__compute_1_1_n_e_depthwise_convolution_layer_optimized.xhtml#ac83f79ff17ee77e2b71166de83478c86">arm_compute::NEDepthwiseConvolutionLayerOptimized::configure</a></div><div class="ttdeci">void configure(ITensor *input, const ITensor *weights, const ITensor *biases, ITensor *output, const PadStrideInfo &amp;conv_info, unsigned int depth_multiplier=1, const ActivationLayerInfo &amp;act_info=ActivationLayerInfo(), const Size2D &amp;dilation=Size2D(1U, 1U))</div><div class="ttdoc">Initialize the function's source, destination, kernels and border_size.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_depthwise_convolution_layer_8cpp_source.xhtml#l00094">NEDepthwiseConvolutionLayer.cpp:94</a></div></div>
<div class="ttc" id="classarm__compute_1_1_memory_group_xhtml"><div class="ttname"><a href="classarm__compute_1_1_memory_group.xhtml">arm_compute::MemoryGroup</a></div><div class="ttdoc">Memory group.</div><div class="ttdef"><b>Definition:</b> <a href="_memory_group_8h_source.xhtml#l00043">MemoryGroup.h:43</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a0255421478a6f5ab8a2596d966411a5b"><div class="ttname"><a href="namespacearm__compute.xhtml#a0255421478a6f5ab8a2596d966411a5b">arm_compute::DepthwiseConvolutionFunction</a></div><div class="ttdeci">DepthwiseConvolutionFunction</div><div class="ttdoc">Available DepthwiseConvolutionFunction.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00144">Types.h:144</a></div></div>
<div class="ttc" id="_n_e_depthwise_convolution_layer3x3_kernel_8h_xhtml"><div class="ttname"><a href="_n_e_depthwise_convolution_layer3x3_kernel_8h.xhtml">NEDepthwiseConvolutionLayer3x3Kernel.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_direct_convolution_layer_output_stage_kernel_xhtml"><div class="ttname"><a href="classarm__compute_1_1_n_e_direct_convolution_layer_output_stage_kernel.xhtml">arm_compute::NEDirectConvolutionLayerOutputStageKernel</a></div><div class="ttdoc">NEON kernel to accumulate the biases, if provided, or downscale in case of quantized input.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_direct_convolution_layer_output_stage_kernel_8h_source.xhtml#l00039">NEDirectConvolutionLayerOutputStageKernel.h:39</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_function_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_function.xhtml">arm_compute::IFunction</a></div><div class="ttdoc">Base class for all functions.</div><div class="ttdef"><b>Definition:</b> <a href="_i_function_8h_source.xhtml#l00030">IFunction.h:30</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_depthwise_convolution_layer_optimized_xhtml_afbb9307112fea2f5f71a94702bc104d7"><div class="ttname"><a href="classarm__compute_1_1_n_e_depthwise_convolution_layer_optimized.xhtml#afbb9307112fea2f5f71a94702bc104d7">arm_compute::NEDepthwiseConvolutionLayerOptimized::NEDepthwiseConvolutionLayerOptimized</a></div><div class="ttdeci">NEDepthwiseConvolutionLayerOptimized(std::shared_ptr&lt; IMemoryManager &gt; memory_manager=nullptr)</div><div class="ttdoc">Default constructor.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_depthwise_convolution_layer_8cpp_source.xhtml#l00089">NEDepthwiseConvolutionLayer.cpp:89</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_depthwise_convolution_layer_optimized_xhtml_aa9b93ef660fc3c5b4b19d3fc7b891b77"><div class="ttname"><a href="classarm__compute_1_1_n_e_depthwise_convolution_layer_optimized.xhtml#aa9b93ef660fc3c5b4b19d3fc7b891b77">arm_compute::NEDepthwiseConvolutionLayerOptimized::prepare</a></div><div class="ttdeci">void prepare() override</div><div class="ttdoc">Prepare the function for executing.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_depthwise_convolution_layer_8cpp_source.xhtml#l00116">NEDepthwiseConvolutionLayer.cpp:116</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_ad3fd4136244e42ad89b01c02b904336d"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ad3fd4136244e42ad89b01c02b904336d">arm_compute::test::validation::dilation</a></div><div class="ttdeci">dilation</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_convolution_layer_8cpp_source.xhtml#l00182">ConvolutionLayer.cpp:182</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a1f8aca235c095df227e7444f6b237eb1"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a1f8aca235c095df227e7444f6b237eb1">arm_compute::test::validation::act_info</a></div><div class="ttdeci">act_info</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_convolution_layer_8cpp_source.xhtml#l00183">ConvolutionLayer.cpp:183</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_depthwise_convolution_layer_optimized_xhtml"><div class="ttname"><a href="classarm__compute_1_1_n_e_depthwise_convolution_layer_optimized.xhtml">arm_compute::NEDepthwiseConvolutionLayerOptimized</a></div><div class="ttdoc">Basic function to execute optimized depthwise convolution routines.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_depthwise_convolution_layer_8h_source.xhtml#l00318">NEDepthwiseConvolutionLayer.h:318</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a00525ff582f16038a1d3819aa44a23a3"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">arm_compute::test::validation::conv_info</a></div><div class="ttdeci">conv_info</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_winograd_8cpp_source.xhtml#l00597">Winograd.cpp:597</a></div></div>
<div class="ttc" id="_n_e_depthwise_convolution_assembly_dispatch_8h_xhtml"><div class="ttname"><a href="_n_e_depthwise_convolution_assembly_dispatch_8h.xhtml">NEDepthwiseConvolutionAssemblyDispatch.h</a></div></div>
<div class="ttc" id="_n_e_depthwise_convolution_layer_native_kernel_8h_xhtml"><div class="ttname"><a href="_n_e_depthwise_convolution_layer_native_kernel_8h.xhtml">NEDepthwiseConvolutionLayerNativeKernel.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_depthwise_convolution_layer_native_kernel_xhtml"><div class="ttname"><a href="classarm__compute_1_1_n_e_depthwise_convolution_layer_native_kernel.xhtml">arm_compute::NEDepthwiseConvolutionLayerNativeKernel</a></div><div class="ttdoc">Interface for the kernel to run a depthwise convolution native on a tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_depthwise_convolution_layer_native_kernel_8h_source.xhtml#l00040">NEDepthwiseConvolutionLayerNativeKernel.h:40</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml">arm_compute::ITensorInfo</a></div><div class="ttdoc">Store the tensor's metadata.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_info_8h_source.xhtml#l00040">ITensorInfo.h:40</a></div></div>
<div class="ttc" id="classarm__compute_1_1_status_xhtml"><div class="ttname"><a href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a></div><div class="ttdoc">Status class.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00052">Error.h:52</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_permute_xhtml"><div class="ttname"><a href="classarm__compute_1_1_n_e_permute.xhtml">arm_compute::NEPermute</a></div><div class="ttdoc">Basic function to run NEPermuteKernel.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_permute_8h_source.xhtml#l00037">NEPermute.h:37</a></div></div>
<div class="ttc" id="classarm__compute_1_1_activation_layer_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_activation_layer_info.xhtml">arm_compute::ActivationLayerInfo</a></div><div class="ttdoc">Activation Layer Information class.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01615">Types.h:1615</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor.xhtml">arm_compute::ITensor</a></div><div class="ttdoc">Interface for NEON tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_8h_source.xhtml#l00036">ITensor.h:36</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2020 ARM Limited.</div><div class="ttdef"><b>Definition:</b> <a href="00__introduction_8dox_source.xhtml#l00024">00_introduction.dox:24</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a8fcf2ddd9a1d58b1b280f5c0aed71845"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">arm_compute::test::validation::input</a></div><div class="ttdeci">auto input</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00487">LSTMLayerQuantized.cpp:487</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_depthwise_convolution_layer_xhtml_aa9b93ef660fc3c5b4b19d3fc7b891b77"><div class="ttname"><a href="classarm__compute_1_1_n_e_depthwise_convolution_layer.xhtml#aa9b93ef660fc3c5b4b19d3fc7b891b77">arm_compute::NEDepthwiseConvolutionLayer::prepare</a></div><div class="ttdeci">void prepare() override</div><div class="ttdoc">Prepare the function for executing.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_depthwise_convolution_layer_8cpp_source.xhtml#l00605">NEDepthwiseConvolutionLayer.cpp:605</a></div></div>
<div class="ttc" id="_n_e_fill_border_kernel_8h_xhtml"><div class="ttname"><a href="_n_e_fill_border_kernel_8h.xhtml">NEFillBorderKernel.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_depthwise_convolution_layer_optimized_xhtml_a4bc5903a6da554c4cd38d2b123d30a4f"><div class="ttname"><a href="classarm__compute_1_1_n_e_depthwise_convolution_layer_optimized.xhtml#a4bc5903a6da554c4cd38d2b123d30a4f">arm_compute::NEDepthwiseConvolutionLayerOptimized::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *input, const ITensorInfo *weights, const ITensorInfo *biases, const ITensorInfo *output, const PadStrideInfo &amp;conv_info, unsigned int depth_multiplier=1, const ActivationLayerInfo &amp;act_info=ActivationLayerInfo(), const Size2D &amp;dilation=Size2D(1U, 1U))</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration of NEDepthwiseConvolutionLa...</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_depthwise_convolution_layer_8cpp_source.xhtml#l00105">NEDepthwiseConvolutionLayer.cpp:105</a></div></div>
<div class="ttc" id="_n_e_activation_layer_8h_xhtml"><div class="ttname"><a href="_n_e_activation_layer_8h.xhtml">NEActivationLayer.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_depthwise_convolution_layer_optimized_xhtml_a7e043a4a3c6fa18bf7fa308eff583ca8"><div class="ttname"><a href="classarm__compute_1_1_n_e_depthwise_convolution_layer_optimized.xhtml#a7e043a4a3c6fa18bf7fa308eff583ca8">arm_compute::NEDepthwiseConvolutionLayerOptimized::operator=</a></div><div class="ttdeci">NEDepthwiseConvolutionLayerOptimized &amp; operator=(const NEDepthwiseConvolutionLayerOptimized &amp;)=delete</div><div class="ttdoc">Prevent instances of this class from being copied (As this class contains pointers)</div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a1ce9b523fd4f3b5bbcadcd796183455aa4c614360da93c0a041b22e537de151eb"><div class="ttname"><a href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa4c614360da93c0a041b22e537de151eb">arm_compute::Channel::U</a></div><div class="ttdoc">Cb/U channel.</div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_depthwise_convolution_layer_xhtml_a4bc5903a6da554c4cd38d2b123d30a4f"><div class="ttname"><a href="classarm__compute_1_1_n_e_depthwise_convolution_layer.xhtml#a4bc5903a6da554c4cd38d2b123d30a4f">arm_compute::NEDepthwiseConvolutionLayer::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *input, const ITensorInfo *weights, const ITensorInfo *biases, const ITensorInfo *output, const PadStrideInfo &amp;conv_info, unsigned int depth_multiplier=1, const ActivationLayerInfo &amp;act_info=ActivationLayerInfo(), const Size2D &amp;dilation=Size2D(1U, 1U))</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration of NEDepthwiseConvolutionLa...</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_depthwise_convolution_layer_8cpp_source.xhtml#l00559">NEDepthwiseConvolutionLayer.cpp:559</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_depthwise_convolution_layer_xhtml_aceb582e096b2871c92271876223eb7b6"><div class="ttname"><a href="classarm__compute_1_1_n_e_depthwise_convolution_layer.xhtml#aceb582e096b2871c92271876223eb7b6">arm_compute::NEDepthwiseConvolutionLayer::NEDepthwiseConvolutionLayer</a></div><div class="ttdeci">NEDepthwiseConvolutionLayer(std::shared_ptr&lt; IMemoryManager &gt; memory_manager=nullptr)</div><div class="ttdoc">Default constructor.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_depthwise_convolution_layer_8cpp_source.xhtml#l00537">NEDepthwiseConvolutionLayer.cpp:537</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_xhtml"><div class="ttname"><a href="classarm__compute_1_1_tensor.xhtml">arm_compute::Tensor</a></div><div class="ttdoc">Basic implementation of the tensor interface.</div><div class="ttdef"><b>Definition:</b> <a href="runtime_2_tensor_8h_source.xhtml#l00037">Tensor.h:37</a></div></div>
<div class="ttc" id="classarm__compute_1_1_pad_stride_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_pad_stride_info.xhtml">arm_compute::PadStrideInfo</a></div><div class="ttdoc">Padding and stride information class.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00686">Types.h:686</a></div></div>
<div class="ttc" id="_n_e_direct_convolution_layer_output_stage_kernel_8h_xhtml"><div class="ttname"><a href="_n_e_direct_convolution_layer_output_stage_kernel_8h.xhtml">NEDirectConvolutionLayerOutputStageKernel.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_depthwise_convolution_layer_optimized_xhtml_ad1717410afd0be936c6213a63c8005fb"><div class="ttname"><a href="classarm__compute_1_1_n_e_depthwise_convolution_layer_optimized.xhtml#ad1717410afd0be936c6213a63c8005fb">arm_compute::NEDepthwiseConvolutionLayerOptimized::run</a></div><div class="ttdeci">void run() override</div><div class="ttdoc">Run the kernels contained in the function.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_depthwise_convolution_layer_8cpp_source.xhtml#l00111">NEDepthwiseConvolutionLayer.cpp:111</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_activation_layer_xhtml"><div class="ttname"><a href="classarm__compute_1_1_n_e_activation_layer.xhtml">arm_compute::NEActivationLayer</a></div><div class="ttdoc">Basic function to run NEActivationLayerKernel.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_activation_layer_8h_source.xhtml#l00040">NEActivationLayer.h:40</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_depthwise_convolution_layer3x3_kernel_xhtml"><div class="ttname"><a href="classarm__compute_1_1_n_e_depthwise_convolution_layer3x3_kernel.xhtml">arm_compute::NEDepthwiseConvolutionLayer3x3Kernel</a></div><div class="ttdoc">Interface for the kernel to run a 3x3 depthwise convolution on a tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_depthwise_convolution_layer3x3_kernel_8h_source.xhtml#l00035">NEDepthwiseConvolutionLayer3x3Kernel.h:35</a></div></div>
<div class="ttc" id="_n_e_permute_8h_xhtml"><div class="ttname"><a href="_n_e_permute_8h.xhtml">NEPermute.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_depthwise_convolution_layer_xhtml_aa450bb01e6984892ca2a04078b9c653d"><div class="ttname"><a href="classarm__compute_1_1_n_e_depthwise_convolution_layer.xhtml#aa450bb01e6984892ca2a04078b9c653d">arm_compute::NEDepthwiseConvolutionLayer::operator=</a></div><div class="ttdeci">NEDepthwiseConvolutionLayer &amp; operator=(const NEDepthwiseConvolutionLayer &amp;)=delete</div><div class="ttdoc">Prevent instances of this class from being copied (As this class contains pointers)</div></div>
<div class="ttc" id="classarm__compute_1_1_size2_d_xhtml"><div class="ttname"><a href="classarm__compute_1_1_size2_d.xhtml">arm_compute::Size2D</a></div><div class="ttdoc">Class for specifying the size of an image or rectangle.</div><div class="ttdef"><b>Definition:</b> <a href="_size2_d_8h_source.xhtml#l00034">Size2D.h:34</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_depthwise_convolution_assembly_dispatch_xhtml"><div class="ttname"><a href="classarm__compute_1_1_n_e_depthwise_convolution_assembly_dispatch.xhtml">arm_compute::NEDepthwiseConvolutionAssemblyDispatch</a></div><div class="ttdoc">Depthwise convolution assembly kernel glue.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_depthwise_convolution_assembly_dispatch_8h_source.xhtml#l00036">NEDepthwiseConvolutionAssemblyDispatch.h:36</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a64a08a9fec5aeee8650e7182b6d171d0"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a64a08a9fec5aeee8650e7182b6d171d0">arm_compute::test::validation::weights</a></div><div class="ttdeci">CLTensor weights</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_convolution_layer_8cpp_source.xhtml#l00188">ConvolutionLayer.cpp:188</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_fill_border_kernel_xhtml"><div class="ttname"><a href="classarm__compute_1_1_n_e_fill_border_kernel.xhtml">arm_compute::NEFillBorderKernel</a></div><div class="ttdoc">Interface for the kernel to fill borders.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_fill_border_kernel_8h_source.xhtml#l00037">NEFillBorderKernel.h:37</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_depthwise_convolution_layer_xhtml"><div class="ttname"><a href="classarm__compute_1_1_n_e_depthwise_convolution_layer.xhtml">arm_compute::NEDepthwiseConvolutionLayer</a></div><div class="ttdoc">Function to execute a depthwise convolution.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_depthwise_convolution_layer_8h_source.xhtml#l00042">NEDepthwiseConvolutionLayer.h:42</a></div></div>
<div class="ttc" id="arm__compute_2core_2utils_2misc_2_macros_8h_xhtml_a751a15de75311d62d12f9fc9998368e1"><div class="ttname"><a href="arm__compute_2core_2utils_2misc_2_macros_8h.xhtml#a751a15de75311d62d12f9fc9998368e1">ARM_COMPUTE_DEPRECATED_REL_REPLACE</a></div><div class="ttdeci">#define ARM_COMPUTE_DEPRECATED_REL_REPLACE(rel, replace)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2utils_2misc_2_macros_8h_source.xhtml#l00043">Macros.h:43</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_depthwise_convolution_layer_xhtml_ac83f79ff17ee77e2b71166de83478c86"><div class="ttname"><a href="classarm__compute_1_1_n_e_depthwise_convolution_layer.xhtml#ac83f79ff17ee77e2b71166de83478c86">arm_compute::NEDepthwiseConvolutionLayer::configure</a></div><div class="ttdeci">void configure(ITensor *input, const ITensor *weights, const ITensor *biases, ITensor *output, const PadStrideInfo &amp;conv_info, unsigned int depth_multiplier=1, const ActivationLayerInfo &amp;act_info=ActivationLayerInfo(), const Size2D &amp;dilation=Size2D(1U, 1U))</div><div class="ttdoc">Initialize the function's source, destination, weights and convolution information.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_depthwise_convolution_layer_8cpp_source.xhtml#l00542">NEDepthwiseConvolutionLayer.cpp:542</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_depthwise_convolution_layer_xhtml_ad1717410afd0be936c6213a63c8005fb"><div class="ttname"><a href="classarm__compute_1_1_n_e_depthwise_convolution_layer.xhtml#ad1717410afd0be936c6213a63c8005fb">arm_compute::NEDepthwiseConvolutionLayer::run</a></div><div class="ttdeci">void run() override</div><div class="ttdoc">Run the kernels contained in the function.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_depthwise_convolution_layer_8cpp_source.xhtml#l00590">NEDepthwiseConvolutionLayer.cpp:590</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_214608ef36d61442cb2b0c1c4e9a7def.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="dir_8bc26130589aa16388b5a02f17abf2c2.xhtml">runtime</a></li><li class="navelem"><a class="el" href="dir_65e289039e1347f87d412b0a1b1a312c.xhtml">NEON</a></li><li class="navelem"><a class="el" href="dir_345bd7154d1542d1e03fd2836959a19d.xhtml">functions</a></li><li class="navelem"><a class="el" href="_n_e_depthwise_convolution_layer_8h.xhtml">NEDepthwiseConvolutionLayer.h</a></li>
    <li class="footer">Generated on Fri Feb 21 2020 11:10:10 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
