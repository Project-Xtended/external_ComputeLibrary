<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/runtime/NEON/functions/NEElementwiseOperators.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.02.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_n_e_elementwise_operators_8cpp_source.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">NEElementwiseOperators.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_n_e_elementwise_operators_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2018-2020 ARM Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_validate_8h.xhtml">arm_compute/core/Validate.h</a>&quot;</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_n_e_elementwise_operations_8h.xhtml">arm_compute/runtime/NEON/functions/NEElementwiseOperations.h</a>&quot;</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_n_e_elementwise_operation_kernel_8h.xhtml">arm_compute/core/NEON/kernels/NEElementwiseOperationKernel.h</a>&gt;</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_i_tensor_8h.xhtml">arm_compute/core/ITensor.h</a>&quot;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_toolchain_support_8h.xhtml">support/ToolchainSupport.h</a>&quot;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &lt;utility&gt;</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;{</div><div class="line"><a name="l00035"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_elementwise_max.xhtml#a151f73d8df86064f806f8b3256571b0a">   35</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_n_e_elementwise_max.xhtml#a151f73d8df86064f806f8b3256571b0a">NEElementwiseMax::configure</a>(<a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *input1, <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *input2, <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *output)</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;{</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    <span class="keyword">auto</span> k = arm_compute::support::cpp14::make_unique&lt;NEArithmeticOperationKernel&gt;();</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    k-&gt;configure(<a class="code" href="namespacearm__compute.xhtml#adf2ced65e536375a1c96425d9fced858a26a4b44a837bf97b972628509912b4a5">ArithmeticOperation::MAX</a>, input1, input2, output);</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    _kernel = std::move(k);</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;}</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;</div><div class="line"><a name="l00042"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_elementwise_max.xhtml#afe71126bef1735fe1613a6da30d2c0c4">   42</a></span>&#160;<a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> <a class="code" href="classarm__compute_1_1_n_e_elementwise_max.xhtml#afe71126bef1735fe1613a6da30d2c0c4">NEElementwiseMax::validate</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *input1, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *input2, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *output)</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;{</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <span class="keywordflow">if</span>(input1-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">data_type</a>() == <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a329f5d0c4b0c80e3474951d2c4435dd9">DataType::QASYMM8_SIGNED</a>)</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    {</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;        <a class="code" href="_validate_8h.xhtml#a8f3ff7da485ff7e75dab07baadf5b4bd">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES</a>(input1, output);</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;        <a class="code" href="_validate_8h.xhtml#aba910b683652be1f65437ef37a9da2a9">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_QUANTIZATION_INFO</a>(input1, input2, output);</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    }</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_n_e_arithmetic_operation_kernel.xhtml#a52095bfe8f4fc368d3ec84a8dac4d616">NEArithmeticOperationKernel::validate</a>(<a class="code" href="namespacearm__compute.xhtml#adf2ced65e536375a1c96425d9fced858a26a4b44a837bf97b972628509912b4a5">ArithmeticOperation::MAX</a>, input1, input2, output);</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;}</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div><div class="line"><a name="l00052"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_elementwise_min.xhtml#a151f73d8df86064f806f8b3256571b0a">   52</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_n_e_elementwise_min.xhtml#a151f73d8df86064f806f8b3256571b0a">NEElementwiseMin::configure</a>(<a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *input1, <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *input2, <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *output)</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;{</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <span class="keyword">auto</span> k = arm_compute::support::cpp14::make_unique&lt;NEArithmeticOperationKernel&gt;();</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    k-&gt;configure(<a class="code" href="namespacearm__compute.xhtml#adf2ced65e536375a1c96425d9fced858ace31e2a082d17e038fcc6e3006166653">ArithmeticOperation::MIN</a>, input1, input2, output);</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    _kernel = std::move(k);</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;}</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div><div class="line"><a name="l00059"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_elementwise_min.xhtml#afe71126bef1735fe1613a6da30d2c0c4">   59</a></span>&#160;<a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> <a class="code" href="classarm__compute_1_1_n_e_elementwise_min.xhtml#afe71126bef1735fe1613a6da30d2c0c4">NEElementwiseMin::validate</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *input1, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *input2, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *output)</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;{</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <span class="keywordflow">if</span>(input1-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">data_type</a>() == <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a329f5d0c4b0c80e3474951d2c4435dd9">DataType::QASYMM8_SIGNED</a>)</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    {</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        <a class="code" href="_validate_8h.xhtml#a8f3ff7da485ff7e75dab07baadf5b4bd">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES</a>(input1, output);</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        <a class="code" href="_validate_8h.xhtml#aba910b683652be1f65437ef37a9da2a9">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_QUANTIZATION_INFO</a>(input1, input2, output);</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    }</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_n_e_arithmetic_operation_kernel.xhtml#a52095bfe8f4fc368d3ec84a8dac4d616">NEArithmeticOperationKernel::validate</a>(<a class="code" href="namespacearm__compute.xhtml#adf2ced65e536375a1c96425d9fced858ace31e2a082d17e038fcc6e3006166653">ArithmeticOperation::MIN</a>, input1, input2, output);</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;}</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div><div class="line"><a name="l00069"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_elementwise_squared_diff.xhtml#a151f73d8df86064f806f8b3256571b0a">   69</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_n_e_elementwise_squared_diff.xhtml#a151f73d8df86064f806f8b3256571b0a">NEElementwiseSquaredDiff::configure</a>(<a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *input1, <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *input2, <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *output)</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;{</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <span class="keyword">auto</span> k = arm_compute::support::cpp14::make_unique&lt;NEArithmeticOperationKernel&gt;();</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    k-&gt;configure(<a class="code" href="namespacearm__compute.xhtml#a23d9f0c01c9e120dfb828ee922b7a8aea46ea186b87dc545033d86ba8d6e63916">ArithmeticOperation::SQUARED_DIFF</a>, input1, input2, output);</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    _kernel = std::move(k);</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;}</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div><div class="line"><a name="l00076"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_elementwise_squared_diff.xhtml#afe71126bef1735fe1613a6da30d2c0c4">   76</a></span>&#160;<a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> <a class="code" href="classarm__compute_1_1_n_e_elementwise_squared_diff.xhtml#afe71126bef1735fe1613a6da30d2c0c4">NEElementwiseSquaredDiff::validate</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *input1, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *input2, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *output)</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;{</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_n_e_arithmetic_operation_kernel.xhtml#a52095bfe8f4fc368d3ec84a8dac4d616">NEArithmeticOperationKernel::validate</a>(<a class="code" href="namespacearm__compute.xhtml#a23d9f0c01c9e120dfb828ee922b7a8aea46ea186b87dc545033d86ba8d6e63916">ArithmeticOperation::SQUARED_DIFF</a>, input1, input2, output);</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;}</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;</div><div class="line"><a name="l00081"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_elementwise_division.xhtml#a151f73d8df86064f806f8b3256571b0a">   81</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_n_e_elementwise_division.xhtml#a151f73d8df86064f806f8b3256571b0a">NEElementwiseDivision::configure</a>(<a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *input1, <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *input2, <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *output)</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;{</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <span class="keyword">auto</span> k = arm_compute::support::cpp14::make_unique&lt;NEDivisionOperationKernel&gt;();</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    k-&gt;configure(input1, input2, output);</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    _kernel = std::move(k);</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;}</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div><div class="line"><a name="l00088"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_elementwise_division.xhtml#afe71126bef1735fe1613a6da30d2c0c4">   88</a></span>&#160;<a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> <a class="code" href="classarm__compute_1_1_n_e_elementwise_division.xhtml#afe71126bef1735fe1613a6da30d2c0c4">NEElementwiseDivision::validate</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *input1, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *input2, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *output)</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;{</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_n_e_division_operation_kernel.xhtml#afe71126bef1735fe1613a6da30d2c0c4">NEDivisionOperationKernel::validate</a>(input1, input2, output);</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;}</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;</div><div class="line"><a name="l00093"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_elementwise_power.xhtml#a151f73d8df86064f806f8b3256571b0a">   93</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_n_e_elementwise_power.xhtml#a151f73d8df86064f806f8b3256571b0a">NEElementwisePower::configure</a>(<a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *input1, <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *input2, <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *output)</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;{</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <span class="keyword">auto</span> k = arm_compute::support::cpp14::make_unique&lt;NEPowerOperationKernel&gt;();</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    k-&gt;configure(input1, input2, output);</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    _kernel = std::move(k);</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;}</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div><div class="line"><a name="l00100"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_elementwise_power.xhtml#afe71126bef1735fe1613a6da30d2c0c4">  100</a></span>&#160;<a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> <a class="code" href="classarm__compute_1_1_n_e_elementwise_power.xhtml#afe71126bef1735fe1613a6da30d2c0c4">NEElementwisePower::validate</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *input1, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *input2, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *output)</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;{</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_n_e_power_operation_kernel.xhtml#afe71126bef1735fe1613a6da30d2c0c4">NEPowerOperationKernel::validate</a>(input1, input2, output);</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;}</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="keyword">template</span> &lt;ComparisonOperation COP&gt;</div><div class="line"><a name="l00106"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_elementwise_comparison_static.xhtml#a151f73d8df86064f806f8b3256571b0a">  106</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_n_e_elementwise_comparison_static.xhtml#a151f73d8df86064f806f8b3256571b0a">NEElementwiseComparisonStatic&lt;COP&gt;::configure</a>(<a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *input1, <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *input2, <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *output)</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;{</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <span class="keyword">auto</span> k = arm_compute::support::cpp14::make_unique&lt;NEComparisonOperationKernel&gt;();</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    k-&gt;configure(COP, input1, input2, output);</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    _kernel = std::move(k);</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;}</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="keyword">template</span> &lt;ComparisonOperation COP&gt;</div><div class="line"><a name="l00114"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_elementwise_comparison_static.xhtml#afe71126bef1735fe1613a6da30d2c0c4">  114</a></span>&#160;<a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> <a class="code" href="classarm__compute_1_1_n_e_elementwise_comparison_static.xhtml#afe71126bef1735fe1613a6da30d2c0c4">NEElementwiseComparisonStatic&lt;COP&gt;::validate</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *input1, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *input2, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *output)</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;{</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_n_e_comparison_operation_kernel.xhtml#aa4dc6e8191da7608f894b446ee19b6b3">NEComparisonOperationKernel::validate</a>(COP, input1, input2, output);</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;}</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;</div><div class="line"><a name="l00119"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_elementwise_comparison.xhtml#ace1b1f04b180068d7c3f183038a66134">  119</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_n_e_elementwise_comparison.xhtml#ace1b1f04b180068d7c3f183038a66134">NEElementwiseComparison::configure</a>(<a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *input1, <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *input2, <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *output, <a class="code" href="namespacearm__compute.xhtml#a2d299363c9fc33334c571fa29ca4f58c">ComparisonOperation</a> op)</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;{</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    <span class="keyword">auto</span> k = arm_compute::support::cpp14::make_unique&lt;NEComparisonOperationKernel&gt;();</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    k-&gt;configure(op, input1, input2, output);</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    _kernel = std::move(k);</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;}</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;</div><div class="line"><a name="l00126"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_elementwise_comparison.xhtml#a3c6c21badfd0002fd036410be5b1dcb1">  126</a></span>&#160;<a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> <a class="code" href="classarm__compute_1_1_n_e_elementwise_comparison.xhtml#a3c6c21badfd0002fd036410be5b1dcb1">NEElementwiseComparison::validate</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *input1, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *input2, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *output, <a class="code" href="namespacearm__compute.xhtml#a2d299363c9fc33334c571fa29ca4f58c">ComparisonOperation</a> op)</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;{</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_n_e_comparison_operation_kernel.xhtml#aa4dc6e8191da7608f894b446ee19b6b3">NEComparisonOperationKernel::validate</a>(op, input1, input2, output);</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;}</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="comment">// Supported Specializations</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="keyword">template</span> <span class="keyword">class </span><a class="code" href="classarm__compute_1_1_n_e_elementwise_comparison_static.xhtml">NEElementwiseComparisonStatic&lt;ComparisonOperation::Equal&gt;</a>;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="keyword">template</span> <span class="keyword">class </span><a class="code" href="classarm__compute_1_1_n_e_elementwise_comparison_static.xhtml">NEElementwiseComparisonStatic&lt;ComparisonOperation::NotEqual&gt;</a>;</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="keyword">template</span> <span class="keyword">class </span><a class="code" href="classarm__compute_1_1_n_e_elementwise_comparison_static.xhtml">NEElementwiseComparisonStatic&lt;ComparisonOperation::Greater&gt;</a>;</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="keyword">template</span> <span class="keyword">class </span><a class="code" href="classarm__compute_1_1_n_e_elementwise_comparison_static.xhtml">NEElementwiseComparisonStatic&lt;ComparisonOperation::GreaterEqual&gt;</a>;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="keyword">template</span> <span class="keyword">class </span><a class="code" href="classarm__compute_1_1_n_e_elementwise_comparison_static.xhtml">NEElementwiseComparisonStatic&lt;ComparisonOperation::Less&gt;</a>;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="keyword">template</span> <span class="keyword">class </span><a class="code" href="classarm__compute_1_1_n_e_elementwise_comparison_static.xhtml">NEElementwiseComparisonStatic&lt;ComparisonOperation::LessEqual&gt;</a>;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;} <span class="comment">// namespace arm_compute</span></div><div class="ttc" id="classarm__compute_1_1_n_e_elementwise_comparison_xhtml_ace1b1f04b180068d7c3f183038a66134"><div class="ttname"><a href="classarm__compute_1_1_n_e_elementwise_comparison.xhtml#ace1b1f04b180068d7c3f183038a66134">arm_compute::NEElementwiseComparison::configure</a></div><div class="ttdeci">void configure(ITensor *input1, ITensor *input2, ITensor *output, ComparisonOperation op)</div><div class="ttdoc">Initialise the kernel's inputs, output and conversion policy.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_elementwise_operators_8cpp_source.xhtml#l00119">NEElementwiseOperators.cpp:119</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_elementwise_comparison_static_xhtml_a151f73d8df86064f806f8b3256571b0a"><div class="ttname"><a href="classarm__compute_1_1_n_e_elementwise_comparison_static.xhtml#a151f73d8df86064f806f8b3256571b0a">arm_compute::NEElementwiseComparisonStatic::configure</a></div><div class="ttdeci">void configure(ITensor *input1, ITensor *input2, ITensor *output)</div><div class="ttdoc">Initialise the kernel's inputs, output and conversion policy.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_elementwise_operators_8cpp_source.xhtml#l00106">NEElementwiseOperators.cpp:106</a></div></div>
<div class="ttc" id="_toolchain_support_8h_xhtml"><div class="ttname"><a href="_toolchain_support_8h.xhtml">ToolchainSupport.h</a></div></div>
<div class="ttc" id="_i_tensor_8h_xhtml"><div class="ttname"><a href="_i_tensor_8h.xhtml">ITensor.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_elementwise_comparison_xhtml_a3c6c21badfd0002fd036410be5b1dcb1"><div class="ttname"><a href="classarm__compute_1_1_n_e_elementwise_comparison.xhtml#a3c6c21badfd0002fd036410be5b1dcb1">arm_compute::NEElementwiseComparison::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *input1, const ITensorInfo *input2, const ITensorInfo *output, ComparisonOperation op)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration of NEComparisonOperationKer...</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_elementwise_operators_8cpp_source.xhtml#l00126">NEElementwiseOperators.cpp:126</a></div></div>
<div class="ttc" id="_validate_8h_xhtml_a8f3ff7da485ff7e75dab07baadf5b4bd"><div class="ttname"><a href="_validate_8h.xhtml#a8f3ff7da485ff7e75dab07baadf5b4bd">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES(...)</div><div class="ttdef"><b>Definition:</b> <a href="_validate_8h_source.xhtml#l00545">Validate.h:545</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_a7cfb31af63202568efef5214acfbf3ba"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">arm_compute::ITensorInfo::data_type</a></div><div class="ttdeci">virtual DataType data_type() const =0</div><div class="ttdoc">Data type used for each element of the tensor.</div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml">arm_compute::ITensorInfo</a></div><div class="ttdoc">Store the tensor's metadata.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_info_8h_source.xhtml#l00040">ITensorInfo.h:40</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_division_operation_kernel_xhtml_afe71126bef1735fe1613a6da30d2c0c4"><div class="ttname"><a href="classarm__compute_1_1_n_e_division_operation_kernel.xhtml#afe71126bef1735fe1613a6da30d2c0c4">arm_compute::NEDivisionOperationKernel::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *input1, const ITensorInfo *input2, const ITensorInfo *output)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration of NEArithmeticOperationKer...</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_elementwise_operation_kernel_8cpp_source.xhtml#l01192">NEElementwiseOperationKernel.cpp:1192</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_elementwise_comparison_static_xhtml_afe71126bef1735fe1613a6da30d2c0c4"><div class="ttname"><a href="classarm__compute_1_1_n_e_elementwise_comparison_static.xhtml#afe71126bef1735fe1613a6da30d2c0c4">arm_compute::NEElementwiseComparisonStatic::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *input1, const ITensorInfo *input2, const ITensorInfo *output)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration of NEComparisonOperationKer...</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_elementwise_operators_8cpp_source.xhtml#l00114">NEElementwiseOperators.cpp:114</a></div></div>
<div class="ttc" id="classarm__compute_1_1_status_xhtml"><div class="ttname"><a href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a></div><div class="ttdoc">Status class.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00052">Error.h:52</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_elementwise_comparison_static_xhtml"><div class="ttname"><a href="classarm__compute_1_1_n_e_elementwise_comparison_static.xhtml">arm_compute::NEElementwiseComparisonStatic</a></div><div class="ttdoc">Basic function to run NEComparisonOperationKernel.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_elementwise_operations_8h_source.xhtml#l00199">NEElementwiseOperations.h:199</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor.xhtml">arm_compute::ITensor</a></div><div class="ttdoc">Interface for NEON tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_8h_source.xhtml#l00036">ITensor.h:36</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2020 ARM Limited.</div><div class="ttdef"><b>Definition:</b> <a href="00__introduction_8dox_source.xhtml#l00024">00_introduction.dox:24</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_elementwise_power_xhtml_afe71126bef1735fe1613a6da30d2c0c4"><div class="ttname"><a href="classarm__compute_1_1_n_e_elementwise_power.xhtml#afe71126bef1735fe1613a6da30d2c0c4">arm_compute::NEElementwisePower::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *input1, const ITensorInfo *input2, const ITensorInfo *output)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration of NEArithmeticOperationKer...</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_elementwise_operators_8cpp_source.xhtml#l00100">NEElementwiseOperators.cpp:100</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_elementwise_min_xhtml_afe71126bef1735fe1613a6da30d2c0c4"><div class="ttname"><a href="classarm__compute_1_1_n_e_elementwise_min.xhtml#afe71126bef1735fe1613a6da30d2c0c4">arm_compute::NEElementwiseMin::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *input1, const ITensorInfo *input2, const ITensorInfo *output)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration of NEArithmeticOperationKer...</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_elementwise_operators_8cpp_source.xhtml#l00059">NEElementwiseOperators.cpp:59</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_elementwise_power_xhtml_a151f73d8df86064f806f8b3256571b0a"><div class="ttname"><a href="classarm__compute_1_1_n_e_elementwise_power.xhtml#a151f73d8df86064f806f8b3256571b0a">arm_compute::NEElementwisePower::configure</a></div><div class="ttdeci">void configure(ITensor *input1, ITensor *input2, ITensor *output)</div><div class="ttdoc">Initialise the kernel's inputs, output and conversion policy.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_elementwise_operators_8cpp_source.xhtml#l00093">NEElementwiseOperators.cpp:93</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_elementwise_min_xhtml_a151f73d8df86064f806f8b3256571b0a"><div class="ttname"><a href="classarm__compute_1_1_n_e_elementwise_min.xhtml#a151f73d8df86064f806f8b3256571b0a">arm_compute::NEElementwiseMin::configure</a></div><div class="ttdeci">void configure(ITensor *input1, ITensor *input2, ITensor *output)</div><div class="ttdoc">Initialise the kernel's inputs, output and conversion policy.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_elementwise_operators_8cpp_source.xhtml#l00052">NEElementwiseOperators.cpp:52</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_arithmetic_operation_kernel_xhtml_a52095bfe8f4fc368d3ec84a8dac4d616"><div class="ttname"><a href="classarm__compute_1_1_n_e_arithmetic_operation_kernel.xhtml#a52095bfe8f4fc368d3ec84a8dac4d616">arm_compute::NEArithmeticOperationKernel::validate</a></div><div class="ttdeci">static Status validate(ArithmeticOperation op, const ITensorInfo *input1, const ITensorInfo *input2, const ITensorInfo *output)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration of NEArithmeticOperationKer...</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_elementwise_operation_kernel_8cpp_source.xhtml#l01169">NEElementwiseOperationKernel.cpp:1169</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_elementwise_division_xhtml_a151f73d8df86064f806f8b3256571b0a"><div class="ttname"><a href="classarm__compute_1_1_n_e_elementwise_division.xhtml#a151f73d8df86064f806f8b3256571b0a">arm_compute::NEElementwiseDivision::configure</a></div><div class="ttdeci">void configure(ITensor *input1, ITensor *input2, ITensor *output)</div><div class="ttdoc">Initialise the kernel's inputs, output and conversion policy.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_elementwise_operators_8cpp_source.xhtml#l00081">NEElementwiseOperators.cpp:81</a></div></div>
<div class="ttc" id="_n_e_elementwise_operations_8h_xhtml"><div class="ttname"><a href="_n_e_elementwise_operations_8h.xhtml">NEElementwiseOperations.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_power_operation_kernel_xhtml_afe71126bef1735fe1613a6da30d2c0c4"><div class="ttname"><a href="classarm__compute_1_1_n_e_power_operation_kernel.xhtml#afe71126bef1735fe1613a6da30d2c0c4">arm_compute::NEPowerOperationKernel::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *input1, const ITensorInfo *input2, const ITensorInfo *output)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration of NEArithmeticOperationKer...</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_elementwise_operation_kernel_8cpp_source.xhtml#l01213">NEElementwiseOperationKernel.cpp:1213</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_elementwise_division_xhtml_afe71126bef1735fe1613a6da30d2c0c4"><div class="ttname"><a href="classarm__compute_1_1_n_e_elementwise_division.xhtml#afe71126bef1735fe1613a6da30d2c0c4">arm_compute::NEElementwiseDivision::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *input1, const ITensorInfo *input2, const ITensorInfo *output)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration of NEArithmeticOperationKer...</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_elementwise_operators_8cpp_source.xhtml#l00088">NEElementwiseOperators.cpp:88</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a2d299363c9fc33334c571fa29ca4f58c"><div class="ttname"><a href="namespacearm__compute.xhtml#a2d299363c9fc33334c571fa29ca4f58c">arm_compute::ComparisonOperation</a></div><div class="ttdeci">ComparisonOperation</div><div class="ttdoc">Supported comparison operations.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00173">Types.h:173</a></div></div>
<div class="ttc" id="_validate_8h_xhtml_aba910b683652be1f65437ef37a9da2a9"><div class="ttname"><a href="_validate_8h.xhtml#aba910b683652be1f65437ef37a9da2a9">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_QUANTIZATION_INFO</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_QUANTIZATION_INFO(...)</div><div class="ttdef"><b>Definition:</b> <a href="_validate_8h_source.xhtml#l00610">Validate.h:610</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_elementwise_max_xhtml_a151f73d8df86064f806f8b3256571b0a"><div class="ttname"><a href="classarm__compute_1_1_n_e_elementwise_max.xhtml#a151f73d8df86064f806f8b3256571b0a">arm_compute::NEElementwiseMax::configure</a></div><div class="ttdeci">void configure(ITensor *input1, ITensor *input2, ITensor *output)</div><div class="ttdoc">Initialise the kernel's inputs, output and conversion policy.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_elementwise_operators_8cpp_source.xhtml#l00035">NEElementwiseOperators.cpp:35</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a23d9f0c01c9e120dfb828ee922b7a8aea46ea186b87dc545033d86ba8d6e63916"><div class="ttname"><a href="namespacearm__compute.xhtml#a23d9f0c01c9e120dfb828ee922b7a8aea46ea186b87dc545033d86ba8d6e63916">arm_compute::ArithmeticOperation::SQUARED_DIFF</a></div><div class="ttdoc">(x - y)^2</div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_elementwise_squared_diff_xhtml_afe71126bef1735fe1613a6da30d2c0c4"><div class="ttname"><a href="classarm__compute_1_1_n_e_elementwise_squared_diff.xhtml#afe71126bef1735fe1613a6da30d2c0c4">arm_compute::NEElementwiseSquaredDiff::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *input1, const ITensorInfo *input2, const ITensorInfo *output)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration of NEArithmeticOperationKer...</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_elementwise_operators_8cpp_source.xhtml#l00076">NEElementwiseOperators.cpp:76</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a329f5d0c4b0c80e3474951d2c4435dd9"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a329f5d0c4b0c80e3474951d2c4435dd9">arm_compute::DataType::QASYMM8_SIGNED</a></div><div class="ttdoc">quantized, asymmetric fixed-point 8-bit number signed</div></div>
<div class="ttc" id="namespacearm__compute_xhtml_adf2ced65e536375a1c96425d9fced858a26a4b44a837bf97b972628509912b4a5"><div class="ttname"><a href="namespacearm__compute.xhtml#adf2ced65e536375a1c96425d9fced858a26a4b44a837bf97b972628509912b4a5">arm_compute::NonLinearFilterFunction::MAX</a></div><div class="ttdoc">Non linear dilate.</div></div>
<div class="ttc" id="namespacearm__compute_xhtml_adf2ced65e536375a1c96425d9fced858ace31e2a082d17e038fcc6e3006166653"><div class="ttname"><a href="namespacearm__compute.xhtml#adf2ced65e536375a1c96425d9fced858ace31e2a082d17e038fcc6e3006166653">arm_compute::NonLinearFilterFunction::MIN</a></div><div class="ttdoc">Non linear erode.</div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_elementwise_squared_diff_xhtml_a151f73d8df86064f806f8b3256571b0a"><div class="ttname"><a href="classarm__compute_1_1_n_e_elementwise_squared_diff.xhtml#a151f73d8df86064f806f8b3256571b0a">arm_compute::NEElementwiseSquaredDiff::configure</a></div><div class="ttdeci">void configure(ITensor *input1, ITensor *input2, ITensor *output)</div><div class="ttdoc">Initialise the kernel's inputs, output and conversion policy.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_elementwise_operators_8cpp_source.xhtml#l00069">NEElementwiseOperators.cpp:69</a></div></div>
<div class="ttc" id="_n_e_elementwise_operation_kernel_8h_xhtml"><div class="ttname"><a href="_n_e_elementwise_operation_kernel_8h.xhtml">NEElementwiseOperationKernel.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_elementwise_max_xhtml_afe71126bef1735fe1613a6da30d2c0c4"><div class="ttname"><a href="classarm__compute_1_1_n_e_elementwise_max.xhtml#afe71126bef1735fe1613a6da30d2c0c4">arm_compute::NEElementwiseMax::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *input1, const ITensorInfo *input2, const ITensorInfo *output)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration of NEArithmeticOperationKer...</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_elementwise_operators_8cpp_source.xhtml#l00042">NEElementwiseOperators.cpp:42</a></div></div>
<div class="ttc" id="_validate_8h_xhtml"><div class="ttname"><a href="_validate_8h.xhtml">Validate.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_comparison_operation_kernel_xhtml_aa4dc6e8191da7608f894b446ee19b6b3"><div class="ttname"><a href="classarm__compute_1_1_n_e_comparison_operation_kernel.xhtml#aa4dc6e8191da7608f894b446ee19b6b3">arm_compute::NEComparisonOperationKernel::validate</a></div><div class="ttdeci">static Status validate(ComparisonOperation op, const ITensorInfo *input1, const ITensorInfo *input2, const ITensorInfo *output)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration of NEComparisonOperationKer...</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_elementwise_operation_kernel_8cpp_source.xhtml#l01261">NEElementwiseOperationKernel.cpp:1261</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_bf9f26469d00835ba20ff8d80ee5a804.xhtml">runtime</a></li><li class="navelem"><a class="el" href="dir_a36523fc4c32a6b0076906589b6fc202.xhtml">NEON</a></li><li class="navelem"><a class="el" href="dir_4d03f28cfd35f8f734a3b0a2f1168d27.xhtml">functions</a></li><li class="navelem"><a class="el" href="_n_e_elementwise_operators_8cpp.xhtml">NEElementwiseOperators.cpp</a></li>
    <li class="footer">Generated on Thu Mar 5 2020 16:07:03 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
