<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: PyramidInfo Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.02.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classarm__compute_1_1_pyramid_info.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">PyramidInfo Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Store the <a class="el" href="classarm__compute_1_1_pyramid.xhtml" title="Basic implementation of the pyramid interface.">Pyramid</a>'s metadata.  
 <a href="classarm__compute_1_1_pyramid_info.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_pyramid_info_8h_source.xhtml">PyramidInfo.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a9e7e3f78b86c0a7f2cdd1ab1e836b2ed"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_pyramid_info.xhtml#a9e7e3f78b86c0a7f2cdd1ab1e836b2ed">PyramidInfo</a> ()</td></tr>
<tr class="memdesc:a9e7e3f78b86c0a7f2cdd1ab1e836b2ed"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor.  <a href="#a9e7e3f78b86c0a7f2cdd1ab1e836b2ed">More...</a><br /></td></tr>
<tr class="separator:a9e7e3f78b86c0a7f2cdd1ab1e836b2ed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a443529237e92a4364aaf662644dfc686"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_pyramid_info.xhtml#a443529237e92a4364aaf662644dfc686">~PyramidInfo</a> ()=default</td></tr>
<tr class="memdesc:a443529237e92a4364aaf662644dfc686"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default destructor.  <a href="#a443529237e92a4364aaf662644dfc686">More...</a><br /></td></tr>
<tr class="separator:a443529237e92a4364aaf662644dfc686"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9ace7670f345dde6c78d6b3314f3d756"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_pyramid_info.xhtml#a9ace7670f345dde6c78d6b3314f3d756">PyramidInfo</a> (const <a class="el" href="classarm__compute_1_1_pyramid_info.xhtml">PyramidInfo</a> &amp;)=default</td></tr>
<tr class="memdesc:a9ace7670f345dde6c78d6b3314f3d756"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be copy constructed.  <a href="#a9ace7670f345dde6c78d6b3314f3d756">More...</a><br /></td></tr>
<tr class="separator:a9ace7670f345dde6c78d6b3314f3d756"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a21310a3eef49fc4f04b98897fc785b34"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_pyramid_info.xhtml">PyramidInfo</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_pyramid_info.xhtml#a21310a3eef49fc4f04b98897fc785b34">operator=</a> (const <a class="el" href="classarm__compute_1_1_pyramid_info.xhtml">PyramidInfo</a> &amp;)=default</td></tr>
<tr class="memdesc:a21310a3eef49fc4f04b98897fc785b34"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be copied.  <a href="#a21310a3eef49fc4f04b98897fc785b34">More...</a><br /></td></tr>
<tr class="separator:a21310a3eef49fc4f04b98897fc785b34"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab38f8d031a5cb0f5d807a180e7107fdd"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_pyramid_info.xhtml#ab38f8d031a5cb0f5d807a180e7107fdd">PyramidInfo</a> (<a class="el" href="classarm__compute_1_1_pyramid_info.xhtml">PyramidInfo</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:ab38f8d031a5cb0f5d807a180e7107fdd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be move constructed.  <a href="#ab38f8d031a5cb0f5d807a180e7107fdd">More...</a><br /></td></tr>
<tr class="separator:ab38f8d031a5cb0f5d807a180e7107fdd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a09f1ed0da3ccc973d44d1156aff150f9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_pyramid_info.xhtml">PyramidInfo</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_pyramid_info.xhtml#a09f1ed0da3ccc973d44d1156aff150f9">operator=</a> (<a class="el" href="classarm__compute_1_1_pyramid_info.xhtml">PyramidInfo</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:a09f1ed0da3ccc973d44d1156aff150f9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be moved.  <a href="#a09f1ed0da3ccc973d44d1156aff150f9">More...</a><br /></td></tr>
<tr class="separator:a09f1ed0da3ccc973d44d1156aff150f9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6365834dc65fb5cc59cd17aea308db13"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_pyramid_info.xhtml#a6365834dc65fb5cc59cd17aea308db13">PyramidInfo</a> (size_t <a class="el" href="classarm__compute_1_1_pyramid_info.xhtml#aa2fea6640d2bd5de24d0e0c2433faab6">num_levels</a>, float <a class="el" href="classarm__compute_1_1_pyramid_info.xhtml#ade87abafbd6b200b22de988f32b66dea">scale</a>, size_t <a class="el" href="classarm__compute_1_1_pyramid_info.xhtml#a9ce99f5dfa1514cb108665e3810b2c4c">width</a>, size_t <a class="el" href="classarm__compute_1_1_pyramid_info.xhtml#adc662cea5b05cd9852d5a4538586d662">height</a>, <a class="el" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58">Format</a> <a class="el" href="classarm__compute_1_1_pyramid_info.xhtml#a7047a267776924cf166c301310f03a2c">format</a>)</td></tr>
<tr class="memdesc:a6365834dc65fb5cc59cd17aea308db13"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create pyramid info for 2D tensors.  <a href="#a6365834dc65fb5cc59cd17aea308db13">More...</a><br /></td></tr>
<tr class="separator:a6365834dc65fb5cc59cd17aea308db13"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae79dbf996c991c72eee4f1d9122152ef"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_pyramid_info.xhtml#ae79dbf996c991c72eee4f1d9122152ef">PyramidInfo</a> (size_t <a class="el" href="classarm__compute_1_1_pyramid_info.xhtml#aa2fea6640d2bd5de24d0e0c2433faab6">num_levels</a>, float <a class="el" href="classarm__compute_1_1_pyramid_info.xhtml#ade87abafbd6b200b22de988f32b66dea">scale</a>, const <a class="el" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> &amp;<a class="el" href="classarm__compute_1_1_pyramid_info.xhtml#a82c695f3a9ca51633ea8743d5c09f122">tensor_shape</a>, <a class="el" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58">Format</a> <a class="el" href="classarm__compute_1_1_pyramid_info.xhtml#a7047a267776924cf166c301310f03a2c">format</a>)</td></tr>
<tr class="memdesc:ae79dbf996c991c72eee4f1d9122152ef"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create pyramid info using <a class="el" href="classarm__compute_1_1_tensor_shape.xhtml" title="Shape of a tensor.">TensorShape</a>.  <a href="#ae79dbf996c991c72eee4f1d9122152ef">More...</a><br /></td></tr>
<tr class="separator:ae79dbf996c991c72eee4f1d9122152ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a741486bedb7b0966b1d4e6e7c6cccf60"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_pyramid_info.xhtml#a741486bedb7b0966b1d4e6e7c6cccf60">init</a> (size_t <a class="el" href="classarm__compute_1_1_pyramid_info.xhtml#aa2fea6640d2bd5de24d0e0c2433faab6">num_levels</a>, float <a class="el" href="classarm__compute_1_1_pyramid_info.xhtml#ade87abafbd6b200b22de988f32b66dea">scale</a>, size_t <a class="el" href="classarm__compute_1_1_pyramid_info.xhtml#a9ce99f5dfa1514cb108665e3810b2c4c">width</a>, size_t <a class="el" href="classarm__compute_1_1_pyramid_info.xhtml#adc662cea5b05cd9852d5a4538586d662">height</a>, <a class="el" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58">Format</a> <a class="el" href="classarm__compute_1_1_pyramid_info.xhtml#a7047a267776924cf166c301310f03a2c">format</a>)</td></tr>
<tr class="memdesc:a741486bedb7b0966b1d4e6e7c6cccf60"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialize pyramid's metadata for 2D tensors.  <a href="#a741486bedb7b0966b1d4e6e7c6cccf60">More...</a><br /></td></tr>
<tr class="separator:a741486bedb7b0966b1d4e6e7c6cccf60"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a51a4719902c69a814ccc638963b3074e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_pyramid_info.xhtml#a51a4719902c69a814ccc638963b3074e">init</a> (size_t <a class="el" href="classarm__compute_1_1_pyramid_info.xhtml#aa2fea6640d2bd5de24d0e0c2433faab6">num_levels</a>, float <a class="el" href="classarm__compute_1_1_pyramid_info.xhtml#ade87abafbd6b200b22de988f32b66dea">scale</a>, const <a class="el" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> &amp;<a class="el" href="classarm__compute_1_1_pyramid_info.xhtml#a82c695f3a9ca51633ea8743d5c09f122">tensor_shape</a>, <a class="el" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58">Format</a> <a class="el" href="classarm__compute_1_1_pyramid_info.xhtml#a7047a267776924cf166c301310f03a2c">format</a>)</td></tr>
<tr class="memdesc:a51a4719902c69a814ccc638963b3074e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialize pyramid's metadata using <a class="el" href="classarm__compute_1_1_tensor_shape.xhtml" title="Shape of a tensor.">TensorShape</a>.  <a href="#a51a4719902c69a814ccc638963b3074e">More...</a><br /></td></tr>
<tr class="separator:a51a4719902c69a814ccc638963b3074e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa2fea6640d2bd5de24d0e0c2433faab6"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_pyramid_info.xhtml#aa2fea6640d2bd5de24d0e0c2433faab6">num_levels</a> () const</td></tr>
<tr class="memdesc:aa2fea6640d2bd5de24d0e0c2433faab6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the number of the pyramid levels.  <a href="#aa2fea6640d2bd5de24d0e0c2433faab6">More...</a><br /></td></tr>
<tr class="separator:aa2fea6640d2bd5de24d0e0c2433faab6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9ce99f5dfa1514cb108665e3810b2c4c"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_pyramid_info.xhtml#a9ce99f5dfa1514cb108665e3810b2c4c">width</a> () const</td></tr>
<tr class="memdesc:a9ce99f5dfa1514cb108665e3810b2c4c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the width of the 0th level tensor.  <a href="#a9ce99f5dfa1514cb108665e3810b2c4c">More...</a><br /></td></tr>
<tr class="separator:a9ce99f5dfa1514cb108665e3810b2c4c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adc662cea5b05cd9852d5a4538586d662"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_pyramid_info.xhtml#adc662cea5b05cd9852d5a4538586d662">height</a> () const</td></tr>
<tr class="memdesc:adc662cea5b05cd9852d5a4538586d662"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the height of the 0th level tensor.  <a href="#adc662cea5b05cd9852d5a4538586d662">More...</a><br /></td></tr>
<tr class="separator:adc662cea5b05cd9852d5a4538586d662"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a82c695f3a9ca51633ea8743d5c09f122"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_pyramid_info.xhtml#a82c695f3a9ca51633ea8743d5c09f122">tensor_shape</a> () const</td></tr>
<tr class="memdesc:a82c695f3a9ca51633ea8743d5c09f122"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the <a class="el" href="classarm__compute_1_1_tensor_shape.xhtml" title="Shape of a tensor.">TensorShape</a> of the o-th level tensor.  <a href="#a82c695f3a9ca51633ea8743d5c09f122">More...</a><br /></td></tr>
<tr class="separator:a82c695f3a9ca51633ea8743d5c09f122"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7047a267776924cf166c301310f03a2c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58">Format</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_pyramid_info.xhtml#a7047a267776924cf166c301310f03a2c">format</a> () const</td></tr>
<tr class="memdesc:a7047a267776924cf166c301310f03a2c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the image format of all tensor in the pyramid.  <a href="#a7047a267776924cf166c301310f03a2c">More...</a><br /></td></tr>
<tr class="separator:a7047a267776924cf166c301310f03a2c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ade87abafbd6b200b22de988f32b66dea"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_pyramid_info.xhtml#ade87abafbd6b200b22de988f32b66dea">scale</a> () const</td></tr>
<tr class="memdesc:ade87abafbd6b200b22de988f32b66dea"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the scale factor of the pyramid.  <a href="#ade87abafbd6b200b22de988f32b66dea">More...</a><br /></td></tr>
<tr class="separator:ade87abafbd6b200b22de988f32b66dea"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Store the <a class="el" href="classarm__compute_1_1_pyramid.xhtml" title="Basic implementation of the pyramid interface.">Pyramid</a>'s metadata. </p>

<p class="definition">Definition at line <a class="el" href="_pyramid_info_8h_source.xhtml#l00035">35</a> of file <a class="el" href="_pyramid_info_8h_source.xhtml">PyramidInfo.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a9e7e3f78b86c0a7f2cdd1ab1e836b2ed"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9e7e3f78b86c0a7f2cdd1ab1e836b2ed">&#9670;&nbsp;</a></span>PyramidInfo() <span class="overload">[1/5]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_pyramid_info.xhtml">PyramidInfo</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Default constructor. </p>

<p class="definition">Definition at line <a class="el" href="_pyramid_info_8cpp_source.xhtml#l00033">33</a> of file <a class="el" href="_pyramid_info_8cpp_source.xhtml">PyramidInfo.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    : _num_levels(0), _tensor_shape(), _format(<a class="code" href="namespacearm__compute.xhtml#a3a440b3893fa10608d4428958be1c52ea696b031073e74bf2cb98e5ef201d4aa3">Format::UNKNOWN</a>), _scale(0.0f)</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;{</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;}</div><div class="ttc" id="namespacearm__compute_xhtml_a3a440b3893fa10608d4428958be1c52ea696b031073e74bf2cb98e5ef201d4aa3"><div class="ttname"><a href="namespacearm__compute.xhtml#a3a440b3893fa10608d4428958be1c52ea696b031073e74bf2cb98e5ef201d4aa3">arm_compute::CLVersion::UNKNOWN</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="namespacearm__compute.xhtml#a3a440b3893fa10608d4428958be1c52ea696b031073e74bf2cb98e5ef201d4aa3">arm_compute::UNKNOWN</a>.</p>

</div>
</div>
<a id="a443529237e92a4364aaf662644dfc686"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a443529237e92a4364aaf662644dfc686">&#9670;&nbsp;</a></span>~PyramidInfo()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual ~<a class="el" href="classarm__compute_1_1_pyramid_info.xhtml">PyramidInfo</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Default destructor. </p>

</div>
</div>
<a id="a9ace7670f345dde6c78d6b3314f3d756"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9ace7670f345dde6c78d6b3314f3d756">&#9670;&nbsp;</a></span>PyramidInfo() <span class="overload">[2/5]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_pyramid_info.xhtml">PyramidInfo</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_pyramid_info.xhtml">PyramidInfo</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Allow instances of this class to be copy constructed. </p>

</div>
</div>
<a id="ab38f8d031a5cb0f5d807a180e7107fdd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab38f8d031a5cb0f5d807a180e7107fdd">&#9670;&nbsp;</a></span>PyramidInfo() <span class="overload">[3/5]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_pyramid_info.xhtml">PyramidInfo</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_pyramid_info.xhtml">PyramidInfo</a> &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Allow instances of this class to be move constructed. </p>

</div>
</div>
<a id="a6365834dc65fb5cc59cd17aea308db13"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6365834dc65fb5cc59cd17aea308db13">&#9670;&nbsp;</a></span>PyramidInfo() <span class="overload">[4/5]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_pyramid_info.xhtml">PyramidInfo</a> </td>
          <td>(</td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>num_levels</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>scale</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>width</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>height</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58">Format</a>&#160;</td>
          <td class="paramname"><em>format</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Create pyramid info for 2D tensors. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">num_levels</td><td>The number of pyramid levels. This is required to be a non-zero value </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">scale</td><td>Used to indicate the scale between the pyramid levels. This is required to be a non-zero positive value. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">width</td><td>The width of the 2D tensor at 0th pyramid level </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">height</td><td>The height of the 2D tensor at 0th pyramid level </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">format</td><td>The format of all 2D tensors in the pyramid NV12, NV21, IYUV, UYVY and YUYV formats are not supported. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_pyramid_info_8cpp_source.xhtml#l00038">38</a> of file <a class="el" href="_pyramid_info_8cpp_source.xhtml">PyramidInfo.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    : <a class="code" href="classarm__compute_1_1_pyramid_info.xhtml#a9e7e3f78b86c0a7f2cdd1ab1e836b2ed">PyramidInfo</a>()</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;{</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    <a class="code" href="classarm__compute_1_1_pyramid_info.xhtml#a741486bedb7b0966b1d4e6e7c6cccf60">init</a>(<a class="code" href="classarm__compute_1_1_pyramid_info.xhtml#aa2fea6640d2bd5de24d0e0c2433faab6">num_levels</a>, <a class="code" href="classarm__compute_1_1_pyramid_info.xhtml#ade87abafbd6b200b22de988f32b66dea">scale</a>, <a class="code" href="classarm__compute_1_1_pyramid_info.xhtml#a9ce99f5dfa1514cb108665e3810b2c4c">width</a>, <a class="code" href="classarm__compute_1_1_pyramid_info.xhtml#adc662cea5b05cd9852d5a4538586d662">height</a>, <a class="code" href="classarm__compute_1_1_pyramid_info.xhtml#a7047a267776924cf166c301310f03a2c">format</a>);</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;}</div><div class="ttc" id="classarm__compute_1_1_pyramid_info_xhtml_a741486bedb7b0966b1d4e6e7c6cccf60"><div class="ttname"><a href="classarm__compute_1_1_pyramid_info.xhtml#a741486bedb7b0966b1d4e6e7c6cccf60">arm_compute::PyramidInfo::init</a></div><div class="ttdeci">void init(size_t num_levels, float scale, size_t width, size_t height, Format format)</div><div class="ttdoc">Initialize pyramid's metadata for 2D tensors.</div><div class="ttdef"><b>Definition:</b> <a href="_pyramid_info_8cpp_source.xhtml#l00050">PyramidInfo.cpp:50</a></div></div>
<div class="ttc" id="classarm__compute_1_1_pyramid_info_xhtml_a7047a267776924cf166c301310f03a2c"><div class="ttname"><a href="classarm__compute_1_1_pyramid_info.xhtml#a7047a267776924cf166c301310f03a2c">arm_compute::PyramidInfo::format</a></div><div class="ttdeci">Format format() const</div><div class="ttdoc">Return the image format of all tensor in the pyramid.</div><div class="ttdef"><b>Definition:</b> <a href="_pyramid_info_8cpp_source.xhtml#l00097">PyramidInfo.cpp:97</a></div></div>
<div class="ttc" id="classarm__compute_1_1_pyramid_info_xhtml_ade87abafbd6b200b22de988f32b66dea"><div class="ttname"><a href="classarm__compute_1_1_pyramid_info.xhtml#ade87abafbd6b200b22de988f32b66dea">arm_compute::PyramidInfo::scale</a></div><div class="ttdeci">float scale() const</div><div class="ttdoc">Return the scale factor of the pyramid.</div><div class="ttdef"><b>Definition:</b> <a href="_pyramid_info_8cpp_source.xhtml#l00102">PyramidInfo.cpp:102</a></div></div>
<div class="ttc" id="classarm__compute_1_1_pyramid_info_xhtml_a9ce99f5dfa1514cb108665e3810b2c4c"><div class="ttname"><a href="classarm__compute_1_1_pyramid_info.xhtml#a9ce99f5dfa1514cb108665e3810b2c4c">arm_compute::PyramidInfo::width</a></div><div class="ttdeci">size_t width() const</div><div class="ttdoc">Return the width of the 0th level tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_pyramid_info_8cpp_source.xhtml#l00082">PyramidInfo.cpp:82</a></div></div>
<div class="ttc" id="classarm__compute_1_1_pyramid_info_xhtml_aa2fea6640d2bd5de24d0e0c2433faab6"><div class="ttname"><a href="classarm__compute_1_1_pyramid_info.xhtml#aa2fea6640d2bd5de24d0e0c2433faab6">arm_compute::PyramidInfo::num_levels</a></div><div class="ttdeci">size_t num_levels() const</div><div class="ttdoc">Return the number of the pyramid levels.</div><div class="ttdef"><b>Definition:</b> <a href="_pyramid_info_8cpp_source.xhtml#l00077">PyramidInfo.cpp:77</a></div></div>
<div class="ttc" id="classarm__compute_1_1_pyramid_info_xhtml_a9e7e3f78b86c0a7f2cdd1ab1e836b2ed"><div class="ttname"><a href="classarm__compute_1_1_pyramid_info.xhtml#a9e7e3f78b86c0a7f2cdd1ab1e836b2ed">arm_compute::PyramidInfo::PyramidInfo</a></div><div class="ttdeci">PyramidInfo()</div><div class="ttdoc">Default constructor.</div><div class="ttdef"><b>Definition:</b> <a href="_pyramid_info_8cpp_source.xhtml#l00033">PyramidInfo.cpp:33</a></div></div>
<div class="ttc" id="classarm__compute_1_1_pyramid_info_xhtml_adc662cea5b05cd9852d5a4538586d662"><div class="ttname"><a href="classarm__compute_1_1_pyramid_info.xhtml#adc662cea5b05cd9852d5a4538586d662">arm_compute::PyramidInfo::height</a></div><div class="ttdeci">size_t height() const</div><div class="ttdoc">Return the height of the 0th level tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_pyramid_info_8cpp_source.xhtml#l00087">PyramidInfo.cpp:87</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_pyramid_info_8cpp_source.xhtml#l00097">PyramidInfo::format()</a>, <a class="el" href="_pyramid_info_8cpp_source.xhtml#l00087">PyramidInfo::height()</a>, <a class="el" href="_pyramid_info_8cpp_source.xhtml#l00050">PyramidInfo::init()</a>, <a class="el" href="_pyramid_info_8cpp_source.xhtml#l00077">PyramidInfo::num_levels()</a>, <a class="el" href="_pyramid_info_8cpp_source.xhtml#l00102">PyramidInfo::scale()</a>, and <a class="el" href="_pyramid_info_8cpp_source.xhtml#l00082">PyramidInfo::width()</a>.</p>

</div>
</div>
<a id="ae79dbf996c991c72eee4f1d9122152ef"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae79dbf996c991c72eee4f1d9122152ef">&#9670;&nbsp;</a></span>PyramidInfo() <span class="overload">[5/5]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_pyramid_info.xhtml">PyramidInfo</a> </td>
          <td>(</td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>num_levels</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>scale</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> &amp;&#160;</td>
          <td class="paramname"><em>tensor_shape</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58">Format</a>&#160;</td>
          <td class="paramname"><em>format</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Create pyramid info using <a class="el" href="classarm__compute_1_1_tensor_shape.xhtml" title="Shape of a tensor.">TensorShape</a>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">num_levels</td><td>The number of pyramid levels. This is required to be a non-zero value </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">scale</td><td>Used to indicate the scale between the pyramid levels. This is required to be a non-zero positive value. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">tensor_shape</td><td>It specifies the size for each dimension of the tensor 0th pyramid level in number of elements </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">format</td><td>The format of all tensors in the pyramid </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_pyramid_info_8cpp_source.xhtml#l00044">44</a> of file <a class="el" href="_pyramid_info_8cpp_source.xhtml">PyramidInfo.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    : <a class="code" href="classarm__compute_1_1_pyramid_info.xhtml#a9e7e3f78b86c0a7f2cdd1ab1e836b2ed">PyramidInfo</a>()</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;{</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <a class="code" href="classarm__compute_1_1_pyramid_info.xhtml#a741486bedb7b0966b1d4e6e7c6cccf60">init</a>(<a class="code" href="classarm__compute_1_1_pyramid_info.xhtml#aa2fea6640d2bd5de24d0e0c2433faab6">num_levels</a>, <a class="code" href="classarm__compute_1_1_pyramid_info.xhtml#ade87abafbd6b200b22de988f32b66dea">scale</a>, <a class="code" href="classarm__compute_1_1_pyramid_info.xhtml#a82c695f3a9ca51633ea8743d5c09f122">tensor_shape</a>, <a class="code" href="classarm__compute_1_1_pyramid_info.xhtml#a7047a267776924cf166c301310f03a2c">format</a>);</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;}</div><div class="ttc" id="classarm__compute_1_1_pyramid_info_xhtml_a82c695f3a9ca51633ea8743d5c09f122"><div class="ttname"><a href="classarm__compute_1_1_pyramid_info.xhtml#a82c695f3a9ca51633ea8743d5c09f122">arm_compute::PyramidInfo::tensor_shape</a></div><div class="ttdeci">const TensorShape &amp; tensor_shape() const</div><div class="ttdoc">Return the TensorShape of the o-th level tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_pyramid_info_8cpp_source.xhtml#l00092">PyramidInfo.cpp:92</a></div></div>
<div class="ttc" id="classarm__compute_1_1_pyramid_info_xhtml_a741486bedb7b0966b1d4e6e7c6cccf60"><div class="ttname"><a href="classarm__compute_1_1_pyramid_info.xhtml#a741486bedb7b0966b1d4e6e7c6cccf60">arm_compute::PyramidInfo::init</a></div><div class="ttdeci">void init(size_t num_levels, float scale, size_t width, size_t height, Format format)</div><div class="ttdoc">Initialize pyramid's metadata for 2D tensors.</div><div class="ttdef"><b>Definition:</b> <a href="_pyramid_info_8cpp_source.xhtml#l00050">PyramidInfo.cpp:50</a></div></div>
<div class="ttc" id="classarm__compute_1_1_pyramid_info_xhtml_a7047a267776924cf166c301310f03a2c"><div class="ttname"><a href="classarm__compute_1_1_pyramid_info.xhtml#a7047a267776924cf166c301310f03a2c">arm_compute::PyramidInfo::format</a></div><div class="ttdeci">Format format() const</div><div class="ttdoc">Return the image format of all tensor in the pyramid.</div><div class="ttdef"><b>Definition:</b> <a href="_pyramid_info_8cpp_source.xhtml#l00097">PyramidInfo.cpp:97</a></div></div>
<div class="ttc" id="classarm__compute_1_1_pyramid_info_xhtml_ade87abafbd6b200b22de988f32b66dea"><div class="ttname"><a href="classarm__compute_1_1_pyramid_info.xhtml#ade87abafbd6b200b22de988f32b66dea">arm_compute::PyramidInfo::scale</a></div><div class="ttdeci">float scale() const</div><div class="ttdoc">Return the scale factor of the pyramid.</div><div class="ttdef"><b>Definition:</b> <a href="_pyramid_info_8cpp_source.xhtml#l00102">PyramidInfo.cpp:102</a></div></div>
<div class="ttc" id="classarm__compute_1_1_pyramid_info_xhtml_aa2fea6640d2bd5de24d0e0c2433faab6"><div class="ttname"><a href="classarm__compute_1_1_pyramid_info.xhtml#aa2fea6640d2bd5de24d0e0c2433faab6">arm_compute::PyramidInfo::num_levels</a></div><div class="ttdeci">size_t num_levels() const</div><div class="ttdoc">Return the number of the pyramid levels.</div><div class="ttdef"><b>Definition:</b> <a href="_pyramid_info_8cpp_source.xhtml#l00077">PyramidInfo.cpp:77</a></div></div>
<div class="ttc" id="classarm__compute_1_1_pyramid_info_xhtml_a9e7e3f78b86c0a7f2cdd1ab1e836b2ed"><div class="ttname"><a href="classarm__compute_1_1_pyramid_info.xhtml#a9e7e3f78b86c0a7f2cdd1ab1e836b2ed">arm_compute::PyramidInfo::PyramidInfo</a></div><div class="ttdeci">PyramidInfo()</div><div class="ttdoc">Default constructor.</div><div class="ttdef"><b>Definition:</b> <a href="_pyramid_info_8cpp_source.xhtml#l00033">PyramidInfo.cpp:33</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_pyramid_info_8cpp_source.xhtml#l00097">PyramidInfo::format()</a>, <a class="el" href="_pyramid_info_8cpp_source.xhtml#l00050">PyramidInfo::init()</a>, <a class="el" href="_pyramid_info_8cpp_source.xhtml#l00077">PyramidInfo::num_levels()</a>, <a class="el" href="_pyramid_info_8cpp_source.xhtml#l00102">PyramidInfo::scale()</a>, and <a class="el" href="_pyramid_info_8cpp_source.xhtml#l00092">PyramidInfo::tensor_shape()</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a7047a267776924cf166c301310f03a2c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7047a267776924cf166c301310f03a2c">&#9670;&nbsp;</a></span>format()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58">Format</a> format </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return the image format of all tensor in the pyramid. </p>
<dl class="section return"><dt>Returns</dt><dd>The image format </dd></dl>

<p class="definition">Definition at line <a class="el" href="_pyramid_info_8cpp_source.xhtml#l00097">97</a> of file <a class="el" href="_pyramid_info_8cpp_source.xhtml">PyramidInfo.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;{</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <span class="keywordflow">return</span> _format;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;}</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_pyramid_info_8cpp_source.xhtml#l00050">PyramidInfo::init()</a>, and <a class="el" href="_pyramid_info_8cpp_source.xhtml#l00038">PyramidInfo::PyramidInfo()</a>.</p>

</div>
</div>
<a id="adc662cea5b05cd9852d5a4538586d662"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adc662cea5b05cd9852d5a4538586d662">&#9670;&nbsp;</a></span>height()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">size_t height </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return the height of the 0th level tensor. </p>
<dl class="section return"><dt>Returns</dt><dd>The height of the 0th level tensor </dd></dl>

<p class="definition">Definition at line <a class="el" href="_pyramid_info_8cpp_source.xhtml#l00087">87</a> of file <a class="el" href="_pyramid_info_8cpp_source.xhtml">PyramidInfo.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;{</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <span class="keywordflow">return</span> _tensor_shape.<a class="code" href="classarm__compute_1_1_dimensions.xhtml#ac4a1050be02b20b3f791b9a483f3abe2">y</a>();</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;}</div><div class="ttc" id="classarm__compute_1_1_dimensions_xhtml_ac4a1050be02b20b3f791b9a483f3abe2"><div class="ttname"><a href="classarm__compute_1_1_dimensions.xhtml#ac4a1050be02b20b3f791b9a483f3abe2">arm_compute::Dimensions::y</a></div><div class="ttdeci">T y() const</div><div class="ttdoc">Alias to access the size of the second dimension.</div><div class="ttdef"><b>Definition:</b> <a href="_dimensions_8h_source.xhtml#l00086">Dimensions.h:86</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_dimensions_8h_source.xhtml#l00086">Dimensions&lt; T &gt;::y()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_c_l_laplacian_pyramid_8cpp_source.xhtml#l00050">CLLaplacianPyramid::configure()</a>, <a class="el" href="_n_e_laplacian_pyramid_8cpp_source.xhtml#l00072">NELaplacianPyramid::configure()</a>, <a class="el" href="_n_e_optical_flow_8cpp_source.xhtml#l00055">NEOpticalFlow::configure()</a>, <a class="el" href="_c_l_gaussian_pyramid_8cpp_source.xhtml#l00059">CLGaussianPyramidHalf::configure()</a>, <a class="el" href="_n_e_gaussian_pyramid_8cpp_source.xhtml#l00057">NEGaussianPyramidHalf::configure()</a>, <a class="el" href="_c_l_optical_flow_8cpp_source.xhtml#l00060">CLOpticalFlow::configure()</a>, <a class="el" href="_c_l_gaussian_pyramid_8cpp_source.xhtml#l00139">CLGaussianPyramidOrb::configure()</a>, <a class="el" href="_n_e_gaussian_pyramid_8cpp_source.xhtml#l00139">NEGaussianPyramidOrb::configure()</a>, <a class="el" href="_pyramid_info_8cpp_source.xhtml#l00050">PyramidInfo::init()</a>, and <a class="el" href="_pyramid_info_8cpp_source.xhtml#l00038">PyramidInfo::PyramidInfo()</a>.</p>

</div>
</div>
<a id="a741486bedb7b0966b1d4e6e7c6cccf60"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a741486bedb7b0966b1d4e6e7c6cccf60">&#9670;&nbsp;</a></span>init() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void init </td>
          <td>(</td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>num_levels</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>scale</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>width</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>height</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58">Format</a>&#160;</td>
          <td class="paramname"><em>format</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initialize pyramid's metadata for 2D tensors. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">num_levels</td><td>The number of pyramid levels. This is required to be a non-zero value </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">scale</td><td>Used to indicate the scale between the pyramid levels. This is required to be a non-zero positive value. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">width</td><td>The width of the 2D tensor at 0th pyramid level </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">height</td><td>The height of the 2D tensor at 0th pyramid level </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">format</td><td>The format of all 2D tensors in the pyramid NV12, NV21, IYUV, UYVY and YUYV formats are not supported. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_pyramid_info_8cpp_source.xhtml#l00050">50</a> of file <a class="el" href="_pyramid_info_8cpp_source.xhtml">PyramidInfo.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;{</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <a class="code" href="classarm__compute_1_1_pyramid_info.xhtml#a741486bedb7b0966b1d4e6e7c6cccf60">init</a>(<a class="code" href="classarm__compute_1_1_pyramid_info.xhtml#aa2fea6640d2bd5de24d0e0c2433faab6">num_levels</a>, <a class="code" href="classarm__compute_1_1_pyramid_info.xhtml#ade87abafbd6b200b22de988f32b66dea">scale</a>, <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(<a class="code" href="classarm__compute_1_1_pyramid_info.xhtml#a9ce99f5dfa1514cb108665e3810b2c4c">width</a>, <a class="code" href="classarm__compute_1_1_pyramid_info.xhtml#adc662cea5b05cd9852d5a4538586d662">height</a>), <a class="code" href="classarm__compute_1_1_pyramid_info.xhtml#a7047a267776924cf166c301310f03a2c">format</a>);</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;}</div><div class="ttc" id="classarm__compute_1_1_tensor_shape_xhtml"><div class="ttname"><a href="classarm__compute_1_1_tensor_shape.xhtml">arm_compute::TensorShape</a></div><div class="ttdoc">Shape of a tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_shape_8h_source.xhtml#l00039">TensorShape.h:39</a></div></div>
<div class="ttc" id="classarm__compute_1_1_pyramid_info_xhtml_a741486bedb7b0966b1d4e6e7c6cccf60"><div class="ttname"><a href="classarm__compute_1_1_pyramid_info.xhtml#a741486bedb7b0966b1d4e6e7c6cccf60">arm_compute::PyramidInfo::init</a></div><div class="ttdeci">void init(size_t num_levels, float scale, size_t width, size_t height, Format format)</div><div class="ttdoc">Initialize pyramid's metadata for 2D tensors.</div><div class="ttdef"><b>Definition:</b> <a href="_pyramid_info_8cpp_source.xhtml#l00050">PyramidInfo.cpp:50</a></div></div>
<div class="ttc" id="classarm__compute_1_1_pyramid_info_xhtml_a7047a267776924cf166c301310f03a2c"><div class="ttname"><a href="classarm__compute_1_1_pyramid_info.xhtml#a7047a267776924cf166c301310f03a2c">arm_compute::PyramidInfo::format</a></div><div class="ttdeci">Format format() const</div><div class="ttdoc">Return the image format of all tensor in the pyramid.</div><div class="ttdef"><b>Definition:</b> <a href="_pyramid_info_8cpp_source.xhtml#l00097">PyramidInfo.cpp:97</a></div></div>
<div class="ttc" id="classarm__compute_1_1_pyramid_info_xhtml_ade87abafbd6b200b22de988f32b66dea"><div class="ttname"><a href="classarm__compute_1_1_pyramid_info.xhtml#ade87abafbd6b200b22de988f32b66dea">arm_compute::PyramidInfo::scale</a></div><div class="ttdeci">float scale() const</div><div class="ttdoc">Return the scale factor of the pyramid.</div><div class="ttdef"><b>Definition:</b> <a href="_pyramid_info_8cpp_source.xhtml#l00102">PyramidInfo.cpp:102</a></div></div>
<div class="ttc" id="classarm__compute_1_1_pyramid_info_xhtml_a9ce99f5dfa1514cb108665e3810b2c4c"><div class="ttname"><a href="classarm__compute_1_1_pyramid_info.xhtml#a9ce99f5dfa1514cb108665e3810b2c4c">arm_compute::PyramidInfo::width</a></div><div class="ttdeci">size_t width() const</div><div class="ttdoc">Return the width of the 0th level tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_pyramid_info_8cpp_source.xhtml#l00082">PyramidInfo.cpp:82</a></div></div>
<div class="ttc" id="classarm__compute_1_1_pyramid_info_xhtml_aa2fea6640d2bd5de24d0e0c2433faab6"><div class="ttname"><a href="classarm__compute_1_1_pyramid_info.xhtml#aa2fea6640d2bd5de24d0e0c2433faab6">arm_compute::PyramidInfo::num_levels</a></div><div class="ttdeci">size_t num_levels() const</div><div class="ttdoc">Return the number of the pyramid levels.</div><div class="ttdef"><b>Definition:</b> <a href="_pyramid_info_8cpp_source.xhtml#l00077">PyramidInfo.cpp:77</a></div></div>
<div class="ttc" id="classarm__compute_1_1_pyramid_info_xhtml_adc662cea5b05cd9852d5a4538586d662"><div class="ttname"><a href="classarm__compute_1_1_pyramid_info.xhtml#adc662cea5b05cd9852d5a4538586d662">arm_compute::PyramidInfo::height</a></div><div class="ttdeci">size_t height() const</div><div class="ttdoc">Return the height of the 0th level tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_pyramid_info_8cpp_source.xhtml#l00087">PyramidInfo.cpp:87</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_pyramid_info_8cpp_source.xhtml#l00097">PyramidInfo::format()</a>, <a class="el" href="_pyramid_info_8cpp_source.xhtml#l00087">PyramidInfo::height()</a>, <a class="el" href="_pyramid_info_8cpp_source.xhtml#l00077">PyramidInfo::num_levels()</a>, <a class="el" href="_pyramid_info_8cpp_source.xhtml#l00102">PyramidInfo::scale()</a>, and <a class="el" href="_pyramid_info_8cpp_source.xhtml#l00082">PyramidInfo::width()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_c_l_laplacian_pyramid_8cpp_source.xhtml#l00050">CLLaplacianPyramid::configure()</a>, <a class="el" href="_n_e_laplacian_pyramid_8cpp_source.xhtml#l00072">NELaplacianPyramid::configure()</a>, <a class="el" href="_c_l_laplacian_reconstruct_8cpp_source.xhtml#l00045">CLLaplacianReconstruct::configure()</a>, <a class="el" href="_n_e_laplacian_reconstruct_8cpp_source.xhtml#l00045">NELaplacianReconstruct::configure()</a>, <a class="el" href="_c_l_gaussian_pyramid_8cpp_source.xhtml#l00139">CLGaussianPyramidOrb::configure()</a>, <a class="el" href="_n_e_gaussian_pyramid_8cpp_source.xhtml#l00139">NEGaussianPyramidOrb::configure()</a>, and <a class="el" href="_pyramid_info_8cpp_source.xhtml#l00038">PyramidInfo::PyramidInfo()</a>.</p>

</div>
</div>
<a id="a51a4719902c69a814ccc638963b3074e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a51a4719902c69a814ccc638963b3074e">&#9670;&nbsp;</a></span>init() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void init </td>
          <td>(</td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>num_levels</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>scale</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> &amp;&#160;</td>
          <td class="paramname"><em>tensor_shape</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58">Format</a>&#160;</td>
          <td class="paramname"><em>format</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initialize pyramid's metadata using <a class="el" href="classarm__compute_1_1_tensor_shape.xhtml" title="Shape of a tensor.">TensorShape</a>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">num_levels</td><td>The number of pyramid levels. This is required to be a non-zero value </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">scale</td><td>Used to indicate the scale between the pyramid levels. This is required to be a non-zero positive value. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">tensor_shape</td><td>It specifies the size for each dimension of the tensor 0th pyramid level in number of elements </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">format</td><td>The format of all tensors in the pyramid </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_pyramid_info_8cpp_source.xhtml#l00055">55</a> of file <a class="el" href="_pyramid_info_8cpp_source.xhtml">PyramidInfo.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;{</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(0 == <a class="code" href="classarm__compute_1_1_pyramid_info.xhtml#aa2fea6640d2bd5de24d0e0c2433faab6">num_levels</a>);</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(0.0f == <a class="code" href="classarm__compute_1_1_pyramid_info.xhtml#ade87abafbd6b200b22de988f32b66dea">scale</a>);</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(0 == <a class="code" href="classarm__compute_1_1_pyramid_info.xhtml#a82c695f3a9ca51633ea8743d5c09f122">tensor_shape</a>.<a class="code" href="classarm__compute_1_1_dimensions.xhtml#aa87f8fc26981b0f3228a78c83b95b802">x</a>());</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(0 == <a class="code" href="classarm__compute_1_1_pyramid_info.xhtml#a82c695f3a9ca51633ea8743d5c09f122">tensor_shape</a>.<a class="code" href="classarm__compute_1_1_dimensions.xhtml#ac4a1050be02b20b3f791b9a483f3abe2">y</a>());</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(<a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58ab08f0cb36474118c5bbc03b3a172a778">Format::IYUV</a> == <a class="code" href="classarm__compute_1_1_pyramid_info.xhtml#a7047a267776924cf166c301310f03a2c">format</a>);</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(<a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a202f5d8c2c70d31048154d8b8b28e755">Format::NV12</a> == <a class="code" href="classarm__compute_1_1_pyramid_info.xhtml#a7047a267776924cf166c301310f03a2c">format</a>);</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(<a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a8e9f6aa1af7e0abbc7e64521e6ffe1b4">Format::NV21</a> == <a class="code" href="classarm__compute_1_1_pyramid_info.xhtml#a7047a267776924cf166c301310f03a2c">format</a>);</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(<a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58af557448a61ad2927194f63442e131dfa">Format::UYVY422</a> == <a class="code" href="classarm__compute_1_1_pyramid_info.xhtml#a7047a267776924cf166c301310f03a2c">format</a>);</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(<a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a11cfa56ee0ddbbc30a2fd189d7475f4c">Format::YUV444</a> == <a class="code" href="classarm__compute_1_1_pyramid_info.xhtml#a7047a267776924cf166c301310f03a2c">format</a>);</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(<a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a481e7a6945eb9f23e87f2de780b2e164">Format::YUYV422</a> == <a class="code" href="classarm__compute_1_1_pyramid_info.xhtml#a7047a267776924cf166c301310f03a2c">format</a>);</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <a class="code" href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a>(0 != _num_levels, <span class="stringliteral">&quot;PyramidInfo already initialized&quot;</span>);</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(0 == (<a class="code" href="classarm__compute_1_1_pyramid_info.xhtml#a82c695f3a9ca51633ea8743d5c09f122">tensor_shape</a>.<a class="code" href="classarm__compute_1_1_dimensions.xhtml#aa87f8fc26981b0f3228a78c83b95b802">x</a>() * pow(<a class="code" href="classarm__compute_1_1_pyramid_info.xhtml#ade87abafbd6b200b22de988f32b66dea">scale</a>, <a class="code" href="classarm__compute_1_1_pyramid_info.xhtml#aa2fea6640d2bd5de24d0e0c2433faab6">num_levels</a>)));</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(0 == (<a class="code" href="classarm__compute_1_1_pyramid_info.xhtml#a82c695f3a9ca51633ea8743d5c09f122">tensor_shape</a>.<a class="code" href="classarm__compute_1_1_dimensions.xhtml#ac4a1050be02b20b3f791b9a483f3abe2">y</a>() * pow(<a class="code" href="classarm__compute_1_1_pyramid_info.xhtml#ade87abafbd6b200b22de988f32b66dea">scale</a>, <a class="code" href="classarm__compute_1_1_pyramid_info.xhtml#aa2fea6640d2bd5de24d0e0c2433faab6">num_levels</a>)));</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    _num_levels   = <a class="code" href="classarm__compute_1_1_pyramid_info.xhtml#aa2fea6640d2bd5de24d0e0c2433faab6">num_levels</a>;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    _format       = <a class="code" href="classarm__compute_1_1_pyramid_info.xhtml#a7047a267776924cf166c301310f03a2c">format</a>;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    _scale        = <a class="code" href="classarm__compute_1_1_pyramid_info.xhtml#ade87abafbd6b200b22de988f32b66dea">scale</a>;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    _tensor_shape = <a class="code" href="classarm__compute_1_1_pyramid_info.xhtml#a82c695f3a9ca51633ea8743d5c09f122">tensor_shape</a>;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;}</div><div class="ttc" id="classarm__compute_1_1_pyramid_info_xhtml_a82c695f3a9ca51633ea8743d5c09f122"><div class="ttname"><a href="classarm__compute_1_1_pyramid_info.xhtml#a82c695f3a9ca51633ea8743d5c09f122">arm_compute::PyramidInfo::tensor_shape</a></div><div class="ttdeci">const TensorShape &amp; tensor_shape() const</div><div class="ttdoc">Return the TensorShape of the o-th level tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_pyramid_info_8cpp_source.xhtml#l00092">PyramidInfo.cpp:92</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58af557448a61ad2927194f63442e131dfa"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58af557448a61ad2927194f63442e131dfa">arm_compute::Format::UYVY422</a></div><div class="ttdoc">A single plane of 32-bit macro pixel of U0, Y0, V0, Y1 byte.</div></div>
<div class="ttc" id="classarm__compute_1_1_pyramid_info_xhtml_a7047a267776924cf166c301310f03a2c"><div class="ttname"><a href="classarm__compute_1_1_pyramid_info.xhtml#a7047a267776924cf166c301310f03a2c">arm_compute::PyramidInfo::format</a></div><div class="ttdeci">Format format() const</div><div class="ttdoc">Return the image format of all tensor in the pyramid.</div><div class="ttdef"><b>Definition:</b> <a href="_pyramid_info_8cpp_source.xhtml#l00097">PyramidInfo.cpp:97</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00466">Error.h:466</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58a202f5d8c2c70d31048154d8b8b28e755"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a202f5d8c2c70d31048154d8b8b28e755">arm_compute::Format::NV12</a></div><div class="ttdoc">A 2 plane YUV format of Luma (Y) and interleaved UV data at 4:2:0 sampling.</div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58a8e9f6aa1af7e0abbc7e64521e6ffe1b4"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a8e9f6aa1af7e0abbc7e64521e6ffe1b4">arm_compute::Format::NV21</a></div><div class="ttdoc">A 2 plane YUV format of Luma (Y) and interleaved VU data at 4:2:0 sampling.</div></div>
<div class="ttc" id="classarm__compute_1_1_dimensions_xhtml_aa87f8fc26981b0f3228a78c83b95b802"><div class="ttname"><a href="classarm__compute_1_1_dimensions.xhtml#aa87f8fc26981b0f3228a78c83b95b802">arm_compute::Dimensions::x</a></div><div class="ttdeci">T x() const</div><div class="ttdoc">Alias to access the size of the first dimension.</div><div class="ttdef"><b>Definition:</b> <a href="_dimensions_8h_source.xhtml#l00081">Dimensions.h:81</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a0b0eb3235749a2909dc5a101afe59a1b"><div class="ttname"><a href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_MSG(cond, msg)</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00456">Error.h:456</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58a11cfa56ee0ddbbc30a2fd189d7475f4c"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a11cfa56ee0ddbbc30a2fd189d7475f4c">arm_compute::Format::YUV444</a></div><div class="ttdoc">A 3 plane of 8 bit 4:4:4 sampled Y, U, V planes.</div></div>
<div class="ttc" id="classarm__compute_1_1_pyramid_info_xhtml_ade87abafbd6b200b22de988f32b66dea"><div class="ttname"><a href="classarm__compute_1_1_pyramid_info.xhtml#ade87abafbd6b200b22de988f32b66dea">arm_compute::PyramidInfo::scale</a></div><div class="ttdeci">float scale() const</div><div class="ttdoc">Return the scale factor of the pyramid.</div><div class="ttdef"><b>Definition:</b> <a href="_pyramid_info_8cpp_source.xhtml#l00102">PyramidInfo.cpp:102</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58ab08f0cb36474118c5bbc03b3a172a778"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58ab08f0cb36474118c5bbc03b3a172a778">arm_compute::Format::IYUV</a></div><div class="ttdoc">A 3 plane of 8-bit 4:2:0 sampled Y, U, V planes.</div></div>
<div class="ttc" id="classarm__compute_1_1_dimensions_xhtml_ac4a1050be02b20b3f791b9a483f3abe2"><div class="ttname"><a href="classarm__compute_1_1_dimensions.xhtml#ac4a1050be02b20b3f791b9a483f3abe2">arm_compute::Dimensions::y</a></div><div class="ttdeci">T y() const</div><div class="ttdoc">Alias to access the size of the second dimension.</div><div class="ttdef"><b>Definition:</b> <a href="_dimensions_8h_source.xhtml#l00086">Dimensions.h:86</a></div></div>
<div class="ttc" id="classarm__compute_1_1_pyramid_info_xhtml_aa2fea6640d2bd5de24d0e0c2433faab6"><div class="ttname"><a href="classarm__compute_1_1_pyramid_info.xhtml#aa2fea6640d2bd5de24d0e0c2433faab6">arm_compute::PyramidInfo::num_levels</a></div><div class="ttdeci">size_t num_levels() const</div><div class="ttdoc">Return the number of the pyramid levels.</div><div class="ttdef"><b>Definition:</b> <a href="_pyramid_info_8cpp_source.xhtml#l00077">PyramidInfo.cpp:77</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58a481e7a6945eb9f23e87f2de780b2e164"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a481e7a6945eb9f23e87f2de780b2e164">arm_compute::Format::YUYV422</a></div><div class="ttdoc">A single plane of 32-bit macro pixel of Y0, U0, Y1, V0 bytes.</div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00466">ARM_COMPUTE_ERROR_ON</a>, <a class="el" href="_error_8h_source.xhtml#l00456">ARM_COMPUTE_ERROR_ON_MSG</a>, <a class="el" href="_pyramid_info_8cpp_source.xhtml#l00097">PyramidInfo::format()</a>, <a class="el" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58ab08f0cb36474118c5bbc03b3a172a778">arm_compute::IYUV</a>, <a class="el" href="_pyramid_info_8cpp_source.xhtml#l00077">PyramidInfo::num_levels()</a>, <a class="el" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a202f5d8c2c70d31048154d8b8b28e755">arm_compute::NV12</a>, <a class="el" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a8e9f6aa1af7e0abbc7e64521e6ffe1b4">arm_compute::NV21</a>, <a class="el" href="_pyramid_info_8cpp_source.xhtml#l00102">PyramidInfo::scale()</a>, <a class="el" href="_pyramid_info_8cpp_source.xhtml#l00092">PyramidInfo::tensor_shape()</a>, <a class="el" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58af557448a61ad2927194f63442e131dfa">arm_compute::UYVY422</a>, <a class="el" href="_dimensions_8h_source.xhtml#l00081">Dimensions&lt; T &gt;::x()</a>, <a class="el" href="_dimensions_8h_source.xhtml#l00086">Dimensions&lt; T &gt;::y()</a>, <a class="el" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a11cfa56ee0ddbbc30a2fd189d7475f4c">arm_compute::YUV444</a>, and <a class="el" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a481e7a6945eb9f23e87f2de780b2e164">arm_compute::YUYV422</a>.</p>

</div>
</div>
<a id="aa2fea6640d2bd5de24d0e0c2433faab6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa2fea6640d2bd5de24d0e0c2433faab6">&#9670;&nbsp;</a></span>num_levels()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">size_t num_levels </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return the number of the pyramid levels. </p>
<dl class="section return"><dt>Returns</dt><dd>The number of the pyramid levels </dd></dl>

<p class="definition">Definition at line <a class="el" href="_pyramid_info_8cpp_source.xhtml#l00077">77</a> of file <a class="el" href="_pyramid_info_8cpp_source.xhtml">PyramidInfo.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;{</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <span class="keywordflow">return</span> _num_levels;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;}</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_pyramid_8cpp_source.xhtml#l00100">Pyramid::allocate()</a>, <a class="el" href="_c_l_pyramid_8cpp_source.xhtml#l00110">CLPyramid::allocate()</a>, <a class="el" href="_c_l_laplacian_pyramid_8cpp_source.xhtml#l00050">CLLaplacianPyramid::configure()</a>, <a class="el" href="_n_e_laplacian_pyramid_8cpp_source.xhtml#l00072">NELaplacianPyramid::configure()</a>, <a class="el" href="_c_l_laplacian_reconstruct_8cpp_source.xhtml#l00045">CLLaplacianReconstruct::configure()</a>, <a class="el" href="_n_e_laplacian_reconstruct_8cpp_source.xhtml#l00045">NELaplacianReconstruct::configure()</a>, <a class="el" href="_n_e_optical_flow_8cpp_source.xhtml#l00055">NEOpticalFlow::configure()</a>, <a class="el" href="_c_l_gaussian_pyramid_8cpp_source.xhtml#l00059">CLGaussianPyramidHalf::configure()</a>, <a class="el" href="_c_l_optical_flow_8cpp_source.xhtml#l00060">CLOpticalFlow::configure()</a>, <a class="el" href="_n_e_gaussian_pyramid_8cpp_source.xhtml#l00057">NEGaussianPyramidHalf::configure()</a>, <a class="el" href="_c_l_gaussian_pyramid_8cpp_source.xhtml#l00139">CLGaussianPyramidOrb::configure()</a>, <a class="el" href="_n_e_gaussian_pyramid_8cpp_source.xhtml#l00139">NEGaussianPyramidOrb::configure()</a>, <a class="el" href="_c_l_2_gaussian_pyramid_8cpp_source.xhtml#l00073">arm_compute::test::validation::DATA_TEST_CASE()</a>, <a class="el" href="_pyramid_8cpp_source.xhtml#l00113">Pyramid::get_pyramid_level()</a>, <a class="el" href="_c_l_pyramid_8cpp_source.xhtml#l00123">CLPyramid::get_pyramid_level()</a>, <a class="el" href="_pyramid_info_8cpp_source.xhtml#l00050">PyramidInfo::init()</a>, <a class="el" href="_pyramid_info_8cpp_source.xhtml#l00038">PyramidInfo::PyramidInfo()</a>, <a class="el" href="_c_l_laplacian_reconstruct_8cpp_source.xhtml#l00086">CLLaplacianReconstruct::run()</a>, and <a class="el" href="_n_e_laplacian_reconstruct_8cpp_source.xhtml#l00087">NELaplacianReconstruct::run()</a>.</p>

</div>
</div>
<a id="a21310a3eef49fc4f04b98897fc785b34"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a21310a3eef49fc4f04b98897fc785b34">&#9670;&nbsp;</a></span>operator=() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_pyramid_info.xhtml">PyramidInfo</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_pyramid_info.xhtml">PyramidInfo</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Allow instances of this class to be copied. </p>

</div>
</div>
<a id="a09f1ed0da3ccc973d44d1156aff150f9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a09f1ed0da3ccc973d44d1156aff150f9">&#9670;&nbsp;</a></span>operator=() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_pyramid_info.xhtml">PyramidInfo</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_pyramid_info.xhtml">PyramidInfo</a> &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Allow instances of this class to be moved. </p>

</div>
</div>
<a id="ade87abafbd6b200b22de988f32b66dea"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ade87abafbd6b200b22de988f32b66dea">&#9670;&nbsp;</a></span>scale()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">float scale </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return the scale factor of the pyramid. </p>
<dl class="section return"><dt>Returns</dt><dd>Return the scale factor </dd></dl>

<p class="definition">Definition at line <a class="el" href="_pyramid_info_8cpp_source.xhtml#l00102">102</a> of file <a class="el" href="_pyramid_info_8cpp_source.xhtml">PyramidInfo.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;{</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <span class="keywordflow">return</span> _scale;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;}</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_n_e_optical_flow_8cpp_source.xhtml#l00055">NEOpticalFlow::configure()</a>, <a class="el" href="_c_l_gaussian_pyramid_8cpp_source.xhtml#l00059">CLGaussianPyramidHalf::configure()</a>, <a class="el" href="_c_l_optical_flow_8cpp_source.xhtml#l00060">CLOpticalFlow::configure()</a>, <a class="el" href="_n_e_gaussian_pyramid_8cpp_source.xhtml#l00057">NEGaussianPyramidHalf::configure()</a>, <a class="el" href="_c_l_gaussian_pyramid_8cpp_source.xhtml#l00139">CLGaussianPyramidOrb::configure()</a>, <a class="el" href="_n_e_gaussian_pyramid_8cpp_source.xhtml#l00139">NEGaussianPyramidOrb::configure()</a>, <a class="el" href="_pyramid_info_8cpp_source.xhtml#l00050">PyramidInfo::init()</a>, and <a class="el" href="_pyramid_info_8cpp_source.xhtml#l00038">PyramidInfo::PyramidInfo()</a>.</p>

</div>
</div>
<a id="a82c695f3a9ca51633ea8743d5c09f122"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a82c695f3a9ca51633ea8743d5c09f122">&#9670;&nbsp;</a></span>tensor_shape()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> &amp; tensor_shape </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return the <a class="el" href="classarm__compute_1_1_tensor_shape.xhtml" title="Shape of a tensor.">TensorShape</a> of the o-th level tensor. </p>
<dl class="section return"><dt>Returns</dt><dd></dd></dl>

<p class="definition">Definition at line <a class="el" href="_pyramid_info_8cpp_source.xhtml#l00092">92</a> of file <a class="el" href="_pyramid_info_8cpp_source.xhtml">PyramidInfo.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;{</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <span class="keywordflow">return</span> _tensor_shape;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;}</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_c_l_laplacian_pyramid_8cpp_source.xhtml#l00050">CLLaplacianPyramid::configure()</a>, <a class="el" href="_n_e_laplacian_pyramid_8cpp_source.xhtml#l00072">NELaplacianPyramid::configure()</a>, <a class="el" href="_c_l_gaussian_pyramid_8cpp_source.xhtml#l00059">CLGaussianPyramidHalf::configure()</a>, <a class="el" href="_n_e_gaussian_pyramid_8cpp_source.xhtml#l00057">NEGaussianPyramidHalf::configure()</a>, <a class="el" href="_c_l_gaussian_pyramid_8cpp_source.xhtml#l00139">CLGaussianPyramidOrb::configure()</a>, <a class="el" href="_n_e_gaussian_pyramid_8cpp_source.xhtml#l00139">NEGaussianPyramidOrb::configure()</a>, <a class="el" href="_pyramid_info_8cpp_source.xhtml#l00055">PyramidInfo::init()</a>, and <a class="el" href="_pyramid_info_8cpp_source.xhtml#l00044">PyramidInfo::PyramidInfo()</a>.</p>

</div>
</div>
<a id="a9ce99f5dfa1514cb108665e3810b2c4c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9ce99f5dfa1514cb108665e3810b2c4c">&#9670;&nbsp;</a></span>width()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">size_t width </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return the width of the 0th level tensor. </p>
<dl class="section return"><dt>Returns</dt><dd>The width of the 0th level tensor </dd></dl>

<p class="definition">Definition at line <a class="el" href="_pyramid_info_8cpp_source.xhtml#l00082">82</a> of file <a class="el" href="_pyramid_info_8cpp_source.xhtml">PyramidInfo.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;{</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <span class="keywordflow">return</span> _tensor_shape.<a class="code" href="classarm__compute_1_1_dimensions.xhtml#aa87f8fc26981b0f3228a78c83b95b802">x</a>();</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;}</div><div class="ttc" id="classarm__compute_1_1_dimensions_xhtml_aa87f8fc26981b0f3228a78c83b95b802"><div class="ttname"><a href="classarm__compute_1_1_dimensions.xhtml#aa87f8fc26981b0f3228a78c83b95b802">arm_compute::Dimensions::x</a></div><div class="ttdeci">T x() const</div><div class="ttdoc">Alias to access the size of the first dimension.</div><div class="ttdef"><b>Definition:</b> <a href="_dimensions_8h_source.xhtml#l00081">Dimensions.h:81</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_dimensions_8h_source.xhtml#l00081">Dimensions&lt; T &gt;::x()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_c_l_laplacian_pyramid_8cpp_source.xhtml#l00050">CLLaplacianPyramid::configure()</a>, <a class="el" href="_n_e_laplacian_pyramid_8cpp_source.xhtml#l00072">NELaplacianPyramid::configure()</a>, <a class="el" href="_n_e_optical_flow_8cpp_source.xhtml#l00055">NEOpticalFlow::configure()</a>, <a class="el" href="_c_l_gaussian_pyramid_8cpp_source.xhtml#l00059">CLGaussianPyramidHalf::configure()</a>, <a class="el" href="_n_e_gaussian_pyramid_8cpp_source.xhtml#l00057">NEGaussianPyramidHalf::configure()</a>, <a class="el" href="_c_l_optical_flow_8cpp_source.xhtml#l00060">CLOpticalFlow::configure()</a>, <a class="el" href="_c_l_gaussian_pyramid_8cpp_source.xhtml#l00139">CLGaussianPyramidOrb::configure()</a>, <a class="el" href="_n_e_gaussian_pyramid_8cpp_source.xhtml#l00139">NEGaussianPyramidOrb::configure()</a>, <a class="el" href="_pyramid_info_8cpp_source.xhtml#l00050">PyramidInfo::init()</a>, and <a class="el" href="_pyramid_info_8cpp_source.xhtml#l00038">PyramidInfo::PyramidInfo()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>arm_compute/core/<a class="el" href="_pyramid_info_8h_source.xhtml">PyramidInfo.h</a></li>
<li>src/core/<a class="el" href="_pyramid_info_8cpp_source.xhtml">PyramidInfo.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1_pyramid_info.xhtml">PyramidInfo</a></li>
    <li class="footer">Generated on Thu Mar 5 2020 16:07:17 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
