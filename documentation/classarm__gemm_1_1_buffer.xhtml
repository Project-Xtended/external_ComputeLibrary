<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: Buffer Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.02.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classarm__gemm_1_1_buffer.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">Buffer Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="buffer__manager_8hpp_source.xhtml">buffer_manager.hpp</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a8bf60bd0f8a216c716ef58fea0606aee"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__gemm_1_1_buffer.xhtml#a8bf60bd0f8a216c716ef58fea0606aee">Buffer</a> (<a class="el" href="classarm__gemm_1_1_buffer.xhtml">Buffer</a> &amp;)=delete</td></tr>
<tr class="separator:a8bf60bd0f8a216c716ef58fea0606aee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5e31690a2c14a3428593c0af4435158a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__gemm_1_1_buffer.xhtml">Buffer</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__gemm_1_1_buffer.xhtml#a5e31690a2c14a3428593c0af4435158a">operator=</a> (<a class="el" href="classarm__gemm_1_1_buffer.xhtml">Buffer</a> &amp;)=delete</td></tr>
<tr class="separator:a5e31690a2c14a3428593c0af4435158a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a53dae4cefe42f5ba80b09f65257b4fcb"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__gemm_1_1_buffer.xhtml#a53dae4cefe42f5ba80b09f65257b4fcb">Buffer</a> (void *storage, int maxusers)</td></tr>
<tr class="separator:a53dae4cefe42f5ba80b09f65257b4fcb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a97814ef98fcd29d1fb5df1e877f8eabc"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a97814ef98fcd29d1fb5df1e877f8eabc"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classarm__gemm_1_1_buffer.xhtml#a97814ef98fcd29d1fb5df1e877f8eabc">try_populate</a> (const int index, T func)</td></tr>
<tr class="separator:a97814ef98fcd29d1fb5df1e877f8eabc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a427705bf76071f12aa29992bd5cffa73"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a427705bf76071f12aa29992bd5cffa73"><td class="memTemplItemLeft" align="right" valign="top">void *&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classarm__gemm_1_1_buffer.xhtml#a427705bf76071f12aa29992bd5cffa73">get</a> (const int index, T func)</td></tr>
<tr class="separator:a427705bf76071f12aa29992bd5cffa73"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3299507dea21c693b66a23c77bfc3a7a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__gemm_1_1_buffer.xhtml#a3299507dea21c693b66a23c77bfc3a7a">release</a> (void)</td></tr>
<tr class="separator:a3299507dea21c693b66a23c77bfc3a7a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a08fb4ce7c28f1785d47bad7b5a4b87a3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__gemm_1_1_buffer.xhtml#a08fb4ce7c28f1785d47bad7b5a4b87a3">set_numusers</a> (int numusers)</td></tr>
<tr class="separator:a08fb4ce7c28f1785d47bad7b5a4b87a3"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p class="definition">Definition at line <a class="el" href="buffer__manager_8hpp_source.xhtml#l00050">50</a> of file <a class="el" href="buffer__manager_8hpp_source.xhtml">buffer_manager.hpp</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a8bf60bd0f8a216c716ef58fea0606aee"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8bf60bd0f8a216c716ef58fea0606aee">&#9670;&nbsp;</a></span>Buffer() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__gemm_1_1_buffer.xhtml">Buffer</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__gemm_1_1_buffer.xhtml">Buffer</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a53dae4cefe42f5ba80b09f65257b4fcb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a53dae4cefe42f5ba80b09f65257b4fcb">&#9670;&nbsp;</a></span>Buffer() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__gemm_1_1_buffer.xhtml">Buffer</a> </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>storage</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>maxusers</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="buffer__manager_8hpp_source.xhtml#l00086">86</a> of file <a class="el" href="buffer__manager_8hpp_source.xhtml">buffer_manager.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;                                        : _maxusers(maxusers), _storage(storage), _numusers(maxusers) {</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;        _status = <a class="code" href="namespacearm__gemm.xhtml#a32006a302bde841f2cf4cc8bb131856baa5daf7f2ebbba4975d61dab1c40188c7">BufferStatus::IDLE</a>;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    }</div><div class="ttc" id="namespacearm__gemm_xhtml_a32006a302bde841f2cf4cc8bb131856baa5daf7f2ebbba4975d61dab1c40188c7"><div class="ttname"><a href="namespacearm__gemm.xhtml#a32006a302bde841f2cf4cc8bb131856baa5daf7f2ebbba4975d61dab1c40188c7">arm_gemm::BufferStatus::IDLE</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="namespacearm__gemm.xhtml#a32006a302bde841f2cf4cc8bb131856baa5daf7f2ebbba4975d61dab1c40188c7">arm_gemm::IDLE</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a427705bf76071f12aa29992bd5cffa73"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a427705bf76071f12aa29992bd5cffa73">&#9670;&nbsp;</a></span>get()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void* get </td>
          <td>(</td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>index</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">T&#160;</td>
          <td class="paramname"><em>func</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="buffer__manager_8hpp_source.xhtml#l00133">133</a> of file <a class="el" href="buffer__manager_8hpp_source.xhtml">buffer_manager.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;                                       {</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;        <span class="comment">// Loop until we achieve something.</span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;        <span class="keywordflow">for</span> (;;) {</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;            <span class="comment">// If the index is correct and the buffer status is busy then we can</span></div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;            <span class="comment">// just return the content.  No locking is needed here as the index</span></div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;            <span class="comment">// cannot change (and status cannot change from BUSY) until all</span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;            <span class="comment">// users have finished.</span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;            <span class="keywordflow">if</span> ((_index == index) &amp;&amp; (_status == <a class="code" href="namespacearm__gemm.xhtml#a32006a302bde841f2cf4cc8bb131856ba802706a9238e2928077f97736854bad4">BufferStatus::BUSY</a>)) {</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;                <span class="keywordflow">return</span> _storage;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;            }</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;            <span class="comment">/* If the buffer still has some previous content, or is being</span></div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="comment">             * populated, we can wait with the semaphore.  */</span></div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="preprocessor">#ifdef USE_SEMAPHORE</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;            <span class="keywordflow">if</span> (((_status == <a class="code" href="namespacearm__gemm.xhtml#a32006a302bde841f2cf4cc8bb131856ba802706a9238e2928077f97736854bad4">BufferStatus::BUSY</a>) &amp;&amp; (_index != index)) ||</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;                 (_status == <a class="code" href="namespacearm__gemm.xhtml#a32006a302bde841f2cf4cc8bb131856ba63560453bdae7737f5a7f0b9fc23e398">BufferStatus::POPULATING</a>)) {</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;                std::unique_lock&lt;std::mutex&gt; ul(_lock);</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;                <span class="keywordflow">if</span> (((_status == <a class="code" href="namespacearm__gemm.xhtml#a32006a302bde841f2cf4cc8bb131856ba802706a9238e2928077f97736854bad4">BufferStatus::BUSY</a>) &amp;&amp; (_index != index)) ||</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;                     (_status == <a class="code" href="namespacearm__gemm.xhtml#a32006a302bde841f2cf4cc8bb131856ba63560453bdae7737f5a7f0b9fc23e398">BufferStatus::POPULATING</a>)) {</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;                    _cv.wait(ul);</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;                }</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;            }</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;            <span class="comment">// If it&#39;s idle, we need to populate it.  The IDLE-&gt;POPULATING</span></div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;            <span class="comment">// transition requires the lock.</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;            <span class="keywordflow">if</span> (_status == <a class="code" href="namespacearm__gemm.xhtml#a32006a302bde841f2cf4cc8bb131856baa5daf7f2ebbba4975d61dab1c40188c7">BufferStatus::IDLE</a>) {</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;                std::lock_guard&lt;std::mutex&gt; guard(_lock);</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;                <span class="comment">/* If it&#39;s still idle, grab it.  Otherwise drop through and</span></div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="comment">                 * we&#39;ll do something else next time through the loop.  */</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;                <span class="keywordflow">if</span> (_status == <a class="code" href="namespacearm__gemm.xhtml#a32006a302bde841f2cf4cc8bb131856baa5daf7f2ebbba4975d61dab1c40188c7">BufferStatus::IDLE</a>) {</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;                    _status = <a class="code" href="namespacearm__gemm.xhtml#a32006a302bde841f2cf4cc8bb131856ba63560453bdae7737f5a7f0b9fc23e398">BufferStatus::POPULATING</a>;</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;                    _index = index;</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;                    _users = _numusers;</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;                }</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;            }</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;        }</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;        <span class="comment">/* If we get here we need to populate the buffer. */</span></div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;        populate_buffer(func);</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;        <span class="keywordflow">return</span> _storage;</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    }</div><div class="ttc" id="namespacearm__gemm_xhtml_a32006a302bde841f2cf4cc8bb131856ba63560453bdae7737f5a7f0b9fc23e398"><div class="ttname"><a href="namespacearm__gemm.xhtml#a32006a302bde841f2cf4cc8bb131856ba63560453bdae7737f5a7f0b9fc23e398">arm_gemm::BufferStatus::POPULATING</a></div></div>
<div class="ttc" id="namespacearm__gemm_xhtml_a32006a302bde841f2cf4cc8bb131856ba802706a9238e2928077f97736854bad4"><div class="ttname"><a href="namespacearm__gemm.xhtml#a32006a302bde841f2cf4cc8bb131856ba802706a9238e2928077f97736854bad4">arm_gemm::BufferStatus::BUSY</a></div></div>
<div class="ttc" id="namespacearm__gemm_xhtml_a32006a302bde841f2cf4cc8bb131856baa5daf7f2ebbba4975d61dab1c40188c7"><div class="ttname"><a href="namespacearm__gemm.xhtml#a32006a302bde841f2cf4cc8bb131856baa5daf7f2ebbba4975d61dab1c40188c7">arm_gemm::BufferStatus::IDLE</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="namespacearm__gemm.xhtml#a32006a302bde841f2cf4cc8bb131856ba802706a9238e2928077f97736854bad4">arm_gemm::BUSY</a>, <a class="el" href="namespacearm__gemm.xhtml#a32006a302bde841f2cf4cc8bb131856baa5daf7f2ebbba4975d61dab1c40188c7">arm_gemm::IDLE</a>, and <a class="el" href="namespacearm__gemm.xhtml#a32006a302bde841f2cf4cc8bb131856ba63560453bdae7737f5a7f0b9fc23e398">arm_gemm::POPULATING</a>.</p>

</div>
</div>
<a id="a5e31690a2c14a3428593c0af4435158a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5e31690a2c14a3428593c0af4435158a">&#9670;&nbsp;</a></span>operator=()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__gemm_1_1_buffer.xhtml">Buffer</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__gemm_1_1_buffer.xhtml">Buffer</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a3299507dea21c693b66a23c77bfc3a7a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3299507dea21c693b66a23c77bfc3a7a">&#9670;&nbsp;</a></span>release()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void release </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="buffer__manager_8hpp_source.xhtml#l00184">184</a> of file <a class="el" href="buffer__manager_8hpp_source.xhtml">buffer_manager.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;                       {</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;        <span class="keywordflow">if</span> (--_users == 0) {</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<span class="preprocessor">#ifdef USE_SEMAPHORE</span></div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;            std::unique_lock&lt;std::mutex&gt; ul(_lock);</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;            _status = <a class="code" href="namespacearm__gemm.xhtml#a32006a302bde841f2cf4cc8bb131856baa5daf7f2ebbba4975d61dab1c40188c7">BufferStatus::IDLE</a>;</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;            <span class="comment">/* We notify all waiters as we expect one to do the populating</span></div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="comment">             * and any others to go and process and earlier block.  */</span></div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;            _cv.notify_all();</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;            _status = <a class="code" href="namespacearm__gemm.xhtml#a32006a302bde841f2cf4cc8bb131856baa5daf7f2ebbba4975d61dab1c40188c7">BufferStatus::IDLE</a>;</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;        }</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;    }</div><div class="ttc" id="namespacearm__gemm_xhtml_a32006a302bde841f2cf4cc8bb131856baa5daf7f2ebbba4975d61dab1c40188c7"><div class="ttname"><a href="namespacearm__gemm.xhtml#a32006a302bde841f2cf4cc8bb131856baa5daf7f2ebbba4975d61dab1c40188c7">arm_gemm::BufferStatus::IDLE</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="namespacearm__gemm.xhtml#a32006a302bde841f2cf4cc8bb131856baa5daf7f2ebbba4975d61dab1c40188c7">arm_gemm::IDLE</a>.</p>

</div>
</div>
<a id="a08fb4ce7c28f1785d47bad7b5a4b87a3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a08fb4ce7c28f1785d47bad7b5a4b87a3">&#9670;&nbsp;</a></span>set_numusers()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void set_numusers </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>numusers</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="buffer__manager_8hpp_source.xhtml#l00199">199</a> of file <a class="el" href="buffer__manager_8hpp_source.xhtml">buffer_manager.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;                                    {</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;        _numusers = std::min(numusers, _maxusers);</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="a97814ef98fcd29d1fb5df1e877f8eabc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a97814ef98fcd29d1fb5df1e877f8eabc">&#9670;&nbsp;</a></span>try_populate()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void try_populate </td>
          <td>(</td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>index</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">T&#160;</td>
          <td class="paramname"><em>func</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="buffer__manager_8hpp_source.xhtml#l00097">97</a> of file <a class="el" href="buffer__manager_8hpp_source.xhtml">buffer_manager.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;                                               {</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        <span class="keywordflow">for</span> (;;) {</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="preprocessor">#ifdef USE_SEMAPHORE</span></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;            <span class="comment">/* If it&#39;s busy with a previous index, wait on the semaphore. */</span></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;            <span class="keywordflow">if</span> ((_status == <a class="code" href="namespacearm__gemm.xhtml#a32006a302bde841f2cf4cc8bb131856ba802706a9238e2928077f97736854bad4">BufferStatus::BUSY</a>) &amp;&amp; (_index != index)) {</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;                std::unique_lock&lt;std::mutex&gt; ul(_lock);</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;                <span class="keywordflow">if</span> ((_status == <a class="code" href="namespacearm__gemm.xhtml#a32006a302bde841f2cf4cc8bb131856ba802706a9238e2928077f97736854bad4">BufferStatus::BUSY</a>) &amp;&amp; (_index != index)) {</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;                    _cv.wait(ul);</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;                }</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;            }</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;            <span class="comment">/* Return if another thread is populating it already. */</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;            <span class="keywordflow">if</span> ((_index == index) &amp;&amp;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;                ((_status == <a class="code" href="namespacearm__gemm.xhtml#a32006a302bde841f2cf4cc8bb131856ba63560453bdae7737f5a7f0b9fc23e398">BufferStatus::POPULATING</a>) || (_status == <a class="code" href="namespacearm__gemm.xhtml#a32006a302bde841f2cf4cc8bb131856ba802706a9238e2928077f97736854bad4">BufferStatus::BUSY</a>))) {</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;                <span class="keywordflow">return</span>;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;            }</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;            <span class="keywordflow">if</span> (_status == <a class="code" href="namespacearm__gemm.xhtml#a32006a302bde841f2cf4cc8bb131856baa5daf7f2ebbba4975d61dab1c40188c7">BufferStatus::IDLE</a>) {</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;                std::lock_guard&lt;std::mutex&gt; guard(_lock);</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;                <span class="comment">/* If the buffer is still idle, we can grab it and populate it. */</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;                <span class="keywordflow">if</span> (_status == <a class="code" href="namespacearm__gemm.xhtml#a32006a302bde841f2cf4cc8bb131856baa5daf7f2ebbba4975d61dab1c40188c7">BufferStatus::IDLE</a>) {</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;                    _status = <a class="code" href="namespacearm__gemm.xhtml#a32006a302bde841f2cf4cc8bb131856ba63560453bdae7737f5a7f0b9fc23e398">BufferStatus::POPULATING</a>;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;                    _index = index;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;                    _users = _numusers;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;                }</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;            }</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;        }</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        <span class="comment">/* If we get here, fill in the buffer. */</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;        populate_buffer(func);</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    }</div><div class="ttc" id="namespacearm__gemm_xhtml_a32006a302bde841f2cf4cc8bb131856ba63560453bdae7737f5a7f0b9fc23e398"><div class="ttname"><a href="namespacearm__gemm.xhtml#a32006a302bde841f2cf4cc8bb131856ba63560453bdae7737f5a7f0b9fc23e398">arm_gemm::BufferStatus::POPULATING</a></div></div>
<div class="ttc" id="namespacearm__gemm_xhtml_a32006a302bde841f2cf4cc8bb131856ba802706a9238e2928077f97736854bad4"><div class="ttname"><a href="namespacearm__gemm.xhtml#a32006a302bde841f2cf4cc8bb131856ba802706a9238e2928077f97736854bad4">arm_gemm::BufferStatus::BUSY</a></div></div>
<div class="ttc" id="namespacearm__gemm_xhtml_a32006a302bde841f2cf4cc8bb131856baa5daf7f2ebbba4975d61dab1c40188c7"><div class="ttname"><a href="namespacearm__gemm.xhtml#a32006a302bde841f2cf4cc8bb131856baa5daf7f2ebbba4975d61dab1c40188c7">arm_gemm::BufferStatus::IDLE</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="namespacearm__gemm.xhtml#a32006a302bde841f2cf4cc8bb131856ba802706a9238e2928077f97736854bad4">arm_gemm::BUSY</a>, <a class="el" href="namespacearm__gemm.xhtml#a32006a302bde841f2cf4cc8bb131856baa5daf7f2ebbba4975d61dab1c40188c7">arm_gemm::IDLE</a>, and <a class="el" href="namespacearm__gemm.xhtml#a32006a302bde841f2cf4cc8bb131856ba63560453bdae7737f5a7f0b9fc23e398">arm_gemm::POPULATING</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>src/core/NEON/kernels/arm_gemm/<a class="el" href="buffer__manager_8hpp_source.xhtml">buffer_manager.hpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__gemm.xhtml">arm_gemm</a></li><li class="navelem"><a class="el" href="classarm__gemm_1_1_buffer.xhtml">Buffer</a></li>
    <li class="footer">Generated on Thu Mar 5 2020 16:07:20 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
