<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: IGCTensor Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classarm__compute_1_1_i_g_c_tensor.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">IGCTensor Class Reference<span class="mlabels"><span class="mlabel">abstract</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p>Interface for GLES Compute tensor.  
 <a href="classarm__compute_1_1_i_g_c_tensor.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_i_g_c_tensor_8h_source.xhtml">IGCTensor.h</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for IGCTensor:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classarm__compute_1_1_i_g_c_tensor__coll__graph.svg" width="96" height="112"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a78e2cb61c2ed12459fea5a97728d74d2"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_g_c_tensor.xhtml#a78e2cb61c2ed12459fea5a97728d74d2">IGCTensor</a> ()</td></tr>
<tr class="memdesc:a78e2cb61c2ed12459fea5a97728d74d2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor.  <a href="#a78e2cb61c2ed12459fea5a97728d74d2">More...</a><br /></td></tr>
<tr class="separator:a78e2cb61c2ed12459fea5a97728d74d2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a15242f453f1928c3dbc2a30ec08480e6"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_g_c_tensor.xhtml#a15242f453f1928c3dbc2a30ec08480e6">IGCTensor</a> (const <a class="el" href="classarm__compute_1_1_i_g_c_tensor.xhtml">IGCTensor</a> &amp;)=delete</td></tr>
<tr class="memdesc:a15242f453f1928c3dbc2a30ec08480e6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied (As this class contains pointers)  <a href="#a15242f453f1928c3dbc2a30ec08480e6">More...</a><br /></td></tr>
<tr class="separator:a15242f453f1928c3dbc2a30ec08480e6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a53ba7801ed7dbf945a0413addd6dc990"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_i_g_c_tensor.xhtml">IGCTensor</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_g_c_tensor.xhtml#a53ba7801ed7dbf945a0413addd6dc990">operator=</a> (const <a class="el" href="classarm__compute_1_1_i_g_c_tensor.xhtml">IGCTensor</a> &amp;)=delete</td></tr>
<tr class="memdesc:a53ba7801ed7dbf945a0413addd6dc990"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copy assigned (As this class contains pointers)  <a href="#a53ba7801ed7dbf945a0413addd6dc990">More...</a><br /></td></tr>
<tr class="separator:a53ba7801ed7dbf945a0413addd6dc990"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adcca5090c26cd20e37d2878510b32bad"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_g_c_tensor.xhtml#adcca5090c26cd20e37d2878510b32bad">IGCTensor</a> (<a class="el" href="classarm__compute_1_1_i_g_c_tensor.xhtml">IGCTensor</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:adcca5090c26cd20e37d2878510b32bad"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be moved.  <a href="#adcca5090c26cd20e37d2878510b32bad">More...</a><br /></td></tr>
<tr class="separator:adcca5090c26cd20e37d2878510b32bad"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa49cf1d6ea350774509911cad4903ad6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_i_g_c_tensor.xhtml">IGCTensor</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_g_c_tensor.xhtml#aa49cf1d6ea350774509911cad4903ad6">operator=</a> (<a class="el" href="classarm__compute_1_1_i_g_c_tensor.xhtml">IGCTensor</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:aa49cf1d6ea350774509911cad4903ad6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be moved.  <a href="#aa49cf1d6ea350774509911cad4903ad6">More...</a><br /></td></tr>
<tr class="separator:aa49cf1d6ea350774509911cad4903ad6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa5f7b3eca1cadbb4e72617eca3d6faeb"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_g_c_tensor.xhtml#aa5f7b3eca1cadbb4e72617eca3d6faeb">~IGCTensor</a> ()=default</td></tr>
<tr class="memdesc:aa5f7b3eca1cadbb4e72617eca3d6faeb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Virtual destructor.  <a href="#aa5f7b3eca1cadbb4e72617eca3d6faeb">More...</a><br /></td></tr>
<tr class="separator:aa5f7b3eca1cadbb4e72617eca3d6faeb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a14c53d2d17be6fa8a2c9861527c7b002"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_g_c_tensor.xhtml#a14c53d2d17be6fa8a2c9861527c7b002">map</a> (bool blocking=true)</td></tr>
<tr class="memdesc:a14c53d2d17be6fa8a2c9861527c7b002"><td class="mdescLeft">&#160;</td><td class="mdescRight">Map on an allocated buffer.  <a href="#a14c53d2d17be6fa8a2c9861527c7b002">More...</a><br /></td></tr>
<tr class="separator:a14c53d2d17be6fa8a2c9861527c7b002"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1ffeb3b5abb3d61f62b58a391816201c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_g_c_tensor.xhtml#a1ffeb3b5abb3d61f62b58a391816201c">unmap</a> ()</td></tr>
<tr class="memdesc:a1ffeb3b5abb3d61f62b58a391816201c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Unmap an allocated and mapped buffer.  <a href="#a1ffeb3b5abb3d61f62b58a391816201c">More...</a><br /></td></tr>
<tr class="separator:a1ffeb3b5abb3d61f62b58a391816201c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac8bb3912a3ce86b15842e79d0b421204"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_g_c_tensor.xhtml#ac8bb3912a3ce86b15842e79d0b421204">clear</a> ()</td></tr>
<tr class="memdesc:ac8bb3912a3ce86b15842e79d0b421204"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clear the contents of the tensor synchronously.  <a href="#ac8bb3912a3ce86b15842e79d0b421204">More...</a><br /></td></tr>
<tr class="separator:ac8bb3912a3ce86b15842e79d0b421204"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a24954cca5108a24706441fd99a7fb04c"><td class="memItemLeft" align="right" valign="top">uint8_t *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_g_c_tensor.xhtml#a24954cca5108a24706441fd99a7fb04c">buffer</a> () const override</td></tr>
<tr class="memdesc:a24954cca5108a24706441fd99a7fb04c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Interface to be implemented by the child class to return a pointer to CPU memory.  <a href="#a24954cca5108a24706441fd99a7fb04c">More...</a><br /></td></tr>
<tr class="separator:a24954cca5108a24706441fd99a7fb04c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a78046d8dc1b472a13fe70d8862f2edaf"><td class="memItemLeft" align="right" valign="top">virtual GLuint&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_g_c_tensor.xhtml#a78046d8dc1b472a13fe70d8862f2edaf">gc_buffer</a> () const =0</td></tr>
<tr class="memdesc:a78046d8dc1b472a13fe70d8862f2edaf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Interface to be implemented by the child class to return the tensor's gles compute buffer id.  <a href="#a78046d8dc1b472a13fe70d8862f2edaf">More...</a><br /></td></tr>
<tr class="separator:a78046d8dc1b472a13fe70d8862f2edaf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a95acb432c46c1f3a6b77eb88944e6c02"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_g_c_tensor.xhtml#a95acb432c46c1f3a6b77eb88944e6c02">needs_shifting</a> () const</td></tr>
<tr class="memdesc:a95acb432c46c1f3a6b77eb88944e6c02"><td class="mdescLeft">&#160;</td><td class="mdescRight">Flag indicating whether the tensor has been left aligned by a kernel and therefore needs shifting.  <a href="#a95acb432c46c1f3a6b77eb88944e6c02">More...</a><br /></td></tr>
<tr class="separator:a95acb432c46c1f3a6b77eb88944e6c02"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a69cfba8177b402abe134fdad5fe4c7dc"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_g_c_tensor.xhtml#a69cfba8177b402abe134fdad5fe4c7dc">set_needs_shifting</a> (bool <a class="el" href="classarm__compute_1_1_i_g_c_tensor.xhtml#a95acb432c46c1f3a6b77eb88944e6c02">needs_shifting</a>)</td></tr>
<tr class="memdesc:a69cfba8177b402abe134fdad5fe4c7dc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the flag indicating whether or not a tensor needs shifting.  <a href="#a69cfba8177b402abe134fdad5fe4c7dc">More...</a><br /></td></tr>
<tr class="separator:a69cfba8177b402abe134fdad5fe4c7dc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1_i_tensor"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1_i_tensor')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a></td></tr>
<tr class="memitem:a0e95dc1e53c361348314873b168ae237 inherit pub_methods_classarm__compute_1_1_i_tensor"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a> () const =0</td></tr>
<tr class="memdesc:a0e95dc1e53c361348314873b168ae237 inherit pub_methods_classarm__compute_1_1_i_tensor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Interface to be implemented by the child class to return the tensor's metadata.  <a href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">More...</a><br /></td></tr>
<tr class="separator:a0e95dc1e53c361348314873b168ae237 inherit pub_methods_classarm__compute_1_1_i_tensor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7e6b5e55a2914b1fb1966310e7733ac4 inherit pub_methods_classarm__compute_1_1_i_tensor"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_tensor.xhtml#a7e6b5e55a2914b1fb1966310e7733ac4">info</a> ()=0</td></tr>
<tr class="memdesc:a7e6b5e55a2914b1fb1966310e7733ac4 inherit pub_methods_classarm__compute_1_1_i_tensor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Interface to be implemented by the child class to return the tensor's metadata.  <a href="classarm__compute_1_1_i_tensor.xhtml#a7e6b5e55a2914b1fb1966310e7733ac4">More...</a><br /></td></tr>
<tr class="separator:a7e6b5e55a2914b1fb1966310e7733ac4 inherit pub_methods_classarm__compute_1_1_i_tensor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4aa2df36743089ac6814d83e7d4b7ffc inherit pub_methods_classarm__compute_1_1_i_tensor"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_tensor.xhtml#a4aa2df36743089ac6814d83e7d4b7ffc">~ITensor</a> ()=default</td></tr>
<tr class="memdesc:a4aa2df36743089ac6814d83e7d4b7ffc inherit pub_methods_classarm__compute_1_1_i_tensor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default virtual destructor.  <a href="classarm__compute_1_1_i_tensor.xhtml#a4aa2df36743089ac6814d83e7d4b7ffc">More...</a><br /></td></tr>
<tr class="separator:a4aa2df36743089ac6814d83e7d4b7ffc inherit pub_methods_classarm__compute_1_1_i_tensor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adbd73147d41e8a640bc299d12613c31e inherit pub_methods_classarm__compute_1_1_i_tensor"><td class="memItemLeft" align="right" valign="top">uint8_t *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_tensor.xhtml#adbd73147d41e8a640bc299d12613c31e">ptr_to_element</a> (const <a class="el" href="classarm__compute_1_1_coordinates.xhtml">Coordinates</a> &amp;id) const</td></tr>
<tr class="memdesc:adbd73147d41e8a640bc299d12613c31e inherit pub_methods_classarm__compute_1_1_i_tensor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return a pointer to the element at the passed coordinates.  <a href="classarm__compute_1_1_i_tensor.xhtml#adbd73147d41e8a640bc299d12613c31e">More...</a><br /></td></tr>
<tr class="separator:adbd73147d41e8a640bc299d12613c31e inherit pub_methods_classarm__compute_1_1_i_tensor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4a774ad8d5f4837f3d7de1876d367c5b inherit pub_methods_classarm__compute_1_1_i_tensor"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_tensor.xhtml#a4a774ad8d5f4837f3d7de1876d367c5b">copy_from</a> (const <a class="el" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> &amp;src)</td></tr>
<tr class="memdesc:a4a774ad8d5f4837f3d7de1876d367c5b inherit pub_methods_classarm__compute_1_1_i_tensor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copy the content of another tensor.  <a href="classarm__compute_1_1_i_tensor.xhtml#a4a774ad8d5f4837f3d7de1876d367c5b">More...</a><br /></td></tr>
<tr class="separator:a4a774ad8d5f4837f3d7de1876d367c5b inherit pub_methods_classarm__compute_1_1_i_tensor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ade74189c92e70baa2848986c10dbe7ef inherit pub_methods_classarm__compute_1_1_i_tensor"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_tensor.xhtml#ade74189c92e70baa2848986c10dbe7ef">print</a> (std::ostream &amp;s, <a class="el" href="structarm__compute_1_1_i_o_format_info.xhtml">IOFormatInfo</a> io_fmt=<a class="el" href="structarm__compute_1_1_i_o_format_info.xhtml">IOFormatInfo</a>()) const</td></tr>
<tr class="memdesc:ade74189c92e70baa2848986c10dbe7ef inherit pub_methods_classarm__compute_1_1_i_tensor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Print a tensor to a given stream using user defined formatting information.  <a href="classarm__compute_1_1_i_tensor.xhtml#ade74189c92e70baa2848986c10dbe7ef">More...</a><br /></td></tr>
<tr class="separator:ade74189c92e70baa2848986c10dbe7ef inherit pub_methods_classarm__compute_1_1_i_tensor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a209ea2ddfdfa80703799c92da8beb643 inherit pub_methods_classarm__compute_1_1_i_tensor"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_tensor.xhtml#a209ea2ddfdfa80703799c92da8beb643">is_used</a> () const</td></tr>
<tr class="memdesc:a209ea2ddfdfa80703799c92da8beb643 inherit pub_methods_classarm__compute_1_1_i_tensor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Flags if the tensor is used or not.  <a href="classarm__compute_1_1_i_tensor.xhtml#a209ea2ddfdfa80703799c92da8beb643">More...</a><br /></td></tr>
<tr class="separator:a209ea2ddfdfa80703799c92da8beb643 inherit pub_methods_classarm__compute_1_1_i_tensor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9bc00234de9adf8c99a21eb1d7d494c2 inherit pub_methods_classarm__compute_1_1_i_tensor"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_tensor.xhtml#a9bc00234de9adf8c99a21eb1d7d494c2">mark_as_unused</a> () const</td></tr>
<tr class="memdesc:a9bc00234de9adf8c99a21eb1d7d494c2 inherit pub_methods_classarm__compute_1_1_i_tensor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Marks a tensor as unused.  <a href="classarm__compute_1_1_i_tensor.xhtml#a9bc00234de9adf8c99a21eb1d7d494c2">More...</a><br /></td></tr>
<tr class="separator:a9bc00234de9adf8c99a21eb1d7d494c2 inherit pub_methods_classarm__compute_1_1_i_tensor"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Interface for GLES Compute tensor. </p>

<p class="definition">Definition at line <a class="el" href="_i_g_c_tensor_8h_source.xhtml#l00035">35</a> of file <a class="el" href="_i_g_c_tensor_8h_source.xhtml">IGCTensor.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a78e2cb61c2ed12459fea5a97728d74d2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a78e2cb61c2ed12459fea5a97728d74d2">&#9670;&nbsp;</a></span>IGCTensor() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_i_g_c_tensor.xhtml">IGCTensor</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Default constructor. </p>

<p class="definition">Definition at line <a class="el" href="_i_g_c_tensor_8cpp_source.xhtml#l00028">28</a> of file <a class="el" href="_i_g_c_tensor_8cpp_source.xhtml">IGCTensor.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;    : _mapping(<span class="keyword">nullptr</span>), _needs_shifting(<span class="keyword">false</span>)</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;{</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a15242f453f1928c3dbc2a30ec08480e6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a15242f453f1928c3dbc2a30ec08480e6">&#9670;&nbsp;</a></span>IGCTensor() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_i_g_c_tensor.xhtml">IGCTensor</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_g_c_tensor.xhtml">IGCTensor</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prevent instances of this class from being copied (As this class contains pointers) </p>

</div>
</div>
<a id="adcca5090c26cd20e37d2878510b32bad"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adcca5090c26cd20e37d2878510b32bad">&#9670;&nbsp;</a></span>IGCTensor() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_i_g_c_tensor.xhtml">IGCTensor</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_g_c_tensor.xhtml">IGCTensor</a> &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Allow instances of this class to be moved. </p>

</div>
</div>
<a id="aa5f7b3eca1cadbb4e72617eca3d6faeb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa5f7b3eca1cadbb4e72617eca3d6faeb">&#9670;&nbsp;</a></span>~IGCTensor()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual ~<a class="el" href="classarm__compute_1_1_i_g_c_tensor.xhtml">IGCTensor</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Virtual destructor. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a24954cca5108a24706441fd99a7fb04c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a24954cca5108a24706441fd99a7fb04c">&#9670;&nbsp;</a></span>buffer()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t * buffer </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Interface to be implemented by the child class to return a pointer to CPU memory. </p>
<dl class="section return"><dt>Returns</dt><dd>A CPU pointer to the beginning of the image's allocation. </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_tensor.xhtml#ab988210662dbd3bf32fd563c7dd1bdbf">ITensor</a>.</p>

<p>Reimplemented in <a class="el" href="classarm__compute_1_1_g_c_tensor.xhtml#a24954cca5108a24706441fd99a7fb04c">GCTensor</a>.</p>

<p class="definition">Definition at line <a class="el" href="_i_g_c_tensor_8cpp_source.xhtml#l00051">51</a> of file <a class="el" href="_i_g_c_tensor_8cpp_source.xhtml">IGCTensor.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;{</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <span class="keywordflow">return</span> _mapping;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="ac8bb3912a3ce86b15842e79d0b421204"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac8bb3912a3ce86b15842e79d0b421204">&#9670;&nbsp;</a></span>clear()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void clear </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Clear the contents of the tensor synchronously. </p>

<p class="definition">Definition at line <a class="el" href="_i_g_c_tensor_8cpp_source.xhtml#l00044">44</a> of file <a class="el" href="_i_g_c_tensor_8cpp_source.xhtml">IGCTensor.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;{</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    this-&gt;<a class="code" href="classarm__compute_1_1_i_g_c_tensor.xhtml#a14c53d2d17be6fa8a2c9861527c7b002">map</a>();</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    std::memset(static_cast&lt;void *&gt;(_mapping), 0, this-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;total_size());</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    this-&gt;<a class="code" href="classarm__compute_1_1_i_g_c_tensor.xhtml#a1ffeb3b5abb3d61f62b58a391816201c">unmap</a>();</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;}</div><div class="ttc" id="classarm__compute_1_1_i_g_c_tensor_xhtml_a14c53d2d17be6fa8a2c9861527c7b002"><div class="ttname"><a href="classarm__compute_1_1_i_g_c_tensor.xhtml#a14c53d2d17be6fa8a2c9861527c7b002">arm_compute::IGCTensor::map</a></div><div class="ttdeci">void map(bool blocking=true)</div><div class="ttdoc">Map on an allocated buffer.</div><div class="ttdef"><b>Definition:</b> <a href="_i_g_c_tensor_8cpp_source.xhtml#l00033">IGCTensor.cpp:33</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_g_c_tensor_xhtml_a1ffeb3b5abb3d61f62b58a391816201c"><div class="ttname"><a href="classarm__compute_1_1_i_g_c_tensor.xhtml#a1ffeb3b5abb3d61f62b58a391816201c">arm_compute::IGCTensor::unmap</a></div><div class="ttdeci">void unmap()</div><div class="ttdoc">Unmap an allocated and mapped buffer.</div><div class="ttdef"><b>Definition:</b> <a href="_i_g_c_tensor_8cpp_source.xhtml#l00038">IGCTensor.cpp:38</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_xhtml_a0e95dc1e53c361348314873b168ae237"><div class="ttname"><a href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">arm_compute::ITensor::info</a></div><div class="ttdeci">virtual ITensorInfo * info() const =0</div><div class="ttdoc">Interface to be implemented by the child class to return the tensor's metadata.</div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">ITensor::info()</a>, <a class="el" href="_i_g_c_tensor_8cpp_source.xhtml#l00033">IGCTensor::map()</a>, and <a class="el" href="_i_g_c_tensor_8cpp_source.xhtml#l00038">IGCTensor::unmap()</a>.</p>

</div>
</div>
<a id="a78046d8dc1b472a13fe70d8862f2edaf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a78046d8dc1b472a13fe70d8862f2edaf">&#9670;&nbsp;</a></span>gc_buffer()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual GLuint gc_buffer </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Interface to be implemented by the child class to return the tensor's gles compute buffer id. </p>
<dl class="section return"><dt>Returns</dt><dd>A SSBO buffer id. </dd></dl>

<p>Implemented in <a class="el" href="classarm__compute_1_1_g_c_tensor.xhtml#acccf4173f8c67e6f93ea3353c9590c9e">GCTensor</a>.</p>

</div>
</div>
<a id="a14c53d2d17be6fa8a2c9861527c7b002"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a14c53d2d17be6fa8a2c9861527c7b002">&#9670;&nbsp;</a></span>map()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void map </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>blocking</em> = <code>true</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Map on an allocated buffer. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">blocking</td><td>(Optional) If true, then the mapping will be ready to use by the time this method returns, else it is the caller's responsibility to flush the queue and wait for the mapping operation to have completed before using the returned mapping pointer. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_i_g_c_tensor_8cpp_source.xhtml#l00033">33</a> of file <a class="el" href="_i_g_c_tensor_8cpp_source.xhtml">IGCTensor.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;{</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    _mapping = do_map(blocking);</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;}</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_i_g_c_tensor_8cpp_source.xhtml#l00044">IGCTensor::clear()</a>, <a class="el" href="_g_c_tensor_8cpp_source.xhtml#l00064">GCTensor::map()</a>, and <a class="el" href="_g_l_e_s___c_o_m_p_u_t_e_2_helper_8h_source.xhtml#l00081">arm_compute::test::print_tensor()</a>.</p>

</div>
</div>
<a id="a95acb432c46c1f3a6b77eb88944e6c02"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a95acb432c46c1f3a6b77eb88944e6c02">&#9670;&nbsp;</a></span>needs_shifting()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool needs_shifting </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Flag indicating whether the tensor has been left aligned by a kernel and therefore needs shifting. </p>
<dl class="section return"><dt>Returns</dt><dd>True if the tensor is left aligned. </dd></dl>

<p class="definition">Definition at line <a class="el" href="_i_g_c_tensor_8cpp_source.xhtml#l00056">56</a> of file <a class="el" href="_i_g_c_tensor_8cpp_source.xhtml">IGCTensor.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;{</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <span class="keywordflow">return</span> _needs_shifting;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;}</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_g_c_tensor_shift_kernel_8cpp_source.xhtml#l00077">GCTensorShiftKernel::run()</a>, and <a class="el" href="_i_g_c_tensor_8cpp_source.xhtml#l00061">IGCTensor::set_needs_shifting()</a>.</p>

</div>
</div>
<a id="a53ba7801ed7dbf945a0413addd6dc990"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a53ba7801ed7dbf945a0413addd6dc990">&#9670;&nbsp;</a></span>operator=() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_i_g_c_tensor.xhtml">IGCTensor</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_g_c_tensor.xhtml">IGCTensor</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prevent instances of this class from being copy assigned (As this class contains pointers) </p>

</div>
</div>
<a id="aa49cf1d6ea350774509911cad4903ad6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa49cf1d6ea350774509911cad4903ad6">&#9670;&nbsp;</a></span>operator=() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_i_g_c_tensor.xhtml">IGCTensor</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_g_c_tensor.xhtml">IGCTensor</a> &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Allow instances of this class to be moved. </p>

</div>
</div>
<a id="a69cfba8177b402abe134fdad5fe4c7dc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a69cfba8177b402abe134fdad5fe4c7dc">&#9670;&nbsp;</a></span>set_needs_shifting()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void set_needs_shifting </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>needs_shifting</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set the flag indicating whether or not a tensor needs shifting. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">needs_shifting</td><td>Indicates if the tensor is left aligned or not. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_i_g_c_tensor_8cpp_source.xhtml#l00061">61</a> of file <a class="el" href="_i_g_c_tensor_8cpp_source.xhtml">IGCTensor.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;{</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    _needs_shifting = <a class="code" href="classarm__compute_1_1_i_g_c_tensor.xhtml#a95acb432c46c1f3a6b77eb88944e6c02">needs_shifting</a>;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;}</div><div class="ttc" id="classarm__compute_1_1_i_g_c_tensor_xhtml_a95acb432c46c1f3a6b77eb88944e6c02"><div class="ttname"><a href="classarm__compute_1_1_i_g_c_tensor.xhtml#a95acb432c46c1f3a6b77eb88944e6c02">arm_compute::IGCTensor::needs_shifting</a></div><div class="ttdeci">bool needs_shifting() const</div><div class="ttdoc">Flag indicating whether the tensor has been left aligned by a kernel and therefore needs shifting.</div><div class="ttdef"><b>Definition:</b> <a href="_i_g_c_tensor_8cpp_source.xhtml#l00056">IGCTensor.cpp:56</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_i_g_c_tensor_8cpp_source.xhtml#l00056">IGCTensor::needs_shifting()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_g_c_depthwise_convolution_layer3x3_kernel_8cpp_source.xhtml#l00205">GCDepthwiseConvolutionLayer3x3Kernel::run()</a>, <a class="el" href="_g_c_activation_layer_kernel_8cpp_source.xhtml#l00104">GCActivationLayerKernel::run()</a>, <a class="el" href="_g_c_depth_concatenate_layer_kernel_8cpp_source.xhtml#l00087">GCDepthConcatenateLayerKernel::run()</a>, <a class="el" href="_g_c_pooling_layer_kernel_8cpp_source.xhtml#l00331">GCPoolingLayerKernel::run()</a>, <a class="el" href="_g_c_arithmetic_addition_kernel_8cpp_source.xhtml#l00131">GCArithmeticAdditionKernel::run()</a>, <a class="el" href="_g_c_normalize_planar_y_u_v_layer_kernel_8cpp_source.xhtml#l00132">GCNormalizePlanarYUVLayerKernel::run()</a>, and <a class="el" href="_g_c_batch_normalization_layer_kernel_8cpp_source.xhtml#l00205">GCBatchNormalizationLayerKernel::run()</a>.</p>

</div>
</div>
<a id="a1ffeb3b5abb3d61f62b58a391816201c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1ffeb3b5abb3d61f62b58a391816201c">&#9670;&nbsp;</a></span>unmap()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void unmap </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Unmap an allocated and mapped buffer. </p>

<p class="definition">Definition at line <a class="el" href="_i_g_c_tensor_8cpp_source.xhtml#l00038">38</a> of file <a class="el" href="_i_g_c_tensor_8cpp_source.xhtml">IGCTensor.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;{</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    do_unmap();</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    _mapping = <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;}</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_i_g_c_tensor_8cpp_source.xhtml#l00044">IGCTensor::clear()</a>, <a class="el" href="_g_l_e_s___c_o_m_p_u_t_e_2_helper_8h_source.xhtml#l00081">arm_compute::test::print_tensor()</a>, and <a class="el" href="_g_c_tensor_8cpp_source.xhtml#l00069">GCTensor::unmap()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>arm_compute/core/GLES_COMPUTE/<a class="el" href="_i_g_c_tensor_8h_source.xhtml">IGCTensor.h</a></li>
<li>src/core/GLES_COMPUTE/<a class="el" href="_i_g_c_tensor_8cpp_source.xhtml">IGCTensor.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1_i_g_c_tensor.xhtml">IGCTensor</a></li>
    <li class="footer">Generated on Fri Feb 21 2020 11:10:28 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
