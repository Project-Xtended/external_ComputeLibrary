<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: CLGEMMMatrixMultiplyKernel Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.02.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pub-attribs">Data Fields</a>  </div>
  <div class="headertitle">
<div class="title">CLGEMMMatrixMultiplyKernel Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>OpenCL kernel to multiply two input matrices "A" and "B" and add a martix "C" if provided.  
 <a href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_c_l_g_e_m_m_matrix_multiply_kernel_8h_source.xhtml">CLGEMMMatrixMultiplyKernel.h</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for CLGEMMMatrixMultiplyKernel:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel__coll__graph.svg" width="215" height="247"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ac46a1c8a20b46838c9e894f703ddd3ee"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#ac46a1c8a20b46838c9e894f703ddd3ee">CLGEMMMatrixMultiplyKernel</a> ()</td></tr>
<tr class="memdesc:ac46a1c8a20b46838c9e894f703ddd3ee"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor.  <a href="#ac46a1c8a20b46838c9e894f703ddd3ee">More...</a><br /></td></tr>
<tr class="separator:ac46a1c8a20b46838c9e894f703ddd3ee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab7ab139607e3a7812f2a7eb941ac7aa8"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#ab7ab139607e3a7812f2a7eb941ac7aa8">CLGEMMMatrixMultiplyKernel</a> (const <a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml">CLGEMMMatrixMultiplyKernel</a> &amp;)=delete</td></tr>
<tr class="memdesc:ab7ab139607e3a7812f2a7eb941ac7aa8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied (As this class contains pointers)  <a href="#ab7ab139607e3a7812f2a7eb941ac7aa8">More...</a><br /></td></tr>
<tr class="separator:ab7ab139607e3a7812f2a7eb941ac7aa8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aea377825b4153d8ea48905038cbb0ff1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml">CLGEMMMatrixMultiplyKernel</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#aea377825b4153d8ea48905038cbb0ff1">operator=</a> (const <a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml">CLGEMMMatrixMultiplyKernel</a> &amp;)=delete</td></tr>
<tr class="memdesc:aea377825b4153d8ea48905038cbb0ff1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied (As this class contains pointers)  <a href="#aea377825b4153d8ea48905038cbb0ff1">More...</a><br /></td></tr>
<tr class="separator:aea377825b4153d8ea48905038cbb0ff1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4805eb2e5f4597f660f41753e9748eb8"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#a4805eb2e5f4597f660f41753e9748eb8">CLGEMMMatrixMultiplyKernel</a> (<a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml">CLGEMMMatrixMultiplyKernel</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:a4805eb2e5f4597f660f41753e9748eb8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be moved.  <a href="#a4805eb2e5f4597f660f41753e9748eb8">More...</a><br /></td></tr>
<tr class="separator:a4805eb2e5f4597f660f41753e9748eb8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa158230a3f3ea998530f91a14bb8e5a2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml">CLGEMMMatrixMultiplyKernel</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#aa158230a3f3ea998530f91a14bb8e5a2">operator=</a> (<a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml">CLGEMMMatrixMultiplyKernel</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:aa158230a3f3ea998530f91a14bb8e5a2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be moved.  <a href="#aa158230a3f3ea998530f91a14bb8e5a2">More...</a><br /></td></tr>
<tr class="separator:aa158230a3f3ea998530f91a14bb8e5a2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a46bee71bbf58053c85de3f5450566584"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#a46bee71bbf58053c85de3f5450566584">configure</a> (const <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *input0, const <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *input1, const <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *input2, <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *output, float alpha, float beta=0.f, bool is_interleaved_transposed=true, const <a class="el" href="classarm__compute_1_1_g_e_m_m_reshape_info.xhtml">GEMMReshapeInfo</a> &amp;reshape_info=<a class="el" href="classarm__compute_1_1_g_e_m_m_reshape_info.xhtml">GEMMReshapeInfo</a>(), bool fp_mixed_precision=false, const <a class="el" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a> &amp;activation_info=<a class="el" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a>())</td></tr>
<tr class="memdesc:a46bee71bbf58053c85de3f5450566584"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialise the kernel's input, output and alpha.  <a href="#a46bee71bbf58053c85de3f5450566584">More...</a><br /></td></tr>
<tr class="separator:a46bee71bbf58053c85de3f5450566584"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a493987e85723a8000eb26d1f00e2ad0e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#a493987e85723a8000eb26d1f00e2ad0e">run</a> (const <a class="el" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;<a class="el" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>, cl::CommandQueue &amp;queue) override</td></tr>
<tr class="memdesc:a493987e85723a8000eb26d1f00e2ad0e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enqueue the OpenCL kernel to process the given window on the passed OpenCL command queue.  <a href="#a493987e85723a8000eb26d1f00e2ad0e">More...</a><br /></td></tr>
<tr class="separator:a493987e85723a8000eb26d1f00e2ad0e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1_i_c_l_kernel"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1_i_c_l_kernel')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1_i_c_l_kernel.xhtml">ICLKernel</a></td></tr>
<tr class="memitem:a6b10e96ce90bf901d17def86b874b019 inherit pub_methods_classarm__compute_1_1_i_c_l_kernel"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_kernel.xhtml#a6b10e96ce90bf901d17def86b874b019">ICLKernel</a> ()</td></tr>
<tr class="memdesc:a6b10e96ce90bf901d17def86b874b019 inherit pub_methods_classarm__compute_1_1_i_c_l_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="classarm__compute_1_1_i_c_l_kernel.xhtml#a6b10e96ce90bf901d17def86b874b019">More...</a><br /></td></tr>
<tr class="separator:a6b10e96ce90bf901d17def86b874b019 inherit pub_methods_classarm__compute_1_1_i_c_l_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae5121015ab09ece4d470f50c7ffe198e inherit pub_methods_classarm__compute_1_1_i_c_l_kernel"><td class="memItemLeft" align="right" valign="top">cl::Kernel &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_kernel.xhtml#ae5121015ab09ece4d470f50c7ffe198e">kernel</a> ()</td></tr>
<tr class="memdesc:ae5121015ab09ece4d470f50c7ffe198e inherit pub_methods_classarm__compute_1_1_i_c_l_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a reference to the OpenCL kernel of this object.  <a href="classarm__compute_1_1_i_c_l_kernel.xhtml#ae5121015ab09ece4d470f50c7ffe198e">More...</a><br /></td></tr>
<tr class="separator:ae5121015ab09ece4d470f50c7ffe198e inherit pub_methods_classarm__compute_1_1_i_c_l_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9331d385192a50adf74d3af40ce0fa20 inherit pub_methods_classarm__compute_1_1_i_c_l_kernel"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a9331d385192a50adf74d3af40ce0fa20 inherit pub_methods_classarm__compute_1_1_i_c_l_kernel"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_kernel.xhtml#a9331d385192a50adf74d3af40ce0fa20">add_1D_array_argument</a> (unsigned int &amp;idx, const <a class="el" href="classarm__compute_1_1_i_c_l_array.xhtml">ICLArray</a>&lt; T &gt; *array, const <a class="el" href="classarm__compute_1_1_strides.xhtml">Strides</a> &amp;strides, unsigned int num_dimensions, const <a class="el" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;<a class="el" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>)</td></tr>
<tr class="memdesc:a9331d385192a50adf74d3af40ce0fa20 inherit pub_methods_classarm__compute_1_1_i_c_l_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">Add the passed 1D array's parameters to the object's kernel's arguments starting from the index idx.  <a href="classarm__compute_1_1_i_c_l_kernel.xhtml#a9331d385192a50adf74d3af40ce0fa20">More...</a><br /></td></tr>
<tr class="separator:a9331d385192a50adf74d3af40ce0fa20 inherit pub_methods_classarm__compute_1_1_i_c_l_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a479e7043e65dc87de35d374e108510f7 inherit pub_methods_classarm__compute_1_1_i_c_l_kernel"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_kernel.xhtml#a479e7043e65dc87de35d374e108510f7">add_1D_tensor_argument</a> (unsigned int &amp;idx, const <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *tensor, const <a class="el" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;<a class="el" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>)</td></tr>
<tr class="memdesc:a479e7043e65dc87de35d374e108510f7 inherit pub_methods_classarm__compute_1_1_i_c_l_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">Add the passed 1D tensor's parameters to the object's kernel's arguments starting from the index idx.  <a href="classarm__compute_1_1_i_c_l_kernel.xhtml#a479e7043e65dc87de35d374e108510f7">More...</a><br /></td></tr>
<tr class="separator:a479e7043e65dc87de35d374e108510f7 inherit pub_methods_classarm__compute_1_1_i_c_l_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a25965a58d98e44856da286925792a2f7 inherit pub_methods_classarm__compute_1_1_i_c_l_kernel"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_kernel.xhtml#a25965a58d98e44856da286925792a2f7">add_1D_tensor_argument_if</a> (bool cond, unsigned int &amp;idx, const <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *tensor, const <a class="el" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;<a class="el" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>)</td></tr>
<tr class="memdesc:a25965a58d98e44856da286925792a2f7 inherit pub_methods_classarm__compute_1_1_i_c_l_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">Add the passed 1D tensor's parameters to the object's kernel's arguments starting from the index idx if the condition is true.  <a href="classarm__compute_1_1_i_c_l_kernel.xhtml#a25965a58d98e44856da286925792a2f7">More...</a><br /></td></tr>
<tr class="separator:a25965a58d98e44856da286925792a2f7 inherit pub_methods_classarm__compute_1_1_i_c_l_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac74dad3e61f79334f5e73f3c3ac603cb inherit pub_methods_classarm__compute_1_1_i_c_l_kernel"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_kernel.xhtml#ac74dad3e61f79334f5e73f3c3ac603cb">add_2D_tensor_argument</a> (unsigned int &amp;idx, const <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *tensor, const <a class="el" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;<a class="el" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>)</td></tr>
<tr class="memdesc:ac74dad3e61f79334f5e73f3c3ac603cb inherit pub_methods_classarm__compute_1_1_i_c_l_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">Add the passed 2D tensor's parameters to the object's kernel's arguments starting from the index idx.  <a href="classarm__compute_1_1_i_c_l_kernel.xhtml#ac74dad3e61f79334f5e73f3c3ac603cb">More...</a><br /></td></tr>
<tr class="separator:ac74dad3e61f79334f5e73f3c3ac603cb inherit pub_methods_classarm__compute_1_1_i_c_l_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2ada6044648832c64532588f75303b44 inherit pub_methods_classarm__compute_1_1_i_c_l_kernel"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_kernel.xhtml#a2ada6044648832c64532588f75303b44">add_2D_tensor_argument_if</a> (bool cond, unsigned int &amp;idx, const <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *tensor, const <a class="el" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;<a class="el" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>)</td></tr>
<tr class="memdesc:a2ada6044648832c64532588f75303b44 inherit pub_methods_classarm__compute_1_1_i_c_l_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">Add the passed 2D tensor's parameters to the object's kernel's arguments starting from the index idx if the condition is true.  <a href="classarm__compute_1_1_i_c_l_kernel.xhtml#a2ada6044648832c64532588f75303b44">More...</a><br /></td></tr>
<tr class="separator:a2ada6044648832c64532588f75303b44 inherit pub_methods_classarm__compute_1_1_i_c_l_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a28f5847162f352444c6ac1825d0e99c7 inherit pub_methods_classarm__compute_1_1_i_c_l_kernel"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_kernel.xhtml#a28f5847162f352444c6ac1825d0e99c7">add_3D_tensor_argument</a> (unsigned int &amp;idx, const <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *tensor, const <a class="el" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;<a class="el" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>)</td></tr>
<tr class="memdesc:a28f5847162f352444c6ac1825d0e99c7 inherit pub_methods_classarm__compute_1_1_i_c_l_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">Add the passed 3D tensor's parameters to the object's kernel's arguments starting from the index idx.  <a href="classarm__compute_1_1_i_c_l_kernel.xhtml#a28f5847162f352444c6ac1825d0e99c7">More...</a><br /></td></tr>
<tr class="separator:a28f5847162f352444c6ac1825d0e99c7 inherit pub_methods_classarm__compute_1_1_i_c_l_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a33e09c946b338fbfc780a9d1c66e68ad inherit pub_methods_classarm__compute_1_1_i_c_l_kernel"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_kernel.xhtml#a33e09c946b338fbfc780a9d1c66e68ad">add_4D_tensor_argument</a> (unsigned int &amp;idx, const <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *tensor, const <a class="el" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;<a class="el" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>)</td></tr>
<tr class="memdesc:a33e09c946b338fbfc780a9d1c66e68ad inherit pub_methods_classarm__compute_1_1_i_c_l_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">Add the passed 4D tensor's parameters to the object's kernel's arguments starting from the index idx.  <a href="classarm__compute_1_1_i_c_l_kernel.xhtml#a33e09c946b338fbfc780a9d1c66e68ad">More...</a><br /></td></tr>
<tr class="separator:a33e09c946b338fbfc780a9d1c66e68ad inherit pub_methods_classarm__compute_1_1_i_c_l_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a50f427a1d9419800972b9e03c4034311 inherit pub_methods_classarm__compute_1_1_i_c_l_kernel"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a50f427a1d9419800972b9e03c4034311 inherit pub_methods_classarm__compute_1_1_i_c_l_kernel"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_kernel.xhtml#a50f427a1d9419800972b9e03c4034311">add_argument</a> (unsigned int &amp;idx, T value)</td></tr>
<tr class="memdesc:a50f427a1d9419800972b9e03c4034311 inherit pub_methods_classarm__compute_1_1_i_c_l_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">Add the passed parameters to the object's kernel's arguments starting from the index idx.  <a href="classarm__compute_1_1_i_c_l_kernel.xhtml#a50f427a1d9419800972b9e03c4034311">More...</a><br /></td></tr>
<tr class="separator:a50f427a1d9419800972b9e03c4034311 inherit pub_methods_classarm__compute_1_1_i_c_l_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad356b88c8f61267d593d9ed99835bde9 inherit pub_methods_classarm__compute_1_1_i_c_l_kernel"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_kernel.xhtml#ad356b88c8f61267d593d9ed99835bde9">set_lws_hint</a> (const cl::NDRange &amp;<a class="el" href="classarm__compute_1_1_i_c_l_kernel.xhtml#ab9f813c25ed75ea7b7ac2fa3926a8f55">lws_hint</a>)</td></tr>
<tr class="memdesc:ad356b88c8f61267d593d9ed99835bde9 inherit pub_methods_classarm__compute_1_1_i_c_l_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the Local-Workgroup-Size hint.  <a href="classarm__compute_1_1_i_c_l_kernel.xhtml#ad356b88c8f61267d593d9ed99835bde9">More...</a><br /></td></tr>
<tr class="separator:ad356b88c8f61267d593d9ed99835bde9 inherit pub_methods_classarm__compute_1_1_i_c_l_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab9f813c25ed75ea7b7ac2fa3926a8f55 inherit pub_methods_classarm__compute_1_1_i_c_l_kernel"><td class="memItemLeft" align="right" valign="top">cl::NDRange&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_kernel.xhtml#ab9f813c25ed75ea7b7ac2fa3926a8f55">lws_hint</a> () const</td></tr>
<tr class="memdesc:ab9f813c25ed75ea7b7ac2fa3926a8f55 inherit pub_methods_classarm__compute_1_1_i_c_l_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the Local-Workgroup-Size hint.  <a href="classarm__compute_1_1_i_c_l_kernel.xhtml#ab9f813c25ed75ea7b7ac2fa3926a8f55">More...</a><br /></td></tr>
<tr class="separator:ab9f813c25ed75ea7b7ac2fa3926a8f55 inherit pub_methods_classarm__compute_1_1_i_c_l_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8f7f6ab59fc0e601d750b83e75a398eb inherit pub_methods_classarm__compute_1_1_i_c_l_kernel"><td class="memItemLeft" align="right" valign="top">const std::string &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_kernel.xhtml#a8f7f6ab59fc0e601d750b83e75a398eb">config_id</a> () const</td></tr>
<tr class="memdesc:a8f7f6ab59fc0e601d750b83e75a398eb inherit pub_methods_classarm__compute_1_1_i_c_l_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the configuration ID.  <a href="classarm__compute_1_1_i_c_l_kernel.xhtml#a8f7f6ab59fc0e601d750b83e75a398eb">More...</a><br /></td></tr>
<tr class="separator:a8f7f6ab59fc0e601d750b83e75a398eb inherit pub_methods_classarm__compute_1_1_i_c_l_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad5ba9d34a3a855bf1dd2e36316ff550a inherit pub_methods_classarm__compute_1_1_i_c_l_kernel"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_kernel.xhtml#ad5ba9d34a3a855bf1dd2e36316ff550a">set_target</a> (<a class="el" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3">GPUTarget</a> target)</td></tr>
<tr class="memdesc:ad5ba9d34a3a855bf1dd2e36316ff550a inherit pub_methods_classarm__compute_1_1_i_c_l_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the targeted GPU architecture.  <a href="classarm__compute_1_1_i_c_l_kernel.xhtml#ad5ba9d34a3a855bf1dd2e36316ff550a">More...</a><br /></td></tr>
<tr class="separator:ad5ba9d34a3a855bf1dd2e36316ff550a inherit pub_methods_classarm__compute_1_1_i_c_l_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a57e5f498fcbfc25c28b8496dfa3fc33c inherit pub_methods_classarm__compute_1_1_i_c_l_kernel"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_kernel.xhtml#a57e5f498fcbfc25c28b8496dfa3fc33c">set_target</a> (cl::Device &amp;device)</td></tr>
<tr class="memdesc:a57e5f498fcbfc25c28b8496dfa3fc33c inherit pub_methods_classarm__compute_1_1_i_c_l_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the targeted GPU architecture according to the CL device.  <a href="classarm__compute_1_1_i_c_l_kernel.xhtml#a57e5f498fcbfc25c28b8496dfa3fc33c">More...</a><br /></td></tr>
<tr class="separator:a57e5f498fcbfc25c28b8496dfa3fc33c inherit pub_methods_classarm__compute_1_1_i_c_l_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa550ff0352ff2388e02f7b0a41bf5fe7 inherit pub_methods_classarm__compute_1_1_i_c_l_kernel"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3">GPUTarget</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_kernel.xhtml#aa550ff0352ff2388e02f7b0a41bf5fe7">get_target</a> () const</td></tr>
<tr class="memdesc:aa550ff0352ff2388e02f7b0a41bf5fe7 inherit pub_methods_classarm__compute_1_1_i_c_l_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the targeted GPU architecture.  <a href="classarm__compute_1_1_i_c_l_kernel.xhtml#aa550ff0352ff2388e02f7b0a41bf5fe7">More...</a><br /></td></tr>
<tr class="separator:aa550ff0352ff2388e02f7b0a41bf5fe7 inherit pub_methods_classarm__compute_1_1_i_c_l_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abca336f832d730e8494049bd714df60a inherit pub_methods_classarm__compute_1_1_i_c_l_kernel"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_kernel.xhtml#abca336f832d730e8494049bd714df60a">get_max_workgroup_size</a> ()</td></tr>
<tr class="memdesc:abca336f832d730e8494049bd714df60a inherit pub_methods_classarm__compute_1_1_i_c_l_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the maximum workgroup size for the device the <a class="el" href="classarm__compute_1_1_c_l_kernel_library.xhtml" title="CLKernelLibrary class.">CLKernelLibrary</a> uses.  <a href="classarm__compute_1_1_i_c_l_kernel.xhtml#abca336f832d730e8494049bd714df60a">More...</a><br /></td></tr>
<tr class="separator:abca336f832d730e8494049bd714df60a inherit pub_methods_classarm__compute_1_1_i_c_l_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2d7c6b5f3332604ad6a637457f65c342 inherit pub_methods_classarm__compute_1_1_i_c_l_kernel"><td class="memTemplParams" colspan="2">template&lt;typename T , unsigned int dimension_size&gt; </td></tr>
<tr class="memitem:a2d7c6b5f3332604ad6a637457f65c342 inherit pub_methods_classarm__compute_1_1_i_c_l_kernel"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_kernel.xhtml#a2d7c6b5f3332604ad6a637457f65c342">add_array_argument</a> (unsigned &amp;idx, const <a class="el" href="classarm__compute_1_1_i_c_l_array.xhtml">ICLArray</a>&lt; T &gt; *array, const <a class="el" href="classarm__compute_1_1_strides.xhtml">Strides</a> &amp;strides, unsigned int num_dimensions, const <a class="el" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;<a class="el" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>)</td></tr>
<tr class="memdesc:a2d7c6b5f3332604ad6a637457f65c342 inherit pub_methods_classarm__compute_1_1_i_c_l_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">Add the passed array's parameters to the object's kernel's arguments starting from the index idx.  <a href="classarm__compute_1_1_i_c_l_kernel.xhtml#a2d7c6b5f3332604ad6a637457f65c342">More...</a><br /></td></tr>
<tr class="separator:a2d7c6b5f3332604ad6a637457f65c342 inherit pub_methods_classarm__compute_1_1_i_c_l_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa0191633c258a30cc27e35b99b663aac inherit pub_methods_classarm__compute_1_1_i_c_l_kernel"><td class="memTemplParams" colspan="2">template&lt;unsigned int dimension_size&gt; </td></tr>
<tr class="memitem:aa0191633c258a30cc27e35b99b663aac inherit pub_methods_classarm__compute_1_1_i_c_l_kernel"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_kernel.xhtml#aa0191633c258a30cc27e35b99b663aac">add_tensor_argument</a> (unsigned &amp;idx, const <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *tensor, const <a class="el" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;<a class="el" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>)</td></tr>
<tr class="separator:aa0191633c258a30cc27e35b99b663aac inherit pub_methods_classarm__compute_1_1_i_c_l_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1_i_kernel"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1_i_kernel')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1_i_kernel.xhtml">IKernel</a></td></tr>
<tr class="memitem:a7250cb8cbaa4104a93a2d77155085507 inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_kernel.xhtml#a7250cb8cbaa4104a93a2d77155085507">IKernel</a> ()</td></tr>
<tr class="memdesc:a7250cb8cbaa4104a93a2d77155085507 inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="classarm__compute_1_1_i_kernel.xhtml#a7250cb8cbaa4104a93a2d77155085507">More...</a><br /></td></tr>
<tr class="separator:a7250cb8cbaa4104a93a2d77155085507 inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a341b60d15a5e12a5b8f3825194dd3b12 inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_kernel.xhtml#a341b60d15a5e12a5b8f3825194dd3b12">~IKernel</a> ()=default</td></tr>
<tr class="memdesc:a341b60d15a5e12a5b8f3825194dd3b12 inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor.  <a href="classarm__compute_1_1_i_kernel.xhtml#a341b60d15a5e12a5b8f3825194dd3b12">More...</a><br /></td></tr>
<tr class="separator:a341b60d15a5e12a5b8f3825194dd3b12 inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0466ee6ce6552c87595f0e88e73eeb1b inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_kernel.xhtml#a0466ee6ce6552c87595f0e88e73eeb1b">is_parallelisable</a> () const</td></tr>
<tr class="memdesc:a0466ee6ce6552c87595f0e88e73eeb1b inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">Indicates whether or not the kernel is parallelisable.  <a href="classarm__compute_1_1_i_kernel.xhtml#a0466ee6ce6552c87595f0e88e73eeb1b">More...</a><br /></td></tr>
<tr class="separator:a0466ee6ce6552c87595f0e88e73eeb1b inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4b3a97ba5dded504a2f2261c078493dd inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="structarm__compute_1_1_border_size.xhtml">BorderSize</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_kernel.xhtml#a4b3a97ba5dded504a2f2261c078493dd">border_size</a> () const</td></tr>
<tr class="memdesc:a4b3a97ba5dded504a2f2261c078493dd inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">The size of the border for that kernel.  <a href="classarm__compute_1_1_i_kernel.xhtml#a4b3a97ba5dded504a2f2261c078493dd">More...</a><br /></td></tr>
<tr class="separator:a4b3a97ba5dded504a2f2261c078493dd inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad34a46f53686c12a5c5e717cc9617fb6 inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a> () const</td></tr>
<tr class="memdesc:ad34a46f53686c12a5c5e717cc9617fb6 inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">The maximum window the kernel can be executed on.  <a href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">More...</a><br /></td></tr>
<tr class="separator:ad34a46f53686c12a5c5e717cc9617fb6 inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:af45425674a854a3bb158b0b3d0ba9d3e"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classarm__compute_1_1_status.xhtml">Status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#af45425674a854a3bb158b0b3d0ba9d3e">validate</a> (const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *input0, const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *input1, const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *input2, const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *output, float alpha, float beta, bool is_interleaved_transposed, const <a class="el" href="classarm__compute_1_1_g_e_m_m_reshape_info.xhtml">GEMMReshapeInfo</a> &amp;reshape_info, <a class="el" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3">GPUTarget</a> gpu_target, bool fp_mixed_precision=false, const <a class="el" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a> &amp;activation_info=<a class="el" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a>())</td></tr>
<tr class="memdesc:af45425674a854a3bb158b0b3d0ba9d3e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Static function to check if given info will lead to a valid configuration of <a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml">CLGEMMMatrixMultiplyKernel</a>.  <a href="#af45425674a854a3bb158b0b3d0ba9d3e">More...</a><br /></td></tr>
<tr class="separator:af45425674a854a3bb158b0b3d0ba9d3e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_static_methods_classarm__compute_1_1_i_c_l_kernel"><td colspan="2" onclick="javascript:toggleInherit('pub_static_methods_classarm__compute_1_1_i_c_l_kernel')"><img src="closed.png" alt="-"/>&#160;Static Public Member Functions inherited from <a class="el" href="classarm__compute_1_1_i_c_l_kernel.xhtml">ICLKernel</a></td></tr>
<tr class="memitem:a278f0e6c68ca17e71f4c4ff82f360aa0 inherit pub_static_methods_classarm__compute_1_1_i_c_l_kernel"><td class="memItemLeft" align="right" valign="top">static constexpr unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_kernel.xhtml#a278f0e6c68ca17e71f4c4ff82f360aa0">num_arguments_per_1D_array</a> ()</td></tr>
<tr class="memdesc:a278f0e6c68ca17e71f4c4ff82f360aa0 inherit pub_static_methods_classarm__compute_1_1_i_c_l_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the number of arguments enqueued per 1D array object.  <a href="classarm__compute_1_1_i_c_l_kernel.xhtml#a278f0e6c68ca17e71f4c4ff82f360aa0">More...</a><br /></td></tr>
<tr class="separator:a278f0e6c68ca17e71f4c4ff82f360aa0 inherit pub_static_methods_classarm__compute_1_1_i_c_l_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a43b6c5e4b57069c5f61e96dff24c212d inherit pub_static_methods_classarm__compute_1_1_i_c_l_kernel"><td class="memItemLeft" align="right" valign="top">static constexpr unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_kernel.xhtml#a43b6c5e4b57069c5f61e96dff24c212d">num_arguments_per_1D_tensor</a> ()</td></tr>
<tr class="memdesc:a43b6c5e4b57069c5f61e96dff24c212d inherit pub_static_methods_classarm__compute_1_1_i_c_l_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the number of arguments enqueued per 1D tensor object.  <a href="classarm__compute_1_1_i_c_l_kernel.xhtml#a43b6c5e4b57069c5f61e96dff24c212d">More...</a><br /></td></tr>
<tr class="separator:a43b6c5e4b57069c5f61e96dff24c212d inherit pub_static_methods_classarm__compute_1_1_i_c_l_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a45601e0d46621a5b6f2e417d60e5c800 inherit pub_static_methods_classarm__compute_1_1_i_c_l_kernel"><td class="memItemLeft" align="right" valign="top">static constexpr unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_kernel.xhtml#a45601e0d46621a5b6f2e417d60e5c800">num_arguments_per_2D_tensor</a> ()</td></tr>
<tr class="memdesc:a45601e0d46621a5b6f2e417d60e5c800 inherit pub_static_methods_classarm__compute_1_1_i_c_l_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the number of arguments enqueued per 2D tensor object.  <a href="classarm__compute_1_1_i_c_l_kernel.xhtml#a45601e0d46621a5b6f2e417d60e5c800">More...</a><br /></td></tr>
<tr class="separator:a45601e0d46621a5b6f2e417d60e5c800 inherit pub_static_methods_classarm__compute_1_1_i_c_l_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6c9c1e7a7d96743375ca40847f0f12e2 inherit pub_static_methods_classarm__compute_1_1_i_c_l_kernel"><td class="memItemLeft" align="right" valign="top">static constexpr unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_kernel.xhtml#a6c9c1e7a7d96743375ca40847f0f12e2">num_arguments_per_3D_tensor</a> ()</td></tr>
<tr class="memdesc:a6c9c1e7a7d96743375ca40847f0f12e2 inherit pub_static_methods_classarm__compute_1_1_i_c_l_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the number of arguments enqueued per 3D tensor object.  <a href="classarm__compute_1_1_i_c_l_kernel.xhtml#a6c9c1e7a7d96743375ca40847f0f12e2">More...</a><br /></td></tr>
<tr class="separator:a6c9c1e7a7d96743375ca40847f0f12e2 inherit pub_static_methods_classarm__compute_1_1_i_c_l_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a184fdf37587a9314cf12623accea6c73 inherit pub_static_methods_classarm__compute_1_1_i_c_l_kernel"><td class="memItemLeft" align="right" valign="top">static constexpr unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_kernel.xhtml#a184fdf37587a9314cf12623accea6c73">num_arguments_per_4D_tensor</a> ()</td></tr>
<tr class="memdesc:a184fdf37587a9314cf12623accea6c73 inherit pub_static_methods_classarm__compute_1_1_i_c_l_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the number of arguments enqueued per 4D tensor object.  <a href="classarm__compute_1_1_i_c_l_kernel.xhtml#a184fdf37587a9314cf12623accea6c73">More...</a><br /></td></tr>
<tr class="separator:a184fdf37587a9314cf12623accea6c73 inherit pub_static_methods_classarm__compute_1_1_i_c_l_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6c01790e4e3f22f70f69002f0cb1b913 inherit pub_static_methods_classarm__compute_1_1_i_c_l_kernel"><td class="memItemLeft" align="right" valign="top">static cl::NDRange&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_kernel.xhtml#a6c01790e4e3f22f70f69002f0cb1b913">gws_from_window</a> (const <a class="el" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;<a class="el" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>)</td></tr>
<tr class="memdesc:a6c01790e4e3f22f70f69002f0cb1b913 inherit pub_static_methods_classarm__compute_1_1_i_c_l_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the global work size given an execution window.  <a href="classarm__compute_1_1_i_c_l_kernel.xhtml#a6c01790e4e3f22f70f69002f0cb1b913">More...</a><br /></td></tr>
<tr class="separator:a6c01790e4e3f22f70f69002f0cb1b913 inherit pub_static_methods_classarm__compute_1_1_i_c_l_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Data Fields</h2></td></tr>
<tr class="memitem:a1ab65df01f310bf054323607cd09956e"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#a1ab65df01f310bf054323607cd09956e">_input0</a></td></tr>
<tr class="separator:a1ab65df01f310bf054323607cd09956e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6590f81ae0c9f3e01546c73eb31a43c8"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#a6590f81ae0c9f3e01546c73eb31a43c8">_input1</a></td></tr>
<tr class="separator:a6590f81ae0c9f3e01546c73eb31a43c8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a23faf35900f50c084fa1282511b7bd17"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#a23faf35900f50c084fa1282511b7bd17">_input2</a></td></tr>
<tr class="separator:a23faf35900f50c084fa1282511b7bd17"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a62d192d931002b4866443cd7fc71419b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#a62d192d931002b4866443cd7fc71419b">_output</a></td></tr>
<tr class="separator:a62d192d931002b4866443cd7fc71419b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a170f236fd8751c4e1675873b496f7cf8"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#a170f236fd8751c4e1675873b496f7cf8">_slide_matrix_b</a></td></tr>
<tr class="separator:a170f236fd8751c4e1675873b496f7cf8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa71ec02f998e1dcfd49ef944ec8cf23e"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#aa71ec02f998e1dcfd49ef944ec8cf23e">_reinterpret_input_as_3d</a></td></tr>
<tr class="separator:aa71ec02f998e1dcfd49ef944ec8cf23e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7d222bcf0d803c0647a4b93061daa56c"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#a7d222bcf0d803c0647a4b93061daa56c">_reinterpret_output_as_3d</a></td></tr>
<tr class="separator:a7d222bcf0d803c0647a4b93061daa56c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a94e30ed1aed47fae8430cc4d3cd2b6c7"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#a94e30ed1aed47fae8430cc4d3cd2b6c7">_add_bias</a></td></tr>
<tr class="separator:a94e30ed1aed47fae8430cc4d3cd2b6c7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a42af734585418559f06f6ce9f7375910"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#a42af734585418559f06f6ce9f7375910">_broadcast_bias</a></td></tr>
<tr class="separator:a42af734585418559f06f6ce9f7375910"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>OpenCL kernel to multiply two input matrices "A" and "B" and add a martix "C" if provided. </p>
<p>All elements of the output matrix will be multiplied by alpha. In case matrix C is passed, it will be added to the previous result. For the matrix C, the broadcast addition is supported if the flag "broadcast_bias" is set in the <a class="el" href="classarm__compute_1_1_g_e_m_m_reshape_info.xhtml" title="GEMM reshape information class.">GEMMReshapeInfo</a> object</p>
<dl class="section note"><dt>Note</dt><dd>If the input tensors <code>input0</code> and <code>input1</code> have been reshaped respectively with <a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_reshape_l_h_s_matrix_kernel.xhtml">CLGEMMReshapeLHSMatrixKernel</a>" and <a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_reshape_r_h_s_matrix_kernel.xhtml">CLGEMMReshapeRHSMatrixKernel</a>, the flag <code>is_interleaved_transposed</code> must be set to true</dd></dl>
<dl class="section attention"><dt>Attention</dt><dd><code>input1</code> tensor must have at least 2 dimensions (matrix) </dd></dl>

<p class="definition">Definition at line <a class="el" href="_c_l_g_e_m_m_matrix_multiply_kernel_8h_source.xhtml#l00042">42</a> of file <a class="el" href="_c_l_g_e_m_m_matrix_multiply_kernel_8h_source.xhtml">CLGEMMMatrixMultiplyKernel.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="ac46a1c8a20b46838c9e894f703ddd3ee"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac46a1c8a20b46838c9e894f703ddd3ee">&#9670;&nbsp;</a></span>CLGEMMMatrixMultiplyKernel() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml">CLGEMMMatrixMultiplyKernel</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Default constructor. </p>

<p class="definition">Definition at line <a class="el" href="_c_l_g_e_m_m_matrix_multiply_kernel_8cpp_source.xhtml#l00299">299</a> of file <a class="el" href="_c_l_g_e_m_m_matrix_multiply_kernel_8cpp_source.xhtml">CLGEMMMatrixMultiplyKernel.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;    : <a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#a1ab65df01f310bf054323607cd09956e">_input0</a>(<span class="keyword">nullptr</span>), <a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#a6590f81ae0c9f3e01546c73eb31a43c8">_input1</a>(<span class="keyword">nullptr</span>), <a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#a23faf35900f50c084fa1282511b7bd17">_input2</a>(<span class="keyword">nullptr</span>), <a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#a62d192d931002b4866443cd7fc71419b">_output</a>(<span class="keyword">nullptr</span>), <a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#a170f236fd8751c4e1675873b496f7cf8">_slide_matrix_b</a>(<span class="keyword">true</span>), <a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#aa71ec02f998e1dcfd49ef944ec8cf23e">_reinterpret_input_as_3d</a>(<span class="keyword">false</span>), <a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#a7d222bcf0d803c0647a4b93061daa56c">_reinterpret_output_as_3d</a>(<span class="keyword">false</span>), <a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#a94e30ed1aed47fae8430cc4d3cd2b6c7">_add_bias</a>(<span class="keyword">false</span>),</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;      <a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#a42af734585418559f06f6ce9f7375910">_broadcast_bias</a>(<span class="keyword">false</span>)</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;{</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;}</div><div class="ttc" id="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel_xhtml_a23faf35900f50c084fa1282511b7bd17"><div class="ttname"><a href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#a23faf35900f50c084fa1282511b7bd17">arm_compute::CLGEMMMatrixMultiplyKernel::_input2</a></div><div class="ttdeci">const ICLTensor * _input2</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_g_e_m_m_matrix_multiply_kernel_8h_source.xhtml#l00096">CLGEMMMatrixMultiplyKernel.h:96</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel_xhtml_a94e30ed1aed47fae8430cc4d3cd2b6c7"><div class="ttname"><a href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#a94e30ed1aed47fae8430cc4d3cd2b6c7">arm_compute::CLGEMMMatrixMultiplyKernel::_add_bias</a></div><div class="ttdeci">bool _add_bias</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_g_e_m_m_matrix_multiply_kernel_8h_source.xhtml#l00101">CLGEMMMatrixMultiplyKernel.h:101</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel_xhtml_a42af734585418559f06f6ce9f7375910"><div class="ttname"><a href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#a42af734585418559f06f6ce9f7375910">arm_compute::CLGEMMMatrixMultiplyKernel::_broadcast_bias</a></div><div class="ttdeci">bool _broadcast_bias</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_g_e_m_m_matrix_multiply_kernel_8h_source.xhtml#l00102">CLGEMMMatrixMultiplyKernel.h:102</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel_xhtml_aa71ec02f998e1dcfd49ef944ec8cf23e"><div class="ttname"><a href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#aa71ec02f998e1dcfd49ef944ec8cf23e">arm_compute::CLGEMMMatrixMultiplyKernel::_reinterpret_input_as_3d</a></div><div class="ttdeci">bool _reinterpret_input_as_3d</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_g_e_m_m_matrix_multiply_kernel_8h_source.xhtml#l00099">CLGEMMMatrixMultiplyKernel.h:99</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel_xhtml_a6590f81ae0c9f3e01546c73eb31a43c8"><div class="ttname"><a href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#a6590f81ae0c9f3e01546c73eb31a43c8">arm_compute::CLGEMMMatrixMultiplyKernel::_input1</a></div><div class="ttdeci">const ICLTensor * _input1</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_g_e_m_m_matrix_multiply_kernel_8h_source.xhtml#l00095">CLGEMMMatrixMultiplyKernel.h:95</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel_xhtml_a1ab65df01f310bf054323607cd09956e"><div class="ttname"><a href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#a1ab65df01f310bf054323607cd09956e">arm_compute::CLGEMMMatrixMultiplyKernel::_input0</a></div><div class="ttdeci">const ICLTensor * _input0</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_g_e_m_m_matrix_multiply_kernel_8h_source.xhtml#l00094">CLGEMMMatrixMultiplyKernel.h:94</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel_xhtml_a170f236fd8751c4e1675873b496f7cf8"><div class="ttname"><a href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#a170f236fd8751c4e1675873b496f7cf8">arm_compute::CLGEMMMatrixMultiplyKernel::_slide_matrix_b</a></div><div class="ttdeci">bool _slide_matrix_b</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_g_e_m_m_matrix_multiply_kernel_8h_source.xhtml#l00098">CLGEMMMatrixMultiplyKernel.h:98</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel_xhtml_a62d192d931002b4866443cd7fc71419b"><div class="ttname"><a href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#a62d192d931002b4866443cd7fc71419b">arm_compute::CLGEMMMatrixMultiplyKernel::_output</a></div><div class="ttdeci">ICLTensor * _output</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_g_e_m_m_matrix_multiply_kernel_8h_source.xhtml#l00097">CLGEMMMatrixMultiplyKernel.h:97</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel_xhtml_a7d222bcf0d803c0647a4b93061daa56c"><div class="ttname"><a href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#a7d222bcf0d803c0647a4b93061daa56c">arm_compute::CLGEMMMatrixMultiplyKernel::_reinterpret_output_as_3d</a></div><div class="ttdeci">bool _reinterpret_output_as_3d</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_g_e_m_m_matrix_multiply_kernel_8h_source.xhtml#l00100">CLGEMMMatrixMultiplyKernel.h:100</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ab7ab139607e3a7812f2a7eb941ac7aa8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab7ab139607e3a7812f2a7eb941ac7aa8">&#9670;&nbsp;</a></span>CLGEMMMatrixMultiplyKernel() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml">CLGEMMMatrixMultiplyKernel</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml">CLGEMMMatrixMultiplyKernel</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prevent instances of this class from being copied (As this class contains pointers) </p>

</div>
</div>
<a id="a4805eb2e5f4597f660f41753e9748eb8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4805eb2e5f4597f660f41753e9748eb8">&#9670;&nbsp;</a></span>CLGEMMMatrixMultiplyKernel() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml">CLGEMMMatrixMultiplyKernel</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml">CLGEMMMatrixMultiplyKernel</a> &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Allow instances of this class to be moved. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a46bee71bbf58053c85de3f5450566584"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a46bee71bbf58053c85de3f5450566584">&#9670;&nbsp;</a></span>configure()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void configure </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *&#160;</td>
          <td class="paramname"><em>input0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *&#160;</td>
          <td class="paramname"><em>input1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *&#160;</td>
          <td class="paramname"><em>input2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>alpha</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>beta</em> = <code>0.f</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>is_interleaved_transposed</em> = <code>true</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_g_e_m_m_reshape_info.xhtml">GEMMReshapeInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>reshape_info</em> = <code><a class="el" href="classarm__compute_1_1_g_e_m_m_reshape_info.xhtml">GEMMReshapeInfo</a>()</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>fp_mixed_precision</em> = <code>false</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>activation_info</em> = <code><a class="el" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initialise the kernel's input, output and alpha. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">input0</td><td>Input tensor containing the Matrix A. Data types supported: F16/F32 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">input1</td><td>Input tensor containing the Matrix B. Data type supported: same as <code>input0</code> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">input2</td><td>Input tensor containing the Matrix C (bias). Can be nullptr. Data type supported: same as <code>input0</code> </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">output</td><td>Output tensor to store the result of matrix multiplication. Data type supported: same as <code>input0</code> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">alpha</td><td>Weight of the matrix product </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">beta</td><td>(Optional) Weight of vector C. Default value is 0. Only beta = 1 is currently supported. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">is_interleaved_transposed</td><td>(Optional) True if input0 and input1 have been reshaped respectively using <a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_reshape_l_h_s_matrix_kernel.xhtml">CLGEMMReshapeLHSMatrixKernel</a> and <a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_reshape_r_h_s_matrix_kernel.xhtml">CLGEMMReshapeRHSMatrixKernel</a> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">reshape_info</td><td>(Optional) GEMM reshape info. If is_interleaved_transposed = true, this object must contain the information to understand how the matrix A and matrix B have been reshaped </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">fp_mixed_precision</td><td>(Optional) Use wider accumulators (32 bit instead of 16 for FP16) to improve accuracy </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">activation_info</td><td>(Optional) Activation to apply after the matrix multiplication </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_c_l_g_e_m_m_matrix_multiply_kernel_8cpp_source.xhtml#l00305">305</a> of file <a class="el" href="_c_l_g_e_m_m_matrix_multiply_kernel_8cpp_source.xhtml">CLGEMMMatrixMultiplyKernel.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;{</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;    <a class="code" href="_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a>(input0, input1, output);</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;    <span class="comment">// Perform validate step</span></div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;    <a class="code" href="_error_8h.xhtml#a938dcd406ce611ef5345ad2531cdb948">ARM_COMPUTE_ERROR_THROW_ON</a>(validate_arguments(input0-&gt;info(), input1-&gt;info(), (input2 != <span class="keyword">nullptr</span>) ? input2-&gt;info() : <span class="keyword">nullptr</span>, output-&gt;info(), beta,</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;                                                  is_interleaved_transposed, reshape_info, fp_mixed_precision));</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#a1ab65df01f310bf054323607cd09956e">_input0</a>                   = input0;</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#a6590f81ae0c9f3e01546c73eb31a43c8">_input1</a>                   = input1;</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#a23faf35900f50c084fa1282511b7bd17">_input2</a>                   = <a class="code" href="namespacearm__compute_1_1helpers_1_1float__ops.xhtml#a3bd19352aed7410633d1f9b95d74a809">helpers::float_ops::is_zero</a>(beta) ? nullptr : input2;</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#a62d192d931002b4866443cd7fc71419b">_output</a>                   = output;</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#aa71ec02f998e1dcfd49ef944ec8cf23e">_reinterpret_input_as_3d</a>  = reshape_info.reinterpret_input_as_3d();</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#a7d222bcf0d803c0647a4b93061daa56c">_reinterpret_output_as_3d</a> = (reshape_info.depth_output_gemm3d() != 0);</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#a94e30ed1aed47fae8430cc4d3cd2b6c7">_add_bias</a>                 = <a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#a23faf35900f50c084fa1282511b7bd17">_input2</a> != <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#a42af734585418559f06f6ce9f7375910">_broadcast_bias</a>           = reshape_info.broadcast_bias();</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;    <span class="comment">// In case both input and output have to be reinterpreted as 3D tensors,</span></div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;    <span class="comment">// force reinterpret_input_as_3d and reinterpret_output_as_3d to be false.</span></div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;    <span class="keywordflow">if</span>(<a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#aa71ec02f998e1dcfd49ef944ec8cf23e">_reinterpret_input_as_3d</a> == <a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#a7d222bcf0d803c0647a4b93061daa56c">_reinterpret_output_as_3d</a>)</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;    {</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;        <a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#aa71ec02f998e1dcfd49ef944ec8cf23e">_reinterpret_input_as_3d</a>  = <span class="keyword">false</span>;</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;        <a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#a7d222bcf0d803c0647a4b93061daa56c">_reinterpret_output_as_3d</a> = <span class="keyword">false</span>;</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;    }</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;    <span class="comment">// Check if we need to slide the matrix B</span></div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> num_dimensions_input0 = <a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#aa71ec02f998e1dcfd49ef944ec8cf23e">_reinterpret_input_as_3d</a> ? <a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#a1ab65df01f310bf054323607cd09956e">_input0</a>-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a1f4e725b8e1ea36b30e09dc08ae6961d">num_dimensions</a>() - 1 : <a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#a1ab65df01f310bf054323607cd09956e">_input0</a>-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a1f4e725b8e1ea36b30e09dc08ae6961d">num_dimensions</a>();</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#a170f236fd8751c4e1675873b496f7cf8">_slide_matrix_b</a> = (<a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#a6590f81ae0c9f3e01546c73eb31a43c8">_input1</a>-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a1f4e725b8e1ea36b30e09dc08ae6961d">num_dimensions</a>() &gt;= num_dimensions_input0);</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;    <span class="keyword">const</span> <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a> = input0-&gt;info()-&gt;data_type();</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;    <span class="comment">// Get target architecture</span></div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3">GPUTarget</a> gpu_target = <a class="code" href="classarm__compute_1_1_i_c_l_kernel.xhtml#aa550ff0352ff2388e02f7b0a41bf5fe7">get_target</a>();</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;    ElementsProcessed num_elements_processed{};</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;    <span class="comment">// Configure kernel window</span></div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;    <span class="keyword">auto</span> win_config = validate_and_configure_window(input0-&gt;info(), input1-&gt;info(), (input2 != <span class="keyword">nullptr</span>) ? input2-&gt;info() : <span class="keyword">nullptr</span>, output-&gt;info(), beta, is_interleaved_transposed, reshape_info,</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;                                                    gpu_target, num_elements_processed);</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;    <a class="code" href="_error_8h.xhtml#a938dcd406ce611ef5345ad2531cdb948">ARM_COMPUTE_ERROR_THROW_ON</a>(win_config.first);</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;    ICLKernel::configure_internal(win_config.second);</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;    <span class="comment">// Create build options</span></div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;    CLBuildOptions build_opts;</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;    build_opts.add_option_if(!(<a class="code" href="namespacearm__compute_1_1helpers_1_1float__ops.xhtml#ab2dcf325d146568ecc8d4a4bd36c02ac">helpers::float_ops::is_one</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3161c2c93c655dd30953372064ec627b">alpha</a>)), <span class="stringliteral">&quot;-DALPHA=&quot;</span> + <a class="code" href="namespacearm__compute.xhtml#a9cd394c15b73f79ca1d98f5328064be2">float_to_string_with_full_precision</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3161c2c93c655dd30953372064ec627b">alpha</a>));</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;    build_opts.add_option_if(<a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#a23faf35900f50c084fa1282511b7bd17">_input2</a> != <span class="keyword">nullptr</span>, <span class="stringliteral">&quot;-DBETA=&quot;</span> + <a class="code" href="namespacearm__compute.xhtml#a9cd394c15b73f79ca1d98f5328064be2">float_to_string_with_full_precision</a>(beta));</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;    build_opts.add_option_if(<a class="code" href="namespacearm__compute_1_1helpers_1_1float__ops.xhtml#ab2dcf325d146568ecc8d4a4bd36c02ac">helpers::float_ops::is_one</a>(beta), <span class="stringliteral">&quot;-DUNIT_BETA&quot;</span>);</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;    build_opts.add_option_if(reshape_info.broadcast_bias(), <span class="stringliteral">&quot;-DBROADCAST_BIAS&quot;</span>);</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;    build_opts.add_option_if(<a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#aa71ec02f998e1dcfd49ef944ec8cf23e">_reinterpret_input_as_3d</a>, <span class="stringliteral">&quot;-DREINTERPRET_INPUT_AS_3D&quot;</span>);</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;    build_opts.add_option_if(<a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#a7d222bcf0d803c0647a4b93061daa56c">_reinterpret_output_as_3d</a>, <span class="stringliteral">&quot;-DREINTERPRET_OUTPUT_AS_3D&quot;</span>);</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;    build_opts.add_option_if(<a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#aa71ec02f998e1dcfd49ef944ec8cf23e">_reinterpret_input_as_3d</a> || <a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#a7d222bcf0d803c0647a4b93061daa56c">_reinterpret_output_as_3d</a>, <span class="stringliteral">&quot;-DHEIGHT_GEMM3D=&quot;</span> + <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(output-&gt;info()-&gt;dimension(1)));</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;    build_opts.add_option_if(<a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#aa71ec02f998e1dcfd49ef944ec8cf23e">_reinterpret_input_as_3d</a> || <a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#a7d222bcf0d803c0647a4b93061daa56c">_reinterpret_output_as_3d</a>, <span class="stringliteral">&quot;-DDEPTH_GEMM3D=&quot;</span> + <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(output-&gt;info()-&gt;dimension(2)));</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;    build_opts.add_option_if(!<a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#a170f236fd8751c4e1675873b496f7cf8">_slide_matrix_b</a>, <span class="stringliteral">&quot;-DMATRIX_B_DEPTH=&quot;</span> + <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(input1-&gt;info()-&gt;dimension(2)));</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;    build_opts.add_option_if(activation_info.enabled(), <span class="stringliteral">&quot;-DACTIVATION_TYPE=&quot;</span> + <a class="code" href="namespacearm__compute.xhtml#a0a7bb17a0a0414a7162f635776a02eb5">lower_string</a>(<a class="code" href="namespacearm__compute.xhtml#a635f1895d94050329b7da12850d1a056">string_from_activation_func</a>(activation_info.activation())));</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;    build_opts.add_option_if(activation_info.enabled(), <span class="stringliteral">&quot;-DA_VAL=&quot;</span> + <a class="code" href="namespacearm__compute.xhtml#a9cd394c15b73f79ca1d98f5328064be2">float_to_string_with_full_precision</a>(activation_info.a()));</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;    build_opts.add_option_if(activation_info.enabled(), <span class="stringliteral">&quot;-DB_VAL=&quot;</span> + <a class="code" href="namespacearm__compute.xhtml#a9cd394c15b73f79ca1d98f5328064be2">float_to_string_with_full_precision</a>(activation_info.b()));</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">bool</span> is_bifrost = <a class="code" href="namespacearm__compute.xhtml#a2355c2bf5d1950088937416baea24fe6">get_arch_from_target</a>(gpu_target) == <a class="code" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3aa78cc0fd1cab24af0fad71dc4c256f8e">GPUTarget::BIFROST</a>;</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;    std::string <a class="code" href="_c_l_im2_col_kernel_8cpp.xhtml#a624a24e6d361fe7b8b8b2f6b375683a4">kernel_name</a>;</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;    <span class="keywordflow">if</span>(is_interleaved_transposed)</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;    {</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">int</span> mult_transpose1xW_width   = reshape_info.mult_transpose1xW_width();</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">int</span> mult_interleave4x4_height = reshape_info.mult_interleave4x4_height();</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;        build_opts.add_option(<span class="stringliteral">&quot;-DCOLS_B=&quot;</span> + <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(input1-&gt;info()-&gt;dimension(0)));</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;        build_opts.add_option(<span class="stringliteral">&quot;-DMULT_TRANSPOSE1XW_WIDTH=&quot;</span> + <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(mult_transpose1xW_width));</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;        build_opts.add_option(<span class="stringliteral">&quot;-DMULT_INTERLEAVE4X4_HEIGHT=&quot;</span> + <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(mult_interleave4x4_height));</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;        <span class="keywordflow">if</span>(<a class="code" href="namespacearm__compute.xhtml#af5982a092e9eb743fce2d6392bdd8897">is_data_type_float</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>) &amp;&amp; is_bifrost)</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;        {</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;            <a class="code" href="_c_l_im2_col_kernel_8cpp.xhtml#a624a24e6d361fe7b8b8b2f6b375683a4">kernel_name</a> = <span class="stringliteral">&quot;gemm_mm_interleaved_transposed_&quot;</span> + <a class="code" href="namespacearm__compute.xhtml#a0a7bb17a0a0414a7162f635776a02eb5">lower_string</a>(<a class="code" href="namespacearm__compute.xhtml#a142b55a483cadf4e1068a1a09a55e8e9">string_from_data_type</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>)) + <span class="stringliteral">&quot;_bifrost&quot;</span>;</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;        }</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;        <span class="keywordflow">else</span></div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;        {</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;            <a class="code" href="_c_l_im2_col_kernel_8cpp.xhtml#a624a24e6d361fe7b8b8b2f6b375683a4">kernel_name</a> = <span class="stringliteral">&quot;gemm_mm_interleaved_transposed_&quot;</span> + <a class="code" href="namespacearm__compute.xhtml#a0a7bb17a0a0414a7162f635776a02eb5">lower_string</a>(<a class="code" href="namespacearm__compute.xhtml#a142b55a483cadf4e1068a1a09a55e8e9">string_from_data_type</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>));</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;            <span class="keywordflow">if</span>(fp_mixed_precision &amp;&amp; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a> == <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a56d8353718e6fdc78b8d69078a2cdb94">DataType::F16</a>)</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;            {</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;                <span class="comment">// currently wider accumulator is only supported for fp16 kernels.</span></div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;                <a class="code" href="_c_l_im2_col_kernel_8cpp.xhtml#a624a24e6d361fe7b8b8b2f6b375683a4">kernel_name</a> += <span class="stringliteral">&quot;_acc32&quot;</span>;</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;            }</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;        }</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;    }</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;    <span class="keywordflow">else</span> <span class="comment">// The input tensors have not been reshaped</span></div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;    {</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;        build_opts.add_option(<span class="stringliteral">&quot;-DCOLS_A=&quot;</span> + <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(input0-&gt;info()-&gt;dimension(0)));</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;        build_opts.add_option(<span class="stringliteral">&quot;-DDATA_TYPE=&quot;</span> + <a class="code" href="namespacearm__compute.xhtml#a545eeda2eaa3f5a54345ce8169e21184">get_cl_type_from_data_type</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>));</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;        <span class="comment">// Create kernels according to the architecture, data type and input size.</span></div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;        <span class="keywordflow">if</span>(<a class="code" href="namespacearm__compute.xhtml#af5982a092e9eb743fce2d6392bdd8897">is_data_type_float</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>) &amp;&amp; is_bifrost)</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;        {</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;            <a class="code" href="_c_l_im2_col_kernel_8cpp.xhtml#a624a24e6d361fe7b8b8b2f6b375683a4">kernel_name</a> = <span class="stringliteral">&quot;gemm_mm_floating_point&quot;</span>;</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;            <span class="keywordflow">if</span>(input0-&gt;info()-&gt;num_dimensions() != 1)</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;            {</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;                <a class="code" href="_c_l_im2_col_kernel_8cpp.xhtml#a624a24e6d361fe7b8b8b2f6b375683a4">kernel_name</a> += <span class="stringliteral">&quot;_&quot;</span> + <a class="code" href="namespacearm__compute.xhtml#a0a7bb17a0a0414a7162f635776a02eb5">lower_string</a>(<a class="code" href="namespacearm__compute.xhtml#a142b55a483cadf4e1068a1a09a55e8e9">string_from_data_type</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>)) + <span class="stringliteral">&quot;_bifrost&quot;</span>;</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;                <span class="keywordflow">if</span>(fp_mixed_precision &amp;&amp; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a> == <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a56d8353718e6fdc78b8d69078a2cdb94">DataType::F16</a>)</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;                {</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;                    <span class="comment">// currently wider accumulator is only supported for fp16 kernels.</span></div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;                    <a class="code" href="_c_l_im2_col_kernel_8cpp.xhtml#a624a24e6d361fe7b8b8b2f6b375683a4">kernel_name</a> += <span class="stringliteral">&quot;_acc32&quot;</span>;</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;                }</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;            }</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">if</span>(input1-&gt;info()-&gt;dimension(0) &lt;= 1000 &amp;&amp; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a> == <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>)</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;            {</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;                <span class="comment">// The first kernel is optimized for the case of 1000 or less output elements (e.g. FC8 of AlexNet and VGG-16, and</span></div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;                <span class="comment">// FC1 of Inception v3). The second kernel is optimized for the case of greater than 1000 output elements (e.g.</span></div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;                <span class="comment">// FC6 and FC7 of AlexNet and VGG-16).</span></div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;                <a class="code" href="_c_l_im2_col_kernel_8cpp.xhtml#a624a24e6d361fe7b8b8b2f6b375683a4">kernel_name</a> += <span class="stringliteral">&quot;_&quot;</span> + <a class="code" href="namespacearm__compute.xhtml#a0a7bb17a0a0414a7162f635776a02eb5">lower_string</a>(<a class="code" href="namespacearm__compute.xhtml#a142b55a483cadf4e1068a1a09a55e8e9">string_from_data_type</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>)) + <span class="stringliteral">&quot;_bifrost_1000&quot;</span>;</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;            }</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;            <span class="comment">// The work-group size equal to the Bifrost quad size has been proved to be optimal for these kernels</span></div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;            <span class="comment">// via exhaustive autotuning over a range of representative layer configurations.</span></div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;            <a class="code" href="classarm__compute_1_1_i_c_l_kernel.xhtml#ad356b88c8f61267d593d9ed99835bde9">set_lws_hint</a>(cl::NDRange(4));</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;        }</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;        <span class="keywordflow">else</span> <span class="comment">// (MIDGARD and F32) or (F16)</span></div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;        {</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;            <a class="code" href="_c_l_im2_col_kernel_8cpp.xhtml#a624a24e6d361fe7b8b8b2f6b375683a4">kernel_name</a> = <span class="stringliteral">&quot;gemm_mm_floating_point&quot;</span>;</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;        }</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;        build_opts.add_option(<span class="stringliteral">&quot;-DNUM_ELEMS_PROCESSED_PER_THREAD_Y=&quot;</span> + <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(num_elements_processed.y()));</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;        build_opts.add_option(<span class="stringliteral">&quot;-DNUM_ELEMS_PROCESSED_PER_THREAD_X=&quot;</span> + <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(num_elements_processed.x()));</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;    }</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;    <span class="comment">// Create kernel</span></div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;    _kernel = static_cast&lt;cl::Kernel&gt;(<a class="code" href="classarm__compute_1_1_c_l_kernel_library.xhtml#acba005f5ce2c62cbf3f94d074d9007aa">CLKernelLibrary::get</a>().<a class="code" href="namespacearm__compute.xhtml#abc72c95941485d8a068fa38372308574">create_kernel</a>(<a class="code" href="_c_l_im2_col_kernel_8cpp.xhtml#a624a24e6d361fe7b8b8b2f6b375683a4">kernel_name</a>, build_opts.options()));</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;</div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;    <span class="comment">// Set config_id for enabling LWS tuning</span></div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;    _config_id = <span class="stringliteral">&quot;gemm_&quot;</span>;</div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;    _config_id += (is_interleaved_transposed ? <span class="stringliteral">&quot;reshaped_&quot;</span> : <span class="stringliteral">&quot;&quot;</span>);</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;    _config_id += (<a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#a94e30ed1aed47fae8430cc4d3cd2b6c7">_add_bias</a> ? <span class="stringliteral">&quot;add_bias_&quot;</span> : <span class="stringliteral">&quot;&quot;</span>);</div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;    _config_id += (<a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#a42af734585418559f06f6ce9f7375910">_broadcast_bias</a> ? <span class="stringliteral">&quot;broadcast_bias_&quot;</span> : <span class="stringliteral">&quot;&quot;</span>);</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;    _config_id += (fp_mixed_precision ? <span class="stringliteral">&quot;fp_mixed_&quot;</span> : <span class="stringliteral">&quot;&quot;</span>);</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;    _config_id += (<a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#aa71ec02f998e1dcfd49ef944ec8cf23e">_reinterpret_input_as_3d</a> ? <span class="stringliteral">&quot;3di_&quot;</span> : <span class="stringliteral">&quot;&quot;</span>);</div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;    _config_id += (<a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#a7d222bcf0d803c0647a4b93061daa56c">_reinterpret_output_as_3d</a> ? <span class="stringliteral">&quot;3do_&quot;</span> : <span class="stringliteral">&quot;&quot;</span>);</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;    _config_id += <a class="code" href="namespacearm__compute.xhtml#a0a7bb17a0a0414a7162f635776a02eb5">lower_string</a>(<a class="code" href="namespacearm__compute.xhtml#a142b55a483cadf4e1068a1a09a55e8e9">string_from_data_type</a>(input0-&gt;info()-&gt;data_type()));</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;    _config_id += <span class="stringliteral">&quot;_&quot;</span>;</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;    _config_id += <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(output-&gt;info()-&gt;dimension(1));</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;    _config_id += <span class="stringliteral">&quot;_&quot;</span>;</div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;    _config_id += <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(output-&gt;info()-&gt;dimension(0));</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;    _config_id += <span class="stringliteral">&quot;_&quot;</span>;</div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;    _config_id += <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(output-&gt;info()-&gt;dimension(2));</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;    _config_id += <span class="stringliteral">&quot;_&quot;</span>;</div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;    _config_id += <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(output-&gt;info()-&gt;dimension(3));</div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;    _config_id += <span class="stringliteral">&quot;_&quot;</span>;</div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;    _config_id += (is_interleaved_transposed ? <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(input1-&gt;info()-&gt;dimension(0)) : <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(input1-&gt;info()-&gt;dimension(1)));</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;}</div><div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_a1f4e725b8e1ea36b30e09dc08ae6961d"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a1f4e725b8e1ea36b30e09dc08ae6961d">arm_compute::ITensorInfo::num_dimensions</a></div><div class="ttdeci">virtual size_t num_dimensions() const =0</div><div class="ttdoc">The number of dimensions of the tensor (rank)</div></div>
<div class="ttc" id="namespacearm__compute_1_1helpers_1_1float__ops_xhtml_ab2dcf325d146568ecc8d4a4bd36c02ac"><div class="ttname"><a href="namespacearm__compute_1_1helpers_1_1float__ops.xhtml#ab2dcf325d146568ecc8d4a4bd36c02ac">arm_compute::helpers::float_ops::is_one</a></div><div class="ttdeci">bool is_one(float a, float epsilon=0.00001f)</div><div class="ttdoc">Checks if the input floating point number is 1.0f checking if the difference is within a range define...</div><div class="ttdef"><b>Definition:</b> <a href="float__ops_8h_source.xhtml#l00097">float_ops.h:97</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_c_l_kernel_xhtml_ad356b88c8f61267d593d9ed99835bde9"><div class="ttname"><a href="classarm__compute_1_1_i_c_l_kernel.xhtml#ad356b88c8f61267d593d9ed99835bde9">arm_compute::ICLKernel::set_lws_hint</a></div><div class="ttdeci">void set_lws_hint(const cl::NDRange &amp;lws_hint)</div><div class="ttdoc">Set the Local-Workgroup-Size hint.</div><div class="ttdef"><b>Definition:</b> <a href="_i_c_l_kernel_8h_source.xhtml#l00237">ICLKernel.h:237</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel_xhtml_a23faf35900f50c084fa1282511b7bd17"><div class="ttname"><a href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#a23faf35900f50c084fa1282511b7bd17">arm_compute::CLGEMMMatrixMultiplyKernel::_input2</a></div><div class="ttdeci">const ICLTensor * _input2</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_g_e_m_m_matrix_multiply_kernel_8h_source.xhtml#l00096">CLGEMMMatrixMultiplyKernel.h:96</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1support_1_1cpp11_xhtml_acc5dddee1cbe93a4eaf0a9f74ee96bb7"><div class="ttname"><a href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">arm_compute::support::cpp11::to_string</a></div><div class="ttdeci">std::string to_string(T &amp;&amp;value)</div><div class="ttdoc">Convert integer and float values to string.</div><div class="ttdef"><b>Definition:</b> <a href="_toolchain_support_8h_source.xhtml#l00272">ToolchainSupport.h:272</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">arm_compute::Format::F32</a></div><div class="ttdoc">1 channel, 1 F32 per channel</div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel_xhtml_a94e30ed1aed47fae8430cc4d3cd2b6c7"><div class="ttname"><a href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#a94e30ed1aed47fae8430cc4d3cd2b6c7">arm_compute::CLGEMMMatrixMultiplyKernel::_add_bias</a></div><div class="ttdeci">bool _add_bias</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_g_e_m_m_matrix_multiply_kernel_8h_source.xhtml#l00101">CLGEMMMatrixMultiplyKernel.h:101</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a635f1895d94050329b7da12850d1a056"><div class="ttname"><a href="namespacearm__compute.xhtml#a635f1895d94050329b7da12850d1a056">arm_compute::string_from_activation_func</a></div><div class="ttdeci">const std::string &amp; string_from_activation_func(ActivationLayerInfo::ActivationFunction act)</div><div class="ttdoc">Translates a given activation function to a string.</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_utils_8cpp_source.xhtml#l00172">Utils.cpp:172</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel_xhtml_a42af734585418559f06f6ce9f7375910"><div class="ttname"><a href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#a42af734585418559f06f6ce9f7375910">arm_compute::CLGEMMMatrixMultiplyKernel::_broadcast_bias</a></div><div class="ttdeci">bool _broadcast_bias</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_g_e_m_m_matrix_multiply_kernel_8h_source.xhtml#l00102">CLGEMMMatrixMultiplyKernel.h:102</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_kernel_library_xhtml_acba005f5ce2c62cbf3f94d074d9007aa"><div class="ttname"><a href="classarm__compute_1_1_c_l_kernel_library.xhtml#acba005f5ce2c62cbf3f94d074d9007aa">arm_compute::CLKernelLibrary::get</a></div><div class="ttdeci">static CLKernelLibrary &amp; get()</div><div class="ttdoc">Access the KernelLibrary singleton.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_kernel_library_8cpp_source.xhtml#l01072">CLKernelLibrary.cpp:1072</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a938dcd406ce611ef5345ad2531cdb948"><div class="ttname"><a href="_error_8h.xhtml#a938dcd406ce611ef5345ad2531cdb948">ARM_COMPUTE_ERROR_THROW_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_THROW_ON(status)</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00455">Error.h:455</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a2355c2bf5d1950088937416baea24fe6"><div class="ttname"><a href="namespacearm__compute.xhtml#a2355c2bf5d1950088937416baea24fe6">arm_compute::get_arch_from_target</a></div><div class="ttdeci">GPUTarget get_arch_from_target(GPUTarget target)</div><div class="ttdoc">Helper function to get the GPU arch.</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_g_p_u_target_8cpp_source.xhtml#l00189">GPUTarget.cpp:189</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a0a7bb17a0a0414a7162f635776a02eb5"><div class="ttname"><a href="namespacearm__compute.xhtml#a0a7bb17a0a0414a7162f635776a02eb5">arm_compute::lower_string</a></div><div class="ttdeci">std::string lower_string(const std::string &amp;val)</div><div class="ttdoc">Lower a given string.</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_utils_8cpp_source.xhtml#l00333">Utils.cpp:333</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58a56d8353718e6fdc78b8d69078a2cdb94"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a56d8353718e6fdc78b8d69078a2cdb94">arm_compute::Format::F16</a></div><div class="ttdoc">1 channel, 1 F16 per channel</div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel_xhtml_aa71ec02f998e1dcfd49ef944ec8cf23e"><div class="ttname"><a href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#aa71ec02f998e1dcfd49ef944ec8cf23e">arm_compute::CLGEMMMatrixMultiplyKernel::_reinterpret_input_as_3d</a></div><div class="ttdeci">bool _reinterpret_input_as_3d</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_g_e_m_m_matrix_multiply_kernel_8h_source.xhtml#l00099">CLGEMMMatrixMultiplyKernel.h:99</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a142b55a483cadf4e1068a1a09a55e8e9"><div class="ttname"><a href="namespacearm__compute.xhtml#a142b55a483cadf4e1068a1a09a55e8e9">arm_compute::string_from_data_type</a></div><div class="ttdeci">const std::string &amp; string_from_data_type(DataType dt)</div><div class="ttdoc">Convert a data type identity into a string.</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_utils_8cpp_source.xhtml#l00144">Utils.cpp:144</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel_xhtml_a6590f81ae0c9f3e01546c73eb31a43c8"><div class="ttname"><a href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#a6590f81ae0c9f3e01546c73eb31a43c8">arm_compute::CLGEMMMatrixMultiplyKernel::_input1</a></div><div class="ttdeci">const ICLTensor * _input1</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_g_e_m_m_matrix_multiply_kernel_8h_source.xhtml#l00095">CLGEMMMatrixMultiplyKernel.h:95</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a9cd394c15b73f79ca1d98f5328064be2"><div class="ttname"><a href="namespacearm__compute.xhtml#a9cd394c15b73f79ca1d98f5328064be2">arm_compute::float_to_string_with_full_precision</a></div><div class="ttdeci">std::string float_to_string_with_full_precision(float val)</div><div class="ttdoc">Create a string with the float in full precision.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_utils_8h_source.xhtml#l01211">Utils.h:1211</a></div></div>
<div class="ttc" id="_c_l_im2_col_kernel_8cpp_xhtml_a624a24e6d361fe7b8b8b2f6b375683a4"><div class="ttname"><a href="_c_l_im2_col_kernel_8cpp.xhtml#a624a24e6d361fe7b8b8b2f6b375683a4">kernel_name</a></div><div class="ttdeci">std::string kernel_name</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_im2_col_kernel_8cpp_source.xhtml#l00052">CLIm2ColKernel.cpp:52</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_c_l_kernel_xhtml_aa550ff0352ff2388e02f7b0a41bf5fe7"><div class="ttname"><a href="classarm__compute_1_1_i_c_l_kernel.xhtml#aa550ff0352ff2388e02f7b0a41bf5fe7">arm_compute::ICLKernel::get_target</a></div><div class="ttdeci">GPUTarget get_target() const</div><div class="ttdoc">Get the targeted GPU architecture.</div><div class="ttdef"><b>Definition:</b> <a href="_i_c_l_kernel_8h_source.xhtml#l00286">ICLKernel.h:286</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a545eeda2eaa3f5a54345ce8169e21184"><div class="ttname"><a href="namespacearm__compute.xhtml#a545eeda2eaa3f5a54345ce8169e21184">arm_compute::get_cl_type_from_data_type</a></div><div class="ttdeci">std::string get_cl_type_from_data_type(const DataType &amp;dt)</div><div class="ttdoc">Translates a tensor data type to the appropriate OpenCL type.</div><div class="ttdef"><b>Definition:</b> <a href="core_2_c_l_2_c_l_helpers_8cpp_source.xhtml#l00037">CLHelpers.cpp:37</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_xhtml_a0e95dc1e53c361348314873b168ae237"><div class="ttname"><a href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">arm_compute::ITensor::info</a></div><div class="ttdeci">virtual ITensorInfo * info() const =0</div><div class="ttdoc">Interface to be implemented by the child class to return the tensor's metadata.</div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a3161c2c93c655dd30953372064ec627b"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a3161c2c93c655dd30953372064ec627b">arm_compute::test::validation::alpha</a></div><div class="ttdeci">const float alpha</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_o_n_2_accumulate_8cpp_source.xhtml#l00103">Accumulate.cpp:103</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_abc72c95941485d8a068fa38372308574"><div class="ttname"><a href="namespacearm__compute.xhtml#abc72c95941485d8a068fa38372308574">arm_compute::create_kernel</a></div><div class="ttdeci">std::unique_ptr&lt; Kernel &gt; create_kernel()</div><div class="ttdoc">Helper function to create and return a unique_ptr pointed to a CL/GLES kernel object.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_helpers_8h_source.xhtml#l00086">Helpers.h:86</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel_xhtml_a1ab65df01f310bf054323607cd09956e"><div class="ttname"><a href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#a1ab65df01f310bf054323607cd09956e">arm_compute::CLGEMMMatrixMultiplyKernel::_input0</a></div><div class="ttdeci">const ICLTensor * _input0</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_g_e_m_m_matrix_multiply_kernel_8h_source.xhtml#l00094">CLGEMMMatrixMultiplyKernel.h:94</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel_xhtml_a170f236fd8751c4e1675873b496f7cf8"><div class="ttname"><a href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#a170f236fd8751c4e1675873b496f7cf8">arm_compute::CLGEMMMatrixMultiplyKernel::_slide_matrix_b</a></div><div class="ttdeci">bool _slide_matrix_b</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_g_e_m_m_matrix_multiply_kernel_8h_source.xhtml#l00098">CLGEMMMatrixMultiplyKernel.h:98</a></div></div>
<div class="ttc" id="_validate_8h_xhtml_a921b705e9e3e0fe928928447869e62a5"><div class="ttname"><a href="_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_NULLPTR(...)</div><div class="ttdef"><b>Definition:</b> <a href="_validate_8h_source.xhtml#l00161">Validate.h:161</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel_xhtml_a62d192d931002b4866443cd7fc71419b"><div class="ttname"><a href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#a62d192d931002b4866443cd7fc71419b">arm_compute::CLGEMMMatrixMultiplyKernel::_output</a></div><div class="ttdeci">ICLTensor * _output</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_g_e_m_m_matrix_multiply_kernel_8h_source.xhtml#l00097">CLGEMMMatrixMultiplyKernel.h:97</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a735ac6c2a02e320969625308810444f3"><div class="ttname"><a href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3">arm_compute::GPUTarget</a></div><div class="ttdeci">GPUTarget</div><div class="ttdoc">Available GPU Targets.</div><div class="ttdef"><b>Definition:</b> <a href="_g_p_u_target_8h_source.xhtml#l00034">GPUTarget.h:34</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel_xhtml_a7d222bcf0d803c0647a4b93061daa56c"><div class="ttname"><a href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#a7d222bcf0d803c0647a4b93061daa56c">arm_compute::CLGEMMMatrixMultiplyKernel::_reinterpret_output_as_3d</a></div><div class="ttdeci">bool _reinterpret_output_as_3d</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_g_e_m_m_matrix_multiply_kernel_8h_source.xhtml#l00100">CLGEMMMatrixMultiplyKernel.h:100</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1helpers_1_1float__ops_xhtml_a3bd19352aed7410633d1f9b95d74a809"><div class="ttname"><a href="namespacearm__compute_1_1helpers_1_1float__ops.xhtml#a3bd19352aed7410633d1f9b95d74a809">arm_compute::helpers::float_ops::is_zero</a></div><div class="ttdeci">bool is_zero(float a, float epsilon=0.00001f)</div><div class="ttdoc">Checks if the input floating point number is 0.0f checking if the difference is within a range define...</div><div class="ttdef"><b>Definition:</b> <a href="float__ops_8h_source.xhtml#l00109">float_ops.h:109</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a735ac6c2a02e320969625308810444f3aa78cc0fd1cab24af0fad71dc4c256f8e"><div class="ttname"><a href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3aa78cc0fd1cab24af0fad71dc4c256f8e">arm_compute::GPUTarget::BIFROST</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a5f5b6c4337eac9e2e0046ca2304d80dc"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">arm_compute::test::validation::data_type</a></div><div class="ttdeci">data_type</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_arithmetic_addition_8cpp_source.xhtml#l00138">ArithmeticAddition.cpp:138</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">arm_compute::DataType</a></div><div class="ttdeci">DataType</div><div class="ttdoc">Available data types.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00075">Types.h:75</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_af5982a092e9eb743fce2d6392bdd8897"><div class="ttname"><a href="namespacearm__compute.xhtml#af5982a092e9eb743fce2d6392bdd8897">arm_compute::is_data_type_float</a></div><div class="ttdeci">bool is_data_type_float(DataType dt)</div><div class="ttdoc">Check if a given data type is of floating point type.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_utils_8h_source.xhtml#l01097">Utils.h:1097</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_c_l_g_e_m_m_matrix_multiply_kernel_8h_source.xhtml#l00101">CLGEMMMatrixMultiplyKernel::_add_bias</a>, <a class="el" href="_c_l_g_e_m_m_matrix_multiply_kernel_8h_source.xhtml#l00102">CLGEMMMatrixMultiplyKernel::_broadcast_bias</a>, <a class="el" href="_c_l_g_e_m_m_matrix_multiply_kernel_8h_source.xhtml#l00094">CLGEMMMatrixMultiplyKernel::_input0</a>, <a class="el" href="_c_l_g_e_m_m_matrix_multiply_kernel_8h_source.xhtml#l00095">CLGEMMMatrixMultiplyKernel::_input1</a>, <a class="el" href="_c_l_g_e_m_m_matrix_multiply_kernel_8h_source.xhtml#l00096">CLGEMMMatrixMultiplyKernel::_input2</a>, <a class="el" href="_c_l_g_e_m_m_matrix_multiply_kernel_8h_source.xhtml#l00097">CLGEMMMatrixMultiplyKernel::_output</a>, <a class="el" href="_c_l_g_e_m_m_matrix_multiply_kernel_8h_source.xhtml#l00099">CLGEMMMatrixMultiplyKernel::_reinterpret_input_as_3d</a>, <a class="el" href="_c_l_g_e_m_m_matrix_multiply_kernel_8h_source.xhtml#l00100">CLGEMMMatrixMultiplyKernel::_reinterpret_output_as_3d</a>, <a class="el" href="_c_l_g_e_m_m_matrix_multiply_kernel_8h_source.xhtml#l00098">CLGEMMMatrixMultiplyKernel::_slide_matrix_b</a>, <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l01654">ActivationLayerInfo::a()</a>, <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l01649">ActivationLayerInfo::activation()</a>, <a class="el" href="_c_l_kernel_library_8cpp_source.xhtml#l00043">CLBuildOptions::add_option()</a>, <a class="el" href="_c_l_kernel_library_8cpp_source.xhtml#l00048">CLBuildOptions::add_option_if()</a>, <a class="el" href="_n_e_o_n_2_accumulate_8cpp_source.xhtml#l00103">arm_compute::test::validation::alpha</a>, <a class="el" href="_validate_8h_source.xhtml#l00161">ARM_COMPUTE_ERROR_ON_NULLPTR</a>, <a class="el" href="_error_8h_source.xhtml#l00455">ARM_COMPUTE_ERROR_THROW_ON</a>, <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l01659">ActivationLayerInfo::b()</a>, <a class="el" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3aa78cc0fd1cab24af0fad71dc4c256f8e">arm_compute::BIFROST</a>, <a class="el" href="arm__compute_2core_2_helpers_8h_source.xhtml#l00086">arm_compute::create_kernel()</a>, <a class="el" href="_c_l_2_arithmetic_addition_8cpp_source.xhtml#l00138">arm_compute::test::validation::data_type</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">ITensorInfo::data_type()</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">ITensorInfo::dimension()</a>, <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l01664">ActivationLayerInfo::enabled()</a>, <a class="el" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a56d8353718e6fdc78b8d69078a2cdb94">arm_compute::F16</a>, <a class="el" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">arm_compute::F32</a>, <a class="el" href="arm__compute_2core_2_utils_8h_source.xhtml#l01211">arm_compute::float_to_string_with_full_precision()</a>, <a class="el" href="_c_l_kernel_library_8cpp_source.xhtml#l01072">CLKernelLibrary::get()</a>, <a class="el" href="src_2core_2_g_p_u_target_8cpp_source.xhtml#l00189">arm_compute::get_arch_from_target()</a>, <a class="el" href="core_2_c_l_2_c_l_helpers_8cpp_source.xhtml#l00037">arm_compute::get_cl_type_from_data_type()</a>, <a class="el" href="_i_c_l_kernel_8h_source.xhtml#l00286">ICLKernel::get_target()</a>, <a class="el" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">ITensor::info()</a>, <a class="el" href="arm__compute_2core_2_utils_8h_source.xhtml#l01097">arm_compute::is_data_type_float()</a>, <a class="el" href="float__ops_8h_source.xhtml#l00097">arm_compute::helpers::float_ops::is_one()</a>, <a class="el" href="float__ops_8h_source.xhtml#l00109">arm_compute::helpers::float_ops::is_zero()</a>, <a class="el" href="_c_l_im2_col_kernel_8cpp_source.xhtml#l00052">kernel_name</a>, <a class="el" href="src_2core_2_utils_8cpp_source.xhtml#l00333">arm_compute::lower_string()</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a1f4e725b8e1ea36b30e09dc08ae6961d">ITensorInfo::num_dimensions()</a>, <a class="el" href="_c_l_kernel_library_8cpp_source.xhtml#l00074">CLBuildOptions::options()</a>, <a class="el" href="_i_c_l_kernel_8h_source.xhtml#l00237">ICLKernel::set_lws_hint()</a>, <a class="el" href="src_2core_2_utils_8cpp_source.xhtml#l00172">arm_compute::string_from_activation_func()</a>, <a class="el" href="src_2core_2_utils_8cpp_source.xhtml#l00144">arm_compute::string_from_data_type()</a>, and <a class="el" href="_toolchain_support_8h_source.xhtml#l00272">arm_compute::support::cpp11::to_string()</a>.</p>

</div>
</div>
<a id="aea377825b4153d8ea48905038cbb0ff1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aea377825b4153d8ea48905038cbb0ff1">&#9670;&nbsp;</a></span>operator=() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml">CLGEMMMatrixMultiplyKernel</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml">CLGEMMMatrixMultiplyKernel</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prevent instances of this class from being copied (As this class contains pointers) </p>

</div>
</div>
<a id="aa158230a3f3ea998530f91a14bb8e5a2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa158230a3f3ea998530f91a14bb8e5a2">&#9670;&nbsp;</a></span>operator=() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml">CLGEMMMatrixMultiplyKernel</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml">CLGEMMMatrixMultiplyKernel</a> &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Allow instances of this class to be moved. </p>

</div>
</div>
<a id="a493987e85723a8000eb26d1f00e2ad0e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a493987e85723a8000eb26d1f00e2ad0e">&#9670;&nbsp;</a></span>run()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void run </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;&#160;</td>
          <td class="paramname"><em>window</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">cl::CommandQueue &amp;&#160;</td>
          <td class="paramname"><em>queue</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Enqueue the OpenCL kernel to process the given window on the passed OpenCL command queue. </p>
<dl class="section note"><dt>Note</dt><dd>The queue is <em>not</em> flushed by this method, and therefore the kernel will not have been executed by the time this method returns.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">window</td><td>Region on which to execute the kernel. (Must be a valid region of the window returned by <a class="el" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6" title="The maximum window the kernel can be executed on.">window()</a>). </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">queue</td><td>Command queue on which to enqueue the kernel. </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_c_l_kernel.xhtml#af6a174d47571f51f199ffc27ecc10f51">ICLKernel</a>.</p>

<p class="definition">Definition at line <a class="el" href="_c_l_g_e_m_m_matrix_multiply_kernel_8cpp_source.xhtml#l00476">476</a> of file <a class="el" href="_c_l_g_e_m_m_matrix_multiply_kernel_8cpp_source.xhtml">CLGEMMMatrixMultiplyKernel.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;{</div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;    <a class="code" href="_validate_8h.xhtml#a1b35b0d258183cf9ef36adf684d0b88c">ARM_COMPUTE_ERROR_ON_UNCONFIGURED_KERNEL</a>(<span class="keyword">this</span>);</div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;    <a class="code" href="_validate_8h.xhtml#a6eb9ce82815fe429250189da7592ba75">ARM_COMPUTE_ERROR_ON_INVALID_SUBWINDOW</a>(<a class="code" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">ICLKernel::window</a>(), <a class="code" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>);</div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;</div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;    <span class="keywordflow">if</span>(<a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#a6590f81ae0c9f3e01546c73eb31a43c8">_input1</a>-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a1f4e725b8e1ea36b30e09dc08ae6961d">num_dimensions</a>() &lt; 3)</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;    {</div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;        <span class="comment">// The stride_z for matrix B must be zero if we do not slice</span></div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;        <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(<a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#a6590f81ae0c9f3e01546c73eb31a43c8">_input1</a>-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a6b14f175bf5281f57b561e2d4e4b1f1f">strides_in_bytes</a>()[3] != 0);</div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;    }</div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;</div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;    Window <a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a548131b3d37da47a2e9d32111c88dfe1">slice</a>          = <a class="code" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>.<a class="code" href="classarm__compute_1_1_window.xhtml#a30ca5bdbb60ee281d7f1ab34f7a4ee40">first_slice_window_3D</a>();</div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;    Window slice_matrix_b = <a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a548131b3d37da47a2e9d32111c88dfe1">slice</a>;</div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;</div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;    slice_matrix_b.set(<a class="code" href="classarm__compute_1_1_window.xhtml#aa96e81276ee4f87ab386cd05a5539a7d">Window::DimX</a>, Window::Dimension(0, 1, 1));</div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;    slice_matrix_b.set(<a class="code" href="classarm__compute_1_1_window.xhtml#ad2d402364fa822b0b7775081291eeca9">Window::DimY</a>, Window::Dimension(0, 1, 1));</div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> num_arguments_bias = <a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#a94e30ed1aed47fae8430cc4d3cd2b6c7">_add_bias</a> ? <a class="code" href="classarm__compute_1_1_i_c_l_kernel.xhtml#a45601e0d46621a5b6f2e417d60e5c800">num_arguments_per_2D_tensor</a>() + 1 : 0;</div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;</div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;    <span class="keywordflow">if</span>(<a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#aa71ec02f998e1dcfd49ef944ec8cf23e">_reinterpret_input_as_3d</a>)</div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;    {</div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;        <span class="comment">// Pass bottom paddings to the kernel if the input has to be reinterpreted as 3D tensor</span></div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> idx0                  = 3 * <a class="code" href="classarm__compute_1_1_i_c_l_kernel.xhtml#a45601e0d46621a5b6f2e417d60e5c800">num_arguments_per_2D_tensor</a>() + 3 + num_arguments_bias;</div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> total_cross_plane_pad = <a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#a1ab65df01f310bf054323607cd09956e">_input0</a>-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a07b929c34ad1dc823d8315876aa403ce">padding</a>().<a class="code" href="structarm__compute_1_1_border_size.xhtml#a3fdd42ea34070a54e696b3adc28c4be3">top</a> + <a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#a1ab65df01f310bf054323607cd09956e">_input0</a>-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a07b929c34ad1dc823d8315876aa403ce">padding</a>().<a class="code" href="structarm__compute_1_1_border_size.xhtml#a802ffcf1b49237efe5be8a314d3f3869">bottom</a>;</div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;        _kernel.setArg&lt;cl_uint&gt;(idx0, static_cast&lt;unsigned int&gt;(total_cross_plane_pad));</div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;    }</div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;</div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;    <span class="keywordflow">if</span>(<a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#a7d222bcf0d803c0647a4b93061daa56c">_reinterpret_output_as_3d</a>)</div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;    {</div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;        <span class="comment">// Pass bottom paddings to the kernel if the output has to be reinterpreted as 3D tensor</span></div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> idx0                  = 3 * <a class="code" href="classarm__compute_1_1_i_c_l_kernel.xhtml#a45601e0d46621a5b6f2e417d60e5c800">num_arguments_per_2D_tensor</a>() + 3 + (<a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#aa71ec02f998e1dcfd49ef944ec8cf23e">_reinterpret_input_as_3d</a> ? 1 : 0) + num_arguments_bias;</div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> total_cross_plane_pad = <a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#a62d192d931002b4866443cd7fc71419b">_output</a>-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a07b929c34ad1dc823d8315876aa403ce">padding</a>().<a class="code" href="structarm__compute_1_1_border_size.xhtml#a3fdd42ea34070a54e696b3adc28c4be3">top</a> + <a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#a62d192d931002b4866443cd7fc71419b">_output</a>-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a07b929c34ad1dc823d8315876aa403ce">padding</a>().<a class="code" href="structarm__compute_1_1_border_size.xhtml#a802ffcf1b49237efe5be8a314d3f3869">bottom</a>;</div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;        _kernel.setArg&lt;cl_uint&gt;(idx0, static_cast&lt;unsigned int&gt;(total_cross_plane_pad));</div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;    }</div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;</div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;    <span class="keywordflow">do</span></div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;    {</div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;        Window slice_b = <a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a548131b3d37da47a2e9d32111c88dfe1">slice</a>;</div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;        <span class="comment">// Don&#39;t slice matrix B along the z dimension if matrix B has just 2 dimensions and matrix A more than 2</span></div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;        <span class="comment">// This scenario can happen when the matrix multiplication is used to perform a convolution operation</span></div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;        <span class="keywordflow">if</span>(!<a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#a170f236fd8751c4e1675873b496f7cf8">_slide_matrix_b</a>)</div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;        {</div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;            slice_b = slice_matrix_b;</div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;        }</div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;</div><div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;        <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> idx = 0;</div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;        <a class="code" href="classarm__compute_1_1_i_c_l_kernel.xhtml#ac74dad3e61f79334f5e73f3c3ac603cb">add_2D_tensor_argument</a>(idx, <a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#a1ab65df01f310bf054323607cd09956e">_input0</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a548131b3d37da47a2e9d32111c88dfe1">slice</a>);</div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;        <a class="code" href="classarm__compute_1_1_i_c_l_kernel.xhtml#ac74dad3e61f79334f5e73f3c3ac603cb">add_2D_tensor_argument</a>(idx, <a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#a6590f81ae0c9f3e01546c73eb31a43c8">_input1</a>, slice_b);</div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;        <span class="keywordflow">if</span>(<a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#a94e30ed1aed47fae8430cc4d3cd2b6c7">_add_bias</a>)</div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;        {</div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;            <a class="code" href="classarm__compute_1_1_i_c_l_kernel.xhtml#ac74dad3e61f79334f5e73f3c3ac603cb">add_2D_tensor_argument</a>(idx, <a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#a23faf35900f50c084fa1282511b7bd17">_input2</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a548131b3d37da47a2e9d32111c88dfe1">slice</a>);</div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;        }</div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;        <a class="code" href="classarm__compute_1_1_i_c_l_kernel.xhtml#ac74dad3e61f79334f5e73f3c3ac603cb">add_2D_tensor_argument</a>(idx, <a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#a62d192d931002b4866443cd7fc71419b">_output</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a548131b3d37da47a2e9d32111c88dfe1">slice</a>);</div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;        _kernel.setArg&lt;cl_uint&gt;(idx++, static_cast&lt;unsigned int&gt;(<a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#a1ab65df01f310bf054323607cd09956e">_input0</a>-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a6b14f175bf5281f57b561e2d4e4b1f1f">strides_in_bytes</a>()[2]));</div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;        _kernel.setArg&lt;cl_uint&gt;(idx++, static_cast&lt;unsigned int&gt;(<a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#a6590f81ae0c9f3e01546c73eb31a43c8">_input1</a>-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a6b14f175bf5281f57b561e2d4e4b1f1f">strides_in_bytes</a>()[2]));</div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;        <span class="keywordflow">if</span>(<a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#a94e30ed1aed47fae8430cc4d3cd2b6c7">_add_bias</a>)</div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;        {</div><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;            _kernel.setArg&lt;cl_uint&gt;(idx++, static_cast&lt;unsigned int&gt;(<a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#a23faf35900f50c084fa1282511b7bd17">_input2</a>-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a6b14f175bf5281f57b561e2d4e4b1f1f">strides_in_bytes</a>()[2]));</div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;        }</div><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;        _kernel.setArg&lt;cl_uint&gt;(idx++, static_cast&lt;unsigned int&gt;(<a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#a62d192d931002b4866443cd7fc71419b">_output</a>-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a6b14f175bf5281f57b561e2d4e4b1f1f">strides_in_bytes</a>()[2]));</div><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;        <a class="code" href="namespacearm__compute.xhtml#a6e51ab3789678d3e0b0b72178dd6c4c6">enqueue</a>(queue, *<span class="keyword">this</span>, <a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a548131b3d37da47a2e9d32111c88dfe1">slice</a>, <a class="code" href="classarm__compute_1_1_i_c_l_kernel.xhtml#ab9f813c25ed75ea7b7ac2fa3926a8f55">lws_hint</a>());</div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;    }</div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;    <span class="keywordflow">while</span>(<a class="code" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>.<a class="code" href="classarm__compute_1_1_window.xhtml#aac792e3a11bc73bafafc4f4284c7f215">slide_window_slice_3D</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a548131b3d37da47a2e9d32111c88dfe1">slice</a>));</div><div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;}</div><div class="ttc" id="structarm__compute_1_1_border_size_xhtml_a3fdd42ea34070a54e696b3adc28c4be3"><div class="ttname"><a href="structarm__compute_1_1_border_size.xhtml#a3fdd42ea34070a54e696b3adc28c4be3">arm_compute::BorderSize::top</a></div><div class="ttdeci">unsigned int top</div><div class="ttdoc">top of the border</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00349">Types.h:349</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_a1f4e725b8e1ea36b30e09dc08ae6961d"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a1f4e725b8e1ea36b30e09dc08ae6961d">arm_compute::ITensorInfo::num_dimensions</a></div><div class="ttdeci">virtual size_t num_dimensions() const =0</div><div class="ttdoc">The number of dimensions of the tensor (rank)</div></div>
<div class="ttc" id="classarm__compute_1_1_i_kernel_xhtml_ad34a46f53686c12a5c5e717cc9617fb6"><div class="ttname"><a href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">arm_compute::IKernel::window</a></div><div class="ttdeci">const Window &amp; window() const</div><div class="ttdoc">The maximum window the kernel can be executed on.</div><div class="ttdef"><b>Definition:</b> <a href="_i_kernel_8cpp_source.xhtml#l00028">IKernel.cpp:28</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a6e51ab3789678d3e0b0b72178dd6c4c6"><div class="ttname"><a href="namespacearm__compute.xhtml#a6e51ab3789678d3e0b0b72178dd6c4c6">arm_compute::enqueue</a></div><div class="ttdeci">void enqueue(cl::CommandQueue &amp;queue, ICLKernel &amp;kernel, const Window &amp;window, const cl::NDRange &amp;lws_hint=CLKernelLibrary::get().default_ndrange(), bool use_dummy_work_items=false)</div><div class="ttdoc">Add the kernel to the command queue with the given window.</div><div class="ttdef"><b>Definition:</b> <a href="_i_c_l_kernel_8cpp_source.xhtml#l00039">ICLKernel.cpp:39</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_c_l_kernel_xhtml_ab9f813c25ed75ea7b7ac2fa3926a8f55"><div class="ttname"><a href="classarm__compute_1_1_i_c_l_kernel.xhtml#ab9f813c25ed75ea7b7ac2fa3926a8f55">arm_compute::ICLKernel::lws_hint</a></div><div class="ttdeci">cl::NDRange lws_hint() const</div><div class="ttdoc">Return the Local-Workgroup-Size hint.</div><div class="ttdef"><b>Definition:</b> <a href="_i_c_l_kernel_8h_source.xhtml#l00247">ICLKernel.h:247</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel_xhtml_a23faf35900f50c084fa1282511b7bd17"><div class="ttname"><a href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#a23faf35900f50c084fa1282511b7bd17">arm_compute::CLGEMMMatrixMultiplyKernel::_input2</a></div><div class="ttdeci">const ICLTensor * _input2</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_g_e_m_m_matrix_multiply_kernel_8h_source.xhtml#l00096">CLGEMMMatrixMultiplyKernel.h:96</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel_xhtml_a94e30ed1aed47fae8430cc4d3cd2b6c7"><div class="ttname"><a href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#a94e30ed1aed47fae8430cc4d3cd2b6c7">arm_compute::CLGEMMMatrixMultiplyKernel::_add_bias</a></div><div class="ttdeci">bool _add_bias</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_g_e_m_m_matrix_multiply_kernel_8h_source.xhtml#l00101">CLGEMMMatrixMultiplyKernel.h:101</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00466">Error.h:466</a></div></div>
<div class="ttc" id="structarm__compute_1_1_border_size_xhtml_a802ffcf1b49237efe5be8a314d3f3869"><div class="ttname"><a href="structarm__compute_1_1_border_size.xhtml#a802ffcf1b49237efe5be8a314d3f3869">arm_compute::BorderSize::bottom</a></div><div class="ttdeci">unsigned int bottom</div><div class="ttdoc">bottom of the border</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00351">Types.h:351</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel_xhtml_aa71ec02f998e1dcfd49ef944ec8cf23e"><div class="ttname"><a href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#aa71ec02f998e1dcfd49ef944ec8cf23e">arm_compute::CLGEMMMatrixMultiplyKernel::_reinterpret_input_as_3d</a></div><div class="ttdeci">bool _reinterpret_input_as_3d</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_g_e_m_m_matrix_multiply_kernel_8h_source.xhtml#l00099">CLGEMMMatrixMultiplyKernel.h:99</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_aa96e81276ee4f87ab386cd05a5539a7d"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#aa96e81276ee4f87ab386cd05a5539a7d">arm_compute::Window::DimX</a></div><div class="ttdeci">static constexpr size_t DimX</div><div class="ttdoc">Alias for dimension 0 also known as X dimension.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00043">Window.h:43</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel_xhtml_a6590f81ae0c9f3e01546c73eb31a43c8"><div class="ttname"><a href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#a6590f81ae0c9f3e01546c73eb31a43c8">arm_compute::CLGEMMMatrixMultiplyKernel::_input1</a></div><div class="ttdeci">const ICLTensor * _input1</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_g_e_m_m_matrix_multiply_kernel_8h_source.xhtml#l00095">CLGEMMMatrixMultiplyKernel.h:95</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_xhtml_a0e95dc1e53c361348314873b168ae237"><div class="ttname"><a href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">arm_compute::ITensor::info</a></div><div class="ttdeci">virtual ITensorInfo * info() const =0</div><div class="ttdoc">Interface to be implemented by the child class to return the tensor's metadata.</div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_a07b929c34ad1dc823d8315876aa403ce"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a07b929c34ad1dc823d8315876aa403ce">arm_compute::ITensorInfo::padding</a></div><div class="ttdeci">virtual PaddingSize padding() const =0</div><div class="ttdoc">Padding of tensor.</div></div>
<div class="ttc" id="classarm__compute_1_1_i_c_l_kernel_xhtml_a45601e0d46621a5b6f2e417d60e5c800"><div class="ttname"><a href="classarm__compute_1_1_i_c_l_kernel.xhtml#a45601e0d46621a5b6f2e417d60e5c800">arm_compute::ICLKernel::num_arguments_per_2D_tensor</a></div><div class="ttdeci">static constexpr unsigned int num_arguments_per_2D_tensor()</div><div class="ttdoc">Returns the number of arguments enqueued per 2D tensor object.</div><div class="ttdef"><b>Definition:</b> <a href="_i_c_l_kernel_8h_source.xhtml#l00192">ICLKernel.h:192</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_aac792e3a11bc73bafafc4f4284c7f215"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#aac792e3a11bc73bafafc4f4284c7f215">arm_compute::Window::slide_window_slice_3D</a></div><div class="ttdeci">bool slide_window_slice_3D(Window &amp;slice) const</div><div class="ttdoc">Slide the passed 3D window slice.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00333">Window.h:333</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel_xhtml_a1ab65df01f310bf054323607cd09956e"><div class="ttname"><a href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#a1ab65df01f310bf054323607cd09956e">arm_compute::CLGEMMMatrixMultiplyKernel::_input0</a></div><div class="ttdeci">const ICLTensor * _input0</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_g_e_m_m_matrix_multiply_kernel_8h_source.xhtml#l00094">CLGEMMMatrixMultiplyKernel.h:94</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel_xhtml_a170f236fd8751c4e1675873b496f7cf8"><div class="ttname"><a href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#a170f236fd8751c4e1675873b496f7cf8">arm_compute::CLGEMMMatrixMultiplyKernel::_slide_matrix_b</a></div><div class="ttdeci">bool _slide_matrix_b</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_g_e_m_m_matrix_multiply_kernel_8h_source.xhtml#l00098">CLGEMMMatrixMultiplyKernel.h:98</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_ad2d402364fa822b0b7775081291eeca9"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#ad2d402364fa822b0b7775081291eeca9">arm_compute::Window::DimY</a></div><div class="ttdeci">static constexpr size_t DimY</div><div class="ttdoc">Alias for dimension 1 also known as Y dimension.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00045">Window.h:45</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_c_l_kernel_xhtml_ac74dad3e61f79334f5e73f3c3ac603cb"><div class="ttname"><a href="classarm__compute_1_1_i_c_l_kernel.xhtml#ac74dad3e61f79334f5e73f3c3ac603cb">arm_compute::ICLKernel::add_2D_tensor_argument</a></div><div class="ttdeci">void add_2D_tensor_argument(unsigned int &amp;idx, const ICLTensor *tensor, const Window &amp;window)</div><div class="ttdoc">Add the passed 2D tensor's parameters to the object's kernel's arguments starting from the index idx.</div><div class="ttdef"><b>Definition:</b> <a href="_i_c_l_kernel_8h_source.xhtml#l00134">ICLKernel.h:134</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel_xhtml_a62d192d931002b4866443cd7fc71419b"><div class="ttname"><a href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#a62d192d931002b4866443cd7fc71419b">arm_compute::CLGEMMMatrixMultiplyKernel::_output</a></div><div class="ttdeci">ICLTensor * _output</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_g_e_m_m_matrix_multiply_kernel_8h_source.xhtml#l00097">CLGEMMMatrixMultiplyKernel.h:97</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel_xhtml_a7d222bcf0d803c0647a4b93061daa56c"><div class="ttname"><a href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml#a7d222bcf0d803c0647a4b93061daa56c">arm_compute::CLGEMMMatrixMultiplyKernel::_reinterpret_output_as_3d</a></div><div class="ttdeci">bool _reinterpret_output_as_3d</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_g_e_m_m_matrix_multiply_kernel_8h_source.xhtml#l00100">CLGEMMMatrixMultiplyKernel.h:100</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_a6b14f175bf5281f57b561e2d4e4b1f1f"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a6b14f175bf5281f57b561e2d4e4b1f1f">arm_compute::ITensorInfo::strides_in_bytes</a></div><div class="ttdeci">virtual const Strides &amp; strides_in_bytes() const =0</div><div class="ttdoc">The strides in bytes for accessing each dimension of the tensor.</div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_a30ca5bdbb60ee281d7f1ab34f7a4ee40"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#a30ca5bdbb60ee281d7f1ab34f7a4ee40">arm_compute::Window::first_slice_window_3D</a></div><div class="ttdeci">Window first_slice_window_3D() const</div><div class="ttdoc">First 3D slice of the window.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00289">Window.h:289</a></div></div>
<div class="ttc" id="_validate_8h_xhtml_a6eb9ce82815fe429250189da7592ba75"><div class="ttname"><a href="_validate_8h.xhtml#a6eb9ce82815fe429250189da7592ba75">ARM_COMPUTE_ERROR_ON_INVALID_SUBWINDOW</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_INVALID_SUBWINDOW(f, s)</div><div class="ttdef"><b>Definition:</b> <a href="_validate_8h_source.xhtml#l00205">Validate.h:205</a></div></div>
<div class="ttc" id="_validate_8h_xhtml_a1b35b0d258183cf9ef36adf684d0b88c"><div class="ttname"><a href="_validate_8h.xhtml#a1b35b0d258183cf9ef36adf684d0b88c">ARM_COMPUTE_ERROR_ON_UNCONFIGURED_KERNEL</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_UNCONFIGURED_KERNEL(k)</div><div class="ttdef"><b>Definition:</b> <a href="_validate_8h_source.xhtml#l00941">Validate.h:941</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_1_1reference_xhtml_a548131b3d37da47a2e9d32111c88dfe1"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a548131b3d37da47a2e9d32111c88dfe1">arm_compute::test::validation::reference::slice</a></div><div class="ttdeci">SimpleTensor&lt; T &gt; slice(const SimpleTensor&lt; T &gt; &amp;src, Coordinates starts, Coordinates ends)</div><div class="ttdef"><b>Definition:</b> <a href="_slice_operations_8cpp_source.xhtml#l00038">SliceOperations.cpp:38</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_c_l_g_e_m_m_matrix_multiply_kernel_8h_source.xhtml#l00101">CLGEMMMatrixMultiplyKernel::_add_bias</a>, <a class="el" href="_c_l_g_e_m_m_matrix_multiply_kernel_8h_source.xhtml#l00094">CLGEMMMatrixMultiplyKernel::_input0</a>, <a class="el" href="_c_l_g_e_m_m_matrix_multiply_kernel_8h_source.xhtml#l00095">CLGEMMMatrixMultiplyKernel::_input1</a>, <a class="el" href="_c_l_g_e_m_m_matrix_multiply_kernel_8h_source.xhtml#l00096">CLGEMMMatrixMultiplyKernel::_input2</a>, <a class="el" href="_c_l_g_e_m_m_matrix_multiply_kernel_8h_source.xhtml#l00097">CLGEMMMatrixMultiplyKernel::_output</a>, <a class="el" href="_c_l_g_e_m_m_matrix_multiply_kernel_8h_source.xhtml#l00099">CLGEMMMatrixMultiplyKernel::_reinterpret_input_as_3d</a>, <a class="el" href="_c_l_g_e_m_m_matrix_multiply_kernel_8h_source.xhtml#l00100">CLGEMMMatrixMultiplyKernel::_reinterpret_output_as_3d</a>, <a class="el" href="_c_l_g_e_m_m_matrix_multiply_kernel_8h_source.xhtml#l00098">CLGEMMMatrixMultiplyKernel::_slide_matrix_b</a>, <a class="el" href="_i_c_l_kernel_8h_source.xhtml#l00134">ICLKernel::add_2D_tensor_argument()</a>, <a class="el" href="_error_8h_source.xhtml#l00466">ARM_COMPUTE_ERROR_ON</a>, <a class="el" href="_validate_8h_source.xhtml#l00205">ARM_COMPUTE_ERROR_ON_INVALID_SUBWINDOW</a>, <a class="el" href="_validate_8h_source.xhtml#l00941">ARM_COMPUTE_ERROR_ON_UNCONFIGURED_KERNEL</a>, <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l00351">BorderSize::bottom</a>, <a class="el" href="_window_8h_source.xhtml#l00043">Window::DimX</a>, <a class="el" href="_window_8h_source.xhtml#l00045">Window::DimY</a>, <a class="el" href="_i_c_l_kernel_8cpp_source.xhtml#l00039">arm_compute::enqueue()</a>, <a class="el" href="_window_8h_source.xhtml#l00289">Window::first_slice_window_3D()</a>, <a class="el" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">ITensor::info()</a>, <a class="el" href="_i_c_l_kernel_8h_source.xhtml#l00247">ICLKernel::lws_hint()</a>, <a class="el" href="_i_c_l_kernel_8h_source.xhtml#l00192">ICLKernel::num_arguments_per_2D_tensor()</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a1f4e725b8e1ea36b30e09dc08ae6961d">ITensorInfo::num_dimensions()</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a07b929c34ad1dc823d8315876aa403ce">ITensorInfo::padding()</a>, <a class="el" href="_window_8inl_source.xhtml#l00049">Window::set()</a>, <a class="el" href="_slice_operations_8cpp_source.xhtml#l00038">arm_compute::test::validation::reference::slice()</a>, <a class="el" href="_window_8h_source.xhtml#l00333">Window::slide_window_slice_3D()</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a6b14f175bf5281f57b561e2d4e4b1f1f">ITensorInfo::strides_in_bytes()</a>, <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l00349">BorderSize::top</a>, and <a class="el" href="_i_kernel_8cpp_source.xhtml#l00028">IKernel::window()</a>.</p>

</div>
</div>
<a id="af45425674a854a3bb158b0b3d0ba9d3e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af45425674a854a3bb158b0b3d0ba9d3e">&#9670;&nbsp;</a></span>validate()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_status.xhtml">Status</a> validate </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>input0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>input1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>input2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>alpha</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>beta</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>is_interleaved_transposed</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_g_e_m_m_reshape_info.xhtml">GEMMReshapeInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>reshape_info</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3">GPUTarget</a>&#160;</td>
          <td class="paramname"><em>gpu_target</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>fp_mixed_precision</em> = <code>false</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>activation_info</em> = <code><a class="el" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Static function to check if given info will lead to a valid configuration of <a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml">CLGEMMMatrixMultiplyKernel</a>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">input0</td><td>Input tensor containing the Matrix A info. Data types supported: F16/F32 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">input1</td><td>Input tensor containing the Matrix B info. Data type supported: same as <code>input0</code> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">input2</td><td>Input tensor containing the Matrix C (bias) info. Can be nullptr. Data type supported: same as <code>input0</code> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">output</td><td>Output tensor to store the result of matrix multiplication. Data type supported: same as <code>input0</code> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">alpha</td><td>Weight of the matrix product </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">beta</td><td>Weight of vector C. Default value is 0. Only beta = 1 is currently supported. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">is_interleaved_transposed</td><td>True if input0 and input1 have been reshaped respectively using <a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_reshape_l_h_s_matrix_kernel.xhtml">CLGEMMReshapeLHSMatrixKernel</a> and <a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_reshape_r_h_s_matrix_kernel.xhtml">CLGEMMReshapeRHSMatrixKernel</a> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">reshape_info</td><td>GEMM reshape info. If is_interleaved_transposed = true, this object must contain the information to understand how the matrix A and matrix B have been reshaped </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">gpu_target</td><td>GPU Target </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">fp_mixed_precision</td><td>(Optional) Use wider accumulators (32 bit instead of 16 for FP16) to improve accuracy </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">activation_info</td><td>(Optional) Activation to apply after the matrix multiplication</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>a status </dd></dl>

<p class="definition">Definition at line <a class="el" href="_c_l_g_e_m_m_matrix_multiply_kernel_8cpp_source.xhtml#l00454">454</a> of file <a class="el" href="_c_l_g_e_m_m_matrix_multiply_kernel_8cpp_source.xhtml">CLGEMMMatrixMultiplyKernel.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;{</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;    <span class="comment">// Note: num_elements_processed will be set in validate_and_configure_window()</span></div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;    ElementsProcessed num_elements_processed{};</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3161c2c93c655dd30953372064ec627b">alpha</a>);</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(activation_info);</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(validate_arguments(input0, input1, input2, output, beta, is_interleaved_transposed, reshape_info, fp_mixed_precision));</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(validate_and_configure_window(input0-&gt;clone().get(),</div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;                                                              input1-&gt;clone().get(),</div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;                                                              (input2 != <span class="keyword">nullptr</span>) ? input2-&gt;clone().get() : <span class="keyword">nullptr</span>,</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;                                                              output-&gt;clone().get(),</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;                                                              beta,</div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;                                                              is_interleaved_transposed,</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;                                                              reshape_info,</div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;                                                              gpu_target,</div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;                                                              num_elements_processed)</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;                                .first);</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;</div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;    <span class="keywordflow">return</span> Status{};</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;}</div><div class="ttc" id="_error_8h_xhtml_a8a1e1c105f0bdaf37db408c7cfcb77a4"><div class="ttname"><a href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ON_ERROR(status)</div><div class="ttdoc">Checks if a status contains an error and returns it.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00204">Error.h:204</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a6dc630a6ae9cc063b3924bcea8dee9d6"><div class="ttname"><a href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a></div><div class="ttdeci">#define ARM_COMPUTE_UNUSED(...)</div><div class="ttdoc">To avoid unused variables warnings.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00152">Error.h:152</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a3161c2c93c655dd30953372064ec627b"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a3161c2c93c655dd30953372064ec627b">arm_compute::test::validation::alpha</a></div><div class="ttdeci">const float alpha</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_o_n_2_accumulate_8cpp_source.xhtml#l00103">Accumulate.cpp:103</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_n_e_o_n_2_accumulate_8cpp_source.xhtml#l00103">arm_compute::test::validation::alpha</a>, <a class="el" href="_error_8h_source.xhtml#l00204">ARM_COMPUTE_RETURN_ON_ERROR</a>, <a class="el" href="_error_8h_source.xhtml#l00152">ARM_COMPUTE_UNUSED</a>, and <a class="el" href="classarm__compute_1_1misc_1_1_i_cloneable.xhtml#a4d10e5012a872e7f78f2b539b673049d">ICloneable&lt; T &gt;::clone()</a>.</p>

</div>
</div>
<h2 class="groupheader">Field Documentation</h2>
<a id="a94e30ed1aed47fae8430cc4d3cd2b6c7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a94e30ed1aed47fae8430cc4d3cd2b6c7">&#9670;&nbsp;</a></span>_add_bias</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool _add_bias</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_c_l_g_e_m_m_matrix_multiply_kernel_8h_source.xhtml#l00101">101</a> of file <a class="el" href="_c_l_g_e_m_m_matrix_multiply_kernel_8h_source.xhtml">CLGEMMMatrixMultiplyKernel.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_c_l_g_e_m_m_matrix_multiply_kernel_8cpp_source.xhtml#l00305">CLGEMMMatrixMultiplyKernel::configure()</a>, and <a class="el" href="_c_l_g_e_m_m_matrix_multiply_kernel_8cpp_source.xhtml#l00476">CLGEMMMatrixMultiplyKernel::run()</a>.</p>

</div>
</div>
<a id="a42af734585418559f06f6ce9f7375910"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a42af734585418559f06f6ce9f7375910">&#9670;&nbsp;</a></span>_broadcast_bias</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool _broadcast_bias</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_c_l_g_e_m_m_matrix_multiply_kernel_8h_source.xhtml#l00102">102</a> of file <a class="el" href="_c_l_g_e_m_m_matrix_multiply_kernel_8h_source.xhtml">CLGEMMMatrixMultiplyKernel.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_c_l_g_e_m_m_matrix_multiply_kernel_8cpp_source.xhtml#l00305">CLGEMMMatrixMultiplyKernel::configure()</a>.</p>

</div>
</div>
<a id="a1ab65df01f310bf054323607cd09956e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1ab65df01f310bf054323607cd09956e">&#9670;&nbsp;</a></span>_input0</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a>* _input0</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_c_l_g_e_m_m_matrix_multiply_kernel_8h_source.xhtml#l00094">94</a> of file <a class="el" href="_c_l_g_e_m_m_matrix_multiply_kernel_8h_source.xhtml">CLGEMMMatrixMultiplyKernel.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_c_l_g_e_m_m_matrix_multiply_kernel_8cpp_source.xhtml#l00305">CLGEMMMatrixMultiplyKernel::configure()</a>, and <a class="el" href="_c_l_g_e_m_m_matrix_multiply_kernel_8cpp_source.xhtml#l00476">CLGEMMMatrixMultiplyKernel::run()</a>.</p>

</div>
</div>
<a id="a6590f81ae0c9f3e01546c73eb31a43c8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6590f81ae0c9f3e01546c73eb31a43c8">&#9670;&nbsp;</a></span>_input1</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a>* _input1</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_c_l_g_e_m_m_matrix_multiply_kernel_8h_source.xhtml#l00095">95</a> of file <a class="el" href="_c_l_g_e_m_m_matrix_multiply_kernel_8h_source.xhtml">CLGEMMMatrixMultiplyKernel.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_c_l_g_e_m_m_matrix_multiply_kernel_8cpp_source.xhtml#l00305">CLGEMMMatrixMultiplyKernel::configure()</a>, and <a class="el" href="_c_l_g_e_m_m_matrix_multiply_kernel_8cpp_source.xhtml#l00476">CLGEMMMatrixMultiplyKernel::run()</a>.</p>

</div>
</div>
<a id="a23faf35900f50c084fa1282511b7bd17"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a23faf35900f50c084fa1282511b7bd17">&#9670;&nbsp;</a></span>_input2</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a>* _input2</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_c_l_g_e_m_m_matrix_multiply_kernel_8h_source.xhtml#l00096">96</a> of file <a class="el" href="_c_l_g_e_m_m_matrix_multiply_kernel_8h_source.xhtml">CLGEMMMatrixMultiplyKernel.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_c_l_g_e_m_m_matrix_multiply_kernel_8cpp_source.xhtml#l00305">CLGEMMMatrixMultiplyKernel::configure()</a>, and <a class="el" href="_c_l_g_e_m_m_matrix_multiply_kernel_8cpp_source.xhtml#l00476">CLGEMMMatrixMultiplyKernel::run()</a>.</p>

</div>
</div>
<a id="a62d192d931002b4866443cd7fc71419b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a62d192d931002b4866443cd7fc71419b">&#9670;&nbsp;</a></span>_output</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a>* _output</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_c_l_g_e_m_m_matrix_multiply_kernel_8h_source.xhtml#l00097">97</a> of file <a class="el" href="_c_l_g_e_m_m_matrix_multiply_kernel_8h_source.xhtml">CLGEMMMatrixMultiplyKernel.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_c_l_g_e_m_m_matrix_multiply_kernel_8cpp_source.xhtml#l00305">CLGEMMMatrixMultiplyKernel::configure()</a>, and <a class="el" href="_c_l_g_e_m_m_matrix_multiply_kernel_8cpp_source.xhtml#l00476">CLGEMMMatrixMultiplyKernel::run()</a>.</p>

</div>
</div>
<a id="aa71ec02f998e1dcfd49ef944ec8cf23e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa71ec02f998e1dcfd49ef944ec8cf23e">&#9670;&nbsp;</a></span>_reinterpret_input_as_3d</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool _reinterpret_input_as_3d</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_c_l_g_e_m_m_matrix_multiply_kernel_8h_source.xhtml#l00099">99</a> of file <a class="el" href="_c_l_g_e_m_m_matrix_multiply_kernel_8h_source.xhtml">CLGEMMMatrixMultiplyKernel.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_c_l_g_e_m_m_matrix_multiply_kernel_8cpp_source.xhtml#l00305">CLGEMMMatrixMultiplyKernel::configure()</a>, and <a class="el" href="_c_l_g_e_m_m_matrix_multiply_kernel_8cpp_source.xhtml#l00476">CLGEMMMatrixMultiplyKernel::run()</a>.</p>

</div>
</div>
<a id="a7d222bcf0d803c0647a4b93061daa56c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7d222bcf0d803c0647a4b93061daa56c">&#9670;&nbsp;</a></span>_reinterpret_output_as_3d</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool _reinterpret_output_as_3d</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_c_l_g_e_m_m_matrix_multiply_kernel_8h_source.xhtml#l00100">100</a> of file <a class="el" href="_c_l_g_e_m_m_matrix_multiply_kernel_8h_source.xhtml">CLGEMMMatrixMultiplyKernel.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_c_l_g_e_m_m_matrix_multiply_kernel_8cpp_source.xhtml#l00305">CLGEMMMatrixMultiplyKernel::configure()</a>, and <a class="el" href="_c_l_g_e_m_m_matrix_multiply_kernel_8cpp_source.xhtml#l00476">CLGEMMMatrixMultiplyKernel::run()</a>.</p>

</div>
</div>
<a id="a170f236fd8751c4e1675873b496f7cf8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a170f236fd8751c4e1675873b496f7cf8">&#9670;&nbsp;</a></span>_slide_matrix_b</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool _slide_matrix_b</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_c_l_g_e_m_m_matrix_multiply_kernel_8h_source.xhtml#l00098">98</a> of file <a class="el" href="_c_l_g_e_m_m_matrix_multiply_kernel_8h_source.xhtml">CLGEMMMatrixMultiplyKernel.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_c_l_g_e_m_m_matrix_multiply_kernel_8cpp_source.xhtml#l00305">CLGEMMMatrixMultiplyKernel::configure()</a>, and <a class="el" href="_c_l_g_e_m_m_matrix_multiply_kernel_8cpp_source.xhtml#l00476">CLGEMMMatrixMultiplyKernel::run()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>arm_compute/core/CL/kernels/<a class="el" href="_c_l_g_e_m_m_matrix_multiply_kernel_8h_source.xhtml">CLGEMMMatrixMultiplyKernel.h</a></li>
<li>src/core/CL/kernels/<a class="el" href="_c_l_g_e_m_m_matrix_multiply_kernel_8cpp_source.xhtml">CLGEMMMatrixMultiplyKernel.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_multiply_kernel.xhtml">CLGEMMMatrixMultiplyKernel</a></li>
    <li class="footer">Generated on Thu Mar 5 2020 16:07:11 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
