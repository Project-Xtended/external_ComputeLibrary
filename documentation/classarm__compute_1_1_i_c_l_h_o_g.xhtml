<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: ICLHOG Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.02.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classarm__compute_1_1_i_c_l_h_o_g.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">ICLHOG Class Reference<span class="mlabels"><span class="mlabel">abstract</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p>Interface for OpenCL <a class="el" href="classarm__compute_1_1_h_o_g.xhtml" title="CPU implementation of HOG data-object.">HOG</a> data-object.  
 <a href="classarm__compute_1_1_i_c_l_h_o_g.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_i_c_l_h_o_g_8h_source.xhtml">ICLHOG.h</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for ICLHOG:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classarm__compute_1_1_i_c_l_h_o_g__coll__graph.svg" width="82" height="112"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a04ce3d16477ead3711cf9d46d61abef1"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_h_o_g.xhtml#a04ce3d16477ead3711cf9d46d61abef1">ICLHOG</a> ()</td></tr>
<tr class="memdesc:a04ce3d16477ead3711cf9d46d61abef1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor.  <a href="#a04ce3d16477ead3711cf9d46d61abef1">More...</a><br /></td></tr>
<tr class="separator:a04ce3d16477ead3711cf9d46d61abef1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a60f111f23edc7afc0161a2f991a5fe9e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_h_o_g.xhtml#a60f111f23edc7afc0161a2f991a5fe9e">ICLHOG</a> (const <a class="el" href="classarm__compute_1_1_i_c_l_h_o_g.xhtml">ICLHOG</a> &amp;)=delete</td></tr>
<tr class="memdesc:a60f111f23edc7afc0161a2f991a5fe9e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied (As this class contains pointers)  <a href="#a60f111f23edc7afc0161a2f991a5fe9e">More...</a><br /></td></tr>
<tr class="separator:a60f111f23edc7afc0161a2f991a5fe9e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a580c5fa0472ca0d70b463da27803a264"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_i_c_l_h_o_g.xhtml">ICLHOG</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_h_o_g.xhtml#a580c5fa0472ca0d70b463da27803a264">operator=</a> (const <a class="el" href="classarm__compute_1_1_i_c_l_h_o_g.xhtml">ICLHOG</a> &amp;)=delete</td></tr>
<tr class="memdesc:a580c5fa0472ca0d70b463da27803a264"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied (As this class contains pointers)  <a href="#a580c5fa0472ca0d70b463da27803a264">More...</a><br /></td></tr>
<tr class="separator:a580c5fa0472ca0d70b463da27803a264"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5fa39e889172d1997da4d8369d7eff2d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_h_o_g.xhtml#a5fa39e889172d1997da4d8369d7eff2d">ICLHOG</a> (<a class="el" href="classarm__compute_1_1_i_c_l_h_o_g.xhtml">ICLHOG</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:a5fa39e889172d1997da4d8369d7eff2d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be moved.  <a href="#a5fa39e889172d1997da4d8369d7eff2d">More...</a><br /></td></tr>
<tr class="separator:a5fa39e889172d1997da4d8369d7eff2d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd0d52706236fd66484a6736d059c91c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_i_c_l_h_o_g.xhtml">ICLHOG</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_h_o_g.xhtml#acd0d52706236fd66484a6736d059c91c">operator=</a> (<a class="el" href="classarm__compute_1_1_i_c_l_h_o_g.xhtml">ICLHOG</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:acd0d52706236fd66484a6736d059c91c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be moved.  <a href="#acd0d52706236fd66484a6736d059c91c">More...</a><br /></td></tr>
<tr class="separator:acd0d52706236fd66484a6736d059c91c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4f666198e882c54ee00dd2d7c5407df2"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_h_o_g.xhtml#a4f666198e882c54ee00dd2d7c5407df2">~ICLHOG</a> ()=default</td></tr>
<tr class="memdesc:a4f666198e882c54ee00dd2d7c5407df2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default destructor.  <a href="#a4f666198e882c54ee00dd2d7c5407df2">More...</a><br /></td></tr>
<tr class="separator:a4f666198e882c54ee00dd2d7c5407df2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1fb4c50755a0ef424652246838ed91a6"><td class="memItemLeft" align="right" valign="top">virtual const cl::Buffer &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_h_o_g.xhtml#a1fb4c50755a0ef424652246838ed91a6">cl_buffer</a> () const =0</td></tr>
<tr class="memdesc:a1fb4c50755a0ef424652246838ed91a6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Interface to be implemented by the child class to return a reference to the OpenCL buffer containing the hog's descriptor.  <a href="#a1fb4c50755a0ef424652246838ed91a6">More...</a><br /></td></tr>
<tr class="separator:a1fb4c50755a0ef424652246838ed91a6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac0abc7a5c0d172947f0e6a0c0dde3df0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_h_o_g.xhtml#ac0abc7a5c0d172947f0e6a0c0dde3df0">map</a> (cl::CommandQueue &amp;q, bool blocking=true)</td></tr>
<tr class="memdesc:ac0abc7a5c0d172947f0e6a0c0dde3df0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enqueue a map operation of the allocated buffer on the given queue.  <a href="#ac0abc7a5c0d172947f0e6a0c0dde3df0">More...</a><br /></td></tr>
<tr class="separator:ac0abc7a5c0d172947f0e6a0c0dde3df0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af974a2360069c2ef8df4496d00e4f6cc"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_h_o_g.xhtml#af974a2360069c2ef8df4496d00e4f6cc">unmap</a> (cl::CommandQueue &amp;q)</td></tr>
<tr class="memdesc:af974a2360069c2ef8df4496d00e4f6cc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enqueue an unmap operation of the allocated and mapped buffer on the given queue.  <a href="#af974a2360069c2ef8df4496d00e4f6cc">More...</a><br /></td></tr>
<tr class="separator:af974a2360069c2ef8df4496d00e4f6cc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1781eecaabd2bc97d074437d01b2c683"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_h_o_g.xhtml#a1781eecaabd2bc97d074437d01b2c683">free</a> ()=0</td></tr>
<tr class="memdesc:a1781eecaabd2bc97d074437d01b2c683"><td class="mdescLeft">&#160;</td><td class="mdescRight">Interface to be implemented by the child class to free the allocated cl buffer.  <a href="#a1781eecaabd2bc97d074437d01b2c683">More...</a><br /></td></tr>
<tr class="separator:a1781eecaabd2bc97d074437d01b2c683"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a27295b82a57124dd502fbe8cebe8f9ca"><td class="memItemLeft" align="right" valign="top">float *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_h_o_g.xhtml#a27295b82a57124dd502fbe8cebe8f9ca">descriptor</a> () const override</td></tr>
<tr class="memdesc:a27295b82a57124dd502fbe8cebe8f9ca"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pointer to the first element of the array which stores the linear SVM coefficients of <a class="el" href="classarm__compute_1_1_h_o_g.xhtml" title="CPU implementation of HOG data-object.">HOG</a> descriptor.  <a href="#a27295b82a57124dd502fbe8cebe8f9ca">More...</a><br /></td></tr>
<tr class="separator:a27295b82a57124dd502fbe8cebe8f9ca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1_i_h_o_g"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1_i_h_o_g')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1_i_h_o_g.xhtml">IHOG</a></td></tr>
<tr class="memitem:a4e9b5d4ab15fd9009b463861c1a19dbd inherit pub_methods_classarm__compute_1_1_i_h_o_g"><td class="memItemLeft" align="right" valign="top">virtual const <a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml">HOGInfo</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_h_o_g.xhtml#a4e9b5d4ab15fd9009b463861c1a19dbd">info</a> () const =0</td></tr>
<tr class="memdesc:a4e9b5d4ab15fd9009b463861c1a19dbd inherit pub_methods_classarm__compute_1_1_i_h_o_g"><td class="mdescLeft">&#160;</td><td class="mdescRight">Interface to be implemented by the child class to return the <a class="el" href="classarm__compute_1_1_h_o_g.xhtml" title="CPU implementation of HOG data-object.">HOG</a>'s metadata.  <a href="classarm__compute_1_1_i_h_o_g.xhtml#a4e9b5d4ab15fd9009b463861c1a19dbd">More...</a><br /></td></tr>
<tr class="separator:a4e9b5d4ab15fd9009b463861c1a19dbd inherit pub_methods_classarm__compute_1_1_i_h_o_g"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a758ea1a393875c05d2c869ddeefd0dd6 inherit pub_methods_classarm__compute_1_1_i_h_o_g"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_h_o_g.xhtml#a758ea1a393875c05d2c869ddeefd0dd6">~IHOG</a> ()=default</td></tr>
<tr class="memdesc:a758ea1a393875c05d2c869ddeefd0dd6 inherit pub_methods_classarm__compute_1_1_i_h_o_g"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default virtual destructor.  <a href="classarm__compute_1_1_i_h_o_g.xhtml#a758ea1a393875c05d2c869ddeefd0dd6">More...</a><br /></td></tr>
<tr class="separator:a758ea1a393875c05d2c869ddeefd0dd6 inherit pub_methods_classarm__compute_1_1_i_h_o_g"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Interface for OpenCL <a class="el" href="classarm__compute_1_1_h_o_g.xhtml" title="CPU implementation of HOG data-object.">HOG</a> data-object. </p>

<p class="definition">Definition at line <a class="el" href="_i_c_l_h_o_g_8h_source.xhtml#l00040">40</a> of file <a class="el" href="_i_c_l_h_o_g_8h_source.xhtml">ICLHOG.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a04ce3d16477ead3711cf9d46d61abef1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a04ce3d16477ead3711cf9d46d61abef1">&#9670;&nbsp;</a></span>ICLHOG() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_i_c_l_h_o_g.xhtml">ICLHOG</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Default constructor. </p>

<p class="definition">Definition at line <a class="el" href="_i_c_l_h_o_g_8cpp_source.xhtml#l00028">28</a> of file <a class="el" href="_i_c_l_h_o_g_8cpp_source.xhtml">ICLHOG.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;    : _mapping(<span class="keyword">nullptr</span>)</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;{</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a60f111f23edc7afc0161a2f991a5fe9e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a60f111f23edc7afc0161a2f991a5fe9e">&#9670;&nbsp;</a></span>ICLHOG() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_i_c_l_h_o_g.xhtml">ICLHOG</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_c_l_h_o_g.xhtml">ICLHOG</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prevent instances of this class from being copied (As this class contains pointers) </p>

</div>
</div>
<a id="a5fa39e889172d1997da4d8369d7eff2d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5fa39e889172d1997da4d8369d7eff2d">&#9670;&nbsp;</a></span>ICLHOG() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_i_c_l_h_o_g.xhtml">ICLHOG</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_c_l_h_o_g.xhtml">ICLHOG</a> &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Allow instances of this class to be moved. </p>

</div>
</div>
<a id="a4f666198e882c54ee00dd2d7c5407df2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4f666198e882c54ee00dd2d7c5407df2">&#9670;&nbsp;</a></span>~ICLHOG()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual ~<a class="el" href="classarm__compute_1_1_i_c_l_h_o_g.xhtml">ICLHOG</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Default destructor. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a1fb4c50755a0ef424652246838ed91a6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1fb4c50755a0ef424652246838ed91a6">&#9670;&nbsp;</a></span>cl_buffer()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const cl::Buffer&amp; cl_buffer </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Interface to be implemented by the child class to return a reference to the OpenCL buffer containing the hog's descriptor. </p>
<dl class="section return"><dt>Returns</dt><dd>A reference to an OpenCL buffer containing the hog's descriptor </dd></dl>

<p>Implemented in <a class="el" href="classarm__compute_1_1_c_l_h_o_g.xhtml#a53c338c0d76f41c472cdbf66fafdfe91">CLHOG</a>.</p>

<p class="reference">Referenced by <a class="el" href="_c_l_h_o_g_detector_kernel_8cpp_source.xhtml#l00044">CLHOGDetectorKernel::configure()</a>.</p>

</div>
</div>
<a id="a27295b82a57124dd502fbe8cebe8f9ca"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a27295b82a57124dd502fbe8cebe8f9ca">&#9670;&nbsp;</a></span>descriptor()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float * descriptor </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Pointer to the first element of the array which stores the linear SVM coefficients of <a class="el" href="classarm__compute_1_1_h_o_g.xhtml" title="CPU implementation of HOG data-object.">HOG</a> descriptor. </p>
<dl class="section note"><dt>Note</dt><dd>Other elements of the array can be accessed using <a class="el" href="classarm__compute_1_1_i_c_l_h_o_g.xhtml#a27295b82a57124dd502fbe8cebe8f9ca" title="Pointer to the first element of the array which stores the linear SVM coefficients of HOG descriptor.">descriptor()</a>[idx] for idx=[0, descriptor_size() - 1]</dd></dl>
<dl class="section return"><dt>Returns</dt><dd>A pointer to the first element of the array which stores the linear SVM coefficients of <a class="el" href="classarm__compute_1_1_h_o_g.xhtml" title="CPU implementation of HOG data-object.">HOG</a> descriptor </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_h_o_g.xhtml#afc824305b2eaceab36baf5b66a535316">IHOG</a>.</p>

<p class="definition">Definition at line <a class="el" href="_i_c_l_h_o_g_8cpp_source.xhtml#l00044">44</a> of file <a class="el" href="_i_c_l_h_o_g_8cpp_source.xhtml">ICLHOG.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;{</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <span class="keywordflow">return</span> reinterpret_cast&lt;float *&gt;(_mapping);</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;}</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_c_l_h_o_g_accessor_8h_source.xhtml#l00064">CLHOGAccessor::descriptor()</a>, <a class="el" href="_c_l_h_o_g_8cpp_source.xhtml#l00062">CLHOG::map()</a>, and <a class="el" href="_c_l_h_o_g_8cpp_source.xhtml#l00068">CLHOG::unmap()</a>.</p>

</div>
</div>
<a id="a1781eecaabd2bc97d074437d01b2c683"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1781eecaabd2bc97d074437d01b2c683">&#9670;&nbsp;</a></span>free()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void free </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Interface to be implemented by the child class to free the allocated cl buffer. </p>
<dl class="section warning"><dt>Warning</dt><dd>The buffer must have been allocated previously. Otherwise calling the function will fail. </dd></dl>

<p>Implemented in <a class="el" href="classarm__compute_1_1_c_l_h_o_g.xhtml#a1468b0adb6ec3f9d38aa7d60b8a91974">CLHOG</a>.</p>

</div>
</div>
<a id="ac0abc7a5c0d172947f0e6a0c0dde3df0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac0abc7a5c0d172947f0e6a0c0dde3df0">&#9670;&nbsp;</a></span>map()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void map </td>
          <td>(</td>
          <td class="paramtype">cl::CommandQueue &amp;&#160;</td>
          <td class="paramname"><em>q</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>blocking</em> = <code>true</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Enqueue a map operation of the allocated buffer on the given queue. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">q</td><td>The CL command queue to use for the mapping operation. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blocking</td><td>If true, then the mapping will be ready to use by the time this method returns, else it is the caller's responsibility to flush the queue and wait for the mapping operation to have completed before using the returned mapping pointer.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The mapping address. </dd></dl>

<p class="definition">Definition at line <a class="el" href="_i_c_l_h_o_g_8cpp_source.xhtml#l00033">33</a> of file <a class="el" href="_i_c_l_h_o_g_8cpp_source.xhtml">ICLHOG.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;{</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    _mapping = do_map(q, blocking);</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;}</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_c_l_h_o_g_8cpp_source.xhtml#l00062">CLHOG::map()</a>.</p>

</div>
</div>
<a id="a580c5fa0472ca0d70b463da27803a264"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a580c5fa0472ca0d70b463da27803a264">&#9670;&nbsp;</a></span>operator=() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_i_c_l_h_o_g.xhtml">ICLHOG</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_c_l_h_o_g.xhtml">ICLHOG</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prevent instances of this class from being copied (As this class contains pointers) </p>

</div>
</div>
<a id="acd0d52706236fd66484a6736d059c91c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acd0d52706236fd66484a6736d059c91c">&#9670;&nbsp;</a></span>operator=() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_i_c_l_h_o_g.xhtml">ICLHOG</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_c_l_h_o_g.xhtml">ICLHOG</a> &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Allow instances of this class to be moved. </p>

</div>
</div>
<a id="af974a2360069c2ef8df4496d00e4f6cc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af974a2360069c2ef8df4496d00e4f6cc">&#9670;&nbsp;</a></span>unmap()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void unmap </td>
          <td>(</td>
          <td class="paramtype">cl::CommandQueue &amp;&#160;</td>
          <td class="paramname"><em>q</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Enqueue an unmap operation of the allocated and mapped buffer on the given queue. </p>
<dl class="section note"><dt>Note</dt><dd>This method simply enqueues the unmap operation, it is the caller's responsibility to flush the queue and make sure the unmap is finished before the memory is accessed by the device.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">q</td><td>The CL command queue to use for the mapping operation. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_i_c_l_h_o_g_8cpp_source.xhtml#l00038">38</a> of file <a class="el" href="_i_c_l_h_o_g_8cpp_source.xhtml">ICLHOG.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;{</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    do_unmap(q);</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    _mapping = <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;}</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_c_l_h_o_g_8cpp_source.xhtml#l00068">CLHOG::unmap()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>arm_compute/core/CL/<a class="el" href="_i_c_l_h_o_g_8h_source.xhtml">ICLHOG.h</a></li>
<li>src/core/CL/<a class="el" href="_i_c_l_h_o_g_8cpp_source.xhtml">ICLHOG.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1_i_c_l_h_o_g.xhtml">ICLHOG</a></li>
    <li class="footer">Generated on Thu Mar 5 2020 16:07:14 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
