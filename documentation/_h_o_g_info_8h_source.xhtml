<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: arm_compute/core/HOGInfo.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.02.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_h_o_g_info_8h_source.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">HOGInfo.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_h_o_g_info_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2016-2019 ARM Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#ifndef ARM_COMPUTE_HOGINFO_H</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#define ARM_COMPUTE_HOGINFO_H</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_size2_d_8h.xhtml">arm_compute/core/Size2D.h</a>&quot;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2core_2_types_8h.xhtml">arm_compute/core/Types.h</a>&quot;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &lt;cstddef&gt;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;{<span class="comment"></span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="comment">/** Store the HOG&#39;s metadata */</span></div><div class="line"><a name="l00035"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_h_o_g_info.xhtml">   35</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml">HOGInfo</a></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;{</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="keyword">public</span>:<span class="comment"></span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="comment">    /** Default constructor */</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    <a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml#aed28257d62b9129062bfd61600531648">HOGInfo</a>();<span class="comment"></span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="comment">    /** Default destructor */</span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    <span class="keyword">virtual</span> <a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml#ada121d63992678a09e1b3db5a2002bfa">~HOGInfo</a>() = <span class="keywordflow">default</span>;<span class="comment"></span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="comment">    /** Allow instances of this class to be copy constructed */</span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    <a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml#aed28257d62b9129062bfd61600531648">HOGInfo</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml">HOGInfo</a> &amp;) = <span class="keywordflow">default</span>;<span class="comment"></span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="comment">    /** Allow instances of this class to be copied */</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml">HOGInfo</a> &amp;<a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml#a64f60c469394d4f5f621546fc3108590">operator=</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml">HOGInfo</a> &amp;) = <span class="keywordflow">default</span>;<span class="comment"></span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="comment">    /** Allow instances of this class to be move constructed */</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml#aed28257d62b9129062bfd61600531648">HOGInfo</a>(<a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml">HOGInfo</a> &amp;&amp;) = <span class="keywordflow">default</span>;<span class="comment"></span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="comment">    /** Allow instances of this class to be moved */</span></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml">HOGInfo</a> &amp;<a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml#a64f60c469394d4f5f621546fc3108590">operator=</a>(<a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml">HOGInfo</a> &amp;&amp;) = <span class="keywordflow">default</span>;<span class="comment"></span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="comment">    /** Constructor</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="comment">     * @param[in] cell_size             Cell size in pixels</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="comment">     * @param[in] block_size            Block size in pixels. Must be a multiple of cell_size.</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="comment">     * @param[in] detection_window_size Detection window size in pixels. Must be a multiple of block_size and block_stride.</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="comment">     * @param[in] block_stride          Distance in pixels between 2 consecutive blocks along the x and y direction. Must be a multiple of cell size</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="comment">     * @param[in] num_bins              Number of histogram bins for each cell</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="comment">     * @param[in] normalization_type    (Optional) Normalization type to use for each block</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="comment">     * @param[in] l2_hyst_threshold     (Optional) Threshold used for L2HYS_NORM normalization method</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="comment">     * @param[in] phase_type            (Optional) Type of @ref PhaseType</span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml#aed28257d62b9129062bfd61600531648">HOGInfo</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> &amp;<a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml#aaefa291ad3cc3e3210c8b8ef2ffde476">cell_size</a>, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> &amp;<a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml#ae561964ccc0e0a5750676b9c7dd7cd44">block_size</a>, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> &amp;<a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml#a7cbda2c789c461237f0c6eaee8f8cd2a">detection_window_size</a>, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> &amp;<a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml#a207391d3ac69d9a0839104f784f888fd">block_stride</a>, <span class="keywordtype">size_t</span> <a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml#ad96530ddba514601d376f991b568b346">num_bins</a>,</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;            <a class="code" href="namespacearm__compute.xhtml#a673665b4587a2956fcbad5f0e9ba89d3">HOGNormType</a> <a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml#a5a4a2ab2f4396cc64b4a5676a90d7f07">normalization_type</a> = <a class="code" href="namespacearm__compute.xhtml#a673665b4587a2956fcbad5f0e9ba89d3ac9e68c0594494ec85805b225a7acb9c2">HOGNormType::L2HYS_NORM</a>, <span class="keywordtype">float</span> <a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml#ac3f834a0c4744ccbc55d3b8bc810fdff">l2_hyst_threshold</a> = 0.2f, <a class="code" href="namespacearm__compute.xhtml#af00a42ecad444bbda75cde1b64bd7e72">PhaseType</a> <a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml#a039b8ebcdd462041d3988e6d2c145323">phase_type</a> = <a class="code" href="namespacearm__compute.xhtml#af00a42ecad444bbda75cde1b64bd7e72aaf36b47f395cd01f48b8fc1013665054">PhaseType::UNSIGNED</a>);<span class="comment"></span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="comment">    /** Initialize the metadata structure with the given parameters</span></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="comment">     * @param[in] cell_size             Cell size in pixels</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="comment">     * @param[in] block_size            Block size in pixels. Must be a multiple of cell_size.</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="comment">     * @param[in] detection_window_size Detection window size in pixels. Must be a multiple of block_size and block_stride.</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="comment">     * @param[in] block_stride          Distance in pixels between 2 consecutive blocks along the x and y direction. Must be a multiple of cell size</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="comment">     * @param[in] num_bins              Number of histogram bins for each cell</span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="comment">     * @param[in] normalization_type    (Optional) Normalization type to use for each block</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="comment">     * @param[in] l2_hyst_threshold     (Optional) Threshold used for L2HYS_NORM normalization method</span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="comment">     * @param[in] phase_type            (Optional) Type of @ref PhaseType</span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml#a75215e8ba07a5ec88ee8c902e306e887">init</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> &amp;<a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml#aaefa291ad3cc3e3210c8b8ef2ffde476">cell_size</a>, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> &amp;<a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml#ae561964ccc0e0a5750676b9c7dd7cd44">block_size</a>, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> &amp;<a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml#a7cbda2c789c461237f0c6eaee8f8cd2a">detection_window_size</a>, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> &amp;<a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml#a207391d3ac69d9a0839104f784f888fd">block_stride</a>, <span class="keywordtype">size_t</span> <a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml#ad96530ddba514601d376f991b568b346">num_bins</a>,</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;              <a class="code" href="namespacearm__compute.xhtml#a673665b4587a2956fcbad5f0e9ba89d3">HOGNormType</a> <a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml#a5a4a2ab2f4396cc64b4a5676a90d7f07">normalization_type</a> = <a class="code" href="namespacearm__compute.xhtml#a673665b4587a2956fcbad5f0e9ba89d3ac9e68c0594494ec85805b225a7acb9c2">HOGNormType::L2HYS_NORM</a>, <span class="keywordtype">float</span> <a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml#ac3f834a0c4744ccbc55d3b8bc810fdff">l2_hyst_threshold</a> = 0.2f, <a class="code" href="namespacearm__compute.xhtml#af00a42ecad444bbda75cde1b64bd7e72">PhaseType</a> <a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml#a039b8ebcdd462041d3988e6d2c145323">phase_type</a> = <a class="code" href="namespacearm__compute.xhtml#af00a42ecad444bbda75cde1b64bd7e72aaf36b47f395cd01f48b8fc1013665054">PhaseType::UNSIGNED</a>);<span class="comment"></span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="comment">    /** The cell size in pixels</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="comment">     * @return The cell size in pixels</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> &amp;<a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml#aaefa291ad3cc3e3210c8b8ef2ffde476">cell_size</a>() <span class="keyword">const</span>;<span class="comment"></span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="comment">    /** The block size in pixels</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="comment">     * @return The block size in pixels</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> &amp;<a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml#ae561964ccc0e0a5750676b9c7dd7cd44">block_size</a>() <span class="keyword">const</span>;<span class="comment"></span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="comment">    /** The detection window size in pixels</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="comment">     * @return The detection window size in pixels</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> &amp;<a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml#a7cbda2c789c461237f0c6eaee8f8cd2a">detection_window_size</a>() <span class="keyword">const</span>;<span class="comment"></span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="comment">    /** The block stride in pixels. The block stride is the distance between 2 consecutive blocks</span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="comment">     * @return The block stride in pixels</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> &amp;<a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml#a207391d3ac69d9a0839104f784f888fd">block_stride</a>() <span class="keyword">const</span>;<span class="comment"></span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="comment">    /** The number of histogram bins for each cell</span></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="comment">     * @return The number of histogram bins for each cell</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <span class="keywordtype">size_t</span> <a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml#ad96530ddba514601d376f991b568b346">num_bins</a>() <span class="keyword">const</span>;<span class="comment"></span></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="comment">    /** The normalization type</span></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="comment">     * @return The normalization type</span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a673665b4587a2956fcbad5f0e9ba89d3">HOGNormType</a> <a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml#a5a4a2ab2f4396cc64b4a5676a90d7f07">normalization_type</a>() <span class="keyword">const</span>;<span class="comment"></span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="comment">    /** Threshold used for L2HYS_NORM normalization type</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="comment">     * @return Threshold used for L2HYS_NORM normalization type</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    <span class="keywordtype">float</span> <a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml#ac3f834a0c4744ccbc55d3b8bc810fdff">l2_hyst_threshold</a>() <span class="keyword">const</span>;<span class="comment"></span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="comment">    /** The type of @ref PhaseType</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="comment">     * @return The type of @ref PhaseType</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#af00a42ecad444bbda75cde1b64bd7e72">PhaseType</a> <a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml#a039b8ebcdd462041d3988e6d2c145323">phase_type</a>() <span class="keyword">const</span>;<span class="comment"></span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="comment">    /** The size of HOG descriptor</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="comment">     * @return The size of HOG descriptor</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <span class="keywordtype">size_t</span> <a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml#a2a347c64540c1d48a579f830ddff622f">descriptor_size</a>() <span class="keyword">const</span>;<span class="comment"></span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="comment">    /** Calculates the number of cells for each block</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="comment">     * @return The Size2D data object which stores the number of cells along the x and y directions</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> <a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml#a79b522bd4aa0d5533649e60ef7f5f42f">num_cells_per_block</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="comment">    /** Calculates the number of cells per block stride</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="comment">     * @return The Size2D data object which stores the number of cells per block stride along the x and y directions</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> <a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml#a3d18e8be8055827aa09839f6972ff271">num_cells_per_block_stride</a>() <span class="keyword">const</span>;<span class="comment"></span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="comment">    /** Calculates the number of block positions for the given image size</span></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="comment">     * @param[in] image_size The input image size data object</span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="comment">     * @return The Size2D data object which stores the number of block positions along the x and y directions</span></div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> <a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml#a576ef6e002aae702e9c619a1afd31ddb">num_block_positions_per_image</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> &amp;image_size) <span class="keyword">const</span>;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a>      _cell_size;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a>      _block_size;</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a>      _detection_window_size;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a>      _block_stride;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    <span class="keywordtype">size_t</span>      _num_bins;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a673665b4587a2956fcbad5f0e9ba89d3">HOGNormType</a> _normalization_type;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    <span class="keywordtype">float</span>       _l2_hyst_threshold;</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#af00a42ecad444bbda75cde1b64bd7e72">PhaseType</a>   _phase_type;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    <span class="keywordtype">size_t</span>      _descriptor_size;</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;};</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;}</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/*ARM_COMPUTE_HOGINFO_H */</span><span class="preprocessor"></span></div><div class="ttc" id="namespacearm__compute_xhtml_a673665b4587a2956fcbad5f0e9ba89d3ac9e68c0594494ec85805b225a7acb9c2"><div class="ttname"><a href="namespacearm__compute.xhtml#a673665b4587a2956fcbad5f0e9ba89d3ac9e68c0594494ec85805b225a7acb9c2">arm_compute::HOGNormType::L2HYS_NORM</a></div><div class="ttdoc">L2-norm followed by clipping.</div></div>
<div class="ttc" id="classarm__compute_1_1_h_o_g_info_xhtml_ad96530ddba514601d376f991b568b346"><div class="ttname"><a href="classarm__compute_1_1_h_o_g_info.xhtml#ad96530ddba514601d376f991b568b346">arm_compute::HOGInfo::num_bins</a></div><div class="ttdeci">size_t num_bins() const</div><div class="ttdoc">The number of histogram bins for each cell.</div><div class="ttdef"><b>Definition:</b> <a href="_h_o_g_info_8cpp_source.xhtml#l00111">HOGInfo.cpp:111</a></div></div>
<div class="ttc" id="classarm__compute_1_1_h_o_g_info_xhtml_a7cbda2c789c461237f0c6eaee8f8cd2a"><div class="ttname"><a href="classarm__compute_1_1_h_o_g_info.xhtml#a7cbda2c789c461237f0c6eaee8f8cd2a">arm_compute::HOGInfo::detection_window_size</a></div><div class="ttdeci">const Size2D &amp; detection_window_size() const</div><div class="ttdoc">The detection window size in pixels.</div><div class="ttdef"><b>Definition:</b> <a href="_h_o_g_info_8cpp_source.xhtml#l00101">HOGInfo.cpp:101</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_af00a42ecad444bbda75cde1b64bd7e72aaf36b47f395cd01f48b8fc1013665054"><div class="ttname"><a href="namespacearm__compute.xhtml#af00a42ecad444bbda75cde1b64bd7e72aaf36b47f395cd01f48b8fc1013665054">arm_compute::PhaseType::UNSIGNED</a></div><div class="ttdoc">Angle range: [0, 180].</div></div>
<div class="ttc" id="classarm__compute_1_1_h_o_g_info_xhtml_aaefa291ad3cc3e3210c8b8ef2ffde476"><div class="ttname"><a href="classarm__compute_1_1_h_o_g_info.xhtml#aaefa291ad3cc3e3210c8b8ef2ffde476">arm_compute::HOGInfo::cell_size</a></div><div class="ttdeci">const Size2D &amp; cell_size() const</div><div class="ttdoc">The cell size in pixels.</div><div class="ttdef"><b>Definition:</b> <a href="_h_o_g_info_8cpp_source.xhtml#l00091">HOGInfo.cpp:91</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_af00a42ecad444bbda75cde1b64bd7e72"><div class="ttname"><a href="namespacearm__compute.xhtml#af00a42ecad444bbda75cde1b64bd7e72">arm_compute::PhaseType</a></div><div class="ttdeci">PhaseType</div><div class="ttdoc">Phase calculation type.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00406">Types.h:406</a></div></div>
<div class="ttc" id="classarm__compute_1_1_h_o_g_info_xhtml_a3d18e8be8055827aa09839f6972ff271"><div class="ttname"><a href="classarm__compute_1_1_h_o_g_info.xhtml#a3d18e8be8055827aa09839f6972ff271">arm_compute::HOGInfo::num_cells_per_block_stride</a></div><div class="ttdeci">Size2D num_cells_per_block_stride() const</div><div class="ttdoc">Calculates the number of cells per block stride.</div><div class="ttdef"><b>Definition:</b> <a href="_h_o_g_info_8cpp_source.xhtml#l00075">HOGInfo.cpp:75</a></div></div>
<div class="ttc" id="classarm__compute_1_1_h_o_g_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_h_o_g_info.xhtml">arm_compute::HOGInfo</a></div><div class="ttdoc">Store the HOG's metadata.</div><div class="ttdef"><b>Definition:</b> <a href="_h_o_g_info_8h_source.xhtml#l00035">HOGInfo.h:35</a></div></div>
<div class="ttc" id="classarm__compute_1_1_h_o_g_info_xhtml_a039b8ebcdd462041d3988e6d2c145323"><div class="ttname"><a href="classarm__compute_1_1_h_o_g_info.xhtml#a039b8ebcdd462041d3988e6d2c145323">arm_compute::HOGInfo::phase_type</a></div><div class="ttdeci">PhaseType phase_type() const</div><div class="ttdoc">The type of PhaseType.</div><div class="ttdef"><b>Definition:</b> <a href="_h_o_g_info_8cpp_source.xhtml#l00126">HOGInfo.cpp:126</a></div></div>
<div class="ttc" id="classarm__compute_1_1_h_o_g_info_xhtml_a207391d3ac69d9a0839104f784f888fd"><div class="ttname"><a href="classarm__compute_1_1_h_o_g_info.xhtml#a207391d3ac69d9a0839104f784f888fd">arm_compute::HOGInfo::block_stride</a></div><div class="ttdeci">const Size2D &amp; block_stride() const</div><div class="ttdoc">The block stride in pixels.</div><div class="ttdef"><b>Definition:</b> <a href="_h_o_g_info_8cpp_source.xhtml#l00106">HOGInfo.cpp:106</a></div></div>
<div class="ttc" id="classarm__compute_1_1_h_o_g_info_xhtml_a5a4a2ab2f4396cc64b4a5676a90d7f07"><div class="ttname"><a href="classarm__compute_1_1_h_o_g_info.xhtml#a5a4a2ab2f4396cc64b4a5676a90d7f07">arm_compute::HOGInfo::normalization_type</a></div><div class="ttdeci">HOGNormType normalization_type() const</div><div class="ttdoc">The normalization type.</div><div class="ttdef"><b>Definition:</b> <a href="_h_o_g_info_8cpp_source.xhtml#l00116">HOGInfo.cpp:116</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2020 ARM Limited.</div><div class="ttdef"><b>Definition:</b> <a href="00__introduction_8dox_source.xhtml#l00024">00_introduction.dox:24</a></div></div>
<div class="ttc" id="_size2_d_8h_xhtml"><div class="ttname"><a href="_size2_d_8h.xhtml">Size2D.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_h_o_g_info_xhtml_aed28257d62b9129062bfd61600531648"><div class="ttname"><a href="classarm__compute_1_1_h_o_g_info.xhtml#aed28257d62b9129062bfd61600531648">arm_compute::HOGInfo::HOGInfo</a></div><div class="ttdeci">HOGInfo()</div><div class="ttdoc">Default constructor.</div><div class="ttdef"><b>Definition:</b> <a href="_h_o_g_info_8cpp_source.xhtml#l00031">HOGInfo.cpp:31</a></div></div>
<div class="ttc" id="classarm__compute_1_1_h_o_g_info_xhtml_a79b522bd4aa0d5533649e60ef7f5f42f"><div class="ttname"><a href="classarm__compute_1_1_h_o_g_info.xhtml#a79b522bd4aa0d5533649e60ef7f5f42f">arm_compute::HOGInfo::num_cells_per_block</a></div><div class="ttdeci">Size2D num_cells_per_block() const</div><div class="ttdoc">Calculates the number of cells for each block.</div><div class="ttdef"><b>Definition:</b> <a href="_h_o_g_info_8cpp_source.xhtml#l00067">HOGInfo.cpp:67</a></div></div>
<div class="ttc" id="classarm__compute_1_1_h_o_g_info_xhtml_ae561964ccc0e0a5750676b9c7dd7cd44"><div class="ttname"><a href="classarm__compute_1_1_h_o_g_info.xhtml#ae561964ccc0e0a5750676b9c7dd7cd44">arm_compute::HOGInfo::block_size</a></div><div class="ttdeci">const Size2D &amp; block_size() const</div><div class="ttdoc">The block size in pixels.</div><div class="ttdef"><b>Definition:</b> <a href="_h_o_g_info_8cpp_source.xhtml#l00096">HOGInfo.cpp:96</a></div></div>
<div class="ttc" id="classarm__compute_1_1_h_o_g_info_xhtml_ac3f834a0c4744ccbc55d3b8bc810fdff"><div class="ttname"><a href="classarm__compute_1_1_h_o_g_info.xhtml#ac3f834a0c4744ccbc55d3b8bc810fdff">arm_compute::HOGInfo::l2_hyst_threshold</a></div><div class="ttdeci">float l2_hyst_threshold() const</div><div class="ttdoc">Threshold used for L2HYS_NORM normalization type.</div><div class="ttdef"><b>Definition:</b> <a href="_h_o_g_info_8cpp_source.xhtml#l00121">HOGInfo.cpp:121</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a673665b4587a2956fcbad5f0e9ba89d3"><div class="ttname"><a href="namespacearm__compute.xhtml#a673665b4587a2956fcbad5f0e9ba89d3">arm_compute::HOGNormType</a></div><div class="ttdeci">HOGNormType</div><div class="ttdoc">Normalization type for Histogram of Oriented Gradients (HOG)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00541">Types.h:541</a></div></div>
<div class="ttc" id="classarm__compute_1_1_h_o_g_info_xhtml_a576ef6e002aae702e9c619a1afd31ddb"><div class="ttname"><a href="classarm__compute_1_1_h_o_g_info.xhtml#a576ef6e002aae702e9c619a1afd31ddb">arm_compute::HOGInfo::num_block_positions_per_image</a></div><div class="ttdeci">Size2D num_block_positions_per_image(const Size2D &amp;image_size) const</div><div class="ttdoc">Calculates the number of block positions for the given image size.</div><div class="ttdef"><b>Definition:</b> <a href="_h_o_g_info_8cpp_source.xhtml#l00083">HOGInfo.cpp:83</a></div></div>
<div class="ttc" id="classarm__compute_1_1_size2_d_xhtml"><div class="ttname"><a href="classarm__compute_1_1_size2_d.xhtml">arm_compute::Size2D</a></div><div class="ttdoc">Class for specifying the size of an image or rectangle.</div><div class="ttdef"><b>Definition:</b> <a href="_size2_d_8h_source.xhtml#l00034">Size2D.h:34</a></div></div>
<div class="ttc" id="classarm__compute_1_1_h_o_g_info_xhtml_a64f60c469394d4f5f621546fc3108590"><div class="ttname"><a href="classarm__compute_1_1_h_o_g_info.xhtml#a64f60c469394d4f5f621546fc3108590">arm_compute::HOGInfo::operator=</a></div><div class="ttdeci">HOGInfo &amp; operator=(const HOGInfo &amp;)=default</div><div class="ttdoc">Allow instances of this class to be copied.</div></div>
<div class="ttc" id="classarm__compute_1_1_h_o_g_info_xhtml_ada121d63992678a09e1b3db5a2002bfa"><div class="ttname"><a href="classarm__compute_1_1_h_o_g_info.xhtml#ada121d63992678a09e1b3db5a2002bfa">arm_compute::HOGInfo::~HOGInfo</a></div><div class="ttdeci">virtual ~HOGInfo()=default</div><div class="ttdoc">Default destructor.</div></div>
<div class="ttc" id="arm__compute_2core_2_types_8h_xhtml"><div class="ttname"><a href="arm__compute_2core_2_types_8h.xhtml">Types.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_h_o_g_info_xhtml_a2a347c64540c1d48a579f830ddff622f"><div class="ttname"><a href="classarm__compute_1_1_h_o_g_info.xhtml#a2a347c64540c1d48a579f830ddff622f">arm_compute::HOGInfo::descriptor_size</a></div><div class="ttdeci">size_t descriptor_size() const</div><div class="ttdoc">The size of HOG descriptor.</div><div class="ttdef"><b>Definition:</b> <a href="_h_o_g_info_8cpp_source.xhtml#l00131">HOGInfo.cpp:131</a></div></div>
<div class="ttc" id="classarm__compute_1_1_h_o_g_info_xhtml_a75215e8ba07a5ec88ee8c902e306e887"><div class="ttname"><a href="classarm__compute_1_1_h_o_g_info.xhtml#a75215e8ba07a5ec88ee8c902e306e887">arm_compute::HOGInfo::init</a></div><div class="ttdeci">void init(const Size2D &amp;cell_size, const Size2D &amp;block_size, const Size2D &amp;detection_window_size, const Size2D &amp;block_stride, size_t num_bins, HOGNormType normalization_type=HOGNormType::L2HYS_NORM, float l2_hyst_threshold=0.2f, PhaseType phase_type=PhaseType::UNSIGNED)</div><div class="ttdoc">Initialize the metadata structure with the given parameters.</div><div class="ttdef"><b>Definition:</b> <a href="_h_o_g_info_8cpp_source.xhtml#l00044">HOGInfo.cpp:44</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_214608ef36d61442cb2b0c1c4e9a7def.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="dir_1fb090f0c6070330bfaccc4236d3ca0d.xhtml">core</a></li><li class="navelem"><a class="el" href="_h_o_g_info_8h.xhtml">HOGInfo.h</a></li>
    <li class="footer">Generated on Thu Mar 5 2020 16:06:54 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
