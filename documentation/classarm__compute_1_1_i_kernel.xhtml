<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: IKernel Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classarm__compute_1_1_i_kernel.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">IKernel Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Common information for all the kernels.  
 <a href="classarm__compute_1_1_i_kernel.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_i_kernel_8h_source.xhtml">IKernel.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a7250cb8cbaa4104a93a2d77155085507"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_kernel.xhtml#a7250cb8cbaa4104a93a2d77155085507">IKernel</a> ()</td></tr>
<tr class="memdesc:a7250cb8cbaa4104a93a2d77155085507"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="#a7250cb8cbaa4104a93a2d77155085507">More...</a><br /></td></tr>
<tr class="separator:a7250cb8cbaa4104a93a2d77155085507"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a341b60d15a5e12a5b8f3825194dd3b12"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_kernel.xhtml#a341b60d15a5e12a5b8f3825194dd3b12">~IKernel</a> ()=default</td></tr>
<tr class="memdesc:a341b60d15a5e12a5b8f3825194dd3b12"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor.  <a href="#a341b60d15a5e12a5b8f3825194dd3b12">More...</a><br /></td></tr>
<tr class="separator:a341b60d15a5e12a5b8f3825194dd3b12"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0466ee6ce6552c87595f0e88e73eeb1b"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_kernel.xhtml#a0466ee6ce6552c87595f0e88e73eeb1b">is_parallelisable</a> () const</td></tr>
<tr class="memdesc:a0466ee6ce6552c87595f0e88e73eeb1b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Indicates whether or not the kernel is parallelisable.  <a href="#a0466ee6ce6552c87595f0e88e73eeb1b">More...</a><br /></td></tr>
<tr class="separator:a0466ee6ce6552c87595f0e88e73eeb1b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4b3a97ba5dded504a2f2261c078493dd"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="structarm__compute_1_1_border_size.xhtml">BorderSize</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_kernel.xhtml#a4b3a97ba5dded504a2f2261c078493dd">border_size</a> () const</td></tr>
<tr class="memdesc:a4b3a97ba5dded504a2f2261c078493dd"><td class="mdescLeft">&#160;</td><td class="mdescRight">The size of the border for that kernel.  <a href="#a4b3a97ba5dded504a2f2261c078493dd">More...</a><br /></td></tr>
<tr class="separator:a4b3a97ba5dded504a2f2261c078493dd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad34a46f53686c12a5c5e717cc9617fb6"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a> () const</td></tr>
<tr class="memdesc:ad34a46f53686c12a5c5e717cc9617fb6"><td class="mdescLeft">&#160;</td><td class="mdescRight">The maximum window the kernel can be executed on.  <a href="#ad34a46f53686c12a5c5e717cc9617fb6">More...</a><br /></td></tr>
<tr class="separator:ad34a46f53686c12a5c5e717cc9617fb6"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Common information for all the kernels. </p>

<p class="definition">Definition at line <a class="el" href="_i_kernel_8h_source.xhtml#l00033">33</a> of file <a class="el" href="_i_kernel_8h_source.xhtml">IKernel.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a7250cb8cbaa4104a93a2d77155085507"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7250cb8cbaa4104a93a2d77155085507">&#9670;&nbsp;</a></span>IKernel()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_i_kernel.xhtml">IKernel</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constructor. </p>

<p class="definition">Definition at line <a class="el" href="_i_kernel_8cpp_source.xhtml#l00033">33</a> of file <a class="el" href="_i_kernel_8cpp_source.xhtml">IKernel.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    : _window()</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;{</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    <span class="comment">// Create an empty window to make sure the children classes set the window values themselves</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    _window.<a class="code" href="classarm__compute_1_1_window.xhtml#acd3d2bba51cb84d34dd7656ad2375a6e">set</a>(<a class="code" href="classarm__compute_1_1_window.xhtml#aa96e81276ee4f87ab386cd05a5539a7d">Window::DimX</a>, <a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml">Window::Dimension</a>(0, 0, 1));</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    _window.<a class="code" href="classarm__compute_1_1_window.xhtml#acd3d2bba51cb84d34dd7656ad2375a6e">set</a>(<a class="code" href="classarm__compute_1_1_window.xhtml#ad2d402364fa822b0b7775081291eeca9">Window::DimY</a>, <a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml">Window::Dimension</a>(0, 0, 1));</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;}</div><div class="ttc" id="classarm__compute_1_1_window_1_1_dimension_xhtml"><div class="ttname"><a href="classarm__compute_1_1_window_1_1_dimension.xhtml">arm_compute::Window::Dimension</a></div><div class="ttdoc">Describe one of the image's dimensions with a start, end and step.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00075">Window.h:75</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_aa96e81276ee4f87ab386cd05a5539a7d"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#aa96e81276ee4f87ab386cd05a5539a7d">arm_compute::Window::DimX</a></div><div class="ttdeci">static constexpr size_t DimX</div><div class="ttdoc">Alias for dimension 0 also known as X dimension.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00043">Window.h:43</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_acd3d2bba51cb84d34dd7656ad2375a6e"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#acd3d2bba51cb84d34dd7656ad2375a6e">arm_compute::Window::set</a></div><div class="ttdeci">void set(size_t dimension, const Dimension &amp;dim)</div><div class="ttdoc">Set the values of a given dimension.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8inl_source.xhtml#l00049">Window.inl:49</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_ad2d402364fa822b0b7775081291eeca9"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#ad2d402364fa822b0b7775081291eeca9">arm_compute::Window::DimY</a></div><div class="ttdeci">static constexpr size_t DimY</div><div class="ttdoc">Alias for dimension 1 also known as Y dimension.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00045">Window.h:45</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_window_8h_source.xhtml#l00043">Window::DimX</a>, <a class="el" href="_window_8h_source.xhtml#l00045">Window::DimY</a>, and <a class="el" href="_window_8inl_source.xhtml#l00049">Window::set()</a>.</p>

</div>
</div>
<a id="a341b60d15a5e12a5b8f3825194dd3b12"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a341b60d15a5e12a5b8f3825194dd3b12">&#9670;&nbsp;</a></span>~IKernel()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual ~<a class="el" href="classarm__compute_1_1_i_kernel.xhtml">IKernel</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Destructor. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a4b3a97ba5dded504a2f2261c078493dd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4b3a97ba5dded504a2f2261c078493dd">&#9670;&nbsp;</a></span>border_size()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structarm__compute_1_1_border_size.xhtml">BorderSize</a> border_size </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>The size of the border for that kernel. </p>
<dl class="section return"><dt>Returns</dt><dd>The width in number of elements of the border. </dd></dl>

<p>Reimplemented in <a class="el" href="classarm__compute_1_1_n_e_convolution_rectangle_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">NEConvolutionRectangleKernel</a>, <a class="el" href="classarm__compute_1_1_n_e_edge_trace_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">NEEdgeTraceKernel</a>, <a class="el" href="classarm__compute_1_1_c_l_convolution_rectangle_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">CLConvolutionRectangleKernel</a>, <a class="el" href="classarm__compute_1_1_n_e_complex_pixel_wise_multiplication_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">NEComplexPixelWiseMultiplicationKernel</a>, <a class="el" href="classarm__compute_1_1_n_e_separable_convolution_vert_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">NESeparableConvolutionVertKernel&lt; matrix_size &gt;</a>, <a class="el" href="classarm__compute_1_1_c_l_separable_convolution_vert_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">CLSeparableConvolutionVertKernel&lt; matrix_size &gt;</a>, <a class="el" href="classarm__compute_1_1_n_e_edge_non_max_suppression_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">NEEdgeNonMaxSuppressionKernel</a>, <a class="el" href="classarm__compute_1_1_n_e_separable_convolution_hor_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">NESeparableConvolutionHorKernel&lt; matrix_size &gt;</a>, <a class="el" href="classarm__compute_1_1_c_l_complex_pixel_wise_multiplication_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">CLComplexPixelWiseMultiplicationKernel</a>, <a class="el" href="classarm__compute_1_1_n_e_sobel7x7_vert_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">NESobel7x7VertKernel</a>, <a class="el" href="classarm__compute_1_1_n_e_sobel5x5_vert_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">NESobel5x5VertKernel</a>, <a class="el" href="classarm__compute_1_1_c_l_sobel5x5_vert_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">CLSobel5x5VertKernel</a>, <a class="el" href="classarm__compute_1_1_c_l_sobel7x7_vert_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">CLSobel7x7VertKernel</a>, <a class="el" href="classarm__compute_1_1_n_e_l_k_tracker_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">NELKTrackerKernel</a>, <a class="el" href="classarm__compute_1_1_c_l_separable_convolution_hor_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">CLSeparableConvolutionHorKernel&lt; matrix_size &gt;</a>, <a class="el" href="classarm__compute_1_1_n_e_gaussian_pyramid_vert_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">NEGaussianPyramidVertKernel</a>, <a class="el" href="classarm__compute_1_1_n_e_scale_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">NEScaleKernel</a>, <a class="el" href="classarm__compute_1_1_c_l_edge_non_max_suppression_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">CLEdgeNonMaxSuppressionKernel</a>, <a class="el" href="classarm__compute_1_1_n_e_depthwise_convolution_layer_native_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">NEDepthwiseConvolutionLayerNativeKernel</a>, <a class="el" href="classarm__compute_1_1_n_e_harris_score_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">NEHarrisScoreKernel&lt; block_size &gt;</a>, <a class="el" href="classarm__compute_1_1_c_l_gaussian_pyramid_vert_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">CLGaussianPyramidVertKernel</a>, <a class="el" href="classarm__compute_1_1_c_l_direct_convolution_layer_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">CLDirectConvolutionLayerKernel</a>, <a class="el" href="classarm__compute_1_1_n_e_arithmetic_subtraction_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">NEArithmeticSubtractionKernel</a>, <a class="el" href="classarm__compute_1_1_c_l_winograd_input_transform_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">CLWinogradInputTransformKernel</a>, <a class="el" href="classarm__compute_1_1_n_e_pixel_wise_multiplication_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">NEPixelWiseMultiplicationKernel</a>, <a class="el" href="classarm__compute_1_1_c_l_depthwise_convolution_layer3x3_n_h_w_c_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">CLDepthwiseConvolutionLayer3x3NHWCKernel</a>, <a class="el" href="classarm__compute_1_1_n_e_direct_convolution_layer_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">NEDirectConvolutionLayerKernel</a>, <a class="el" href="classarm__compute_1_1_c_l_depthwise_convolution_layer3x3_n_c_h_w_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">CLDepthwiseConvolutionLayer3x3NCHWKernel</a>, <a class="el" href="classarm__compute_1_1_n_e_reduction_operation_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">NEReductionOperationKernel</a>, <a class="el" href="classarm__compute_1_1_n_e_depthwise_convolution_layer3x3_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">NEDepthwiseConvolutionLayer3x3Kernel</a>, <a class="el" href="classarm__compute_1_1_n_e_normalization_layer_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">NENormalizationLayerKernel</a>, <a class="el" href="classarm__compute_1_1_c_l_pixel_wise_multiplication_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">CLPixelWiseMultiplicationKernel</a>, <a class="el" href="classarm__compute_1_1_c_l_reduction_operation_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">CLReductionOperationKernel</a>, <a class="el" href="classarm__compute_1_1_n_e_gaussian5x5_vert_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">NEGaussian5x5VertKernel</a>, <a class="el" href="classarm__compute_1_1_c_l_mean_std_dev_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">CLMeanStdDevKernel</a>, <a class="el" href="classarm__compute_1_1_c_l_scale_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">CLScaleKernel</a>, <a class="el" href="classarm__compute_1_1_c_l_scharr3x3_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">CLScharr3x3Kernel</a>, <a class="el" href="classarm__compute_1_1_n_e_convolution_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">NEConvolutionKernel&lt; matrix_size &gt;</a>, <a class="el" href="classarm__compute_1_1_n_e_pooling_layer_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">NEPoolingLayerKernel</a>, <a class="el" href="classarm__compute_1_1_n_e_scharr3x3_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">NEScharr3x3Kernel</a>, <a class="el" href="classarm__compute_1_1_n_e_sobel3x3_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">NESobel3x3Kernel</a>, <a class="el" href="classarm__compute_1_1_c_l_harris_score_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">CLHarrisScoreKernel</a>, <a class="el" href="classarm__compute_1_1_c_l_comparison_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">CLComparisonKernel</a>, <a class="el" href="classarm__compute_1_1_c_l_fast_corners_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">CLFastCornersKernel</a>, <a class="el" href="classarm__compute_1_1_c_l_pooling_layer_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">CLPoolingLayerKernel</a>, <a class="el" href="classarm__compute_1_1_g_c_pooling_layer_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">GCPoolingLayerKernel</a>, <a class="el" href="classarm__compute_1_1_c_l_normalization_layer_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">CLNormalizationLayerKernel</a>, <a class="el" href="classarm__compute_1_1_n_e_g_e_m_m_matrix_vector_multiply_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">NEGEMMMatrixVectorMultiplyKernel</a>, <a class="el" href="classarm__compute_1_1_n_e_mean_std_dev_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">NEMeanStdDevKernel</a>, <a class="el" href="classarm__compute_1_1_n_e_non_maxima_suppression3x3_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">NENonMaximaSuppression3x3Kernel</a>, <a class="el" href="classarm__compute_1_1_n_e_sobel5x5_hor_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">NESobel5x5HorKernel</a>, <a class="el" href="classarm__compute_1_1_n_e_sobel7x7_hor_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">NESobel7x7HorKernel</a>, <a class="el" href="classarm__compute_1_1_n_e_non_linear_filter_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">NENonLinearFilterKernel</a>, <a class="el" href="classarm__compute_1_1_g_c_direct_convolution_layer_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">GCDirectConvolutionLayerKernel&lt; kernel_size &gt;</a>, <a class="el" href="classarm__compute_1_1_n_e_fast_corners_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">NEFastCornersKernel</a>, <a class="el" href="classarm__compute_1_1_n_e_remap_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">NERemapKernel</a>, <a class="el" href="classarm__compute_1_1_c_l_convolution_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">CLConvolutionKernel&lt; matrix_size &gt;</a>, <a class="el" href="classarm__compute_1_1_c_l_g_e_m_m_matrix_vector_multiply_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">CLGEMMMatrixVectorMultiplyKernel</a>, <a class="el" href="classarm__compute_1_1_n_e_derivative_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">NEDerivativeKernel</a>, <a class="el" href="classarm__compute_1_1_i_n_e_warp_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">INEWarpKernel</a>, <a class="el" href="classarm__compute_1_1_c_l_sobel5x5_hor_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">CLSobel5x5HorKernel</a>, <a class="el" href="classarm__compute_1_1_c_l_sobel7x7_hor_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">CLSobel7x7HorKernel</a>, <a class="el" href="classarm__compute_1_1_g_c_normalization_layer_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">GCNormalizationLayerKernel</a>, <a class="el" href="classarm__compute_1_1_n_e_gaussian_pyramid_hor_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">NEGaussianPyramidHorKernel</a>, <a class="el" href="classarm__compute_1_1_c_l_derivative_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">CLDerivativeKernel</a>, <a class="el" href="classarm__compute_1_1_c_l_sobel3x3_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">CLSobel3x3Kernel</a>, <a class="el" href="classarm__compute_1_1_g_c_depthwise_convolution_layer3x3_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">GCDepthwiseConvolutionLayer3x3Kernel</a>, <a class="el" href="classarm__compute_1_1_c_l_remap_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">CLRemapKernel</a>, <a class="el" href="classarm__compute_1_1_n_e_logits1_d_max_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">NELogits1DMaxKernel</a>, <a class="el" href="classarm__compute_1_1_c_l_elementwise_operation_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">CLElementwiseOperationKernel</a>, <a class="el" href="classarm__compute_1_1_c_l_gaussian_pyramid_hor_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">CLGaussianPyramidHorKernel</a>, <a class="el" href="classarm__compute_1_1_c_l_non_linear_filter_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">CLNonLinearFilterKernel</a>, <a class="el" href="classarm__compute_1_1_n_e_gaussian5x5_hor_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">NEGaussian5x5HorKernel</a>, <a class="el" href="classarm__compute_1_1_g_c_scale_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">GCScaleKernel</a>, <a class="el" href="classarm__compute_1_1_n_e_gaussian3x3_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">NEGaussian3x3Kernel</a>, <a class="el" href="classarm__compute_1_1_n_e_median3x3_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">NEMedian3x3Kernel</a>, <a class="el" href="classarm__compute_1_1_n_e_box3x3_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">NEBox3x3Kernel</a>, <a class="el" href="classarm__compute_1_1_n_e_dilate_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">NEDilateKernel</a>, <a class="el" href="classarm__compute_1_1_n_e_erode_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">NEErodeKernel</a>, <a class="el" href="classarm__compute_1_1_n_e_integral_image_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">NEIntegralImageKernel</a>, <a class="el" href="classarm__compute_1_1_c_l_non_maxima_suppression3x3_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">CLNonMaximaSuppression3x3Kernel</a>, <a class="el" href="classarm__compute_1_1_c_l_warp_affine_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">CLWarpAffineKernel</a>, <a class="el" href="classarm__compute_1_1_c_l_box3x3_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">CLBox3x3Kernel</a>, <a class="el" href="classarm__compute_1_1_c_l_dilate_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">CLDilateKernel</a>, <a class="el" href="classarm__compute_1_1_c_l_erode_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">CLErodeKernel</a>, <a class="el" href="classarm__compute_1_1_c_l_gaussian3x3_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">CLGaussian3x3Kernel</a>, <a class="el" href="classarm__compute_1_1_c_l_median3x3_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">CLMedian3x3Kernel</a>, and <a class="el" href="classarm__compute_1_1_c_l_warp_perspective_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">CLWarpPerspectiveKernel</a>.</p>

<p class="definition">Definition at line <a class="el" href="_i_kernel_8cpp_source.xhtml#l00046">46</a> of file <a class="el" href="_i_kernel_8cpp_source.xhtml">IKernel.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;{</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="structarm__compute_1_1_border_size.xhtml">BorderSize</a>(0);</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;}</div><div class="ttc" id="structarm__compute_1_1_border_size_xhtml"><div class="ttname"><a href="structarm__compute_1_1_border_size.xhtml">arm_compute::BorderSize</a></div><div class="ttdoc">Container for 2D border size.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00269">Types.h:269</a></div></div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_i_c_l_simple_kernel_8cpp_source.xhtml#l00038">ICLSimpleKernel::configure()</a>, <a class="el" href="_i_g_c_simple_kernel_8cpp_source.xhtml#l00038">IGCSimpleKernel::configure()</a>, <a class="el" href="_c_l_fill_border_kernel_8cpp_source.xhtml#l00062">CLFillBorderKernel::configure()</a>, <a class="el" href="_g_c_fill_border_kernel_8cpp_source.xhtml#l00060">GCFillBorderKernel::configure()</a>, <a class="el" href="_n_e_fill_inner_border_kernel_8cpp_source.xhtml#l00049">NEFillInnerBorderKernel::configure()</a>, and <a class="el" href="_n_e_fill_border_kernel_8cpp_source.xhtml#l00098">NEFillBorderKernel::configure()</a>.</p>

</div>
</div>
<a id="a0466ee6ce6552c87595f0e88e73eeb1b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0466ee6ce6552c87595f0e88e73eeb1b">&#9670;&nbsp;</a></span>is_parallelisable()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool is_parallelisable </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Indicates whether or not the kernel is parallelisable. </p>
<p>If the kernel is parallelisable then the window returned by <a class="el" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6" title="The maximum window the kernel can be executed on.">window()</a> can be split into sub-windows which can then be run in parallel.</p>
<p>If the kernel is not parallelisable then only the window returned by <a class="el" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6" title="The maximum window the kernel can be executed on.">window()</a> can be passed to <a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a06403ad5596b5405787cfca12e5b815e">run()</a></p>
<dl class="section return"><dt>Returns</dt><dd>True if the kernel is parallelisable </dd></dl>

<p>Reimplemented in <a class="el" href="classarm__compute_1_1_n_e_winograd_layer_transform_weights_kernel.xhtml#a4370ae5fda7bd455a171fc8ed4d3f283">NEWinogradLayerTransformWeightsKernel&lt; T, OutputTileRows, OutputTileCols, KernelRows, KernelCols &gt;</a>, <a class="el" href="classarm__compute_1_1_n_e_edge_trace_kernel.xhtml#a4370ae5fda7bd455a171fc8ed4d3f283">NEEdgeTraceKernel</a>, <a class="el" href="classarm__compute_1_1_n_e_min_max_location_kernel.xhtml#a4370ae5fda7bd455a171fc8ed4d3f283">NEMinMaxLocationKernel</a>, <a class="el" href="classarm__compute_1_1_n_e_channel_combine_kernel.xhtml#a4370ae5fda7bd455a171fc8ed4d3f283">NEChannelCombineKernel</a>, <a class="el" href="classarm__compute_1_1_c_p_p_top_k_v_kernel.xhtml#a4370ae5fda7bd455a171fc8ed4d3f283">CPPTopKVKernel</a>, <a class="el" href="classarm__compute_1_1_c_p_p_box_with_non_maxima_suppression_limit_kernel.xhtml#a4370ae5fda7bd455a171fc8ed4d3f283">CPPBoxWithNonMaximaSuppressionLimitKernel</a>, <a class="el" href="classarm__compute_1_1_n_e_cumulative_distribution_kernel.xhtml#a4370ae5fda7bd455a171fc8ed4d3f283">NECumulativeDistributionKernel</a>, <a class="el" href="classarm__compute_1_1_c_l_fill_border_kernel.xhtml#a4370ae5fda7bd455a171fc8ed4d3f283">CLFillBorderKernel</a>, <a class="el" href="classarm__compute_1_1_g_c_fill_border_kernel.xhtml#a4370ae5fda7bd455a171fc8ed4d3f283">GCFillBorderKernel</a>, <a class="el" href="classarm__compute_1_1_n_e_fill_array_kernel.xhtml#a4370ae5fda7bd455a171fc8ed4d3f283">NEFillArrayKernel</a>, <a class="el" href="classarm__compute_1_1_c_p_p_detection_window_non_maxima_suppression_kernel.xhtml#a4370ae5fda7bd455a171fc8ed4d3f283">CPPDetectionWindowNonMaximaSuppressionKernel</a>, <a class="el" href="classarm__compute_1_1_c_p_p_upsample_kernel.xhtml#a4370ae5fda7bd455a171fc8ed4d3f283">CPPUpsampleKernel</a>, <a class="el" href="classarm__compute_1_1_c_p_p_sort_euclidean_distance_kernel.xhtml#a4370ae5fda7bd455a171fc8ed4d3f283">CPPSortEuclideanDistanceKernel</a>, and <a class="el" href="classarm__compute_1_1_n_e_integral_image_kernel.xhtml#a4370ae5fda7bd455a171fc8ed4d3f283">NEIntegralImageKernel</a>.</p>

<p class="definition">Definition at line <a class="el" href="_i_kernel_8cpp_source.xhtml#l00041">41</a> of file <a class="el" href="_i_kernel_8cpp_source.xhtml">IKernel.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;{</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;}</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_o_m_p_scheduler_8cpp_source.xhtml#l00052">OMPScheduler::schedule()</a>, and <a class="el" href="_c_p_p_scheduler_8cpp_source.xhtml#l00312">CPPScheduler::schedule()</a>.</p>

</div>
</div>
<a id="ad34a46f53686c12a5c5e717cc9617fb6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad34a46f53686c12a5c5e717cc9617fb6">&#9670;&nbsp;</a></span>window()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classarm__compute_1_1_window.xhtml">Window</a> &amp; window </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>The maximum window the kernel can be executed on. </p>
<dl class="section return"><dt>Returns</dt><dd>The maximum window the kernel can be executed on. </dd></dl>

<p class="definition">Definition at line <a class="el" href="_i_kernel_8cpp_source.xhtml#l00028">28</a> of file <a class="el" href="_i_kernel_8cpp_source.xhtml">IKernel.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;{</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;    <span class="keywordflow">return</span> _window;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;}</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_i_c_l_kernel_8h_source.xhtml#l00100">ICLKernel::add_1D_array_argument()</a>, <a class="el" href="_i_g_c_kernel_8cpp_source.xhtml#l00122">IGCKernel::add_1D_tensor_argument()</a>, <a class="el" href="_i_c_l_kernel_8h_source.xhtml#l00110">ICLKernel::add_1D_tensor_argument()</a>, <a class="el" href="_i_c_l_kernel_8h_source.xhtml#l00121">ICLKernel::add_1D_tensor_argument_if()</a>, <a class="el" href="_i_g_c_kernel_8cpp_source.xhtml#l00127">IGCKernel::add_2D_tensor_argument()</a>, <a class="el" href="_i_c_l_kernel_8h_source.xhtml#l00134">ICLKernel::add_2D_tensor_argument()</a>, <a class="el" href="_i_c_l_kernel_8h_source.xhtml#l00145">ICLKernel::add_2D_tensor_argument_if()</a>, <a class="el" href="_i_g_c_kernel_8cpp_source.xhtml#l00132">IGCKernel::add_3D_tensor_argument()</a>, <a class="el" href="_i_c_l_kernel_8h_source.xhtml#l00158">ICLKernel::add_3D_tensor_argument()</a>, <a class="el" href="_i_c_l_kernel_8h_source.xhtml#l00168">ICLKernel::add_4D_tensor_argument()</a>, <a class="el" href="_i_c_l_kernel_8h_source.xhtml#l00359">ICLKernel::add_array_argument()</a>, <a class="el" href="_i_c_l_kernel_8cpp_source.xhtml#l00089">ICLKernel::add_tensor_argument()</a>, <a class="el" href="_c_l_depth_convert_layer_kernel_8cpp_source.xhtml#l00074">CLDepthConvertLayerKernel::configure()</a>, <a class="el" href="_c_l_memset_kernel_8cpp_source.xhtml#l00042">CLMemsetKernel::configure()</a>, <a class="el" href="_n_e_r_o_i_pooling_layer_kernel_8cpp_source.xhtml#l00046">NEROIPoolingLayerKernel::configure()</a>, <a class="el" href="_c_l_l_k_tracker_kernel_8cpp_source.xhtml#l00041">CLLKTrackerInitKernel::configure()</a>, <a class="el" href="_c_l_l_k_tracker_kernel_8cpp_source.xhtml#l00089">CLLKTrackerFinalizeKernel::configure()</a>, <a class="el" href="_c_l_l_k_tracker_kernel_8cpp_source.xhtml#l00123">CLLKTrackerStage0Kernel::configure()</a>, <a class="el" href="_c_l_l_k_tracker_kernel_8cpp_source.xhtml#l00213">CLLKTrackerStage1Kernel::configure()</a>, <a class="el" href="_c_l_2_fill_border_8cpp_source.xhtml#l00052">arm_compute::test::validation::DATA_TEST_CASE()</a>, <a class="el" href="_g_c_scheduler_8cpp_source.xhtml#l00077">GCScheduler::dispatch()</a>, <a class="el" href="_c_l_scheduler_8cpp_source.xhtml#l00154">CLScheduler::enqueue()</a>, <a class="el" href="_validate_8cpp_source.xhtml#l00166">arm_compute::error_on_unconfigured_kernel()</a>, <a class="el" href="_i_c_l_kernel_8cpp_source.xhtml#l00141">ICLKernel::gws_from_window()</a>, <a class="el" href="_i_g_c_simple2_d_kernel_8cpp_source.xhtml#l00033">IGCSimple2DKernel::run()</a>, <a class="el" href="_i_c_l_simple2_d_kernel_8cpp_source.xhtml#l00033">ICLSimple2DKernel::run()</a>, <a class="el" href="_i_g_c_simple3_d_kernel_8cpp_source.xhtml#l00033">IGCSimple3DKernel::run()</a>, <a class="el" href="_i_c_l_simple3_d_kernel_8cpp_source.xhtml#l00033">ICLSimple3DKernel::run()</a>, <a class="el" href="_n_e_integral_image_kernel_8cpp_source.xhtml#l00074">NEIntegralImageKernel::run()</a>, <a class="el" href="_g_c_transpose_kernel_8cpp_source.xhtml#l00123">GCTransposeKernel::run()</a>, <a class="el" href="_n_e_box3x3_kernel_8cpp_source.xhtml#l00153">NEBox3x3Kernel::run()</a>, <a class="el" href="_n_e_dilate_kernel_8cpp_source.xhtml#l00070">NEDilateKernel::run()</a>, <a class="el" href="_n_e_erode_kernel_8cpp_source.xhtml#l00070">NEErodeKernel::run()</a>, <a class="el" href="_n_e_median3x3_kernel_8cpp_source.xhtml#l00077">NEMedian3x3Kernel::run()</a>, <a class="el" href="_g_c_scale_kernel_8cpp_source.xhtml#l00145">GCScaleKernel::run()</a>, <a class="el" href="_n_e_gaussian3x3_kernel_8cpp_source.xhtml#l00067">NEGaussian3x3Kernel::run()</a>, <a class="el" href="_n_e_gaussian5x5_kernel_8cpp_source.xhtml#l00076">NEGaussian5x5HorKernel::run()</a>, <a class="el" href="_g_c_g_e_m_m_matrix_accumulate_biases_kernel_8cpp_source.xhtml#l00103">GCGEMMMatrixAccumulateBiasesKernel::run()</a>, <a class="el" href="_n_e_accumulate_kernel_8cpp_source.xhtml#l00266">NEAccumulateKernel::run()</a>, <a class="el" href="_c_l_elementwise_operation_kernel_8cpp_source.xhtml#l00267">CLElementwiseOperationKernel::run()</a>, <a class="el" href="_c_l_element_wise_unary_layer_kernel_8cpp_source.xhtml#l00119">CLElementWiseUnaryLayerKernel::run()</a>, <a class="el" href="_n_e_floor_kernel_8cpp_source.xhtml#l00101">NEFloorKernel::run()</a>, <a class="el" href="_c_l_gaussian_pyramid_kernel_8cpp_source.xhtml#l00115">CLGaussianPyramidHorKernel::run()</a>, <a class="el" href="_n_e_reshape_layer_kernel_8cpp_source.xhtml#l00098">NEReshapeLayerKernel::run()</a>, <a class="el" href="_c_l_histogram_kernel_8cpp_source.xhtml#l00122">CLHistogramKernel::run()</a>, <a class="el" href="_c_l_canny_edge_kernel_8cpp_source.xhtml#l00092">CLGradientKernel::run()</a>, <a class="el" href="_c_l_bitwise_and_kernel_8cpp_source.xhtml#l00072">CLBitwiseAndKernel::run()</a>, <a class="el" href="_n_e_softmax_layer_kernel_8cpp_source.xhtml#l00230">NELogits1DMaxKernel::run()</a>, <a class="el" href="_c_l_bitwise_or_kernel_8cpp_source.xhtml#l00073">CLBitwiseOrKernel::run()</a>, <a class="el" href="_c_l_bitwise_xor_kernel_8cpp_source.xhtml#l00073">CLBitwiseXorKernel::run()</a>, <a class="el" href="_c_l_min_max_location_kernel_8cpp_source.xhtml#l00124">CLMinMaxKernel::run()</a>, <a class="el" href="_c_l_remap_kernel_8cpp_source.xhtml#l00094">CLRemapKernel::run()</a>, <a class="el" href="_c_l_sobel3x3_kernel_8cpp_source.xhtml#l00120">CLSobel3x3Kernel::run()</a>, <a class="el" href="_n_e_table_lookup_kernel_8cpp_source.xhtml#l00136">NETableLookupKernel::run()</a>, <a class="el" href="_g_c_depthwise_convolution_layer3x3_kernel_8cpp_source.xhtml#l00205">GCDepthwiseConvolutionLayer3x3Kernel::run()</a>, <a class="el" href="_c_l_derivative_kernel_8cpp_source.xhtml#l00135">CLDerivativeKernel::run()</a>, <a class="el" href="_g_c_pixel_wise_multiplication_kernel_8cpp_source.xhtml#l00101">GCPixelWiseMultiplicationKernel::run()</a>, <a class="el" href="_n_e_elementwise_operation_kernel_8cpp_source.xhtml#l01125">NEElementwiseOperationKernel::run()</a>, <a class="el" href="_c_l_sobel5x5_kernel_8cpp_source.xhtml#l00120">CLSobel5x5HorKernel::run()</a>, <a class="el" href="_c_l_sobel7x7_kernel_8cpp_source.xhtml#l00122">CLSobel7x7HorKernel::run()</a>, <a class="el" href="_c_p_p_flip_weights_kernel_8cpp_source.xhtml#l00105">CPPFlipWeightsKernel::run()</a>, <a class="el" href="_n_e_warp_kernel_8cpp_source.xhtml#l00057">INEWarpKernel::run()</a>, <a class="el" href="_c_l_h_o_g_descriptor_kernel_8cpp_source.xhtml#l00111">CLHOGOrientationBinningKernel::run()</a>, <a class="el" href="_g_c_g_e_m_m_matrix_addition_kernel_8cpp_source.xhtml#l00080">GCGEMMMatrixAdditionKernel::run()</a>, <a class="el" href="_g_c_normalization_layer_kernel_8cpp_source.xhtml#l00098">GCNormalizationLayerKernel::run()</a>, <a class="el" href="_n_e_gaussian_pyramid_kernel_8cpp_source.xhtml#l00108">NEGaussianPyramidHorKernel::run()</a>, <a class="el" href="_c_p_p_sort_euclidean_distance_kernel_8cpp_source.xhtml#l00071">CPPSortEuclideanDistanceKernel::run()</a>, <a class="el" href="_g_c_absolute_difference_kernel_8cpp_source.xhtml#l00086">GCAbsoluteDifferenceKernel::run()</a>, <a class="el" href="_n_e_bitwise_not_kernel_8cpp_source.xhtml#l00084">NEBitwiseNotKernel::run()</a>, <a class="el" href="_c_l_absolute_difference_kernel_8cpp_source.xhtml#l00087">CLAbsoluteDifferenceKernel::run()</a>, <a class="el" href="_n_e_memset_kernel_8cpp_source.xhtml#l00051">NEMemsetKernel::run()</a>, <a class="el" href="_c_l_g_e_m_m_matrix_accumulate_biases_kernel_8cpp_source.xhtml#l00115">CLGEMMMatrixAccumulateBiasesKernel::run()</a>, <a class="el" href="_g_c_g_e_m_m_transpose1x_w_kernel_8cpp_source.xhtml#l00098">GCGEMMTranspose1xWKernel::run()</a>, <a class="el" href="_n_e_bitwise_and_kernel_8cpp_source.xhtml#l00100">NEBitwiseAndKernel::run()</a>, <a class="el" href="_n_e_bitwise_or_kernel_8cpp_source.xhtml#l00096">NEBitwiseOrKernel::run()</a>, <a class="el" href="_n_e_bitwise_xor_kernel_8cpp_source.xhtml#l00092">NEBitwiseXorKernel::run()</a>, <a class="el" href="_c_l_g_e_m_m_matrix_vector_multiply_kernel_8cpp_source.xhtml#l00136">CLGEMMMatrixVectorMultiplyKernel::run()</a>, <a class="el" href="_c_p_p_upsample_kernel_8cpp_source.xhtml#l00068">CPPUpsampleKernel::run()</a>, <a class="el" href="_c_l_dequantization_layer_kernel_8cpp_source.xhtml#l00132">CLDequantizationLayerKernel::run()</a>, <a class="el" href="_c_l_magnitude_phase_kernel_8cpp_source.xhtml#l00153">CLMagnitudePhaseKernel::run()</a>, <a class="el" href="_n_e_derivative_kernel_8cpp_source.xhtml#l00221">NEDerivativeKernel::run()</a>, <a class="el" href="_c_l_floor_kernel_8cpp_source.xhtml#l00114">CLFloorKernel::run()</a>, <a class="el" href="_n_e_h_o_g_descriptor_kernel_8cpp_source.xhtml#l00678">NEHOGOrientationBinningKernel::run()</a>, <a class="el" href="_n_e_remap_kernel_8cpp_source.xhtml#l00224">NERemapKernel::run()</a>, <a class="el" href="_g_c_activation_layer_kernel_8cpp_source.xhtml#l00104">GCActivationLayerKernel::run()</a>, <a class="el" href="_g_c_depth_concatenate_layer_kernel_8cpp_source.xhtml#l00087">GCDepthConcatenateLayerKernel::run()</a>, <a class="el" href="_n_e_fast_corners_kernel_8cpp_source.xhtml#l00389">NEFastCornersKernel::run()</a>, <a class="el" href="_n_e_non_linear_filter_kernel_8cpp_source.xhtml#l00939">NENonLinearFilterKernel::run()</a>, <a class="el" href="_c_p_p_detection_window_non_maxima_suppression_kernel_8cpp_source.xhtml#l00081">CPPDetectionWindowNonMaximaSuppressionKernel::run()</a>, <a class="el" href="_n_e_threshold_kernel_8cpp_source.xhtml#l00119">NEThresholdKernel::run()</a>, <a class="el" href="_c_l_depthwise_convolution_layer_reshape_weights_kernel_8cpp_source.xhtml#l00117">CLDepthwiseConvolutionLayerReshapeWeightsKernel::run()</a>, <a class="el" href="_c_l_integral_image_kernel_8cpp_source.xhtml#l00119">CLIntegralImageVertKernel::run()</a>, <a class="el" href="_n_e_absolute_difference_kernel_8cpp_source.xhtml#l00204">NEAbsoluteDifferenceKernel::run()</a>, <a class="el" href="_c_l_channel_shuffle_layer_kernel_8cpp_source.xhtml#l00153">CLChannelShuffleLayerKernel::run()</a>, <a class="el" href="_c_l_flatten_layer_kernel_8cpp_source.xhtml#l00129">CLFlattenLayerKernel::run()</a>, <a class="el" href="_c_l_reshape_layer_kernel_8cpp_source.xhtml#l00111">CLReshapeLayerKernel::run()</a>, <a class="el" href="_n_e_g_e_m_m_matrix_accumulate_biases_kernel_8cpp_source.xhtml#l00108">NEGEMMMatrixAccumulateBiasesKernel::run()</a>, <a class="el" href="_c_l_r_o_i_pooling_layer_kernel_8cpp_source.xhtml#l00127">CLROIPoolingLayerKernel::run()</a>, <a class="el" href="_c_l_copy_kernel_8cpp_source.xhtml#l00246">CLCopyKernel::run()</a>, <a class="el" href="_c_l_space_to_depth_layer_kernel_8cpp_source.xhtml#l00104">CLSpaceToDepthLayerKernel::run()</a>, <a class="el" href="_n_e_magnitude_phase_kernel_8cpp_source.xhtml#l00475">NEMagnitudePhaseKernel&lt; mag_type, phase_type &gt;::run()</a>, <a class="el" href="_n_e_non_maxima_suppression3x3_kernel_8cpp_source.xhtml#l00498">NENonMaximaSuppression3x3Kernel::run()</a>, <a class="el" href="_n_e_sobel5x5_kernel_8cpp_source.xhtml#l00093">NESobel5x5HorKernel::run()</a>, <a class="el" href="_c_l_depth_to_space_layer_kernel_8cpp_source.xhtml#l00103">CLDepthToSpaceLayerKernel::run()</a>, <a class="el" href="_n_e_sobel7x7_kernel_8cpp_source.xhtml#l00196">NESobel7x7HorKernel::run()</a>, <a class="el" href="_n_e_fill_array_kernel_8cpp_source.xhtml#l00065">NEFillArrayKernel::run()</a>, <a class="el" href="_n_e_fill_inner_border_kernel_8cpp_source.xhtml#l00064">NEFillInnerBorderKernel::run()</a>, <a class="el" href="_c_l_reverse_kernel_8cpp_source.xhtml#l00114">CLReverseKernel::run()</a>, <a class="el" href="_n_e_locally_connected_matrix_multiply_kernel_8cpp_source.xhtml#l00365">NELocallyConnectedMatrixMultiplyKernel::run()</a>, <a class="el" href="_n_e_mean_std_dev_kernel_8cpp_source.xhtml#l00123">NEMeanStdDevKernel::run()</a>, <a class="el" href="_c_l_deconvolution_layer_upsample_kernel_8cpp_source.xhtml#l00098">CLDeconvolutionLayerUpsampleKernel::run()</a>, <a class="el" href="_c_l_generate_proposals_layer_kernel_8cpp_source.xhtml#l00127">CLComputeAllAnchorsKernel::run()</a>, <a class="el" href="_n_e_tile_kernel_8cpp_source.xhtml#l00090">NETileKernel::run()</a>, <a class="el" href="_g_c_dropout_layer_kernel_8cpp_source.xhtml#l00086">GCDropoutLayerKernel::run()</a>, <a class="el" href="_g_c_softmax_layer_kernel_8cpp_source.xhtml#l00171">GCLogits1DShiftExpSumKernel::run()</a>, <a class="el" href="_c_l_locally_connected_matrix_multiply_kernel_8cpp_source.xhtml#l00129">CLLocallyConnectedMatrixMultiplyKernel::run()</a>, <a class="el" href="_n_e_canny_edge_kernel_8cpp_source.xhtml#l00942">NEGradientKernel::run()</a>, <a class="el" href="_n_e_convert_quantized_signedness_kernel_8cpp_source.xhtml#l00095">NEConvertQuantizedSignednessKernel::run()</a>, <a class="el" href="_n_e_dequantization_layer_kernel_8cpp_source.xhtml#l00391">NEDequantizationLayerKernel::run()</a>, <a class="el" href="_n_e_g_e_m_m_matrix_vector_multiply_kernel_8cpp_source.xhtml#l00381">NEGEMMMatrixVectorMultiplyKernel::run()</a>, <a class="el" href="_n_e_h_o_g_detector_kernel_8cpp_source.xhtml#l00095">NEHOGDetectorKernel::run()</a>, <a class="el" href="_c_l_upsample_layer_kernel_8cpp_source.xhtml#l00133">CLUpsampleLayerKernel::run()</a>, <a class="el" href="_c_p_p_corner_candidates_kernel_8cpp_source.xhtml#l00098">CPPCornerCandidatesKernel::run()</a>, <a class="el" href="_n_e_min_max_location_kernel_8cpp_source.xhtml#l00084">NEMinMaxKernel::run()</a>, <a class="el" href="_g_c_direct_convolution_layer_kernel_8cpp_source.xhtml#l00401">GCDirectConvolutionLayerKernel&lt; kernel_size &gt;::run()</a>, <a class="el" href="_g_c_fill_border_kernel_8cpp_source.xhtml#l00141">GCFillBorderKernel::run()</a>, <a class="el" href="_c_l_f_f_t_scale_kernel_8cpp_source.xhtml#l00123">CLFFTScaleKernel::run()</a>, <a class="el" href="_c_l_memset_kernel_8cpp_source.xhtml#l00093">CLMemsetKernel::run()</a>, <a class="el" href="_c_l_channel_extract_kernel_8cpp_source.xhtml#l00168">CLChannelExtractKernel::run()</a>, <a class="el" href="_c_l_fill_border_kernel_8cpp_source.xhtml#l00166">CLFillBorderKernel::run()</a>, <a class="el" href="_c_l_normalization_layer_kernel_8cpp_source.xhtml#l00186">CLNormalizationLayerKernel::run()</a>, <a class="el" href="_n_e_copy_kernel_8cpp_source.xhtml#l00118">NECopyKernel::run()</a>, <a class="el" href="_c_l_quantization_layer_kernel_8cpp_source.xhtml#l00167">CLQuantizationLayerKernel::run()</a>, <a class="el" href="_n_e_fill_border_kernel_8cpp_source.xhtml#l00118">NEFillBorderKernel::run()</a>, <a class="el" href="_c_l_tile_kernel_8cpp_source.xhtml#l00136">CLTileKernel::run()</a>, <a class="el" href="_c_l_width_concatenate2_tensors_kernel_8cpp_source.xhtml#l00163">CLWidthConcatenate2TensorsKernel::run()</a>, <a class="el" href="_n_e_prior_box_layer_kernel_8cpp_source.xhtml#l00238">NEPriorBoxLayerKernel::run()</a>, <a class="el" href="_g_c_pooling_layer_kernel_8cpp_source.xhtml#l00331">GCPoolingLayerKernel::run()</a>, <a class="el" href="_c_l_fast_corners_kernel_8cpp_source.xhtml#l00111">CLFastCornersKernel::run()</a>, <a class="el" href="_c_l_mean_std_dev_normalization_kernel_8cpp_source.xhtml#l00130">CLMeanStdDevNormalizationKernel::run()</a>, <a class="el" href="_c_l_activation_layer_kernel_8cpp_source.xhtml#l00255">CLActivationLayerKernel::run()</a>, <a class="el" href="_n_e_cumulative_distribution_kernel_8cpp_source.xhtml#l00070">NECumulativeDistributionKernel::run()</a>, <a class="el" href="_c_l_gather_kernel_8cpp_source.xhtml#l00122">CLGatherKernel::run()</a>, <a class="el" href="_c_l_pooling_layer_kernel_8cpp_source.xhtml#l00341">CLPoolingLayerKernel::run()</a>, <a class="el" href="_c_l_comparison_kernel_8cpp_source.xhtml#l00168">CLComparisonKernel::run()</a>, <a class="el" href="_c_l_width_concatenate_layer_kernel_8cpp_source.xhtml#l00132">CLWidthConcatenateLayerKernel::run()</a>, <a class="el" href="_n_e_reverse_kernel_8cpp_source.xhtml#l00179">NEReverseKernel::run()</a>, <a class="el" href="_c_p_p_box_with_non_maxima_suppression_limit_kernel_8cpp_source.xhtml#l00398">CPPBoxWithNonMaximaSuppressionLimitKernel::run()</a>, <a class="el" href="_n_e_r_o_i_pooling_layer_kernel_8cpp_source.xhtml#l00097">NEROIPoolingLayerKernel::run()</a>, <a class="el" href="_c_l_harris_corners_kernel_8cpp_source.xhtml#l00127">CLHarrisScoreKernel::run()</a>, <a class="el" href="_n_e_space_to_depth_layer_kernel_8cpp_source.xhtml#l00099">NESpaceToDepthLayerKernel::run()</a>, <a class="el" href="_c_l_height_concatenate_layer_kernel_8cpp_source.xhtml#l00133">CLHeightConcatenateLayerKernel::run()</a>, <a class="el" href="_c_l_f_f_t_digit_reverse_kernel_8cpp_source.xhtml#l00114">CLFFTDigitReverseKernel::run()</a>, <a class="el" href="_n_e_channel_shuffle_layer_kernel_8cpp_source.xhtml#l00169">NEChannelShuffleLayerKernel::run()</a>, <a class="el" href="_c_l_min_max_layer_kernel_8cpp_source.xhtml#l00141">CLMinMaxLayerKernel::run()</a>, <a class="el" href="_n_e_depth_to_space_layer_kernel_8cpp_source.xhtml#l00098">NEDepthToSpaceLayerKernel::run()</a>, <a class="el" href="_c_l_permute_kernel_8cpp_source.xhtml#l00122">CLPermuteKernel::run()</a>, <a class="el" href="_c_l_reorg_layer_kernel_8cpp_source.xhtml#l00120">CLReorgLayerKernel::run()</a>, <a class="el" href="_g_c_g_e_m_m_interleave4x4_kernel_8cpp_source.xhtml#l00090">GCGEMMInterleave4x4Kernel::run()</a>, <a class="el" href="_c_l_h_o_g_detector_kernel_8cpp_source.xhtml#l00126">CLHOGDetectorKernel::run()</a>, <a class="el" href="_c_l_instance_normalization_layer_kernel_8cpp_source.xhtml#l00118">CLInstanceNormalizationLayerKernel::run()</a>, <a class="el" href="_c_l_channel_combine_kernel_8cpp_source.xhtml#l00239">CLChannelCombineKernel::run()</a>, <a class="el" href="_c_l_prior_box_layer_kernel_8cpp_source.xhtml#l00200">CLPriorBoxLayerKernel::run()</a>, <a class="el" href="_c_l_convert_fully_connected_weights_kernel_8cpp_source.xhtml#l00099">CLConvertFullyConnectedWeightsKernel::run()</a>, <a class="el" href="_n_e_generate_proposals_layer_kernel_8cpp_source.xhtml#l00167">NEComputeAllAnchorsKernel::run()</a>, <a class="el" href="_n_e_f_f_t_scale_kernel_8cpp_source.xhtml#l00118">NEFFTScaleKernel::run()</a>, <a class="el" href="_n_e_upsample_layer_kernel_8cpp_source.xhtml#l00268">NEUpsampleLayerKernel::run()</a>, <a class="el" href="_g_c_arithmetic_addition_kernel_8cpp_source.xhtml#l00131">GCArithmeticAdditionKernel::run()</a>, <a class="el" href="_n_e_transpose_kernel_8cpp_source.xhtml#l00533">NETransposeKernel::run()</a>, <a class="el" href="_c_l_normalize_planar_y_u_v_layer_kernel_8cpp_source.xhtml#l00158">CLNormalizePlanarYUVLayerKernel::run()</a>, <a class="el" href="_c_l_pad_layer_kernel_8cpp_source.xhtml#l00203">CLPadLayerKernel::run()</a>, <a class="el" href="_c_l_range_kernel_8cpp_source.xhtml#l00146">CLRangeKernel::run()</a>, <a class="el" href="_n_e_flatten_layer_kernel_8cpp_source.xhtml#l00102">NEFlattenLayerKernel::run()</a>, <a class="el" href="_c_l_batch_concatenate_layer_kernel_8cpp_source.xhtml#l00149">CLBatchConcatenateLayerKernel::run()</a>, <a class="el" href="_c_l_scharr3x3_kernel_8cpp_source.xhtml#l00108">CLScharr3x3Kernel::run()</a>, <a class="el" href="_n_e_sobel3x3_kernel_8cpp_source.xhtml#l00091">NESobel3x3Kernel::run()</a>, <a class="el" href="_c_l_select_kernel_8cpp_source.xhtml#l00168">CLSelectKernel::run()</a>, <a class="el" href="_n_e_pooling_layer_kernel_8cpp_source.xhtml#l02043">NEPoolingLayerKernel::run()</a>, <a class="el" href="_n_e_reorg_layer_kernel_8cpp_source.xhtml#l00101">NEReorgLayerKernel::run()</a>, <a class="el" href="_c_l_depth_concatenate_layer_kernel_8cpp_source.xhtml#l00133">CLDepthConcatenateLayerKernel::run()</a>, <a class="el" href="_c_p_p_permute_kernel_8cpp_source.xhtml#l00155">CPPPermuteKernel::run()</a>, <a class="el" href="_g_c_normalize_planar_y_u_v_layer_kernel_8cpp_source.xhtml#l00132">GCNormalizePlanarYUVLayerKernel::run()</a>, <a class="el" href="_c_p_p_top_k_v_kernel_8cpp_source.xhtml#l00131">CPPTopKVKernel::run()</a>, <a class="el" href="_n_e_scharr3x3_kernel_8cpp_source.xhtml#l00138">NEScharr3x3Kernel::run()</a>, <a class="el" href="_c_l_mean_std_dev_kernel_8cpp_source.xhtml#l00112">CLMeanStdDevKernel::run()</a>, <a class="el" href="_n_e_channel_extract_kernel_8cpp_source.xhtml#l00180">NEChannelExtractKernel::run()</a>, <a class="el" href="_n_e_convolution_kernel_8cpp_source.xhtml#l00624">NEConvolutionKernel&lt; matrix_size &gt;::run()</a>, <a class="el" href="_n_e_quantization_layer_kernel_8cpp_source.xhtml#l00231">NEQuantizationLayerKernel::run()</a>, <a class="el" href="_c_l_width_concatenate4_tensors_kernel_8cpp_source.xhtml#l00212">CLWidthConcatenate4TensorsKernel::run()</a>, <a class="el" href="_g_c_tensor_shift_kernel_8cpp_source.xhtml#l00077">GCTensorShiftKernel::run()</a>, <a class="el" href="_n_e_f_f_t_digit_reverse_kernel_8cpp_source.xhtml#l00252">NEFFTDigitReverseKernel::run()</a>, <a class="el" href="_n_e_g_e_m_m_interleave4x4_kernel_8cpp_source.xhtml#l00221">NEGEMMInterleave4x4Kernel::run()</a>, <a class="el" href="_c_l_scale_kernel_8cpp_source.xhtml#l00265">CLScaleKernel::run()</a>, <a class="el" href="_n_e_height_concatenate_layer_kernel_8cpp_source.xhtml#l00105">NEHeightConcatenateLayerKernel::run()</a>, <a class="el" href="_n_e_instance_normalization_layer_kernel_8cpp_source.xhtml#l00223">NEInstanceNormalizationLayerKernel::run()</a>, <a class="el" href="_c_l_reduction_operation_kernel_8cpp_source.xhtml#l00255">CLReductionOperationKernel::run()</a>, <a class="el" href="_n_e_width_concatenate_layer_kernel_8cpp_source.xhtml#l00105">NEWidthConcatenateLayerKernel::run()</a>, <a class="el" href="_c_l_pixel_wise_multiplication_kernel_8cpp_source.xhtml#l00259">CLPixelWiseMultiplicationKernel::run()</a>, <a class="el" href="_n_e_y_o_l_o_layer_kernel_8cpp_source.xhtml#l00242">NEYOLOLayerKernel::run()</a>, <a class="el" href="_n_e_gaussian5x5_kernel_8cpp_source.xhtml#l00144">NEGaussian5x5VertKernel::run()</a>, <a class="el" href="_n_e_normalization_layer_kernel_8cpp_source.xhtml#l00279">NENormalizationLayerKernel::run()</a>, <a class="el" href="_c_l_crop_kernel_8cpp_source.xhtml#l00115">CLCropKernel::run()</a>, <a class="el" href="_c_l_y_o_l_o_layer_kernel_8cpp_source.xhtml#l00161">CLYOLOLayerKernel::run()</a>, <a class="el" href="_c_l_bounding_box_transform_kernel_8cpp_source.xhtml#l00153">CLBoundingBoxTransformKernel::run()</a>, <a class="el" href="_c_l_l2_normalize_layer_kernel_8cpp_source.xhtml#l00161">CLL2NormalizeLayerKernel::run()</a>, <a class="el" href="_n_e_range_kernel_8cpp_source.xhtml#l00174">NERangeKernel::run()</a>, <a class="el" href="_n_e_channel_combine_kernel_8cpp_source.xhtml#l00272">NEChannelCombineKernel::run()</a>, <a class="el" href="_n_e_activation_layer_kernel_8cpp_source.xhtml#l00787">NEActivationLayerKernel::run()</a>, <a class="el" href="_n_e_mean_std_dev_normalization_kernel_8cpp_source.xhtml#l00194">NEMeanStdDevNormalizationKernel::run()</a>, <a class="el" href="_n_e_elementwise_unary_kernel_8cpp_source.xhtml#l00265">NEElementwiseUnaryKernel::run()</a>, <a class="el" href="_c_l_g_e_m_m_reshape_r_h_s_matrix_kernel_8cpp_source.xhtml#l00142">CLGEMMReshapeRHSMatrixKernel::run()</a>, <a class="el" href="_n_e_depth_concatenate_layer_kernel_8cpp_source.xhtml#l00179">NEDepthConcatenateLayerKernel::run()</a>, <a class="el" href="_n_e_batch_concatenate_layer_kernel_8cpp_source.xhtml#l00184">NEBatchConcatenateLayerKernel::run()</a>, <a class="el" href="_n_e_convert_fully_connected_weights_kernel_8cpp_source.xhtml#l00102">NEConvertFullyConnectedWeightsKernel::run()</a>, <a class="el" href="_c_l_f_f_t_radix_stage_kernel_8cpp_source.xhtml#l00148">CLFFTRadixStageKernel::run()</a>, <a class="el" href="_c_l_g_e_m_m_lowp_matrix_multiply_kernel_8cpp_source.xhtml#l00249">CLGEMMLowpMatrixMultiplyKernel::run()</a>, <a class="el" href="_c_l_g_e_m_m_lowp_matrix_multiply_native_kernel_8cpp_source.xhtml#l00267">CLGEMMLowpMatrixMultiplyNativeKernel::run()</a>, <a class="el" href="_n_e_permute_kernel_8cpp_source.xhtml#l00284">NEPermuteKernel::run()</a>, <a class="el" href="_n_e_g_e_m_m_matrix_addition_kernel_8cpp_source.xhtml#l00151">NEGEMMMatrixAdditionKernel::run()</a>, <a class="el" href="_c_l_stack_layer_kernel_8cpp_source.xhtml#l00118">CLStackLayerKernel::run()</a>, <a class="el" href="_n_e_min_max_layer_kernel_8cpp_source.xhtml#l00117">NEMinMaxLayerKernel::run()</a>, <a class="el" href="_n_e_g_e_m_m_lowp_matrix_multiply_kernel_8cpp_source.xhtml#l00829">NEGEMMLowpMatrixMultiplyKernel::run()</a>, <a class="el" href="_n_e_gather_kernel_8cpp_source.xhtml#l00196">NEGatherKernel::run()</a>, <a class="el" href="_n_e_depthwise_convolution_layer3x3_kernel_8cpp_source.xhtml#l00292">NEDepthwiseConvolutionLayer3x3Kernel::run()</a>, <a class="el" href="_n_e_select_kernel_8cpp_source.xhtml#l00252">NESelectKernel::run()</a>, <a class="el" href="_c_l_g_e_m_m_reshape_l_h_s_matrix_kernel_8cpp_source.xhtml#l00185">CLGEMMReshapeLHSMatrixKernel::run()</a>, <a class="el" href="_g_c_weights_reshape_kernel_8cpp_source.xhtml#l00101">GCWeightsReshapeKernel::run()</a>, <a class="el" href="_c_l_color_convert_kernel_8cpp_source.xhtml#l00432">CLColorConvertKernel::run()</a>, <a class="el" href="_n_e_pad_layer_kernel_8cpp_source.xhtml#l00251">NEPadLayerKernel::run()</a>, <a class="el" href="_n_e_f_f_t_radix_stage_kernel_8cpp_source.xhtml#l01040">NEFFTRadixStageKernel::run()</a>, <a class="el" href="_n_e_reduction_operation_kernel_8cpp_source.xhtml#l01265">NEReductionOperationKernel::run()</a>, <a class="el" href="_g_c_col2_im_kernel_8cpp_source.xhtml#l00097">GCCol2ImKernel::run()</a>, <a class="el" href="_n_e_bounding_box_transform_kernel_8cpp_source.xhtml#l00244">NEBoundingBoxTransformKernel::run()</a>, <a class="el" href="_c_l_g_e_m_m_lowp_reduction_kernel_8cpp_source.xhtml#l00147">CLGEMMLowpMatrixAReductionKernel::run()</a>, <a class="el" href="_c_l_arg_min_max_layer_kernel_8cpp_source.xhtml#l00183">CLArgMinMaxLayerKernel::run()</a>, <a class="el" href="_c_l_depthwise_convolution_layer3x3_n_c_h_w_kernel_8cpp_source.xhtml#l00370">CLDepthwiseConvolutionLayer3x3NCHWKernel::run()</a>, <a class="el" href="_n_e_histogram_kernel_8cpp_source.xhtml#l00239">NEHistogramKernel::run()</a>, <a class="el" href="_c_p_p_non_maximum_suppression_kernel_8cpp_source.xhtml#l00091">CPPNonMaximumSuppressionKernel::run()</a>, <a class="el" href="_g_c_g_e_m_m_matrix_multiply_kernel_8cpp_source.xhtml#l00303">GCGEMMMatrixMultiplyKernel::run()</a>, <a class="el" href="_g_c_im2_col_kernel_8cpp_source.xhtml#l00221">GCIm2ColKernel::run()</a>, <a class="el" href="_n_e_depth_convert_layer_kernel_8cpp_source.xhtml#l00143">NEDepthConvertLayerKernel::run()</a>, <a class="el" href="_n_e_stack_layer_kernel_8cpp_source.xhtml#l00116">NEStackLayerKernel::run()</a>, <a class="el" href="_n_e_color_convert_kernel_8cpp_source.xhtml#l00579">NEColorConvertKernel::run()</a>, <a class="el" href="_n_e_direct_convolution_layer_kernel_8cpp_source.xhtml#l01518">NEDirectConvolutionLayerKernel::run()</a>, <a class="el" href="_c_l_r_o_i_align_layer_kernel_8cpp_source.xhtml#l00162">CLROIAlignLayerKernel::run()</a>, <a class="el" href="_c_l_g_e_m_m_lowp_matrix_multiply_reshaped_only_r_h_s_kernel_8cpp_source.xhtml#l00274">CLGEMMLowpMatrixMultiplyReshapedOnlyRHSKernel::run()</a>, <a class="el" href="_n_e_g_e_m_m_matrix_multiply_kernel_8cpp_source.xhtml#l00996">NEGEMMMatrixMultiplyKernel::run()</a>, <a class="el" href="_n_e_accumulate_kernel_8cpp_source.xhtml#l00305">NEAccumulateWeightedKernel::run()</a>, <a class="el" href="_c_l_depthwise_convolution_layer3x3_n_h_w_c_kernel_8cpp_source.xhtml#l00363">CLDepthwiseConvolutionLayer3x3NHWCKernel::run()</a>, <a class="el" href="_c_l_g_e_m_m_lowp_quantize_down_int32_to_int16_scale_by_fixed_point_kernel_8cpp_source.xhtml#l00153">CLGEMMLowpQuantizeDownInt32ToInt16ScaleByFixedPointKernel::run()</a>, <a class="el" href="_g_c_batch_normalization_layer_kernel_8cpp_source.xhtml#l00205">GCBatchNormalizationLayerKernel::run()</a>, <a class="el" href="_n_e_pixel_wise_multiplication_kernel_8cpp_source.xhtml#l00719">NEPixelWiseMultiplicationKernel::run()</a>, <a class="el" href="_c_l_deconvolution_reshape_output_kernel_8cpp_source.xhtml#l00175">CLDeconvolutionReshapeOutputKernel::run()</a>, <a class="el" href="_c_l_batch_to_space_layer_kernel_8cpp_source.xhtml#l00150">CLBatchToSpaceLayerKernel::run()</a>, <a class="el" href="_n_e_direct_convolution_layer_output_stage_kernel_8cpp_source.xhtml#l00447">NEDirectConvolutionLayerOutputStageKernel::run()</a>, <a class="el" href="_c_l_g_e_m_m_lowp_quantize_down_int32_to_uint8_scale_by_float_kernel_8cpp_source.xhtml#l00148">CLGEMMLowpQuantizeDownInt32ToUint8ScaleByFloatKernel::run()</a>, <a class="el" href="_c_l_winograd_input_transform_kernel_8cpp_source.xhtml#l00228">CLWinogradInputTransformKernel::run()</a>, <a class="el" href="_c_l_g_e_m_m_lowp_quantize_down_int32_to_int8_scale_by_fixed_point_kernel_8cpp_source.xhtml#l00149">CLGEMMLowpQuantizeDownInt32ToInt8ScaleByFixedPointKernel::run()</a>, <a class="el" href="_n_e_arithmetic_addition_kernel_8cpp_source.xhtml#l00981">NEArithmeticAdditionKernel::run()</a>, <a class="el" href="_c_l_g_e_m_m_lowp_quantize_down_int32_to_uint8_scale_by_fixed_point_kernel_8cpp_source.xhtml#l00149">CLGEMMLowpQuantizeDownInt32ToUint8ScaleByFixedPointKernel::run()</a>, <a class="el" href="_c_l_col2_im_kernel_8cpp_source.xhtml#l00142">CLCol2ImKernel::run()</a>, <a class="el" href="_c_l_g_e_m_m_lowp_quantize_down_int32_to_uint8_scale_kernel_8cpp_source.xhtml#l00151">CLGEMMLowpQuantizeDownInt32ToUint8ScaleKernel::run()</a>, <a class="el" href="_n_e_batch_to_space_layer_kernel_8cpp_source.xhtml#l00137">NEBatchToSpaceLayerKernel::run()</a>, <a class="el" href="_c_l_direct_convolution_layer_kernel_8cpp_source.xhtml#l00591">CLDirectConvolutionLayerKernel::run()</a>, <a class="el" href="_c_l_batch_normalization_layer_kernel_8cpp_source.xhtml#l00223">CLBatchNormalizationLayerKernel::run()</a>, <a class="el" href="_n_e_arithmetic_subtraction_kernel_8cpp_source.xhtml#l00552">NEArithmeticSubtractionKernel::run()</a>, <a class="el" href="_n_e_r_o_i_align_layer_kernel_8cpp_source.xhtml#l00281">NEROIAlignLayerKernel::run()</a>, <a class="el" href="_c_l_winograd_filter_transform_kernel_8cpp_source.xhtml#l00141">CLWinogradFilterTransformKernel::run()</a>, <a class="el" href="_c_l_histogram_kernel_8cpp_source.xhtml#l00222">CLHistogramBorderKernel::run()</a>, <a class="el" href="_n_e_g_e_m_m_lowp_quantize_down_int32_to_int16_scale_by_fixed_point_kernel_8cpp_source.xhtml#l00229">NEGEMMLowpQuantizeDownInt32ToInt16ScaleByFixedPointKernel::run()</a>, <a class="el" href="_c_l_strided_slice_kernel_8cpp_source.xhtml#l00190">CLStridedSliceKernel::run()</a>, <a class="el" href="_c_l_g_e_m_m_lowp_offset_contribution_kernel_8cpp_source.xhtml#l00219">CLGEMMLowpOffsetContributionKernel::run()</a>, <a class="el" href="_n_e_g_e_m_m_lowp_offset_contribution_kernel_8cpp_source.xhtml#l00390">NEGEMMLowpOffsetContributionKernel::run()</a>, <a class="el" href="_c_l_gaussian_pyramid_kernel_8cpp_source.xhtml#l00211">CLGaussianPyramidVertKernel::run()</a>, <a class="el" href="_c_l_g_e_m_m_matrix_multiply_native_kernel_8cpp_source.xhtml#l00330">CLGEMMMatrixMultiplyNativeKernel::run()</a>, <a class="el" href="_c_l_g_e_m_m_matrix_multiply_kernel_8cpp_source.xhtml#l00476">CLGEMMMatrixMultiplyKernel::run()</a>, <a class="el" href="_c_l_fuse_batch_normalization_kernel_8cpp_source.xhtml#l00177">CLFuseBatchNormalizationKernel::run()</a>, <a class="el" href="_c_l_g_e_m_m_lowp_matrix_multiply_reshaped_kernel_8cpp_source.xhtml#l00265">CLGEMMLowpMatrixMultiplyReshapedKernel::run()</a>, <a class="el" href="_c_l_space_to_batch_layer_kernel_8cpp_source.xhtml#l00174">CLSpaceToBatchLayerKernel::run()</a>, <a class="el" href="_n_e_g_e_m_m_lowp_quantize_down_int32_to_int8_scale_by_fixed_point_kernel_8cpp_source.xhtml#l00238">NEGEMMLowpQuantizeDownInt32ToInt8ScaleByFixedPointKernel::run()</a>, <a class="el" href="_n_e_g_e_m_m_lowp_quantize_down_int32_to_uint8_scale_by_fixed_point_kernel_8cpp_source.xhtml#l00240">NEGEMMLowpQuantizeDownInt32ToUint8ScaleByFixedPointKernel::run()</a>, <a class="el" href="_n_e_batch_normalization_layer_kernel_8cpp_source.xhtml#l00469">NEBatchNormalizationLayerKernel::run()</a>, <a class="el" href="_n_e_g_e_m_m_lowp_quantize_down_int32_to_uint8_scale_kernel_8cpp_source.xhtml#l00343">NEGEMMLowpQuantizeDownInt32ToUint8ScaleKernel::run()</a>, <a class="el" href="_n_e_g_e_m_m_transpose1x_w_kernel_8cpp_source.xhtml#l00122">NEGEMMTranspose1xWKernel::run()</a>, <a class="el" href="_c_l_l_k_tracker_kernel_8cpp_source.xhtml#l00081">CLLKTrackerInitKernel::run()</a>, <a class="el" href="_n_e_col2_im_kernel_8cpp_source.xhtml#l00145">NECol2ImKernel::run()</a>, <a class="el" href="_c_l_winograd_output_transform_kernel_8cpp_source.xhtml#l00222">CLWinogradOutputTransformKernel::run()</a>, <a class="el" href="_n_e_depthwise_convolution_layer_native_kernel_8cpp_source.xhtml#l00607">NEDepthwiseConvolutionLayerNativeKernel::run()</a>, <a class="el" href="_n_e_strided_slice_kernel_8cpp_source.xhtml#l00171">NEStridedSliceKernel::run()</a>, <a class="el" href="_c_l_g_e_m_m_matrix_multiply_reshaped_only_r_h_s_kernel_8cpp_source.xhtml#l00340">CLGEMMMatrixMultiplyReshapedOnlyRHSKernel::run()</a>, <a class="el" href="_n_e_crop_kernel_8cpp_source.xhtml#l00386">NECropKernel::run()</a>, <a class="el" href="_n_e_fuse_batch_normalization_kernel_8cpp_source.xhtml#l00507">NEFuseBatchNormalizationKernel::run()</a>, <a class="el" href="_c_l_canny_edge_kernel_8cpp_source.xhtml#l00172">CLEdgeNonMaxSuppressionKernel::run()</a>, <a class="el" href="_n_e_harris_corners_kernel_8cpp_source.xhtml#l00709">NEHarrisScoreKernel&lt; block_size &gt;::run()</a>, <a class="el" href="_n_e_g_e_m_m_lowp_reduction_kernel_8cpp_source.xhtml#l00252">NEGEMMLowpMatrixAReductionKernel::run()</a>, <a class="el" href="_c_l_depthwise_convolution_layer_native_kernel_8cpp_source.xhtml#l00321">CLDepthwiseConvolutionLayerNativeKernel::run()</a>, <a class="el" href="_c_l_h_o_g_descriptor_kernel_8cpp_source.xhtml#l00208">CLHOGBlockNormalizationKernel::run()</a>, <a class="el" href="_n_e_space_to_batch_layer_kernel_8cpp_source.xhtml#l00144">NESpaceToBatchLayerKernel::run()</a>, <a class="el" href="_c_l_min_max_location_kernel_8cpp_source.xhtml#l00215">CLMinMaxLocationKernel::run()</a>, <a class="el" href="_n_e_scale_kernel_8cpp_source.xhtml#l01037">NEScaleKernel::run()</a>, <a class="el" href="_n_e_gaussian_pyramid_kernel_8cpp_source.xhtml#l00208">NEGaussianPyramidVertKernel::run()</a>, <a class="el" href="_c_l_g_e_m_m_lowp_offset_contribution_output_stage_kernel_8cpp_source.xhtml#l00297">CLGEMMLowpOffsetContributionOutputStageKernel::run()</a>, <a class="el" href="_c_l_weights_reshape_kernel_8cpp_source.xhtml#l00119">CLWeightsReshapeKernel::run()</a>, <a class="el" href="_n_e_weights_reshape_kernel_8cpp_source.xhtml#l00127">NEWeightsReshapeKernel::run()</a>, <a class="el" href="_g_c_softmax_layer_kernel_8cpp_source.xhtml#l00249">GCLogits1DNormKernel::run()</a>, <a class="el" href="_c_l_im2_col_kernel_8cpp_source.xhtml#l00355">CLIm2ColKernel::run()</a>, <a class="el" href="_c_l_sobel7x7_kernel_8cpp_source.xhtml#l00225">CLSobel7x7VertKernel::run()</a>, <a class="el" href="_c_l_sobel5x5_kernel_8cpp_source.xhtml#l00223">CLSobel5x5VertKernel::run()</a>, <a class="el" href="_c_l_fast_corners_kernel_8cpp_source.xhtml#l00182">CLCopyToArrayKernel::run()</a>, <a class="el" href="_c_l_g_e_m_m_matrix_multiply_reshaped_kernel_8cpp_source.xhtml#l00334">CLGEMMMatrixMultiplyReshapedKernel::run()</a>, <a class="el" href="_c_l_l_k_tracker_kernel_8cpp_source.xhtml#l00110">CLLKTrackerFinalizeKernel::run()</a>, <a class="el" href="_n_e_im2_col_kernel_8cpp_source.xhtml#l00431">NEIm2ColKernel::run()</a>, <a class="el" href="_c_l_g_e_m_m_lowp_reduction_kernel_8cpp_source.xhtml#l00203">CLGEMMLowpMatrixBReductionKernel::run()</a>, <a class="el" href="_n_e_sobel5x5_kernel_8cpp_source.xhtml#l00265">NESobel5x5VertKernel::run()</a>, <a class="el" href="_n_e_g_e_m_m_lowp_offset_contribution_output_stage_kernel_8cpp_source.xhtml#l01001">NEGEMMLowpOffsetContributionOutputStageKernel::run()</a>, <a class="el" href="_n_e_sobel7x7_kernel_8cpp_source.xhtml#l00355">NESobel7x7VertKernel::run()</a>, <a class="el" href="_c_l_pixel_wise_multiplication_kernel_8cpp_source.xhtml#l00394">CLComplexPixelWiseMultiplicationKernel::run()</a>, <a class="el" href="_n_e_convolution_kernel_8cpp_source.xhtml#l00699">NESeparableConvolutionHorKernel&lt; matrix_size &gt;::run()</a>, <a class="el" href="_n_e_h_o_g_descriptor_kernel_8cpp_source.xhtml#l00772">NEHOGBlockNormalizationKernel::run()</a>, <a class="el" href="_n_e_softmax_layer_kernel_8cpp_source.xhtml#l00660">NELogits1DSoftmaxKernel&lt; IS_LOG &gt;::run()</a>, <a class="el" href="_n_e_canny_edge_kernel_8cpp_source.xhtml#l01024">NEEdgeNonMaxSuppressionKernel::run()</a>, <a class="el" href="_n_e_accumulate_kernel_8cpp_source.xhtml#l00348">NEAccumulateSquaredKernel::run()</a>, <a class="el" href="_c_l_canny_edge_kernel_8cpp_source.xhtml#l00273">CLEdgeTraceKernel::run()</a>, <a class="el" href="_n_e_g_e_m_m_lowp_reduction_kernel_8cpp_source.xhtml#l00479">NEGEMMLowpMatrixBReductionKernel::run()</a>, <a class="el" href="_n_e_min_max_location_kernel_8cpp_source.xhtml#l00385">NEMinMaxLocationKernel::run()</a>, <a class="el" href="_c_l_l_k_tracker_kernel_8cpp_source.xhtml#l00194">CLLKTrackerStage0Kernel::run()</a>, <a class="el" href="_c_l_softmax_layer_kernel_8cpp_source.xhtml#l00306">CLLogits1DMaxShiftExpSumKernel::run()</a>, <a class="el" href="_n_e_convolution_kernel_8cpp_source.xhtml#l01137">NESeparableConvolutionVertKernel&lt; matrix_size &gt;::run()</a>, <a class="el" href="_n_e_pixel_wise_multiplication_kernel_8cpp_source.xhtml#l00899">NEComplexPixelWiseMultiplicationKernel::run()</a>, <a class="el" href="_c_l_convolution_kernel_8cpp_source.xhtml#l00339">CLConvolutionRectangleKernel::run()</a>, <a class="el" href="_c_l_l_k_tracker_kernel_8cpp_source.xhtml#l00278">CLLKTrackerStage1Kernel::run()</a>, <a class="el" href="_n_e_canny_edge_kernel_8cpp_source.xhtml#l01105">NEEdgeTraceKernel::run()</a>, <a class="el" href="_c_l_softmax_layer_kernel_8cpp_source.xhtml#l00394">CLLogits1DNormKernel::run()</a>, <a class="el" href="_n_e_convolution_kernel_8cpp_source.xhtml#l01471">NEConvolutionRectangleKernel::run()</a>, <a class="el" href="_single_thread_scheduler_8cpp_source.xhtml#l00038">SingleThreadScheduler::schedule()</a>, <a class="el" href="_o_m_p_scheduler_8cpp_source.xhtml#l00052">OMPScheduler::schedule()</a>, <a class="el" href="_c_p_p_scheduler_8cpp_source.xhtml#l00312">CPPScheduler::schedule()</a>, and <a class="el" href="_c_l_memset_kernel_8cpp_source.xhtml#l00082">CLMemsetKernel::validate()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>arm_compute/core/<a class="el" href="_i_kernel_8h_source.xhtml">IKernel.h</a></li>
<li>src/core/<a class="el" href="_i_kernel_8cpp_source.xhtml">IKernel.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1_i_kernel.xhtml">IKernel</a></li>
    <li class="footer">Generated on Fri Feb 21 2020 11:10:28 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
