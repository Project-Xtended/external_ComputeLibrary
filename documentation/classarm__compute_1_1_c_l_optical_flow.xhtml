<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: CLOpticalFlow Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.02.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classarm__compute_1_1_c_l_optical_flow.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">CLOpticalFlow Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Basic function to execute optical flow.  
 <a href="classarm__compute_1_1_c_l_optical_flow.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_c_l_optical_flow_8h_source.xhtml">CLOpticalFlow.h</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for CLOpticalFlow:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classarm__compute_1_1_c_l_optical_flow__coll__graph.svg" width="120" height="112"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:af823f026d40781422461f10013b78b62"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_optical_flow.xhtml#af823f026d40781422461f10013b78b62">CLOpticalFlow</a> (std::shared_ptr&lt; <a class="el" href="classarm__compute_1_1_i_memory_manager.xhtml">IMemoryManager</a> &gt; memory_manager=nullptr)</td></tr>
<tr class="memdesc:af823f026d40781422461f10013b78b62"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor.  <a href="#af823f026d40781422461f10013b78b62">More...</a><br /></td></tr>
<tr class="separator:af823f026d40781422461f10013b78b62"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae0eabdf0a8999bc27a9f319122175013"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_optical_flow.xhtml#ae0eabdf0a8999bc27a9f319122175013">CLOpticalFlow</a> (const <a class="el" href="classarm__compute_1_1_c_l_optical_flow.xhtml">CLOpticalFlow</a> &amp;)=delete</td></tr>
<tr class="memdesc:ae0eabdf0a8999bc27a9f319122175013"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied (As this class contains pointers)  <a href="#ae0eabdf0a8999bc27a9f319122175013">More...</a><br /></td></tr>
<tr class="separator:ae0eabdf0a8999bc27a9f319122175013"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a68eed0e07674cc6e041d5dc0fecd8c27"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_c_l_optical_flow.xhtml">CLOpticalFlow</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_optical_flow.xhtml#a68eed0e07674cc6e041d5dc0fecd8c27">operator=</a> (const <a class="el" href="classarm__compute_1_1_c_l_optical_flow.xhtml">CLOpticalFlow</a> &amp;)=delete</td></tr>
<tr class="memdesc:a68eed0e07674cc6e041d5dc0fecd8c27"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied (As this class contains pointers)  <a href="#a68eed0e07674cc6e041d5dc0fecd8c27">More...</a><br /></td></tr>
<tr class="separator:a68eed0e07674cc6e041d5dc0fecd8c27"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae8090e64560fb80896bd682de4687343"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_optical_flow.xhtml#ae8090e64560fb80896bd682de4687343">CLOpticalFlow</a> (<a class="el" href="classarm__compute_1_1_c_l_optical_flow.xhtml">CLOpticalFlow</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:ae8090e64560fb80896bd682de4687343"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be moved.  <a href="#ae8090e64560fb80896bd682de4687343">More...</a><br /></td></tr>
<tr class="separator:ae8090e64560fb80896bd682de4687343"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a24252fc100901855c82e8703834f9634"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_c_l_optical_flow.xhtml">CLOpticalFlow</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_optical_flow.xhtml#a24252fc100901855c82e8703834f9634">operator=</a> (<a class="el" href="classarm__compute_1_1_c_l_optical_flow.xhtml">CLOpticalFlow</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:a24252fc100901855c82e8703834f9634"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be moved.  <a href="#a24252fc100901855c82e8703834f9634">More...</a><br /></td></tr>
<tr class="separator:a24252fc100901855c82e8703834f9634"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8cd74e6bc7d3bcebbac4002717857601"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_optical_flow.xhtml#a8cd74e6bc7d3bcebbac4002717857601">configure</a> (const <a class="el" href="classarm__compute_1_1_c_l_pyramid.xhtml">CLPyramid</a> *old_pyramid, const <a class="el" href="classarm__compute_1_1_c_l_pyramid.xhtml">CLPyramid</a> *new_pyramid, const <a class="el" href="namespacearm__compute.xhtml#adb969f0e554bf563f2fa671399d59280">ICLKeyPointArray</a> *old_points, const <a class="el" href="namespacearm__compute.xhtml#adb969f0e554bf563f2fa671399d59280">ICLKeyPointArray</a> *new_points_estimates, <a class="el" href="namespacearm__compute.xhtml#adb969f0e554bf563f2fa671399d59280">ICLKeyPointArray</a> *new_points, <a class="el" href="namespacearm__compute.xhtml#a08c1503414e23f5dd10ff83492685453">Termination</a> termination, float epsilon, size_t num_iterations, size_t window_dimension, bool use_initial_estimate, <a class="el" href="namespacearm__compute.xhtml#a15a05537a472ee742404821851529327">BorderMode</a> border_mode, uint8_t constant_border_value=0)</td></tr>
<tr class="memdesc:a8cd74e6bc7d3bcebbac4002717857601"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialise the function input and output.  <a href="#a8cd74e6bc7d3bcebbac4002717857601">More...</a><br /></td></tr>
<tr class="separator:a8cd74e6bc7d3bcebbac4002717857601"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad1717410afd0be936c6213a63c8005fb"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_optical_flow.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a> () override</td></tr>
<tr class="memdesc:ad1717410afd0be936c6213a63c8005fb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Run the kernels contained in the function.  <a href="#ad1717410afd0be936c6213a63c8005fb">More...</a><br /></td></tr>
<tr class="separator:ad1717410afd0be936c6213a63c8005fb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1_i_function"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1_i_function')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1_i_function.xhtml">IFunction</a></td></tr>
<tr class="memitem:ab921ecc3f3f6ae2b4bd61f3e1998d8c4 inherit pub_methods_classarm__compute_1_1_i_function"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_function.xhtml#ab921ecc3f3f6ae2b4bd61f3e1998d8c4">~IFunction</a> ()=default</td></tr>
<tr class="memdesc:ab921ecc3f3f6ae2b4bd61f3e1998d8c4 inherit pub_methods_classarm__compute_1_1_i_function"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor.  <a href="classarm__compute_1_1_i_function.xhtml#ab921ecc3f3f6ae2b4bd61f3e1998d8c4">More...</a><br /></td></tr>
<tr class="separator:ab921ecc3f3f6ae2b4bd61f3e1998d8c4 inherit pub_methods_classarm__compute_1_1_i_function"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a820f7291c24155a2980512fae45aac26 inherit pub_methods_classarm__compute_1_1_i_function"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_function.xhtml#a820f7291c24155a2980512fae45aac26">prepare</a> ()</td></tr>
<tr class="memdesc:a820f7291c24155a2980512fae45aac26 inherit pub_methods_classarm__compute_1_1_i_function"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prepare the function for executing.  <a href="classarm__compute_1_1_i_function.xhtml#a820f7291c24155a2980512fae45aac26">More...</a><br /></td></tr>
<tr class="separator:a820f7291c24155a2980512fae45aac26 inherit pub_methods_classarm__compute_1_1_i_function"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Basic function to execute optical flow. </p>
<p>This function calls the following OpenCL kernels and functions:</p>
<ol type="1">
<li><a class="el" href="classarm__compute_1_1_c_l_scharr3x3.xhtml">CLScharr3x3</a></li>
<li><a class="el" href="classarm__compute_1_1_c_l_l_k_tracker_init_kernel.xhtml">CLLKTrackerInitKernel</a></li>
<li><a class="el" href="classarm__compute_1_1_c_l_l_k_tracker_stage0_kernel.xhtml">CLLKTrackerStage0Kernel</a></li>
<li><a class="el" href="classarm__compute_1_1_c_l_l_k_tracker_stage1_kernel.xhtml">CLLKTrackerStage1Kernel</a></li>
<li><a class="el" href="classarm__compute_1_1_c_l_l_k_tracker_finalize_kernel.xhtml">CLLKTrackerFinalizeKernel</a> </li>
</ol>

<p class="definition">Definition at line <a class="el" href="_c_l_optical_flow_8h_source.xhtml#l00061">61</a> of file <a class="el" href="_c_l_optical_flow_8h_source.xhtml">CLOpticalFlow.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="af823f026d40781422461f10013b78b62"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af823f026d40781422461f10013b78b62">&#9670;&nbsp;</a></span>CLOpticalFlow() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_l_optical_flow.xhtml">CLOpticalFlow</a> </td>
          <td>(</td>
          <td class="paramtype">std::shared_ptr&lt; <a class="el" href="classarm__compute_1_1_i_memory_manager.xhtml">IMemoryManager</a> &gt;&#160;</td>
          <td class="paramname"><em>memory_manager</em> = <code>nullptr</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Default constructor. </p>

<p class="definition">Definition at line <a class="el" href="_c_l_optical_flow_8cpp_source.xhtml#l00040">40</a> of file <a class="el" href="_c_l_optical_flow_8cpp_source.xhtml">CLOpticalFlow.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    : _memory_group(std::move(memory_manager)),</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;      _tracker_init_kernel(),</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;      _tracker_stage0_kernel(),</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;      _tracker_stage1_kernel(),</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;      _tracker_finalize_kernel(),</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;      _func_scharr(),</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;      _scharr_gx(),</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;      _scharr_gy(),</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;      _old_points(<span class="keyword">nullptr</span>),</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;      _new_points_estimates(<span class="keyword">nullptr</span>),</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;      _new_points(<span class="keyword">nullptr</span>),</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;      _old_points_internal(),</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;      _new_points_internal(),</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;      _coefficient_table(),</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;      _old_values(),</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;      _num_levels(0)</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;{</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="ae0eabdf0a8999bc27a9f319122175013"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae0eabdf0a8999bc27a9f319122175013">&#9670;&nbsp;</a></span>CLOpticalFlow() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_l_optical_flow.xhtml">CLOpticalFlow</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_c_l_optical_flow.xhtml">CLOpticalFlow</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prevent instances of this class from being copied (As this class contains pointers) </p>

</div>
</div>
<a id="ae8090e64560fb80896bd682de4687343"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae8090e64560fb80896bd682de4687343">&#9670;&nbsp;</a></span>CLOpticalFlow() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_l_optical_flow.xhtml">CLOpticalFlow</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_c_l_optical_flow.xhtml">CLOpticalFlow</a> &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Allow instances of this class to be moved. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a8cd74e6bc7d3bcebbac4002717857601"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8cd74e6bc7d3bcebbac4002717857601">&#9670;&nbsp;</a></span>configure()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void configure </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_c_l_pyramid.xhtml">CLPyramid</a> *&#160;</td>
          <td class="paramname"><em>old_pyramid</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_c_l_pyramid.xhtml">CLPyramid</a> *&#160;</td>
          <td class="paramname"><em>new_pyramid</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearm__compute.xhtml#adb969f0e554bf563f2fa671399d59280">ICLKeyPointArray</a> *&#160;</td>
          <td class="paramname"><em>old_points</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearm__compute.xhtml#adb969f0e554bf563f2fa671399d59280">ICLKeyPointArray</a> *&#160;</td>
          <td class="paramname"><em>new_points_estimates</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearm__compute.xhtml#adb969f0e554bf563f2fa671399d59280">ICLKeyPointArray</a> *&#160;</td>
          <td class="paramname"><em>new_points</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearm__compute.xhtml#a08c1503414e23f5dd10ff83492685453">Termination</a>&#160;</td>
          <td class="paramname"><em>termination</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>epsilon</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>num_iterations</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>window_dimension</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>use_initial_estimate</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearm__compute.xhtml#a15a05537a472ee742404821851529327">BorderMode</a>&#160;</td>
          <td class="paramname"><em>border_mode</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>constant_border_value</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initialise the function input and output. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">old_pyramid</td><td>Pointer to the pyramid for the old tensor. Data types supported U8 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">new_pyramid</td><td>Pointer to the pyramid for the new tensor. Data types supported U8 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">old_points</td><td>Pointer to the IKeyPointArray storing old key points </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">new_points_estimates</td><td>Pointer to the IKeyPointArray storing new estimates key points </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">new_points</td><td>Pointer to the IKeyPointArray storing new key points </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">termination</td><td>The criteria to terminate the search of each keypoint. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">epsilon</td><td>The error for terminating the algorithm </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">num_iterations</td><td>The maximum number of iterations before terminate the alogrithm </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">window_dimension</td><td>The size of the window on which to perform the algorithm </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">use_initial_estimate</td><td>The flag to indicate whether the initial estimated position should be used </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">border_mode</td><td>The border mode applied at scharr kernel stage </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">constant_border_value</td><td>(Optional) Constant value to use for borders if border_mode is set to CONSTANT </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_c_l_optical_flow_8cpp_source.xhtml#l00060">60</a> of file <a class="el" href="_c_l_optical_flow_8cpp_source.xhtml">CLOpticalFlow.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;{</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(<span class="keyword">nullptr</span> == old_pyramid);</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(<span class="keyword">nullptr</span> == new_pyramid);</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(<span class="keyword">nullptr</span> == old_points);</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(<span class="keyword">nullptr</span> == new_points_estimates);</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(<span class="keyword">nullptr</span> == new_points);</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(old_pyramid-&gt;<a class="code" href="classarm__compute_1_1_c_l_pyramid.xhtml#a7e9f724340af5b795b21a00d35eeb28e">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_pyramid_info.xhtml#aa2fea6640d2bd5de24d0e0c2433faab6">num_levels</a>() != new_pyramid-&gt;<a class="code" href="classarm__compute_1_1_c_l_pyramid.xhtml#a7e9f724340af5b795b21a00d35eeb28e">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_pyramid_info.xhtml#aa2fea6640d2bd5de24d0e0c2433faab6">num_levels</a>());</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(0 == old_pyramid-&gt;<a class="code" href="classarm__compute_1_1_c_l_pyramid.xhtml#a7e9f724340af5b795b21a00d35eeb28e">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_pyramid_info.xhtml#aa2fea6640d2bd5de24d0e0c2433faab6">num_levels</a>());</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(old_pyramid-&gt;<a class="code" href="classarm__compute_1_1_c_l_pyramid.xhtml#a7e9f724340af5b795b21a00d35eeb28e">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_pyramid_info.xhtml#a9ce99f5dfa1514cb108665e3810b2c4c">width</a>() != new_pyramid-&gt;<a class="code" href="classarm__compute_1_1_c_l_pyramid.xhtml#a7e9f724340af5b795b21a00d35eeb28e">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_pyramid_info.xhtml#a9ce99f5dfa1514cb108665e3810b2c4c">width</a>());</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(old_pyramid-&gt;<a class="code" href="classarm__compute_1_1_c_l_pyramid.xhtml#a7e9f724340af5b795b21a00d35eeb28e">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_pyramid_info.xhtml#adc662cea5b05cd9852d5a4538586d662">height</a>() != new_pyramid-&gt;<a class="code" href="classarm__compute_1_1_c_l_pyramid.xhtml#a7e9f724340af5b795b21a00d35eeb28e">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_pyramid_info.xhtml#adc662cea5b05cd9852d5a4538586d662">height</a>());</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(use_initial_estimate &amp;&amp; old_points-&gt;<a class="code" href="classarm__compute_1_1_i_array.xhtml#aac8e28a698cd201286d75eb3f5ad3e1c">num_values</a>() != new_points_estimates-&gt;<a class="code" href="classarm__compute_1_1_i_array.xhtml#aac8e28a698cd201286d75eb3f5ad3e1c">num_values</a>());</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <span class="comment">// Set member variables</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    _old_points           = old_points;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    _new_points_estimates = new_points_estimates;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    _new_points           = new_points;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    _num_levels           = old_pyramid-&gt;<a class="code" href="classarm__compute_1_1_c_l_pyramid.xhtml#a7e9f724340af5b795b21a00d35eeb28e">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_pyramid_info.xhtml#aa2fea6640d2bd5de24d0e0c2433faab6">num_levels</a>();</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">float</span> pyr_scale              = old_pyramid-&gt;<a class="code" href="classarm__compute_1_1_c_l_pyramid.xhtml#a7e9f724340af5b795b21a00d35eeb28e">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_pyramid_info.xhtml#ade87abafbd6b200b22de988f32b66dea">scale</a>();</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span>   list_length            = old_points-&gt;<a class="code" href="classarm__compute_1_1_i_array.xhtml#aac8e28a698cd201286d75eb3f5ad3e1c">num_values</a>();</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span>   old_values_list_length = list_length * window_dimension * window_dimension;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <span class="comment">// Create kernels and tensors</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    _tracker_init_kernel.resize(_num_levels);</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    _tracker_stage0_kernel.resize(_num_levels);</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    _tracker_stage1_kernel.resize(_num_levels);</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    _func_scharr.resize(_num_levels);</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    _scharr_gx.resize(_num_levels);</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    _scharr_gy.resize(_num_levels);</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <span class="comment">// Create internal keypoint arrays</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    _old_points_internal = arm_compute::support::cpp14::make_unique&lt;CLLKInternalKeypointArray&gt;(list_length);</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    _old_points_internal-&gt;resize(list_length);</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    _new_points_internal = arm_compute::support::cpp14::make_unique&lt;CLLKInternalKeypointArray&gt;(list_length);</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    _new_points_internal-&gt;resize(list_length);</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    _coefficient_table = arm_compute::support::cpp14::make_unique&lt;CLCoefficientTableArray&gt;(list_length);</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    _coefficient_table-&gt;resize(list_length);</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    _old_values = arm_compute::support::cpp14::make_unique&lt;CLOldValueArray&gt;(old_values_list_length);</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    _old_values-&gt;resize(old_values_list_length);</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    _new_points-&gt;<a class="code" href="classarm__compute_1_1_i_array.xhtml#ae21b0e95ded2dcfb5e62848ea0193828">resize</a>(list_length);</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <span class="keywordflow">for</span>(<span class="keywordtype">size_t</span> i = 0; i &lt; _num_levels; ++i)</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    {</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        <span class="comment">// Get images from the ith level of old and right pyramid</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        <a class="code" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLImage</a> *old_ith_input = old_pyramid-&gt;<a class="code" href="classarm__compute_1_1_c_l_pyramid.xhtml#a6f6fce8ca90f3e9a62e2cb48a07047f4">get_pyramid_level</a>(i);</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        <a class="code" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLImage</a> *new_ith_input = new_pyramid-&gt;<a class="code" href="classarm__compute_1_1_c_l_pyramid.xhtml#a6f6fce8ca90f3e9a62e2cb48a07047f4">get_pyramid_level</a>(i);</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        <span class="comment">// Get width and height of images</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> width_ith  = old_ith_input-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(0);</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> height_ith = new_ith_input-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(1);</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        <span class="comment">// Initialize Scharr tensors</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> tensor_info(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(width_ith, height_ith), 1, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a6e0b0886efb94aec797f6b830329b72c">DataType::S16</a>);</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;        _scharr_gx[i].allocator()-&gt;init(tensor_info);</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;        _scharr_gy[i].allocator()-&gt;init(tensor_info);</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        <span class="comment">// Manage intermediate buffers</span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;        _memory_group.<a class="code" href="classarm__compute_1_1_memory_group.xhtml#a6fc0a49304c152c20a0f6df0634fb3cd">manage</a>(&amp;_scharr_gx[i]);</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        _memory_group.<a class="code" href="classarm__compute_1_1_memory_group.xhtml#a6fc0a49304c152c20a0f6df0634fb3cd">manage</a>(&amp;_scharr_gy[i]);</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;        <span class="comment">// Init Scharr kernel</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;        _func_scharr[i].configure(old_ith_input, &amp;_scharr_gx[i], &amp;_scharr_gy[i], <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5471e46933e7a9c4709972d91fc4ea65">border_mode</a>, constant_border_value);</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;        <span class="comment">// Init Lucas-Kanade init kernel</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        _tracker_init_kernel[i].configure(old_points, new_points_estimates, _old_points_internal.get(), _new_points_internal.get(), use_initial_estimate, i, _num_levels, pyr_scale);</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;        <span class="comment">// Init Lucas-Kanade stage0 kernel</span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        _tracker_stage0_kernel[i].configure(old_ith_input, &amp;_scharr_gx[i], &amp;_scharr_gy[i],</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;                                            _old_points_internal.get(), _new_points_internal.get(), _coefficient_table.get(), _old_values.get(),</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;                                            window_dimension, i);</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;        <span class="comment">// Init Lucas-Kanade stage1 kernel</span></div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        _tracker_stage1_kernel[i].configure(new_ith_input, _new_points_internal.get(), _coefficient_table.get(), _old_values.get(),</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;                                            termination, <a class="code" href="namespacearm__compute_1_1quantization.xhtml#a552dc3787d7ea1675f3e4e8993501d58">epsilon</a>, num_iterations, window_dimension, i);</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;        <span class="comment">// Allocate intermediate buffers</span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        _scharr_gx[i].allocator()-&gt;allocate();</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;        _scharr_gy[i].allocator()-&gt;allocate();</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    }</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    <span class="comment">// Finalize Lucas-Kanade</span></div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    _tracker_finalize_kernel.<a class="code" href="classarm__compute_1_1_c_l_l_k_tracker_finalize_kernel.xhtml#a020db92b2cd6b5c0c8482402f38e08e5">configure</a>(_new_points_internal.get(), new_points);</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;}</div><div class="ttc" id="classarm__compute_1_1_tensor_shape_xhtml"><div class="ttname"><a href="classarm__compute_1_1_tensor_shape.xhtml">arm_compute::TensorShape</a></div><div class="ttdoc">Shape of a tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_shape_8h_source.xhtml#l00039">TensorShape.h:39</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_a178f0d3d87f959e00a743328d95359d2"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">arm_compute::ITensorInfo::dimension</a></div><div class="ttdeci">virtual size_t dimension(size_t index) const =0</div><div class="ttdoc">Return the size of the requested dimension.</div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_pyramid_xhtml_a7e9f724340af5b795b21a00d35eeb28e"><div class="ttname"><a href="classarm__compute_1_1_c_l_pyramid.xhtml#a7e9f724340af5b795b21a00d35eeb28e">arm_compute::CLPyramid::info</a></div><div class="ttdeci">const PyramidInfo * info() const override</div><div class="ttdoc">Interface to be implemented by the child class to return the Pyramid's metadata.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_pyramid_8cpp_source.xhtml#l00118">CLPyramid.cpp:118</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_array_xhtml_ae21b0e95ded2dcfb5e62848ea0193828"><div class="ttname"><a href="classarm__compute_1_1_i_array.xhtml#ae21b0e95ded2dcfb5e62848ea0193828">arm_compute::IArray::resize</a></div><div class="ttdeci">void resize(size_t num)</div><div class="ttdoc">Resizes the array to contain &quot;num&quot; elements.</div><div class="ttdef"><b>Definition:</b> <a href="_i_array_8h_source.xhtml#l00128">IArray.h:128</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00466">Error.h:466</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_l_k_tracker_finalize_kernel_xhtml_a020db92b2cd6b5c0c8482402f38e08e5"><div class="ttname"><a href="classarm__compute_1_1_c_l_l_k_tracker_finalize_kernel.xhtml#a020db92b2cd6b5c0c8482402f38e08e5">arm_compute::CLLKTrackerFinalizeKernel::configure</a></div><div class="ttdeci">void configure(ICLLKInternalKeypointArray *new_points_internal, ICLKeyPointArray *new_points)</div><div class="ttdoc">Initialise the kernel input and output.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_l_k_tracker_kernel_8cpp_source.xhtml#l00089">CLLKTrackerKernel.cpp:89</a></div></div>
<div class="ttc" id="classarm__compute_1_1_memory_group_xhtml_a6fc0a49304c152c20a0f6df0634fb3cd"><div class="ttname"><a href="classarm__compute_1_1_memory_group.xhtml#a6fc0a49304c152c20a0f6df0634fb3cd">arm_compute::MemoryGroup::manage</a></div><div class="ttdeci">void manage(IMemoryManageable *obj) override</div><div class="ttdoc">Sets a object to be managed by the given memory group.</div><div class="ttdef"><b>Definition:</b> <a href="_memory_group_8h_source.xhtml#l00079">MemoryGroup.h:79</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a5471e46933e7a9c4709972d91fc4ea65"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a5471e46933e7a9c4709972d91fc4ea65">arm_compute::test::validation::border_mode</a></div><div class="ttdeci">border_mode</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_convolution_8cpp_source.xhtml#l00118">Convolution.cpp:118</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_array_xhtml_aac8e28a698cd201286d75eb3f5ad3e1c"><div class="ttname"><a href="classarm__compute_1_1_i_array.xhtml#aac8e28a698cd201286d75eb3f5ad3e1c">arm_compute::IArray::num_values</a></div><div class="ttdeci">size_t num_values() const</div><div class="ttdoc">Number of values currently stored in the array.</div><div class="ttdef"><b>Definition:</b> <a href="_i_array_8h_source.xhtml#l00068">IArray.h:68</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_xhtml_a0e95dc1e53c361348314873b168ae237"><div class="ttname"><a href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">arm_compute::ITensor::info</a></div><div class="ttdeci">virtual ITensorInfo * info() const =0</div><div class="ttdoc">Interface to be implemented by the child class to return the tensor's metadata.</div></div>
<div class="ttc" id="classarm__compute_1_1_pyramid_info_xhtml_ade87abafbd6b200b22de988f32b66dea"><div class="ttname"><a href="classarm__compute_1_1_pyramid_info.xhtml#ade87abafbd6b200b22de988f32b66dea">arm_compute::PyramidInfo::scale</a></div><div class="ttdeci">float scale() const</div><div class="ttdoc">Return the scale factor of the pyramid.</div><div class="ttdef"><b>Definition:</b> <a href="_pyramid_info_8cpp_source.xhtml#l00102">PyramidInfo.cpp:102</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58a6e0b0886efb94aec797f6b830329b72c"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a6e0b0886efb94aec797f6b830329b72c">arm_compute::Format::S16</a></div><div class="ttdoc">1 channel, 1 S16 per channel</div></div>
<div class="ttc" id="classarm__compute_1_1_i_c_l_tensor_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_c_l_tensor.xhtml">arm_compute::ICLTensor</a></div><div class="ttdoc">Interface for OpenCL tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_i_c_l_tensor_8h_source.xhtml#l00042">ICLTensor.h:42</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_pyramid_xhtml_a6f6fce8ca90f3e9a62e2cb48a07047f4"><div class="ttname"><a href="classarm__compute_1_1_c_l_pyramid.xhtml#a6f6fce8ca90f3e9a62e2cb48a07047f4">arm_compute::CLPyramid::get_pyramid_level</a></div><div class="ttdeci">CLTensor * get_pyramid_level(size_t index) const override</div><div class="ttdoc">Retrieves a level of the pyramid as a ITensor pointer.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_pyramid_8cpp_source.xhtml#l00123">CLPyramid.cpp:123</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml">arm_compute::TensorInfo</a></div><div class="ttdoc">Store the tensor's metadata.</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_info_8h_source.xhtml#l00045">TensorInfo.h:45</a></div></div>
<div class="ttc" id="classarm__compute_1_1_pyramid_info_xhtml_a9ce99f5dfa1514cb108665e3810b2c4c"><div class="ttname"><a href="classarm__compute_1_1_pyramid_info.xhtml#a9ce99f5dfa1514cb108665e3810b2c4c">arm_compute::PyramidInfo::width</a></div><div class="ttdeci">size_t width() const</div><div class="ttdoc">Return the width of the 0th level tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_pyramid_info_8cpp_source.xhtml#l00082">PyramidInfo.cpp:82</a></div></div>
<div class="ttc" id="classarm__compute_1_1_pyramid_info_xhtml_aa2fea6640d2bd5de24d0e0c2433faab6"><div class="ttname"><a href="classarm__compute_1_1_pyramid_info.xhtml#aa2fea6640d2bd5de24d0e0c2433faab6">arm_compute::PyramidInfo::num_levels</a></div><div class="ttdeci">size_t num_levels() const</div><div class="ttdoc">Return the number of the pyramid levels.</div><div class="ttdef"><b>Definition:</b> <a href="_pyramid_info_8cpp_source.xhtml#l00077">PyramidInfo.cpp:77</a></div></div>
<div class="ttc" id="classarm__compute_1_1_pyramid_info_xhtml_adc662cea5b05cd9852d5a4538586d662"><div class="ttname"><a href="classarm__compute_1_1_pyramid_info.xhtml#adc662cea5b05cd9852d5a4538586d662">arm_compute::PyramidInfo::height</a></div><div class="ttdeci">size_t height() const</div><div class="ttdoc">Return the height of the 0th level tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_pyramid_info_8cpp_source.xhtml#l00087">PyramidInfo.cpp:87</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1quantization_xhtml_a552dc3787d7ea1675f3e4e8993501d58"><div class="ttname"><a href="namespacearm__compute_1_1quantization.xhtml#a552dc3787d7ea1675f3e4e8993501d58">arm_compute::quantization::epsilon</a></div><div class="ttdeci">constexpr float epsilon</div><div class="ttdef"><b>Definition:</b> <a href="_asymm_helpers_8cpp_source.xhtml#l00036">AsymmHelpers.cpp:36</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00466">ARM_COMPUTE_ERROR_ON</a>, <a class="el" href="_c_l_2_convolution_8cpp_source.xhtml#l00118">arm_compute::test::validation::border_mode</a>, <a class="el" href="_c_l_l_k_tracker_kernel_8cpp_source.xhtml#l00089">CLLKTrackerFinalizeKernel::configure()</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">ITensorInfo::dimension()</a>, <a class="el" href="_asymm_helpers_8cpp_source.xhtml#l00036">arm_compute::quantization::epsilon</a>, <a class="el" href="_c_l_pyramid_8cpp_source.xhtml#l00123">CLPyramid::get_pyramid_level()</a>, <a class="el" href="_pyramid_info_8cpp_source.xhtml#l00087">PyramidInfo::height()</a>, <a class="el" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">ITensor::info()</a>, <a class="el" href="_c_l_pyramid_8cpp_source.xhtml#l00118">CLPyramid::info()</a>, <a class="el" href="_memory_group_8h_source.xhtml#l00079">MemoryGroup::manage()</a>, <a class="el" href="_pyramid_info_8cpp_source.xhtml#l00077">PyramidInfo::num_levels()</a>, <a class="el" href="_i_array_8h_source.xhtml#l00068">IArray&lt; T &gt;::num_values()</a>, <a class="el" href="_i_array_8h_source.xhtml#l00128">IArray&lt; T &gt;::resize()</a>, <a class="el" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a6e0b0886efb94aec797f6b830329b72c">arm_compute::S16</a>, <a class="el" href="_pyramid_info_8cpp_source.xhtml#l00102">PyramidInfo::scale()</a>, and <a class="el" href="_pyramid_info_8cpp_source.xhtml#l00082">PyramidInfo::width()</a>.</p>

</div>
</div>
<a id="a68eed0e07674cc6e041d5dc0fecd8c27"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a68eed0e07674cc6e041d5dc0fecd8c27">&#9670;&nbsp;</a></span>operator=() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_l_optical_flow.xhtml">CLOpticalFlow</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_c_l_optical_flow.xhtml">CLOpticalFlow</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prevent instances of this class from being copied (As this class contains pointers) </p>

</div>
</div>
<a id="a24252fc100901855c82e8703834f9634"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a24252fc100901855c82e8703834f9634">&#9670;&nbsp;</a></span>operator=() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_l_optical_flow.xhtml">CLOpticalFlow</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_c_l_optical_flow.xhtml">CLOpticalFlow</a> &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Allow instances of this class to be moved. </p>

</div>
</div>
<a id="ad1717410afd0be936c6213a63c8005fb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad1717410afd0be936c6213a63c8005fb">&#9670;&nbsp;</a></span>run()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void run </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Run the kernels contained in the function. </p>
<p>For NEON kernels:</p><ul>
<li>Multi-threading is used for the kernels which are parallelisable.</li>
<li>By default std::thread::hardware_concurrency() threads are used.</li>
</ul>
<dl class="section note"><dt>Note</dt><dd><a class="el" href="classarm__compute_1_1_c_p_p_scheduler.xhtml#ae64eebaa07f4d2da6cc2ba538c3cb095">CPPScheduler::set_num_threads()</a> can be used to manually set the number of threads</dd></dl>
<p>For OpenCL kernels:</p><ul>
<li>All the kernels are enqueued on the queue associated with <a class="el" href="classarm__compute_1_1_c_l_scheduler.xhtml" title="Provides global access to a CL context and command queue.">CLScheduler</a>.</li>
<li>The queue is then flushed.</li>
</ul>
<dl class="section note"><dt>Note</dt><dd>The function will not block until the kernels are executed. It is the user's responsibility to wait. </dd>
<dd>
Will call <a class="el" href="classarm__compute_1_1_i_function.xhtml#a820f7291c24155a2980512fae45aac26" title="Prepare the function for executing.">prepare()</a> on first run if hasn't been done </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_function.xhtml#a18954417d3124a8095783ea13dc6d00b">IFunction</a>.</p>

<p class="definition">Definition at line <a class="el" href="_c_l_optical_flow_8cpp_source.xhtml#l00148">148</a> of file <a class="el" href="_c_l_optical_flow_8cpp_source.xhtml">CLOpticalFlow.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;{</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    <a class="code" href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a>(_num_levels == 0, <span class="stringliteral">&quot;Unconfigured function&quot;</span>);</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    <a class="code" href="classarm__compute_1_1_memory_group_resource_scope.xhtml">MemoryGroupResourceScope</a> scope_mg(_memory_group);</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="namespace_gemm_tuner.xhtml#afde8e18a788ccc92fc61cab298bca7e3">level</a> = _num_levels; <a class="code" href="namespace_gemm_tuner.xhtml#afde8e18a788ccc92fc61cab298bca7e3">level</a> &gt; 0; --<a class="code" href="namespace_gemm_tuner.xhtml#afde8e18a788ccc92fc61cab298bca7e3">level</a>)</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    {</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;        <span class="comment">// Run Scharr kernel</span></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;        _func_scharr[<a class="code" href="namespace_gemm_tuner.xhtml#afde8e18a788ccc92fc61cab298bca7e3">level</a> - 1].run();</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;        <span class="comment">// Run Lucas-Kanade init kernel</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;        <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#ae1a643e517f50bf0392fb6516dd7cf67">enqueue</a>(_tracker_init_kernel[<a class="code" href="namespace_gemm_tuner.xhtml#afde8e18a788ccc92fc61cab298bca7e3">level</a> - 1]);</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;        <span class="comment">// Run Lucas-Kanade stage0 kernel</span></div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;        <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#ae1a643e517f50bf0392fb6516dd7cf67">enqueue</a>(_tracker_stage0_kernel[<a class="code" href="namespace_gemm_tuner.xhtml#afde8e18a788ccc92fc61cab298bca7e3">level</a> - 1]);</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;        <span class="comment">// Run Lucas-Kanade stage1 kernel</span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;        <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#ae1a643e517f50bf0392fb6516dd7cf67">enqueue</a>(_tracker_stage1_kernel[<a class="code" href="namespace_gemm_tuner.xhtml#afde8e18a788ccc92fc61cab298bca7e3">level</a> - 1]);</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    }</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#ae1a643e517f50bf0392fb6516dd7cf67">enqueue</a>(_tracker_finalize_kernel, <span class="keyword">true</span>);</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;}</div><div class="ttc" id="classarm__compute_1_1_c_l_scheduler_xhtml_a9b58d0eb9a2af8e6d7908695e1557d6c"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">arm_compute::CLScheduler::get</a></div><div class="ttdeci">static CLScheduler &amp; get()</div><div class="ttdoc">Access the scheduler singleton.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00099">CLScheduler.cpp:99</a></div></div>
<div class="ttc" id="namespace_gemm_tuner_xhtml_afde8e18a788ccc92fc61cab298bca7e3"><div class="ttname"><a href="namespace_gemm_tuner.xhtml#afde8e18a788ccc92fc61cab298bca7e3">GemmTuner.level</a></div><div class="ttdeci">level</div><div class="ttdef"><b>Definition:</b> <a href="_gemm_tuner_8py_source.xhtml#l00557">GemmTuner.py:557</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a0b0eb3235749a2909dc5a101afe59a1b"><div class="ttname"><a href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_MSG(cond, msg)</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00456">Error.h:456</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_scheduler_xhtml_ae1a643e517f50bf0392fb6516dd7cf67"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#ae1a643e517f50bf0392fb6516dd7cf67">arm_compute::CLScheduler::enqueue</a></div><div class="ttdeci">void enqueue(ICLKernel &amp;kernel, bool flush=true)</div><div class="ttdoc">Schedule the execution of the passed kernel if possible.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00154">CLScheduler.cpp:154</a></div></div>
<div class="ttc" id="classarm__compute_1_1_memory_group_resource_scope_xhtml"><div class="ttname"><a href="classarm__compute_1_1_memory_group_resource_scope.xhtml">arm_compute::MemoryGroupResourceScope</a></div><div class="ttdoc">Memory group resources scope handling class.</div><div class="ttdef"><b>Definition:</b> <a href="_i_memory_group_8h_source.xhtml#l00082">IMemoryGroup.h:82</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00456">ARM_COMPUTE_ERROR_ON_MSG</a>, <a class="el" href="_c_l_scheduler_8cpp_source.xhtml#l00154">CLScheduler::enqueue()</a>, <a class="el" href="_c_l_scheduler_8cpp_source.xhtml#l00099">CLScheduler::get()</a>, and <a class="el" href="_gemm_tuner_8py_source.xhtml#l00557">GemmTuner::level</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>arm_compute/runtime/CL/functions/<a class="el" href="_c_l_optical_flow_8h_source.xhtml">CLOpticalFlow.h</a></li>
<li>src/runtime/CL/functions/<a class="el" href="_c_l_optical_flow_8cpp_source.xhtml">CLOpticalFlow.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1_c_l_optical_flow.xhtml">CLOpticalFlow</a></li>
    <li class="footer">Generated on Thu Mar 5 2020 16:07:12 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
