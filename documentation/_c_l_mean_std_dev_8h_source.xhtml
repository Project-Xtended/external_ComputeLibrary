<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: arm_compute/runtime/CL/functions/CLMeanStdDev.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_c_l_mean_std_dev_8h_source.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">CLMeanStdDev.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_c_l_mean_std_dev_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2016-2019 ARM Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#ifndef ARM_COMPUTE_CLMEANSTDDEV_H</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#define ARM_COMPUTE_CLMEANSTDDEV_H</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_open_c_l_8h.xhtml">arm_compute/core/CL/OpenCL.h</a>&quot;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_c_l_fill_border_kernel_8h.xhtml">arm_compute/core/CL/kernels/CLFillBorderKernel.h</a>&quot;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_c_l_mean_std_dev_kernel_8h.xhtml">arm_compute/core/CL/kernels/CLMeanStdDevKernel.h</a>&quot;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_c_l_reduction_operation_8h.xhtml">arm_compute/runtime/CL/functions/CLReductionOperation.h</a>&quot;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_i_function_8h.xhtml">arm_compute/runtime/IFunction.h</a>&quot;</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_i_memory_manager_8h.xhtml">arm_compute/runtime/IMemoryManager.h</a>&quot;</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_memory_group_8h.xhtml">arm_compute/runtime/MemoryGroup.h</a>&quot;</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;{<span class="comment"></span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="comment">/** Basic function to execute mean and standard deviation by calling @ref CLMeanStdDevKernel */</span></div><div class="line"><a name="l00038"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_mean_std_dev.xhtml">   38</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1_c_l_mean_std_dev.xhtml">CLMeanStdDev</a> : <span class="keyword">public</span> <a class="code" href="classarm__compute_1_1_i_function.xhtml">IFunction</a></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;{</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keyword">public</span>:<span class="comment"></span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="comment">    /** Default Constructor. */</span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_mean_std_dev.xhtml#af155271d025ec7128806cb06f2e784a3">CLMeanStdDev</a>(std::shared_ptr&lt;IMemoryManager&gt; memory_manager = <span class="keyword">nullptr</span>);<span class="comment"></span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="comment">    /** Prevent instances of this class from being copied (As this class contains pointers) */</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_mean_std_dev.xhtml#af155271d025ec7128806cb06f2e784a3">CLMeanStdDev</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_c_l_mean_std_dev.xhtml">CLMeanStdDev</a> &amp;) = <span class="keyword">delete</span>;<span class="comment"></span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="comment">    /** Prevent instances of this class from being copied (As this class contains pointers) */</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_mean_std_dev.xhtml">CLMeanStdDev</a> &amp;<a class="code" href="classarm__compute_1_1_c_l_mean_std_dev.xhtml#a3bef7233d145e0bf1c7f8d5bc6de10c8">operator=</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_c_l_mean_std_dev.xhtml">CLMeanStdDev</a> &amp;) = <span class="keyword">delete</span>;<span class="comment"></span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="comment">    /** Allow instances of this class to be moved */</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_mean_std_dev.xhtml#af155271d025ec7128806cb06f2e784a3">CLMeanStdDev</a>(<a class="code" href="classarm__compute_1_1_c_l_mean_std_dev.xhtml">CLMeanStdDev</a> &amp;&amp;) = <span class="keywordflow">default</span>;<span class="comment"></span></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="comment">    /** Allow instances of this class to be moved */</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_mean_std_dev.xhtml">CLMeanStdDev</a> &amp;<a class="code" href="classarm__compute_1_1_c_l_mean_std_dev.xhtml#a3bef7233d145e0bf1c7f8d5bc6de10c8">operator=</a>(<a class="code" href="classarm__compute_1_1_c_l_mean_std_dev.xhtml">CLMeanStdDev</a> &amp;&amp;) = <span class="keywordflow">default</span>;<span class="comment"></span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="comment">    /** Default destructor */</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_mean_std_dev.xhtml#af47c26d33b75335dd72b535607514a45">~CLMeanStdDev</a>() = <span class="keywordflow">default</span>;<span class="comment"></span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="comment">    /** Initialise the kernel&#39;s inputs and outputs.</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="comment">     * @param[in, out] input  Input image. Data types supported: U8/F16/F32. (Written to only for border filling)</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="comment">     * @param[out]     mean   Output average pixel value.</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="comment">     * @param[out]     stddev (Optional) Output standard deviation of pixel values.</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_c_l_mean_std_dev.xhtml#aa7a32280401c276aed328658046abc4c">configure</a>(<a class="code" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLImage</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, <span class="keywordtype">float</span> *mean, <span class="keywordtype">float</span> *stddev = <span class="keyword">nullptr</span>);<span class="comment"></span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="comment">    /** Static function to check if given info will lead to a valid configuration of @ref CLMeanStdDev</span></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="comment">     * @param[in] input  Input image. Data types supported: U8/F16/F32.</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="comment">     * @param[in] mean   Output average pixel value.</span></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="comment">     * @param[in] stddev (Optional) Output standard deviation of pixel values.</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="comment">     * @return a status</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <span class="keyword">static</span> <a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> <a class="code" href="classarm__compute_1_1_c_l_mean_std_dev.xhtml#aa0c625593b8ab7d8bd1ba442519e5b36">validate</a>(<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, <span class="keywordtype">float</span> *mean, <span class="keywordtype">float</span> *stddev = <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <span class="comment">// Inherited methods overridden:</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_c_l_mean_std_dev.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>() <span class="keyword">override</span>;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <span class="keywordtype">void</span> run_float();</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <span class="keywordtype">void</span> run_int();</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <a class="code" href="classarm__compute_1_1_memory_group.xhtml">MemoryGroup</a>          _memory_group;               <span class="comment">/**&lt; Function&#39;s memory group */</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</a>             _data_type;                  <span class="comment">/**&lt; Input data type. */</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>         _num_pixels;                 <span class="comment">/**&lt; Number of image&#39;s pixels. */</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <span class="keywordtype">bool</span>                 _run_stddev;                 <span class="comment">/**&lt; Flag for knowing if we should run stddev reduction function. */</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_reduction_operation.xhtml">CLReductionOperation</a> _reduction_operation_mean;   <span class="comment">/**&lt; Reduction operation function for computing mean value. */</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_reduction_operation.xhtml">CLReductionOperation</a> _reduction_operation_stddev; <span class="comment">/**&lt; Reduction operation function for computing standard deviation. */</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a>             _reduction_output_mean;      <span class="comment">/**&lt; Reduction operation output tensor for mean value. */</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a>             _reduction_output_stddev;    <span class="comment">/**&lt; Reduction operation output tensor for standard deviation value. */</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <span class="keywordtype">float</span>               *_mean;                       <span class="comment">/**&lt; Pointer that holds the mean value. */</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <span class="keywordtype">float</span>               *_stddev;                     <span class="comment">/**&lt; Pointer that holds the standard deviation value. */</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_mean_std_dev_kernel.xhtml">CLMeanStdDevKernel</a>   _mean_stddev_kernel;         <span class="comment">/**&lt; Kernel that standard deviation calculation. */</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_fill_border_kernel.xhtml">CLFillBorderKernel</a>   _fill_border_kernel;         <span class="comment">/**&lt; Kernel that fills the border with zeroes. */</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    cl::Buffer           _global_sum;                 <span class="comment">/**&lt; Variable that holds the global sum among calls in order to ease reduction */</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    cl::Buffer           _global_sum_squared;         <span class="comment">/**&lt; Variable that holds the global sum of squared values among calls in order to ease reduction */</span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;};</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;}</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/*ARM_COMPUTE_CLMEANSTDDEV_H */</span><span class="preprocessor"></span></div><div class="ttc" id="classarm__compute_1_1_c_l_mean_std_dev_xhtml_a3bef7233d145e0bf1c7f8d5bc6de10c8"><div class="ttname"><a href="classarm__compute_1_1_c_l_mean_std_dev.xhtml#a3bef7233d145e0bf1c7f8d5bc6de10c8">arm_compute::CLMeanStdDev::operator=</a></div><div class="ttdeci">CLMeanStdDev &amp; operator=(const CLMeanStdDev &amp;)=delete</div><div class="ttdoc">Prevent instances of this class from being copied (As this class contains pointers)</div></div>
<div class="ttc" id="classarm__compute_1_1_memory_group_xhtml"><div class="ttname"><a href="classarm__compute_1_1_memory_group.xhtml">arm_compute::MemoryGroup</a></div><div class="ttdoc">Memory group.</div><div class="ttdef"><b>Definition:</b> <a href="_memory_group_8h_source.xhtml#l00043">MemoryGroup.h:43</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_function_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_function.xhtml">arm_compute::IFunction</a></div><div class="ttdoc">Base class for all functions.</div><div class="ttdef"><b>Definition:</b> <a href="_i_function_8h_source.xhtml#l00030">IFunction.h:30</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_mean_std_dev_xhtml_aa0c625593b8ab7d8bd1ba442519e5b36"><div class="ttname"><a href="classarm__compute_1_1_c_l_mean_std_dev.xhtml#aa0c625593b8ab7d8bd1ba442519e5b36">arm_compute::CLMeanStdDev::validate</a></div><div class="ttdeci">static Status validate(ITensorInfo *input, float *mean, float *stddev=nullptr)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration of CLMeanStdDev.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_mean_std_dev_8cpp_source.xhtml#l00049">CLMeanStdDev.cpp:49</a></div></div>
<div class="ttc" id="_i_memory_manager_8h_xhtml"><div class="ttname"><a href="_i_memory_manager_8h.xhtml">IMemoryManager.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml">arm_compute::ITensorInfo</a></div><div class="ttdoc">Store the tensor's metadata.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_info_8h_source.xhtml#l00040">ITensorInfo.h:40</a></div></div>
<div class="ttc" id="classarm__compute_1_1_status_xhtml"><div class="ttname"><a href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a></div><div class="ttdoc">Status class.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00052">Error.h:52</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2020 ARM Limited.</div><div class="ttdef"><b>Definition:</b> <a href="00__introduction_8dox_source.xhtml#l00024">00_introduction.dox:24</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a8fcf2ddd9a1d58b1b280f5c0aed71845"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">arm_compute::test::validation::input</a></div><div class="ttdeci">auto input</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00487">LSTMLayerQuantized.cpp:487</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_mean_std_dev_xhtml_af47c26d33b75335dd72b535607514a45"><div class="ttname"><a href="classarm__compute_1_1_c_l_mean_std_dev.xhtml#af47c26d33b75335dd72b535607514a45">arm_compute::CLMeanStdDev::~CLMeanStdDev</a></div><div class="ttdeci">~CLMeanStdDev()=default</div><div class="ttdoc">Default destructor.</div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_mean_std_dev_xhtml_af155271d025ec7128806cb06f2e784a3"><div class="ttname"><a href="classarm__compute_1_1_c_l_mean_std_dev.xhtml#af155271d025ec7128806cb06f2e784a3">arm_compute::CLMeanStdDev::CLMeanStdDev</a></div><div class="ttdeci">CLMeanStdDev(std::shared_ptr&lt; IMemoryManager &gt; memory_manager=nullptr)</div><div class="ttdoc">Default Constructor.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_mean_std_dev_8cpp_source.xhtml#l00031">CLMeanStdDev.cpp:31</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_mean_std_dev_kernel_xhtml"><div class="ttname"><a href="classarm__compute_1_1_c_l_mean_std_dev_kernel.xhtml">arm_compute::CLMeanStdDevKernel</a></div><div class="ttdoc">Interface for the kernel to calculate mean and standard deviation of input image pixels.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_mean_std_dev_kernel_8h_source.xhtml#l00040">CLMeanStdDevKernel.h:40</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_mean_std_dev_xhtml_ad1717410afd0be936c6213a63c8005fb"><div class="ttname"><a href="classarm__compute_1_1_c_l_mean_std_dev.xhtml#ad1717410afd0be936c6213a63c8005fb">arm_compute::CLMeanStdDev::run</a></div><div class="ttdeci">void run() override</div><div class="ttdoc">Run the kernels contained in the function.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_mean_std_dev_8cpp_source.xhtml#l00151">CLMeanStdDev.cpp:151</a></div></div>
<div class="ttc" id="_c_l_reduction_operation_8h_xhtml"><div class="ttname"><a href="_c_l_reduction_operation_8h.xhtml">CLReductionOperation.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_mean_std_dev_xhtml"><div class="ttname"><a href="classarm__compute_1_1_c_l_mean_std_dev.xhtml">arm_compute::CLMeanStdDev</a></div><div class="ttdoc">Basic function to execute mean and standard deviation by calling CLMeanStdDevKernel.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_mean_std_dev_8h_source.xhtml#l00038">CLMeanStdDev.h:38</a></div></div>
<div class="ttc" id="_memory_group_8h_xhtml"><div class="ttname"><a href="_memory_group_8h.xhtml">MemoryGroup.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_mean_std_dev_xhtml_aa7a32280401c276aed328658046abc4c"><div class="ttname"><a href="classarm__compute_1_1_c_l_mean_std_dev.xhtml#aa7a32280401c276aed328658046abc4c">arm_compute::CLMeanStdDev::configure</a></div><div class="ttdeci">void configure(ICLImage *input, float *mean, float *stddev=nullptr)</div><div class="ttdoc">Initialise the kernel's inputs and outputs.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_mean_std_dev_8cpp_source.xhtml#l00067">CLMeanStdDev.cpp:67</a></div></div>
<div class="ttc" id="_c_l_fill_border_kernel_8h_xhtml"><div class="ttname"><a href="_c_l_fill_border_kernel_8h.xhtml">CLFillBorderKernel.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_fill_border_kernel_xhtml"><div class="ttname"><a href="classarm__compute_1_1_c_l_fill_border_kernel.xhtml">arm_compute::CLFillBorderKernel</a></div><div class="ttdoc">Interface for filling the border of a kernel.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_fill_border_kernel_8h_source.xhtml#l00036">CLFillBorderKernel.h:36</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_c_l_tensor_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_c_l_tensor.xhtml">arm_compute::ICLTensor</a></div><div class="ttdoc">Interface for OpenCL tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_i_c_l_tensor_8h_source.xhtml#l00042">ICLTensor.h:42</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_reduction_operation_xhtml"><div class="ttname"><a href="classarm__compute_1_1_c_l_reduction_operation.xhtml">arm_compute::CLReductionOperation</a></div><div class="ttdoc">Perform reduction operation.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_reduction_operation_8h_source.xhtml#l00046">CLReductionOperation.h:46</a></div></div>
<div class="ttc" id="_i_function_8h_xhtml"><div class="ttname"><a href="_i_function_8h.xhtml">IFunction.h</a></div></div>
<div class="ttc" id="_open_c_l_8h_xhtml"><div class="ttname"><a href="_open_c_l_8h.xhtml">OpenCL.h</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">arm_compute::DataType</a></div><div class="ttdeci">DataType</div><div class="ttdoc">Available data types.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00075">Types.h:75</a></div></div>
<div class="ttc" id="_c_l_mean_std_dev_kernel_8h_xhtml"><div class="ttname"><a href="_c_l_mean_std_dev_kernel_8h.xhtml">CLMeanStdDevKernel.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_tensor_xhtml"><div class="ttname"><a href="classarm__compute_1_1_c_l_tensor.xhtml">arm_compute::CLTensor</a></div><div class="ttdoc">Basic implementation of the OpenCL tensor interface.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_tensor_8h_source.xhtml#l00041">CLTensor.h:41</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_214608ef36d61442cb2b0c1c4e9a7def.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="dir_8bc26130589aa16388b5a02f17abf2c2.xhtml">runtime</a></li><li class="navelem"><a class="el" href="dir_b986aa98f9b6490bb4fc7918500346fb.xhtml">CL</a></li><li class="navelem"><a class="el" href="dir_251c63bc3f70b60acf43edd6d870a3ef.xhtml">functions</a></li><li class="navelem"><a class="el" href="_c_l_mean_std_dev_8h.xhtml">CLMeanStdDev.h</a></li>
    <li class="footer">Generated on Fri Feb 21 2020 11:10:10 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
