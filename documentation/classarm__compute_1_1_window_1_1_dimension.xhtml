<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: Window::Dimension Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.02.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classarm__compute_1_1_window_1_1_dimension.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">Window::Dimension Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Describe one of the image's dimensions with a start, end and step.  
 <a href="classarm__compute_1_1_window_1_1_dimension.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_window_8h_source.xhtml">Window.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a2c532d398a5661ff04367252701fa3d4"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_window_1_1_dimension.xhtml#a2c532d398a5661ff04367252701fa3d4">Dimension</a> (int <a class="el" href="classarm__compute_1_1_window_1_1_dimension.xhtml#ab24e31d1a4830bf79564ee902ec6c060">start</a>=0, int <a class="el" href="classarm__compute_1_1_window_1_1_dimension.xhtml#a0f590bfcf19110f44efc502e7b5c1d9e">end</a>=1, int <a class="el" href="classarm__compute_1_1_window_1_1_dimension.xhtml#a918580dc9188825d67dbb203a43d02fe">step</a>=1)</td></tr>
<tr class="memdesc:a2c532d398a5661ff04367252701fa3d4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor, by default creates a dimension of 1.  <a href="#a2c532d398a5661ff04367252701fa3d4">More...</a><br /></td></tr>
<tr class="separator:a2c532d398a5661ff04367252701fa3d4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7768b7b80a8b640dae911af38e3315a2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_window_1_1_dimension.xhtml">Dimension</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_window_1_1_dimension.xhtml#a7768b7b80a8b640dae911af38e3315a2">operator=</a> (const <a class="el" href="classarm__compute_1_1_window_1_1_dimension.xhtml">Dimension</a> &amp;d)=default</td></tr>
<tr class="memdesc:a7768b7b80a8b640dae911af38e3315a2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default assignment operator to allow dimensions to be copied.  <a href="#a7768b7b80a8b640dae911af38e3315a2">More...</a><br /></td></tr>
<tr class="separator:a7768b7b80a8b640dae911af38e3315a2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab24e31d1a4830bf79564ee902ec6c060"><td class="memItemLeft" align="right" valign="top">constexpr int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_window_1_1_dimension.xhtml#ab24e31d1a4830bf79564ee902ec6c060">start</a> () const</td></tr>
<tr class="memdesc:ab24e31d1a4830bf79564ee902ec6c060"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the start of the dimension.  <a href="#ab24e31d1a4830bf79564ee902ec6c060">More...</a><br /></td></tr>
<tr class="separator:ab24e31d1a4830bf79564ee902ec6c060"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0f590bfcf19110f44efc502e7b5c1d9e"><td class="memItemLeft" align="right" valign="top">constexpr int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_window_1_1_dimension.xhtml#a0f590bfcf19110f44efc502e7b5c1d9e">end</a> () const</td></tr>
<tr class="memdesc:a0f590bfcf19110f44efc502e7b5c1d9e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the end of the dimension.  <a href="#a0f590bfcf19110f44efc502e7b5c1d9e">More...</a><br /></td></tr>
<tr class="separator:a0f590bfcf19110f44efc502e7b5c1d9e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a918580dc9188825d67dbb203a43d02fe"><td class="memItemLeft" align="right" valign="top">constexpr int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_window_1_1_dimension.xhtml#a918580dc9188825d67dbb203a43d02fe">step</a> () const</td></tr>
<tr class="memdesc:a918580dc9188825d67dbb203a43d02fe"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the step of the dimension.  <a href="#a918580dc9188825d67dbb203a43d02fe">More...</a><br /></td></tr>
<tr class="separator:a918580dc9188825d67dbb203a43d02fe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa84a724344a983832279fe13f047b52d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_window_1_1_dimension.xhtml#aa84a724344a983832279fe13f047b52d">set_step</a> (int <a class="el" href="classarm__compute_1_1_window_1_1_dimension.xhtml#a918580dc9188825d67dbb203a43d02fe">step</a>)</td></tr>
<tr class="memdesc:aa84a724344a983832279fe13f047b52d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the dimension's step.  <a href="#aa84a724344a983832279fe13f047b52d">More...</a><br /></td></tr>
<tr class="separator:aa84a724344a983832279fe13f047b52d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad04b3b858cfdad2a7c64a6a014c3b773"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_window_1_1_dimension.xhtml#ad04b3b858cfdad2a7c64a6a014c3b773">set_end</a> (int <a class="el" href="classarm__compute_1_1_window_1_1_dimension.xhtml#a0f590bfcf19110f44efc502e7b5c1d9e">end</a>)</td></tr>
<tr class="memdesc:ad04b3b858cfdad2a7c64a6a014c3b773"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the dimension's end.  <a href="#ad04b3b858cfdad2a7c64a6a014c3b773">More...</a><br /></td></tr>
<tr class="separator:ad04b3b858cfdad2a7c64a6a014c3b773"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Describe one of the image's dimensions with a start, end and step. </p>
<p>Iteration through the elements of the dimension is done like this: for(int v = <a class="el" href="classarm__compute_1_1_window_1_1_dimension.xhtml#ab24e31d1a4830bf79564ee902ec6c060" title="Return the start of the dimension.">start()</a>; v &lt; <a class="el" href="classarm__compute_1_1_window_1_1_dimension.xhtml#a0f590bfcf19110f44efc502e7b5c1d9e" title="Return the end of the dimension.">end()</a>; v += <a class="el" href="classarm__compute_1_1_window_1_1_dimension.xhtml#a918580dc9188825d67dbb203a43d02fe" title="Return the step of the dimension.">step()</a>) { ... } </p>

<p class="definition">Definition at line <a class="el" href="_window_8h_source.xhtml#l00075">75</a> of file <a class="el" href="_window_8h_source.xhtml">Window.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a2c532d398a5661ff04367252701fa3d4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2c532d398a5661ff04367252701fa3d4">&#9670;&nbsp;</a></span>Dimension()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="classarm__compute_1_1_window_1_1_dimension.xhtml">Dimension</a> </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>start</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>end</em> = <code>1</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>step</em> = <code>1</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Constructor, by default creates a dimension of 1. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">start</td><td>Start of the dimension </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">end</td><td>End of the dimension </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">step</td><td>Step between two elements of the dimension when iterating. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_window_8h_source.xhtml#l00085">85</a> of file <a class="el" href="_window_8h_source.xhtml">Window.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;            : _start(<a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#ab24e31d1a4830bf79564ee902ec6c060">start</a>), _end(<a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#a0f590bfcf19110f44efc502e7b5c1d9e">end</a>), _step(<a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#a918580dc9188825d67dbb203a43d02fe">step</a>)</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;        {</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;        }</div><div class="ttc" id="classarm__compute_1_1_window_1_1_dimension_xhtml_a918580dc9188825d67dbb203a43d02fe"><div class="ttname"><a href="classarm__compute_1_1_window_1_1_dimension.xhtml#a918580dc9188825d67dbb203a43d02fe">arm_compute::Window::Dimension::step</a></div><div class="ttdeci">constexpr int step() const</div><div class="ttdoc">Return the step of the dimension.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00102">Window.h:102</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_1_1_dimension_xhtml_a0f590bfcf19110f44efc502e7b5c1d9e"><div class="ttname"><a href="classarm__compute_1_1_window_1_1_dimension.xhtml#a0f590bfcf19110f44efc502e7b5c1d9e">arm_compute::Window::Dimension::end</a></div><div class="ttdeci">constexpr int end() const</div><div class="ttdoc">Return the end of the dimension.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00097">Window.h:97</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_1_1_dimension_xhtml_ab24e31d1a4830bf79564ee902ec6c060"><div class="ttname"><a href="classarm__compute_1_1_window_1_1_dimension.xhtml#ab24e31d1a4830bf79564ee902ec6c060">arm_compute::Window::Dimension::start</a></div><div class="ttdeci">constexpr int start() const</div><div class="ttdoc">Return the start of the dimension.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00092">Window.h:92</a></div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a0f590bfcf19110f44efc502e7b5c1d9e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0f590bfcf19110f44efc502e7b5c1d9e">&#9670;&nbsp;</a></span>end()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr int end </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Return the end of the dimension. </p>

<p class="definition">Definition at line <a class="el" href="_window_8h_source.xhtml#l00097">97</a> of file <a class="el" href="_window_8h_source.xhtml">Window.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        {</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;            <span class="keywordflow">return</span> _end;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        }</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_window_8inl_source.xhtml#l00140">Window::adjust()</a>, <a class="el" href="_n_e_color_convert_helper_8inl_source.xhtml#l00635">arm_compute::colorconvert_iyuv_to_nv12()</a>, <a class="el" href="_n_e_color_convert_helper_8inl_source.xhtml#l00517">arm_compute::colorconvert_iyuv_to_rgb()</a>, <a class="el" href="_n_e_color_convert_helper_8inl_source.xhtml#l00850">arm_compute::colorconvert_iyuv_to_yuv4()</a>, <a class="el" href="_n_e_color_convert_helper_8inl_source.xhtml#l00683">arm_compute::colorconvert_nv12_to_iyuv()</a>, <a class="el" href="_n_e_color_convert_helper_8inl_source.xhtml#l00455">arm_compute::colorconvert_nv12_to_rgb()</a>, <a class="el" href="_n_e_color_convert_helper_8inl_source.xhtml#l00792">arm_compute::colorconvert_nv12_to_yuv4()</a>, <a class="el" href="_n_e_color_convert_helper_8inl_source.xhtml#l00952">arm_compute::colorconvert_rgb_to_iyuv()</a>, <a class="el" href="_n_e_color_convert_helper_8inl_source.xhtml#l00909">arm_compute::colorconvert_rgb_to_nv12()</a>, <a class="el" href="_n_e_color_convert_helper_8inl_source.xhtml#l00732">arm_compute::colorconvert_yuyv_to_iyuv()</a>, <a class="el" href="_n_e_color_convert_helper_8inl_source.xhtml#l00580">arm_compute::colorconvert_yuyv_to_nv12()</a>, <a class="el" href="_access_window_transpose_8cpp_source.xhtml#l00032">AccessWindowTranspose::compute_valid_region()</a>, <a class="el" href="_i_access_window_8cpp_source.xhtml#l00037">AccessWindowRectangle::compute_valid_region()</a>, <a class="el" href="_c_l_element_wise_unary_layer_kernel_8cpp_source.xhtml#l00052">CLElementWiseUnaryLayerKernel::configure()</a>, <a class="el" href="_c_l_dequantization_layer_kernel_8cpp_source.xhtml#l00077">CLDequantizationLayerKernel::configure()</a>, <a class="el" href="_c_l_copy_kernel_8cpp_source.xhtml#l00157">CLCopyKernel::configure()</a>, <a class="el" href="_c_l_crop_kernel_8cpp_source.xhtml#l00049">CLCropKernel::configure()</a>, <a class="el" href="_g_c_g_e_m_m_transpose1x_w_kernel_8cpp_source.xhtml#l00041">GCGEMMTranspose1xWKernel::configure()</a>, <a class="el" href="_c_l_strided_slice_kernel_8cpp_source.xhtml#l00100">CLStridedSliceKernel::configure()</a>, <a class="el" href="_i_g_c_kernel_8cpp_source.xhtml#l00041">arm_compute::enqueue()</a>, <a class="el" href="_validate_8cpp_source.xhtml#l00166">arm_compute::error_on_unconfigured_kernel()</a>, <a class="el" href="_i_c_l_kernel_8cpp_source.xhtml#l00141">ICLKernel::gws_from_window()</a>, <a class="el" href="_window_iterator_8h_source.xhtml#l00169">WindowIterator&lt; L &gt;::iterate_3D()</a>, <a class="el" href="utils_2_type_printer_8h_source.xhtml#l01099">arm_compute::operator&lt;&lt;()</a>, <a class="el" href="_c_l_histogram_kernel_8cpp_source.xhtml#l00122">CLHistogramKernel::run()</a>, <a class="el" href="_n_e_memset_kernel_8cpp_source.xhtml#l00051">NEMemsetKernel::run()</a>, <a class="el" href="_n_e_g_e_m_m_matrix_accumulate_biases_kernel_8cpp_source.xhtml#l00108">NEGEMMMatrixAccumulateBiasesKernel::run()</a>, <a class="el" href="_n_e_convert_quantized_signedness_kernel_8cpp_source.xhtml#l00095">NEConvertQuantizedSignednessKernel::run()</a>, <a class="el" href="_c_l_channel_extract_kernel_8cpp_source.xhtml#l00168">CLChannelExtractKernel::run()</a>, <a class="el" href="_n_e_copy_kernel_8cpp_source.xhtml#l00118">NECopyKernel::run()</a>, <a class="el" href="_g_c_pooling_layer_kernel_8cpp_source.xhtml#l00331">GCPoolingLayerKernel::run()</a>, <a class="el" href="_c_l_pooling_layer_kernel_8cpp_source.xhtml#l00341">CLPoolingLayerKernel::run()</a>, <a class="el" href="_n_e_r_o_i_pooling_layer_kernel_8cpp_source.xhtml#l00097">NEROIPoolingLayerKernel::run()</a>, <a class="el" href="_c_l_channel_combine_kernel_8cpp_source.xhtml#l00239">CLChannelCombineKernel::run()</a>, <a class="el" href="_n_e_pooling_layer_kernel_8cpp_source.xhtml#l02043">NEPoolingLayerKernel::run()</a>, <a class="el" href="_c_l_reduction_operation_kernel_8cpp_source.xhtml#l00255">CLReductionOperationKernel::run()</a>, <a class="el" href="_c_l_crop_kernel_8cpp_source.xhtml#l00115">CLCropKernel::run()</a>, <a class="el" href="_n_e_min_max_layer_kernel_8cpp_source.xhtml#l00117">NEMinMaxLayerKernel::run()</a>, <a class="el" href="_c_l_color_convert_kernel_8cpp_source.xhtml#l00432">CLColorConvertKernel::run()</a>, <a class="el" href="_c_l_histogram_kernel_8cpp_source.xhtml#l00222">CLHistogramBorderKernel::run()</a>, <a class="el" href="_n_e_winograd_convolution_layer_kernel_8cpp_source.xhtml#l00226">NEWinogradLayerTransformWeightsKernel&lt; T, OutputTileRows, OutputTileCols, KernelRows, KernelCols &gt;::run()</a>, <a class="el" href="_n_e_reverse_kernel_8cpp_source.xhtml#l00099">arm_compute::run_reverse()</a>, <a class="el" href="_window_8inl_source.xhtml#l00155">Window::scale()</a>, <a class="el" href="_window_8h_source.xhtml#l00118">Window::Dimension::set_end()</a>, <a class="el" href="_window_8inl_source.xhtml#l00133">Window::shift()</a>, <a class="el" href="_access_window_transpose_8cpp_source.xhtml#l00189">AccessWindowTranspose::update_padding_if_needed()</a>, <a class="el" href="_access_window_transpose_8cpp_source.xhtml#l00089">AccessWindowTranspose::update_window_if_needed()</a>, and <a class="el" href="_i_access_window_8cpp_source.xhtml#l00097">AccessWindowRectangle::update_window_if_needed()</a>.</p>

</div>
</div>
<a id="a7768b7b80a8b640dae911af38e3315a2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7768b7b80a8b640dae911af38e3315a2">&#9670;&nbsp;</a></span>operator=()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_window_1_1_dimension.xhtml">Dimension</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_window_1_1_dimension.xhtml">Dimension</a> &amp;&#160;</td>
          <td class="paramname"><em>d</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Default assignment operator to allow dimensions to be copied. </p>

</div>
</div>
<a id="ad04b3b858cfdad2a7c64a6a014c3b773"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad04b3b858cfdad2a7c64a6a014c3b773">&#9670;&nbsp;</a></span>set_end()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void set_end </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>end</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Set the dimension's end. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">end</td><td>The new end </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_window_8h_source.xhtml#l00118">118</a> of file <a class="el" href="_window_8h_source.xhtml">Window.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        {</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;            _end = <a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#a0f590bfcf19110f44efc502e7b5c1d9e">end</a>;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;        }</div><div class="ttc" id="classarm__compute_1_1_window_1_1_dimension_xhtml_a0f590bfcf19110f44efc502e7b5c1d9e"><div class="ttname"><a href="classarm__compute_1_1_window_1_1_dimension.xhtml#a0f590bfcf19110f44efc502e7b5c1d9e">arm_compute::Window::Dimension::end</a></div><div class="ttdeci">constexpr int end() const</div><div class="ttdoc">Return the end of the dimension.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00097">Window.h:97</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_window_8h_source.xhtml#l00097">Window::Dimension::end()</a>.</p>

</div>
</div>
<a id="aa84a724344a983832279fe13f047b52d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa84a724344a983832279fe13f047b52d">&#9670;&nbsp;</a></span>set_step()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void set_step </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>step</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Set the dimension's step. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">step</td><td>The new step </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_window_8h_source.xhtml#l00110">110</a> of file <a class="el" href="_window_8h_source.xhtml">Window.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        {</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;            _step = <a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#a918580dc9188825d67dbb203a43d02fe">step</a>;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        }</div><div class="ttc" id="classarm__compute_1_1_window_1_1_dimension_xhtml_a918580dc9188825d67dbb203a43d02fe"><div class="ttname"><a href="classarm__compute_1_1_window_1_1_dimension.xhtml#a918580dc9188825d67dbb203a43d02fe">arm_compute::Window::Dimension::step</a></div><div class="ttdeci">constexpr int step() const</div><div class="ttdoc">Return the step of the dimension.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00102">Window.h:102</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_window_8h_source.xhtml#l00102">Window::Dimension::step()</a>.</p>

</div>
</div>
<a id="ab24e31d1a4830bf79564ee902ec6c060"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab24e31d1a4830bf79564ee902ec6c060">&#9670;&nbsp;</a></span>start()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr int start </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Return the start of the dimension. </p>

<p class="definition">Definition at line <a class="el" href="_window_8h_source.xhtml#l00092">92</a> of file <a class="el" href="_window_8h_source.xhtml">Window.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        {</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;            <span class="keywordflow">return</span> _start;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        }</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_window_8inl_source.xhtml#l00140">Window::adjust()</a>, <a class="el" href="_n_e_color_convert_helper_8inl_source.xhtml#l00635">arm_compute::colorconvert_iyuv_to_nv12()</a>, <a class="el" href="_n_e_color_convert_helper_8inl_source.xhtml#l00517">arm_compute::colorconvert_iyuv_to_rgb()</a>, <a class="el" href="_n_e_color_convert_helper_8inl_source.xhtml#l00850">arm_compute::colorconvert_iyuv_to_yuv4()</a>, <a class="el" href="_n_e_color_convert_helper_8inl_source.xhtml#l00683">arm_compute::colorconvert_nv12_to_iyuv()</a>, <a class="el" href="_n_e_color_convert_helper_8inl_source.xhtml#l00455">arm_compute::colorconvert_nv12_to_rgb()</a>, <a class="el" href="_n_e_color_convert_helper_8inl_source.xhtml#l00792">arm_compute::colorconvert_nv12_to_yuv4()</a>, <a class="el" href="_n_e_color_convert_helper_8inl_source.xhtml#l00952">arm_compute::colorconvert_rgb_to_iyuv()</a>, <a class="el" href="_n_e_color_convert_helper_8inl_source.xhtml#l00909">arm_compute::colorconvert_rgb_to_nv12()</a>, <a class="el" href="_n_e_color_convert_helper_8inl_source.xhtml#l00732">arm_compute::colorconvert_yuyv_to_iyuv()</a>, <a class="el" href="_n_e_color_convert_helper_8inl_source.xhtml#l00580">arm_compute::colorconvert_yuyv_to_nv12()</a>, <a class="el" href="_access_window_transpose_8cpp_source.xhtml#l00032">AccessWindowTranspose::compute_valid_region()</a>, <a class="el" href="_i_access_window_8cpp_source.xhtml#l00037">AccessWindowRectangle::compute_valid_region()</a>, <a class="el" href="_c_l_element_wise_unary_layer_kernel_8cpp_source.xhtml#l00052">CLElementWiseUnaryLayerKernel::configure()</a>, <a class="el" href="_c_l_dequantization_layer_kernel_8cpp_source.xhtml#l00077">CLDequantizationLayerKernel::configure()</a>, <a class="el" href="_c_l_copy_kernel_8cpp_source.xhtml#l00157">CLCopyKernel::configure()</a>, <a class="el" href="_c_l_tile_kernel_8cpp_source.xhtml#l00069">CLTileKernel::configure()</a>, <a class="el" href="_c_l_crop_kernel_8cpp_source.xhtml#l00049">CLCropKernel::configure()</a>, <a class="el" href="_c_l_strided_slice_kernel_8cpp_source.xhtml#l00100">CLStridedSliceKernel::configure()</a>, <a class="el" href="_i_g_c_kernel_8cpp_source.xhtml#l00041">arm_compute::enqueue()</a>, <a class="el" href="_validate_8cpp_source.xhtml#l00166">arm_compute::error_on_unconfigured_kernel()</a>, <a class="el" href="_i_c_l_kernel_8cpp_source.xhtml#l00141">ICLKernel::gws_from_window()</a>, <a class="el" href="_window_iterator_8h_source.xhtml#l00169">WindowIterator&lt; L &gt;::iterate_3D()</a>, <a class="el" href="utils_2_type_printer_8h_source.xhtml#l01099">arm_compute::operator&lt;&lt;()</a>, <a class="el" href="_c_l_histogram_kernel_8cpp_source.xhtml#l00122">CLHistogramKernel::run()</a>, <a class="el" href="_c_l_h_o_g_descriptor_kernel_8cpp_source.xhtml#l00111">CLHOGOrientationBinningKernel::run()</a>, <a class="el" href="_n_e_memset_kernel_8cpp_source.xhtml#l00051">NEMemsetKernel::run()</a>, <a class="el" href="_n_e_h_o_g_descriptor_kernel_8cpp_source.xhtml#l00678">NEHOGOrientationBinningKernel::run()</a>, <a class="el" href="_n_e_g_e_m_m_matrix_accumulate_biases_kernel_8cpp_source.xhtml#l00108">NEGEMMMatrixAccumulateBiasesKernel::run()</a>, <a class="el" href="_n_e_convert_quantized_signedness_kernel_8cpp_source.xhtml#l00095">NEConvertQuantizedSignednessKernel::run()</a>, <a class="el" href="_c_l_channel_extract_kernel_8cpp_source.xhtml#l00168">CLChannelExtractKernel::run()</a>, <a class="el" href="_g_c_pooling_layer_kernel_8cpp_source.xhtml#l00331">GCPoolingLayerKernel::run()</a>, <a class="el" href="_c_l_pooling_layer_kernel_8cpp_source.xhtml#l00341">CLPoolingLayerKernel::run()</a>, <a class="el" href="_n_e_r_o_i_pooling_layer_kernel_8cpp_source.xhtml#l00097">NEROIPoolingLayerKernel::run()</a>, <a class="el" href="_c_l_channel_combine_kernel_8cpp_source.xhtml#l00239">CLChannelCombineKernel::run()</a>, <a class="el" href="_n_e_pooling_layer_kernel_8cpp_source.xhtml#l02043">NEPoolingLayerKernel::run()</a>, <a class="el" href="_c_l_reduction_operation_kernel_8cpp_source.xhtml#l00255">CLReductionOperationKernel::run()</a>, <a class="el" href="_c_l_crop_kernel_8cpp_source.xhtml#l00115">CLCropKernel::run()</a>, <a class="el" href="_n_e_min_max_layer_kernel_8cpp_source.xhtml#l00117">NEMinMaxLayerKernel::run()</a>, <a class="el" href="_c_l_color_convert_kernel_8cpp_source.xhtml#l00432">CLColorConvertKernel::run()</a>, <a class="el" href="_c_l_histogram_kernel_8cpp_source.xhtml#l00222">CLHistogramBorderKernel::run()</a>, <a class="el" href="_n_e_winograd_convolution_layer_kernel_8cpp_source.xhtml#l00226">NEWinogradLayerTransformWeightsKernel&lt; T, OutputTileRows, OutputTileCols, KernelRows, KernelCols &gt;::run()</a>, <a class="el" href="_n_e_reverse_kernel_8cpp_source.xhtml#l00099">arm_compute::run_reverse()</a>, <a class="el" href="_window_8inl_source.xhtml#l00155">Window::scale()</a>, <a class="el" href="_window_8inl_source.xhtml#l00133">Window::shift()</a>, <a class="el" href="_access_window_transpose_8cpp_source.xhtml#l00189">AccessWindowTranspose::update_padding_if_needed()</a>, <a class="el" href="_access_window_transpose_8cpp_source.xhtml#l00089">AccessWindowTranspose::update_window_if_needed()</a>, and <a class="el" href="_i_access_window_8cpp_source.xhtml#l00097">AccessWindowRectangle::update_window_if_needed()</a>.</p>

</div>
</div>
<a id="a918580dc9188825d67dbb203a43d02fe"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a918580dc9188825d67dbb203a43d02fe">&#9670;&nbsp;</a></span>step()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr int step </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Return the step of the dimension. </p>

<p class="definition">Definition at line <a class="el" href="_window_8h_source.xhtml#l00102">102</a> of file <a class="el" href="_window_8h_source.xhtml">Window.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        {</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;            <span class="keywordflow">return</span> _step;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        }</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_window_8inl_source.xhtml#l00140">Window::adjust()</a>, <a class="el" href="_n_e_color_convert_helper_8inl_source.xhtml#l00635">arm_compute::colorconvert_iyuv_to_nv12()</a>, <a class="el" href="_n_e_color_convert_helper_8inl_source.xhtml#l00517">arm_compute::colorconvert_iyuv_to_rgb()</a>, <a class="el" href="_n_e_color_convert_helper_8inl_source.xhtml#l00850">arm_compute::colorconvert_iyuv_to_yuv4()</a>, <a class="el" href="_n_e_color_convert_helper_8inl_source.xhtml#l00683">arm_compute::colorconvert_nv12_to_iyuv()</a>, <a class="el" href="_n_e_color_convert_helper_8inl_source.xhtml#l00455">arm_compute::colorconvert_nv12_to_rgb()</a>, <a class="el" href="_n_e_color_convert_helper_8inl_source.xhtml#l00792">arm_compute::colorconvert_nv12_to_yuv4()</a>, <a class="el" href="_n_e_color_convert_helper_8inl_source.xhtml#l00952">arm_compute::colorconvert_rgb_to_iyuv()</a>, <a class="el" href="_n_e_color_convert_helper_8inl_source.xhtml#l00909">arm_compute::colorconvert_rgb_to_nv12()</a>, <a class="el" href="_n_e_color_convert_helper_8inl_source.xhtml#l00732">arm_compute::colorconvert_yuyv_to_iyuv()</a>, <a class="el" href="_n_e_color_convert_helper_8inl_source.xhtml#l00580">arm_compute::colorconvert_yuyv_to_nv12()</a>, <a class="el" href="_access_window_transpose_8cpp_source.xhtml#l00032">AccessWindowTranspose::compute_valid_region()</a>, <a class="el" href="_i_access_window_8cpp_source.xhtml#l00037">AccessWindowRectangle::compute_valid_region()</a>, <a class="el" href="_i_g_c_kernel_8cpp_source.xhtml#l00041">arm_compute::enqueue()</a>, <a class="el" href="_validate_8cpp_source.xhtml#l00166">arm_compute::error_on_unconfigured_kernel()</a>, <a class="el" href="_window_iterator_8h_source.xhtml#l00169">WindowIterator&lt; L &gt;::iterate_3D()</a>, <a class="el" href="utils_2_type_printer_8h_source.xhtml#l01099">arm_compute::operator&lt;&lt;()</a>, <a class="el" href="_c_l_histogram_kernel_8cpp_source.xhtml#l00122">CLHistogramKernel::run()</a>, <a class="el" href="_g_c_depthwise_convolution_layer3x3_kernel_8cpp_source.xhtml#l00205">GCDepthwiseConvolutionLayer3x3Kernel::run()</a>, <a class="el" href="_n_e_gaussian_pyramid_kernel_8cpp_source.xhtml#l00108">NEGaussianPyramidHorKernel::run()</a>, <a class="el" href="_n_e_g_e_m_m_matrix_accumulate_biases_kernel_8cpp_source.xhtml#l00108">NEGEMMMatrixAccumulateBiasesKernel::run()</a>, <a class="el" href="_c_l_channel_extract_kernel_8cpp_source.xhtml#l00168">CLChannelExtractKernel::run()</a>, <a class="el" href="_c_l_channel_combine_kernel_8cpp_source.xhtml#l00239">CLChannelCombineKernel::run()</a>, <a class="el" href="_c_l_reduction_operation_kernel_8cpp_source.xhtml#l00255">CLReductionOperationKernel::run()</a>, <a class="el" href="_c_l_crop_kernel_8cpp_source.xhtml#l00115">CLCropKernel::run()</a>, <a class="el" href="_c_l_color_convert_kernel_8cpp_source.xhtml#l00432">CLColorConvertKernel::run()</a>, <a class="el" href="_c_l_depthwise_convolution_layer3x3_n_c_h_w_kernel_8cpp_source.xhtml#l00370">CLDepthwiseConvolutionLayer3x3NCHWKernel::run()</a>, <a class="el" href="_c_l_depthwise_convolution_layer3x3_n_h_w_c_kernel_8cpp_source.xhtml#l00363">CLDepthwiseConvolutionLayer3x3NHWCKernel::run()</a>, <a class="el" href="_c_l_gaussian_pyramid_kernel_8cpp_source.xhtml#l00211">CLGaussianPyramidVertKernel::run()</a>, <a class="el" href="_c_l_depthwise_convolution_layer_native_kernel_8cpp_source.xhtml#l00321">CLDepthwiseConvolutionLayerNativeKernel::run()</a>, <a class="el" href="_n_e_gaussian_pyramid_kernel_8cpp_source.xhtml#l00208">NEGaussianPyramidVertKernel::run()</a>, <a class="el" href="_window_8inl_source.xhtml#l00155">Window::scale()</a>, <a class="el" href="_window_8h_source.xhtml#l00110">Window::Dimension::set_step()</a>, <a class="el" href="_window_8inl_source.xhtml#l00133">Window::shift()</a>, <a class="el" href="_access_window_transpose_8cpp_source.xhtml#l00189">AccessWindowTranspose::update_padding_if_needed()</a>, <a class="el" href="_access_window_transpose_8cpp_source.xhtml#l00089">AccessWindowTranspose::update_window_if_needed()</a>, <a class="el" href="_i_access_window_8cpp_source.xhtml#l00097">AccessWindowRectangle::update_window_if_needed()</a>, <a class="el" href="_c_l_memset_kernel_8cpp_source.xhtml#l00082">CLMemsetKernel::validate()</a>, and <a class="el" href="_c_l_crop_kernel_8cpp_source.xhtml#l00091">CLCropKernel::validate()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>arm_compute/core/<a class="el" href="_window_8h_source.xhtml">Window.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1_window.xhtml">Window</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1_window_1_1_dimension.xhtml">Dimension</a></li>
    <li class="footer">Generated on Thu Mar 5 2020 16:07:17 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
