<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: CLGaussianPyramidHalf Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classarm__compute_1_1_c_l_gaussian_pyramid_half.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">CLGaussianPyramidHalf Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Basic function to execute gaussian pyramid with HALF scale factor.  
 <a href="classarm__compute_1_1_c_l_gaussian_pyramid_half.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_c_l_gaussian_pyramid_8h_source.xhtml">CLGaussianPyramid.h</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for CLGaussianPyramidHalf:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classarm__compute_1_1_c_l_gaussian_pyramid_half__coll__graph.svg" width="186" height="187"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ac2d6975f7677ae5079004191a6a80968"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_gaussian_pyramid_half.xhtml#ac2d6975f7677ae5079004191a6a80968">CLGaussianPyramidHalf</a> ()</td></tr>
<tr class="memdesc:ac2d6975f7677ae5079004191a6a80968"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="#ac2d6975f7677ae5079004191a6a80968">More...</a><br /></td></tr>
<tr class="separator:ac2d6975f7677ae5079004191a6a80968"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9f1c2312374125fd95ee145a4f07515c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_gaussian_pyramid_half.xhtml#a9f1c2312374125fd95ee145a4f07515c">configure</a> (<a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *input, <a class="el" href="classarm__compute_1_1_c_l_pyramid.xhtml">CLPyramid</a> *pyramid, <a class="el" href="namespacearm__compute.xhtml#a15a05537a472ee742404821851529327">BorderMode</a> border_mode, uint8_t constant_border_value) override</td></tr>
<tr class="memdesc:a9f1c2312374125fd95ee145a4f07515c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialise the function's source, destinations and border mode.  <a href="#a9f1c2312374125fd95ee145a4f07515c">More...</a><br /></td></tr>
<tr class="separator:a9f1c2312374125fd95ee145a4f07515c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad1717410afd0be936c6213a63c8005fb"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_gaussian_pyramid_half.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a> () override</td></tr>
<tr class="memdesc:ad1717410afd0be936c6213a63c8005fb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Run the kernels contained in the function.  <a href="#ad1717410afd0be936c6213a63c8005fb">More...</a><br /></td></tr>
<tr class="separator:ad1717410afd0be936c6213a63c8005fb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1_c_l_gaussian_pyramid"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1_c_l_gaussian_pyramid')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1_c_l_gaussian_pyramid.xhtml">CLGaussianPyramid</a></td></tr>
<tr class="memitem:a0254b4991bee72d364bd7c28cc674db5 inherit pub_methods_classarm__compute_1_1_c_l_gaussian_pyramid"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_gaussian_pyramid.xhtml#a0254b4991bee72d364bd7c28cc674db5">CLGaussianPyramid</a> ()</td></tr>
<tr class="memdesc:a0254b4991bee72d364bd7c28cc674db5 inherit pub_methods_classarm__compute_1_1_c_l_gaussian_pyramid"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="classarm__compute_1_1_c_l_gaussian_pyramid.xhtml#a0254b4991bee72d364bd7c28cc674db5">More...</a><br /></td></tr>
<tr class="separator:a0254b4991bee72d364bd7c28cc674db5 inherit pub_methods_classarm__compute_1_1_c_l_gaussian_pyramid"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab55e57361d83b1cc2514d4b64f2ccec6 inherit pub_methods_classarm__compute_1_1_c_l_gaussian_pyramid"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_gaussian_pyramid.xhtml#ab55e57361d83b1cc2514d4b64f2ccec6">CLGaussianPyramid</a> (const <a class="el" href="classarm__compute_1_1_c_l_gaussian_pyramid.xhtml">CLGaussianPyramid</a> &amp;)=delete</td></tr>
<tr class="memdesc:ab55e57361d83b1cc2514d4b64f2ccec6 inherit pub_methods_classarm__compute_1_1_c_l_gaussian_pyramid"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied (As this class contains pointers)  <a href="classarm__compute_1_1_c_l_gaussian_pyramid.xhtml#ab55e57361d83b1cc2514d4b64f2ccec6">More...</a><br /></td></tr>
<tr class="separator:ab55e57361d83b1cc2514d4b64f2ccec6 inherit pub_methods_classarm__compute_1_1_c_l_gaussian_pyramid"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afc0bb21e48fb78591b51913eba818410 inherit pub_methods_classarm__compute_1_1_c_l_gaussian_pyramid"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_c_l_gaussian_pyramid.xhtml">CLGaussianPyramid</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_gaussian_pyramid.xhtml#afc0bb21e48fb78591b51913eba818410">operator=</a> (const <a class="el" href="classarm__compute_1_1_c_l_gaussian_pyramid.xhtml">CLGaussianPyramid</a> &amp;)=delete</td></tr>
<tr class="memdesc:afc0bb21e48fb78591b51913eba818410 inherit pub_methods_classarm__compute_1_1_c_l_gaussian_pyramid"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied (As this class contains pointers)  <a href="classarm__compute_1_1_c_l_gaussian_pyramid.xhtml#afc0bb21e48fb78591b51913eba818410">More...</a><br /></td></tr>
<tr class="separator:afc0bb21e48fb78591b51913eba818410 inherit pub_methods_classarm__compute_1_1_c_l_gaussian_pyramid"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8c57d617c3dd6f7c04c77231dc5928f0 inherit pub_methods_classarm__compute_1_1_c_l_gaussian_pyramid"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_gaussian_pyramid.xhtml#a8c57d617c3dd6f7c04c77231dc5928f0">CLGaussianPyramid</a> (<a class="el" href="classarm__compute_1_1_c_l_gaussian_pyramid.xhtml">CLGaussianPyramid</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:a8c57d617c3dd6f7c04c77231dc5928f0 inherit pub_methods_classarm__compute_1_1_c_l_gaussian_pyramid"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be moved.  <a href="classarm__compute_1_1_c_l_gaussian_pyramid.xhtml#a8c57d617c3dd6f7c04c77231dc5928f0">More...</a><br /></td></tr>
<tr class="separator:a8c57d617c3dd6f7c04c77231dc5928f0 inherit pub_methods_classarm__compute_1_1_c_l_gaussian_pyramid"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa3f47917f1cb44a55c93363eaaf39c6e inherit pub_methods_classarm__compute_1_1_c_l_gaussian_pyramid"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_c_l_gaussian_pyramid.xhtml">CLGaussianPyramid</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_gaussian_pyramid.xhtml#aa3f47917f1cb44a55c93363eaaf39c6e">operator=</a> (<a class="el" href="classarm__compute_1_1_c_l_gaussian_pyramid.xhtml">CLGaussianPyramid</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:aa3f47917f1cb44a55c93363eaaf39c6e inherit pub_methods_classarm__compute_1_1_c_l_gaussian_pyramid"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be moved.  <a href="classarm__compute_1_1_c_l_gaussian_pyramid.xhtml#aa3f47917f1cb44a55c93363eaaf39c6e">More...</a><br /></td></tr>
<tr class="separator:aa3f47917f1cb44a55c93363eaaf39c6e inherit pub_methods_classarm__compute_1_1_c_l_gaussian_pyramid"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afafbe10da580ab0f3105947cb4a383ac inherit pub_methods_classarm__compute_1_1_c_l_gaussian_pyramid"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_gaussian_pyramid.xhtml#afafbe10da580ab0f3105947cb4a383ac">~CLGaussianPyramid</a> ()=default</td></tr>
<tr class="memdesc:afafbe10da580ab0f3105947cb4a383ac inherit pub_methods_classarm__compute_1_1_c_l_gaussian_pyramid"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default destructor.  <a href="classarm__compute_1_1_c_l_gaussian_pyramid.xhtml#afafbe10da580ab0f3105947cb4a383ac">More...</a><br /></td></tr>
<tr class="separator:afafbe10da580ab0f3105947cb4a383ac inherit pub_methods_classarm__compute_1_1_c_l_gaussian_pyramid"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1_i_function"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1_i_function')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1_i_function.xhtml">IFunction</a></td></tr>
<tr class="memitem:ab921ecc3f3f6ae2b4bd61f3e1998d8c4 inherit pub_methods_classarm__compute_1_1_i_function"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_function.xhtml#ab921ecc3f3f6ae2b4bd61f3e1998d8c4">~IFunction</a> ()=default</td></tr>
<tr class="memdesc:ab921ecc3f3f6ae2b4bd61f3e1998d8c4 inherit pub_methods_classarm__compute_1_1_i_function"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor.  <a href="classarm__compute_1_1_i_function.xhtml#ab921ecc3f3f6ae2b4bd61f3e1998d8c4">More...</a><br /></td></tr>
<tr class="separator:ab921ecc3f3f6ae2b4bd61f3e1998d8c4 inherit pub_methods_classarm__compute_1_1_i_function"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a820f7291c24155a2980512fae45aac26 inherit pub_methods_classarm__compute_1_1_i_function"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_function.xhtml#a820f7291c24155a2980512fae45aac26">prepare</a> ()</td></tr>
<tr class="memdesc:a820f7291c24155a2980512fae45aac26 inherit pub_methods_classarm__compute_1_1_i_function"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prepare the function for executing.  <a href="classarm__compute_1_1_i_function.xhtml#a820f7291c24155a2980512fae45aac26">More...</a><br /></td></tr>
<tr class="separator:a820f7291c24155a2980512fae45aac26 inherit pub_methods_classarm__compute_1_1_i_function"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Basic function to execute gaussian pyramid with HALF scale factor. </p>
<p>This function calls the following OpenCL kernels:</p>
<ol type="1">
<li><a class="el" href="classarm__compute_1_1_c_l_fill_border_kernel.xhtml">CLFillBorderKernel</a> (executed if border_mode == CONSTANT or border_mode == REPLICATE)</li>
<li><a class="el" href="classarm__compute_1_1_c_l_gaussian_pyramid_hor_kernel.xhtml">CLGaussianPyramidHorKernel</a></li>
<li><a class="el" href="classarm__compute_1_1_c_l_gaussian_pyramid_vert_kernel.xhtml">CLGaussianPyramidVertKernel</a> </li>
</ol>

<p class="definition">Definition at line <a class="el" href="_c_l_gaussian_pyramid_8h_source.xhtml#l00081">81</a> of file <a class="el" href="_c_l_gaussian_pyramid_8h_source.xhtml">CLGaussianPyramid.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="ac2d6975f7677ae5079004191a6a80968"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac2d6975f7677ae5079004191a6a80968">&#9670;&nbsp;</a></span>CLGaussianPyramidHalf()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_l_gaussian_pyramid_half.xhtml">CLGaussianPyramidHalf</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constructor. </p>

<p class="definition">Definition at line <a class="el" href="_c_l_gaussian_pyramid_8cpp_source.xhtml#l00051">51</a> of file <a class="el" href="_c_l_gaussian_pyramid_8cpp_source.xhtml">CLGaussianPyramid.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    : _horizontal_border_handler(),</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;      _vertical_border_handler(),</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;      _horizontal_reduction(),</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;      _vertical_reduction()</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;{</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a9f1c2312374125fd95ee145a4f07515c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9f1c2312374125fd95ee145a4f07515c">&#9670;&nbsp;</a></span>configure()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void configure </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_c_l_pyramid.xhtml">CLPyramid</a> *&#160;</td>
          <td class="paramname"><em>pyramid</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearm__compute.xhtml#a15a05537a472ee742404821851529327">BorderMode</a>&#160;</td>
          <td class="paramname"><em>border_mode</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>constant_border_value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Initialise the function's source, destinations and border mode. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">input</td><td>Source tensor. Data types supported: U8. (Written to only for <code>border_mode</code> != UNDEFINED) </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">pyramid</td><td>Destination pyramid tensors, Data types supported at each level: U8. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">border_mode</td><td>Border mode to use. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">constant_border_value</td><td>(Optional) Constant value to use for borders if border_mode is set to CONSTANT. </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classarm__compute_1_1_c_l_gaussian_pyramid.xhtml#ae518f24b88a33e296030407e1a42d5fb">CLGaussianPyramid</a>.</p>

<p class="definition">Definition at line <a class="el" href="_c_l_gaussian_pyramid_8cpp_source.xhtml#l00059">59</a> of file <a class="el" href="_c_l_gaussian_pyramid_8cpp_source.xhtml">CLGaussianPyramid.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;{</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <a class="code" href="_validate_8h.xhtml#aadf5c9cff86327b96d88d04649d9715e">ARM_COMPUTE_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, 1, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a6669348b484e3008dca2bfa8e85e40b5">DataType::U8</a>);</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(pyramid == <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;info()-&gt;num_dimensions() != pyramid-&gt;<a class="code" href="classarm__compute_1_1_c_l_pyramid.xhtml#a6f6fce8ca90f3e9a62e2cb48a07047f4">get_pyramid_level</a>(0)-&gt;<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#ad45f0c01a0713dfb6bd7232c7f396fc4">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a13622133d9b41900a6a3e8f89e59a78b">num_dimensions</a>());</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;info()-&gt;dimension(0) != pyramid-&gt;<a class="code" href="classarm__compute_1_1_c_l_pyramid.xhtml#a7e9f724340af5b795b21a00d35eeb28e">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_pyramid_info.xhtml#a9ce99f5dfa1514cb108665e3810b2c4c">width</a>());</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;info()-&gt;dimension(1) != pyramid-&gt;<a class="code" href="classarm__compute_1_1_c_l_pyramid.xhtml#a7e9f724340af5b795b21a00d35eeb28e">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_pyramid_info.xhtml#adc662cea5b05cd9852d5a4538586d662">height</a>());</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(<a class="code" href="namespacearm__compute.xhtml#af9876aedd664cac0ddeacddb40cb71cd">SCALE_PYRAMID_HALF</a> != pyramid-&gt;<a class="code" href="classarm__compute_1_1_c_l_pyramid.xhtml#a7e9f724340af5b795b21a00d35eeb28e">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_pyramid_info.xhtml#ade87abafbd6b200b22de988f32b66dea">scale</a>());</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <span class="comment">// Constant value to use for vertical fill border when the border mode is CONSTANT</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <span class="keyword">const</span> uint16_t pixel_value_u16 = static_cast&lt;uint16_t&gt;(constant_border_value) * 2 + static_cast&lt;uint16_t&gt;(constant_border_value) * 8 + static_cast&lt;uint16_t&gt;(constant_border_value) * 6;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <span class="comment">/* Get number of pyramid levels */</span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">size_t</span> num_levels = pyramid-&gt;<a class="code" href="classarm__compute_1_1_c_l_pyramid.xhtml#a7e9f724340af5b795b21a00d35eeb28e">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_pyramid_info.xhtml#aa2fea6640d2bd5de24d0e0c2433faab6">num_levels</a>();</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    _input   = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    _pyramid = pyramid;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <span class="keywordflow">if</span>(num_levels &gt; 1)</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    {</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        _horizontal_border_handler.resize(num_levels - 1);</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        _vertical_border_handler.resize(num_levels - 1);</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        _horizontal_reduction.resize(num_levels - 1);</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;        _vertical_reduction.resize(num_levels - 1);</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        <span class="comment">// Apply half scale to the X dimension of the tensor shape</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;        <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> tensor_shape = pyramid-&gt;<a class="code" href="classarm__compute_1_1_c_l_pyramid.xhtml#a7e9f724340af5b795b21a00d35eeb28e">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_pyramid_info.xhtml#a82c695f3a9ca51633ea8743d5c09f122">tensor_shape</a>();</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        tensor_shape.<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml#a9c54fb6cea3557692fe7c00c40bb40ad">set</a>(0, (pyramid-&gt;<a class="code" href="classarm__compute_1_1_c_l_pyramid.xhtml#a7e9f724340af5b795b21a00d35eeb28e">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_pyramid_info.xhtml#a9ce99f5dfa1514cb108665e3810b2c4c">width</a>() + 1) * <a class="code" href="namespacearm__compute.xhtml#af9876aedd664cac0ddeacddb40cb71cd">SCALE_PYRAMID_HALF</a>);</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;        <a class="code" href="classarm__compute_1_1_pyramid_info.xhtml">PyramidInfo</a> pyramid_info(num_levels - 1, <a class="code" href="namespacearm__compute.xhtml#af9876aedd664cac0ddeacddb40cb71cd">SCALE_PYRAMID_HALF</a>, tensor_shape, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58aef9ef3ebca4d2b64b6ec83808bafa5f2">Format::U16</a>);</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;        _tmp.init(pyramid_info);</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        <span class="keywordflow">for</span>(<span class="keywordtype">size_t</span> i = 0; i &lt; num_levels - 1; ++i)</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        {</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;            <span class="comment">/* Configure horizontal kernel */</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;            _horizontal_reduction[i].configure(_pyramid-&gt;get_pyramid_level(i), _tmp.get_pyramid_level(i));</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;            <span class="comment">/* Configure vertical kernel */</span></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;            _vertical_reduction[i].configure(_tmp.get_pyramid_level(i), _pyramid-&gt;get_pyramid_level(i + 1));</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;            <span class="comment">/* Configure border */</span></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;            _horizontal_border_handler[i].configure(_pyramid-&gt;get_pyramid_level(i), _horizontal_reduction[i].border_size(), <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5471e46933e7a9c4709972d91fc4ea65">border_mode</a>, <a class="code" href="classarm__compute_1_1_pixel_value.xhtml">PixelValue</a>(constant_border_value));</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;            <span class="comment">/* Configure border */</span></div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;            _vertical_border_handler[i].configure(_tmp.get_pyramid_level(i), _vertical_reduction[i].border_size(), <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5471e46933e7a9c4709972d91fc4ea65">border_mode</a>, <a class="code" href="classarm__compute_1_1_pixel_value.xhtml">PixelValue</a>(pixel_value_u16));</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        }</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        _tmp.allocate();</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    }</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;}</div><div class="ttc" id="namespacearm__compute_xhtml_af9876aedd664cac0ddeacddb40cb71cd"><div class="ttname"><a href="namespacearm__compute.xhtml#af9876aedd664cac0ddeacddb40cb71cd">arm_compute::SCALE_PYRAMID_HALF</a></div><div class="ttdeci">constexpr float SCALE_PYRAMID_HALF</div><div class="ttdoc">Constant value used to indicate a half-scale pyramid.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00109">Types.h:109</a></div></div>
<div class="ttc" id="classarm__compute_1_1_pyramid_info_xhtml_a82c695f3a9ca51633ea8743d5c09f122"><div class="ttname"><a href="classarm__compute_1_1_pyramid_info.xhtml#a82c695f3a9ca51633ea8743d5c09f122">arm_compute::PyramidInfo::tensor_shape</a></div><div class="ttdeci">const TensorShape &amp; tensor_shape() const</div><div class="ttdoc">Return the TensorShape of the o-th level tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_pyramid_info_8cpp_source.xhtml#l00092">PyramidInfo.cpp:92</a></div></div>
<div class="ttc" id="classarm__compute_1_1_pixel_value_xhtml"><div class="ttname"><a href="classarm__compute_1_1_pixel_value.xhtml">arm_compute::PixelValue</a></div><div class="ttdoc">Class describing the value of a pixel for any image format.</div><div class="ttdef"><b>Definition:</b> <a href="_pixel_value_8h_source.xhtml#l00034">PixelValue.h:34</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_shape_xhtml"><div class="ttname"><a href="classarm__compute_1_1_tensor_shape.xhtml">arm_compute::TensorShape</a></div><div class="ttdoc">Shape of a tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_shape_8h_source.xhtml#l00039">TensorShape.h:39</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_tensor_xhtml_ad45f0c01a0713dfb6bd7232c7f396fc4"><div class="ttname"><a href="classarm__compute_1_1_c_l_tensor.xhtml#ad45f0c01a0713dfb6bd7232c7f396fc4">arm_compute::CLTensor::info</a></div><div class="ttdeci">TensorInfo * info() const override</div><div class="ttdoc">Interface to be implemented by the child class to return the tensor's metadata.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_tensor_8cpp_source.xhtml#l00041">CLTensor.cpp:41</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58a6669348b484e3008dca2bfa8e85e40b5"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a6669348b484e3008dca2bfa8e85e40b5">arm_compute::Format::U8</a></div><div class="ttdoc">1 channel, 1 U8 per channel</div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_pyramid_xhtml_a7e9f724340af5b795b21a00d35eeb28e"><div class="ttname"><a href="classarm__compute_1_1_c_l_pyramid.xhtml#a7e9f724340af5b795b21a00d35eeb28e">arm_compute::CLPyramid::info</a></div><div class="ttdeci">const PyramidInfo * info() const override</div><div class="ttdoc">Interface to be implemented by the child class to return the Pyramid's metadata.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_pyramid_8cpp_source.xhtml#l00118">CLPyramid.cpp:118</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00466">Error.h:466</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58aef9ef3ebca4d2b64b6ec83808bafa5f2"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58aef9ef3ebca4d2b64b6ec83808bafa5f2">arm_compute::Format::U16</a></div><div class="ttdoc">1 channel, 1 U16 per channel</div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a8fcf2ddd9a1d58b1b280f5c0aed71845"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">arm_compute::test::validation::input</a></div><div class="ttdeci">auto input</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00487">LSTMLayerQuantized.cpp:487</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a5471e46933e7a9c4709972d91fc4ea65"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a5471e46933e7a9c4709972d91fc4ea65">arm_compute::test::validation::border_mode</a></div><div class="ttdeci">border_mode</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_convolution_8cpp_source.xhtml#l00118">Convolution.cpp:118</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml_a13622133d9b41900a6a3e8f89e59a78b"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#a13622133d9b41900a6a3e8f89e59a78b">arm_compute::TensorInfo::num_dimensions</a></div><div class="ttdeci">size_t num_dimensions() const override</div><div class="ttdoc">The number of dimensions of the tensor (rank)</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_info_8h_source.xhtml#l00253">TensorInfo.h:253</a></div></div>
<div class="ttc" id="classarm__compute_1_1_pyramid_info_xhtml_ade87abafbd6b200b22de988f32b66dea"><div class="ttname"><a href="classarm__compute_1_1_pyramid_info.xhtml#ade87abafbd6b200b22de988f32b66dea">arm_compute::PyramidInfo::scale</a></div><div class="ttdeci">float scale() const</div><div class="ttdoc">Return the scale factor of the pyramid.</div><div class="ttdef"><b>Definition:</b> <a href="_pyramid_info_8cpp_source.xhtml#l00102">PyramidInfo.cpp:102</a></div></div>
<div class="ttc" id="_validate_8h_xhtml_aadf5c9cff86327b96d88d04649d9715e"><div class="ttname"><a href="_validate_8h.xhtml#aadf5c9cff86327b96d88d04649d9715e">ARM_COMPUTE_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN(t, c,...)</div><div class="ttdef"><b>Definition:</b> <a href="_validate_8h_source.xhtml#l00790">Validate.h:790</a></div></div>
<div class="ttc" id="classarm__compute_1_1_pyramid_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_pyramid_info.xhtml">arm_compute::PyramidInfo</a></div><div class="ttdoc">Store the Pyramid's metadata.</div><div class="ttdef"><b>Definition:</b> <a href="_pyramid_info_8h_source.xhtml#l00035">PyramidInfo.h:35</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_pyramid_xhtml_a6f6fce8ca90f3e9a62e2cb48a07047f4"><div class="ttname"><a href="classarm__compute_1_1_c_l_pyramid.xhtml#a6f6fce8ca90f3e9a62e2cb48a07047f4">arm_compute::CLPyramid::get_pyramid_level</a></div><div class="ttdeci">CLTensor * get_pyramid_level(size_t index) const override</div><div class="ttdoc">Retrieves a level of the pyramid as a ITensor pointer.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_pyramid_8cpp_source.xhtml#l00123">CLPyramid.cpp:123</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_shape_xhtml_a9c54fb6cea3557692fe7c00c40bb40ad"><div class="ttname"><a href="classarm__compute_1_1_tensor_shape.xhtml#a9c54fb6cea3557692fe7c00c40bb40ad">arm_compute::TensorShape::set</a></div><div class="ttdeci">TensorShape &amp; set(size_t dimension, size_t value, bool apply_dim_correction=true)</div><div class="ttdoc">Accessor to set the value of one of the dimensions.</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_shape_8h_source.xhtml#l00078">TensorShape.h:78</a></div></div>
<div class="ttc" id="classarm__compute_1_1_pyramid_info_xhtml_a9ce99f5dfa1514cb108665e3810b2c4c"><div class="ttname"><a href="classarm__compute_1_1_pyramid_info.xhtml#a9ce99f5dfa1514cb108665e3810b2c4c">arm_compute::PyramidInfo::width</a></div><div class="ttdeci">size_t width() const</div><div class="ttdoc">Return the width of the 0th level tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_pyramid_info_8cpp_source.xhtml#l00082">PyramidInfo.cpp:82</a></div></div>
<div class="ttc" id="classarm__compute_1_1_pyramid_info_xhtml_aa2fea6640d2bd5de24d0e0c2433faab6"><div class="ttname"><a href="classarm__compute_1_1_pyramid_info.xhtml#aa2fea6640d2bd5de24d0e0c2433faab6">arm_compute::PyramidInfo::num_levels</a></div><div class="ttdeci">size_t num_levels() const</div><div class="ttdoc">Return the number of the pyramid levels.</div><div class="ttdef"><b>Definition:</b> <a href="_pyramid_info_8cpp_source.xhtml#l00077">PyramidInfo.cpp:77</a></div></div>
<div class="ttc" id="classarm__compute_1_1_pyramid_info_xhtml_adc662cea5b05cd9852d5a4538586d662"><div class="ttname"><a href="classarm__compute_1_1_pyramid_info.xhtml#adc662cea5b05cd9852d5a4538586d662">arm_compute::PyramidInfo::height</a></div><div class="ttdeci">size_t height() const</div><div class="ttdoc">Return the height of the 0th level tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_pyramid_info_8cpp_source.xhtml#l00087">PyramidInfo.cpp:87</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00466">ARM_COMPUTE_ERROR_ON</a>, <a class="el" href="_validate_8h_source.xhtml#l00790">ARM_COMPUTE_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN</a>, <a class="el" href="_c_l_2_convolution_8cpp_source.xhtml#l00118">arm_compute::test::validation::border_mode</a>, <a class="el" href="_c_l_pyramid_8cpp_source.xhtml#l00123">CLPyramid::get_pyramid_level()</a>, <a class="el" href="_pyramid_info_8cpp_source.xhtml#l00087">PyramidInfo::height()</a>, <a class="el" href="_c_l_pyramid_8cpp_source.xhtml#l00118">CLPyramid::info()</a>, <a class="el" href="_c_l_tensor_8cpp_source.xhtml#l00041">CLTensor::info()</a>, <a class="el" href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00487">arm_compute::test::validation::input</a>, <a class="el" href="_tensor_info_8h_source.xhtml#l00253">TensorInfo::num_dimensions()</a>, <a class="el" href="_pyramid_info_8cpp_source.xhtml#l00077">PyramidInfo::num_levels()</a>, <a class="el" href="_pyramid_info_8cpp_source.xhtml#l00102">PyramidInfo::scale()</a>, <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l00109">arm_compute::SCALE_PYRAMID_HALF</a>, <a class="el" href="_tensor_shape_8h_source.xhtml#l00078">TensorShape::set()</a>, <a class="el" href="_pyramid_info_8cpp_source.xhtml#l00092">PyramidInfo::tensor_shape()</a>, <a class="el" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58aef9ef3ebca4d2b64b6ec83808bafa5f2">arm_compute::U16</a>, <a class="el" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a6669348b484e3008dca2bfa8e85e40b5">arm_compute::U8</a>, and <a class="el" href="_pyramid_info_8cpp_source.xhtml#l00082">PyramidInfo::width()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_c_l_laplacian_pyramid_8cpp_source.xhtml#l00050">CLLaplacianPyramid::configure()</a>.</p>

</div>
</div>
<a id="ad1717410afd0be936c6213a63c8005fb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad1717410afd0be936c6213a63c8005fb">&#9670;&nbsp;</a></span>run()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void run </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Run the kernels contained in the function. </p>
<p>For NEON kernels:</p><ul>
<li>Multi-threading is used for the kernels which are parallelisable.</li>
<li>By default std::thread::hardware_concurrency() threads are used.</li>
</ul>
<dl class="section note"><dt>Note</dt><dd><a class="el" href="classarm__compute_1_1_c_p_p_scheduler.xhtml#ae64eebaa07f4d2da6cc2ba538c3cb095">CPPScheduler::set_num_threads()</a> can be used to manually set the number of threads</dd></dl>
<p>For OpenCL kernels:</p><ul>
<li>All the kernels are enqueued on the queue associated with <a class="el" href="classarm__compute_1_1_c_l_scheduler.xhtml" title="Provides global access to a CL context and command queue.">CLScheduler</a>.</li>
<li>The queue is then flushed.</li>
</ul>
<dl class="section note"><dt>Note</dt><dd>The function will not block until the kernels are executed. It is the user's responsibility to wait. </dd>
<dd>
Will call <a class="el" href="classarm__compute_1_1_i_function.xhtml#a820f7291c24155a2980512fae45aac26" title="Prepare the function for executing.">prepare()</a> on first run if hasn't been done </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_function.xhtml#a18954417d3124a8095783ea13dc6d00b">IFunction</a>.</p>

<p class="definition">Definition at line <a class="el" href="_c_l_gaussian_pyramid_8cpp_source.xhtml#l00109">109</a> of file <a class="el" href="_c_l_gaussian_pyramid_8cpp_source.xhtml">CLGaussianPyramid.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;{</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    <a class="code" href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a>(_pyramid == <span class="keyword">nullptr</span>, <span class="stringliteral">&quot;Unconfigured function&quot;</span>);</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <span class="comment">/* Get number of pyramid levels */</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">size_t</span> num_levels = _pyramid-&gt;info()-&gt;num_levels();</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    <span class="comment">/* The first level of the pyramid has the input image */</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    _pyramid-&gt;get_pyramid_level(0)-&gt;map(<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().queue(), <span class="keyword">true</span> <span class="comment">/* blocking */</span>);</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    _input-&gt;map(<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().queue(), <span class="keyword">true</span> <span class="comment">/* blocking */</span>);</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    _pyramid-&gt;get_pyramid_level(0)-&gt;copy_from(*_input);</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    _input-&gt;unmap(<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().queue());</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    _pyramid-&gt;get_pyramid_level(0)-&gt;unmap(<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().queue());</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i = 0; i &lt; num_levels - 1; ++i)</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    {</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;        <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#ae1a643e517f50bf0392fb6516dd7cf67">enqueue</a>(_horizontal_border_handler[i], <span class="keyword">false</span>);</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;        <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#ae1a643e517f50bf0392fb6516dd7cf67">enqueue</a>(_horizontal_reduction[i], <span class="keyword">false</span>);</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#ae1a643e517f50bf0392fb6516dd7cf67">enqueue</a>(_vertical_border_handler[i], <span class="keyword">false</span>);</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;        <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#ae1a643e517f50bf0392fb6516dd7cf67">enqueue</a>(_vertical_reduction[i], <span class="keyword">false</span>);</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    }</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;}</div><div class="ttc" id="classarm__compute_1_1_c_l_scheduler_xhtml_a9b58d0eb9a2af8e6d7908695e1557d6c"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">arm_compute::CLScheduler::get</a></div><div class="ttdeci">static CLScheduler &amp; get()</div><div class="ttdoc">Access the scheduler singleton.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00099">CLScheduler.cpp:99</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a0b0eb3235749a2909dc5a101afe59a1b"><div class="ttname"><a href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_MSG(cond, msg)</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00456">Error.h:456</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_scheduler_xhtml_ae1a643e517f50bf0392fb6516dd7cf67"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#ae1a643e517f50bf0392fb6516dd7cf67">arm_compute::CLScheduler::enqueue</a></div><div class="ttdeci">void enqueue(ICLKernel &amp;kernel, bool flush=true)</div><div class="ttdoc">Schedule the execution of the passed kernel if possible.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00154">CLScheduler.cpp:154</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00456">ARM_COMPUTE_ERROR_ON_MSG</a>, <a class="el" href="_c_l_scheduler_8cpp_source.xhtml#l00154">CLScheduler::enqueue()</a>, and <a class="el" href="_c_l_scheduler_8cpp_source.xhtml#l00099">CLScheduler::get()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_c_l_laplacian_pyramid_8cpp_source.xhtml#l00088">CLLaplacianPyramid::run()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>arm_compute/runtime/CL/functions/<a class="el" href="_c_l_gaussian_pyramid_8h_source.xhtml">CLGaussianPyramid.h</a></li>
<li>src/runtime/CL/functions/<a class="el" href="_c_l_gaussian_pyramid_8cpp_source.xhtml">CLGaussianPyramid.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1_c_l_gaussian_pyramid_half.xhtml">CLGaussianPyramidHalf</a></li>
    <li class="footer">Generated on Fri Feb 21 2020 11:10:24 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
