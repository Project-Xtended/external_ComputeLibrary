<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/core/GLES_COMPUTE/OpenGLES.cpp File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_open_g_l_e_s_8cpp.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#define-members">Macros</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">OpenGLES.cpp File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &quot;<a class="el" href="_open_g_l_e_s_8h_source.xhtml">arm_compute/core/GLES_COMPUTE/OpenGLES.h</a>&quot;</code><br />
<code>#include &lt;dlfcn.h&gt;</code><br />
<code>#include &lt;iostream&gt;</code><br />
<code>#include &lt;vector&gt;</code><br />
<code>#include &quot;./egl_entries.in&quot;</code><br />
<code>#include &quot;./gl_entries.in&quot;</code><br />
</div>
<p><a href="_open_g_l_e_s_8cpp_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:aa3518d2943000be78d58e9d433cc4eaa"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#aa3518d2943000be78d58e9d433cc4eaa">EGL_ENTRY</a>(_api)&#160;&#160;&#160;_api = reinterpret_cast&lt;_api##_func&gt;(dlsym(egl_handle, #_api));</td></tr>
<tr class="separator:aa3518d2943000be78d58e9d433cc4eaa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa3518d2943000be78d58e9d433cc4eaa"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#aa3518d2943000be78d58e9d433cc4eaa">EGL_ENTRY</a>(_api)</td></tr>
<tr class="separator:aa3518d2943000be78d58e9d433cc4eaa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5b691a78f9cef2aed8c5dc87b0898b39"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#a5b691a78f9cef2aed8c5dc87b0898b39">GL_ENTRY</a>(_api)&#160;&#160;&#160;_api = reinterpret_cast&lt;_api##_func&gt;(<a class="el" href="_open_g_l_e_s_8cpp.xhtml#a8874678c01737df89fe9fa1ffde570a8">eglGetProcAddress</a>(#_api));</td></tr>
<tr class="separator:a5b691a78f9cef2aed8c5dc87b0898b39"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5b691a78f9cef2aed8c5dc87b0898b39"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#a5b691a78f9cef2aed8c5dc87b0898b39">GL_ENTRY</a>(_api)</td></tr>
<tr class="separator:a5b691a78f9cef2aed8c5dc87b0898b39"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa3518d2943000be78d58e9d433cc4eaa"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#aa3518d2943000be78d58e9d433cc4eaa">EGL_ENTRY</a>(_api)&#160;&#160;&#160;_api##_func _api = nullptr;</td></tr>
<tr class="separator:aa3518d2943000be78d58e9d433cc4eaa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5b691a78f9cef2aed8c5dc87b0898b39"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#a5b691a78f9cef2aed8c5dc87b0898b39">GL_ENTRY</a>(_api)&#160;&#160;&#160;<a class="el" href="_open_g_l_e_s_8cpp.xhtml#aa3518d2943000be78d58e9d433cc4eaa">EGL_ENTRY</a>(_api)</td></tr>
<tr class="separator:a5b691a78f9cef2aed8c5dc87b0898b39"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:addae612338f2d0f234acaa34df861926"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#addae612338f2d0f234acaa34df861926">eglGetProcAddress_func</a> = __eglMustCastToProperFunctionPointerType EGLAPIENTRY(*)(const char *procname)</td></tr>
<tr class="separator:addae612338f2d0f234acaa34df861926"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a39bb058fb4f13b0ceb51a30c2e7c13ba"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#a39bb058fb4f13b0ceb51a30c2e7c13ba">eglBindAPI_func</a> = EGLBoolean EGLAPIENTRY(*)(EGLenum api)</td></tr>
<tr class="separator:a39bb058fb4f13b0ceb51a30c2e7c13ba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a45bcdc2fee472f58603654d00fac7fea"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#a45bcdc2fee472f58603654d00fac7fea">eglChooseConfig_func</a> = EGLBoolean EGLAPIENTRY(*)(EGLDisplay dpy, const EGLint *attrib_list, EGLConfig *configs, EGLint config_size, EGLint *num_config)</td></tr>
<tr class="separator:a45bcdc2fee472f58603654d00fac7fea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae40fe14e93e58a809bbf1f8bebcee62b"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#ae40fe14e93e58a809bbf1f8bebcee62b">eglCreateContext_func</a> = EGLContext EGLAPIENTRY(*)(EGLDisplay dpy, EGLConfig config, EGLContext share_context, const EGLint *attrib_list)</td></tr>
<tr class="separator:ae40fe14e93e58a809bbf1f8bebcee62b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad9a1fc168717a342b9e39793605ada2b"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#ad9a1fc168717a342b9e39793605ada2b">eglDestroyContext_func</a> = EGLBoolean EGLAPIENTRY(*)(EGLDisplay dpy, EGLContext ctx)</td></tr>
<tr class="separator:ad9a1fc168717a342b9e39793605ada2b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a26e9fec0fd229ae63fd93edb24cb9f3a"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#a26e9fec0fd229ae63fd93edb24cb9f3a">eglGetDisplay_func</a> = EGLDisplay EGLAPIENTRY(*)(EGLNativeDisplayType display_id)</td></tr>
<tr class="separator:a26e9fec0fd229ae63fd93edb24cb9f3a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a73309e644fd9f860f55ca14d24119cdf"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#a73309e644fd9f860f55ca14d24119cdf">eglInitialize_func</a> = EGLBoolean EGLAPIENTRY(*)(EGLDisplay dpy, EGLint *major, EGLint *minor)</td></tr>
<tr class="separator:a73309e644fd9f860f55ca14d24119cdf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3e001bb1fbd825f9e9553b5d17ffb9f1"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#a3e001bb1fbd825f9e9553b5d17ffb9f1">eglMakeCurrent_func</a> = EGLBoolean EGLAPIENTRY(*)(EGLDisplay dpy, EGLSurface draw, EGLSurface read, EGLContext ctx)</td></tr>
<tr class="separator:a3e001bb1fbd825f9e9553b5d17ffb9f1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab45761847d030754739c1b3b63cdbeab"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#ab45761847d030754739c1b3b63cdbeab">eglTerminate_func</a> = EGLBoolean EGLAPIENTRY(*)(EGLDisplay dpy)</td></tr>
<tr class="separator:ab45761847d030754739c1b3b63cdbeab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3645a2eb4da58ba0c3ed5c295913caf3"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#a3645a2eb4da58ba0c3ed5c295913caf3">eglGetError_func</a> = EGLint EGLAPIENTRY(*)()</td></tr>
<tr class="separator:a3645a2eb4da58ba0c3ed5c295913caf3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac02a0be24c3d1f37e5983f057355b192"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#ac02a0be24c3d1f37e5983f057355b192">eglQueryString_func</a> = char const *EGLAPIENTRY(*)(EGLDisplay dpy, EGLint name)</td></tr>
<tr class="separator:ac02a0be24c3d1f37e5983f057355b192"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a793509ad769774d6d2b2898a9307d745"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#a793509ad769774d6d2b2898a9307d745">glAttachShader_func</a> = void GL_APIENTRY(*)(GLuint program, GLuint shader)</td></tr>
<tr class="separator:a793509ad769774d6d2b2898a9307d745"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeb78376a832e7aa3cb91e1ceef89666e"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#aeb78376a832e7aa3cb91e1ceef89666e">glCompileShader_func</a> = void GL_APIENTRY(*)(GLuint shader)</td></tr>
<tr class="separator:aeb78376a832e7aa3cb91e1ceef89666e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0dd4e24993409491077ee74922a404e1"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#a0dd4e24993409491077ee74922a404e1">glCreateProgram_func</a> = GLuint GL_APIENTRY(*)()</td></tr>
<tr class="separator:a0dd4e24993409491077ee74922a404e1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a58cb9a679676e373b4cc6d0a518131d5"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#a58cb9a679676e373b4cc6d0a518131d5">glCreateShader_func</a> = GLuint GL_APIENTRY(*)(GLenum type)</td></tr>
<tr class="separator:a58cb9a679676e373b4cc6d0a518131d5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7d313afe766055d773c95b359521fb22"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#a7d313afe766055d773c95b359521fb22">glDeleteProgram_func</a> = void GL_APIENTRY(*)(GLuint program)</td></tr>
<tr class="separator:a7d313afe766055d773c95b359521fb22"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0d49b3e64773db40479f7c4b1835ec1d"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#a0d49b3e64773db40479f7c4b1835ec1d">glDeleteShader_func</a> = void GL_APIENTRY(*)(GLuint shader)</td></tr>
<tr class="separator:a0d49b3e64773db40479f7c4b1835ec1d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8a88f545679d1909b29aabad8fbfe31e"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#a8a88f545679d1909b29aabad8fbfe31e">glDetachShader_func</a> = void GL_APIENTRY(*)(GLuint program, GLuint shader)</td></tr>
<tr class="separator:a8a88f545679d1909b29aabad8fbfe31e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad5109705500d3ca577909a72388d2dba"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#ad5109705500d3ca577909a72388d2dba">glGetProgramInfoLog_func</a> = void GL_APIENTRY(*)(GLuint program, GLsizei bufsize, GLsizei *length, GLchar *infolog)</td></tr>
<tr class="separator:ad5109705500d3ca577909a72388d2dba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8f2e0943b90ed6e7ff51b3458fcbd6aa"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#a8f2e0943b90ed6e7ff51b3458fcbd6aa">glGetProgramiv_func</a> = void GL_APIENTRY(*)(GLuint program, GLenum pname, GLint *params)</td></tr>
<tr class="separator:a8f2e0943b90ed6e7ff51b3458fcbd6aa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a64a4e181f49b72a4c50d8e8e5ad52076"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#a64a4e181f49b72a4c50d8e8e5ad52076">glGetShaderInfoLog_func</a> = void GL_APIENTRY(*)(GLuint shader, GLsizei bufsize, GLsizei *length, GLchar *infolog)</td></tr>
<tr class="separator:a64a4e181f49b72a4c50d8e8e5ad52076"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a098aea49ac81aedbe84aa20873dbacac"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#a098aea49ac81aedbe84aa20873dbacac">glGetShaderiv_func</a> = void GL_APIENTRY(*)(GLuint shader, GLenum pname, GLint *params)</td></tr>
<tr class="separator:a098aea49ac81aedbe84aa20873dbacac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaba74f195d36a2db4f13739aae07424a"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#aaba74f195d36a2db4f13739aae07424a">glLinkProgram_func</a> = void GL_APIENTRY(*)(GLuint program)</td></tr>
<tr class="separator:aaba74f195d36a2db4f13739aae07424a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8654fc903edd9eacfe22788cab9b83e7"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#a8654fc903edd9eacfe22788cab9b83e7">glShaderSource_func</a> = void GL_APIENTRY(*)(GLuint shader, GLsizei count, const GLchar *const *string, const GLint *length)</td></tr>
<tr class="separator:a8654fc903edd9eacfe22788cab9b83e7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8dbb590cdc005f7db2dae87085921ec1"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#a8dbb590cdc005f7db2dae87085921ec1">glUseProgram_func</a> = void GL_APIENTRY(*)(GLuint program)</td></tr>
<tr class="separator:a8dbb590cdc005f7db2dae87085921ec1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aca46e08b3624bcfc5540d0d36e577688"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#aca46e08b3624bcfc5540d0d36e577688">glBindBuffer_func</a> = void GL_APIENTRY(*)(GLenum target, GLuint buffer)</td></tr>
<tr class="separator:aca46e08b3624bcfc5540d0d36e577688"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a435a9ea180e443d4500084da695323b6"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#a435a9ea180e443d4500084da695323b6">glBindBufferBase_func</a> = void GL_APIENTRY(*)(GLenum target, GLuint index, GLuint buffer)</td></tr>
<tr class="separator:a435a9ea180e443d4500084da695323b6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a229121aaf2c5e610f5e3cab090cfab38"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#a229121aaf2c5e610f5e3cab090cfab38">glBufferData_func</a> = void GL_APIENTRY(*)(GLenum target, GLsizeiptr size, const GLvoid *data, GLenum usage)</td></tr>
<tr class="separator:a229121aaf2c5e610f5e3cab090cfab38"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4e3efbc91e67ce6aa1659916556634ab"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#a4e3efbc91e67ce6aa1659916556634ab">glDeleteBuffers_func</a> = void GL_APIENTRY(*)(GLsizei n, const GLuint *buffers)</td></tr>
<tr class="separator:a4e3efbc91e67ce6aa1659916556634ab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab67febd926ffed1c0d55a827dafeda18"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#ab67febd926ffed1c0d55a827dafeda18">glDispatchCompute_func</a> = void GL_APIENTRY(*)(GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z)</td></tr>
<tr class="separator:ab67febd926ffed1c0d55a827dafeda18"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a607609f737fab0b0565a7b84f2fa7d98"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#a607609f737fab0b0565a7b84f2fa7d98">glFlush_func</a> = void GL_APIENTRY(*)()</td></tr>
<tr class="separator:a607609f737fab0b0565a7b84f2fa7d98"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3b33df6fc93d0e151b779d1f253ceb97"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#a3b33df6fc93d0e151b779d1f253ceb97">glGenBuffers_func</a> = void GL_APIENTRY(*)(GLsizei n, GLuint *buffers)</td></tr>
<tr class="separator:a3b33df6fc93d0e151b779d1f253ceb97"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abdeb5e4397d8da638a60f53699040faf"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#abdeb5e4397d8da638a60f53699040faf">glGetProgramResourceIndex_func</a> = GLuint GL_APIENTRY(*)(GLuint program, GLenum programInterface, const GLchar *name)</td></tr>
<tr class="separator:abdeb5e4397d8da638a60f53699040faf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acb6c0529eae7ee48cbde0d1e1389522d"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#acb6c0529eae7ee48cbde0d1e1389522d">glGetUniformLocation_func</a> = GLint GL_APIENTRY(*)(GLuint program, const GLchar *name)</td></tr>
<tr class="separator:acb6c0529eae7ee48cbde0d1e1389522d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2ea23820bdcb09cccc54556c879de64c"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#a2ea23820bdcb09cccc54556c879de64c">glMapBufferRange_func</a> = void *GL_APIENTRY(*)(GLenum target, GLintptr <a class="el" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>, GLsizeiptr length, GLbitfield access)</td></tr>
<tr class="separator:a2ea23820bdcb09cccc54556c879de64c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af9416600d973cf090c41f584c874dd9d"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#af9416600d973cf090c41f584c874dd9d">glMemoryBarrier_func</a> = void GL_APIENTRY(*)(GLbitfield barriers)</td></tr>
<tr class="separator:af9416600d973cf090c41f584c874dd9d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a90f868801b1aacb4e6732d56a4a80447"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#a90f868801b1aacb4e6732d56a4a80447">glUniform1ui_func</a> = void GL_APIENTRY(*)(GLint location, GLuint v0)</td></tr>
<tr class="separator:a90f868801b1aacb4e6732d56a4a80447"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad2a594cf5da72d124e1b7876af63897a"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#ad2a594cf5da72d124e1b7876af63897a">glUnmapBuffer_func</a> = GLboolean GL_APIENTRY(*)(GLenum target)</td></tr>
<tr class="separator:ad2a594cf5da72d124e1b7876af63897a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1ee47b6b815699bd4da94c665c219572"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#a1ee47b6b815699bd4da94c665c219572">glGetError_func</a> = GLenum GL_APIENTRY(*)()</td></tr>
<tr class="separator:a1ee47b6b815699bd4da94c665c219572"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab6309a5c7ea63364d22adc28fceeae12"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#ab6309a5c7ea63364d22adc28fceeae12">glGetString_func</a> = const GLubyte *GL_APIENTRY(*)(GLenum name)</td></tr>
<tr class="separator:ab6309a5c7ea63364d22adc28fceeae12"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a72c559fda39b1ce7e3cb8bdec4f7e23d"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#a72c559fda39b1ce7e3cb8bdec4f7e23d">glGetActiveUniformBlockiv_func</a> = void GL_APIENTRY(*)(GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint *params)</td></tr>
<tr class="separator:a72c559fda39b1ce7e3cb8bdec4f7e23d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a408f02b52dabea4ad43a6af932ef60b0"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#a408f02b52dabea4ad43a6af932ef60b0">glUniformBlockBinding_func</a> = void GL_APIENTRY(*)(GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding)</td></tr>
<tr class="separator:a408f02b52dabea4ad43a6af932ef60b0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aebb3ff24c30f701f357afbd9fbcb3cdb"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#aebb3ff24c30f701f357afbd9fbcb3cdb">glGetUniformBlockIndex_func</a> = GLuint GL_APIENTRY(*)(GLuint program, const GLchar *uniformBlockName)</td></tr>
<tr class="separator:aebb3ff24c30f701f357afbd9fbcb3cdb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afe67a81cde1204302022baf01894474b"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#afe67a81cde1204302022baf01894474b">glGenTextures_func</a> = void GL_APIENTRY(*)(GLsizei n, GLuint *textures)</td></tr>
<tr class="separator:afe67a81cde1204302022baf01894474b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7dbe5708f69c0323c005b5911dd79e39"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#a7dbe5708f69c0323c005b5911dd79e39">glDeleteTextures_func</a> = void GL_APIENTRY(*)(GLsizei n, const GLuint *textures)</td></tr>
<tr class="separator:a7dbe5708f69c0323c005b5911dd79e39"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa2f5d9a549dfc28d72e0bba335dd48b3"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#aa2f5d9a549dfc28d72e0bba335dd48b3">glBindTexture_func</a> = void GL_APIENTRY(*)(GLenum target, GLuint texture)</td></tr>
<tr class="separator:aa2f5d9a549dfc28d72e0bba335dd48b3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8a57841dd4e175e1afb79634a2fc7838"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#a8a57841dd4e175e1afb79634a2fc7838">glTexImage2D_func</a> = void GL_APIENTRY(*)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid *pixels)</td></tr>
<tr class="separator:a8a57841dd4e175e1afb79634a2fc7838"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1c7704e1b45774a3b3e3de40224a7e00"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#a1c7704e1b45774a3b3e3de40224a7e00">glGenFramebuffers_func</a> = void GL_APIENTRY(*)(GLsizei n, GLuint *framebuffers)</td></tr>
<tr class="separator:a1c7704e1b45774a3b3e3de40224a7e00"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7b5954fd97217b3141ad7e14dcc141d6"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#a7b5954fd97217b3141ad7e14dcc141d6">glDeleteFramebuffers_func</a> = void GL_APIENTRY(*)(GLsizei n, const GLuint *framebuffers)</td></tr>
<tr class="separator:a7b5954fd97217b3141ad7e14dcc141d6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae3ce3fe66e38e3678fc08ffb8208d5ec"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#ae3ce3fe66e38e3678fc08ffb8208d5ec">glBindFramebuffer_func</a> = void GL_APIENTRY(*)(GLenum target, GLuint framebuffer)</td></tr>
<tr class="separator:ae3ce3fe66e38e3678fc08ffb8208d5ec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab56dc4c4ad921ac0a23ccec193e963b2"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#ab56dc4c4ad921ac0a23ccec193e963b2">glFramebufferTexture2D_func</a> = void GL_APIENTRY(*)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level)</td></tr>
<tr class="separator:ab56dc4c4ad921ac0a23ccec193e963b2"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a8874678c01737df89fe9fa1ffde570a8"><td class="memItemLeft" align="right" valign="top">__eglMustCastToProperFunctionPointerType EGLAPIENTRY&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#a8874678c01737df89fe9fa1ffde570a8">eglGetProcAddress</a> (const char *procname)</td></tr>
<tr class="separator:a8874678c01737df89fe9fa1ffde570a8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0f290b0be95432b64e73ead723a947b7"><td class="memItemLeft" align="right" valign="top">EGLBoolean EGLAPIENTRY&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#a0f290b0be95432b64e73ead723a947b7">eglBindAPI</a> (EGLenum api)</td></tr>
<tr class="separator:a0f290b0be95432b64e73ead723a947b7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a89a92c28d6d90e4c0fd1de37f9680a79"><td class="memItemLeft" align="right" valign="top">EGLBoolean EGLAPIENTRY&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#a89a92c28d6d90e4c0fd1de37f9680a79">eglChooseConfig</a> (EGLDisplay dpy, const EGLint *attrib_list, EGLConfig *configs, EGLint config_size, EGLint *num_config)</td></tr>
<tr class="separator:a89a92c28d6d90e4c0fd1de37f9680a79"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a82878b3783ce2a10736c91f7d153d009"><td class="memItemLeft" align="right" valign="top">EGLContext EGLAPIENTRY&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#a82878b3783ce2a10736c91f7d153d009">eglCreateContext</a> (EGLDisplay dpy, EGLConfig config, EGLContext share_context, const EGLint *attrib_list)</td></tr>
<tr class="separator:a82878b3783ce2a10736c91f7d153d009"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a80088eae3ba8f009a48c358adcefd3ca"><td class="memItemLeft" align="right" valign="top">EGLBoolean EGLAPIENTRY&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#a80088eae3ba8f009a48c358adcefd3ca">eglDestroyContext</a> (EGLDisplay dpy, EGLContext ctx)</td></tr>
<tr class="separator:a80088eae3ba8f009a48c358adcefd3ca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2ffc3e7fe8b002896756a3508800d3fa"><td class="memItemLeft" align="right" valign="top">EGLDisplay EGLAPIENTRY&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#a2ffc3e7fe8b002896756a3508800d3fa">eglGetDisplay</a> (EGLNativeDisplayType display_id)</td></tr>
<tr class="separator:a2ffc3e7fe8b002896756a3508800d3fa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a071bc3efa12248af6089950f482689b9"><td class="memItemLeft" align="right" valign="top">EGLBoolean EGLAPIENTRY&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#a071bc3efa12248af6089950f482689b9">eglInitialize</a> (EGLDisplay dpy, EGLint *major, EGLint *minor)</td></tr>
<tr class="separator:a071bc3efa12248af6089950f482689b9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af6db9d046fe0e996c3693373864e6254"><td class="memItemLeft" align="right" valign="top">EGLBoolean EGLAPIENTRY&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#af6db9d046fe0e996c3693373864e6254">eglMakeCurrent</a> (EGLDisplay dpy, EGLSurface draw, EGLSurface read, EGLContext ctx)</td></tr>
<tr class="separator:af6db9d046fe0e996c3693373864e6254"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a184f520190322b632ca710695195746a"><td class="memItemLeft" align="right" valign="top">EGLBoolean EGLAPIENTRY&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#a184f520190322b632ca710695195746a">eglTerminate</a> (EGLDisplay dpy)</td></tr>
<tr class="separator:a184f520190322b632ca710695195746a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a161b2c24e091cfa13e2eeb66e66ccf04"><td class="memItemLeft" align="right" valign="top">EGLint EGLAPIENTRY&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#a161b2c24e091cfa13e2eeb66e66ccf04">eglGetError</a> ()</td></tr>
<tr class="separator:a161b2c24e091cfa13e2eeb66e66ccf04"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4d1a4543cb39945be511a48c6b12efb8"><td class="memItemLeft" align="right" valign="top">char const  *EGLAPIENTRY&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#a4d1a4543cb39945be511a48c6b12efb8">eglQueryString</a> (EGLDisplay dpy, EGLint name)</td></tr>
<tr class="separator:a4d1a4543cb39945be511a48c6b12efb8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a75f4854b14c6eba12a7feb4d53933d6f"><td class="memItemLeft" align="right" valign="top">void GL_APIENTRY&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#a75f4854b14c6eba12a7feb4d53933d6f">glAttachShader</a> (GLuint program, GLuint shader)</td></tr>
<tr class="separator:a75f4854b14c6eba12a7feb4d53933d6f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a76232dcbc71f0cb2b32c4e0f46cb2b64"><td class="memItemLeft" align="right" valign="top">void GL_APIENTRY&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#a76232dcbc71f0cb2b32c4e0f46cb2b64">glCompileShader</a> (GLuint shader)</td></tr>
<tr class="separator:a76232dcbc71f0cb2b32c4e0f46cb2b64"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:add28e8aa989a1ec2bffc6a45f7a75355"><td class="memItemLeft" align="right" valign="top">GLuint GL_APIENTRY&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#add28e8aa989a1ec2bffc6a45f7a75355">glCreateProgram</a> ()</td></tr>
<tr class="separator:add28e8aa989a1ec2bffc6a45f7a75355"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab8cce2e1a98daed0249b9a8f929dd176"><td class="memItemLeft" align="right" valign="top">GLuint GL_APIENTRY&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#ab8cce2e1a98daed0249b9a8f929dd176">glCreateShader</a> (GLenum type)</td></tr>
<tr class="separator:ab8cce2e1a98daed0249b9a8f929dd176"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a334ce7125cfb54a811b748f23f228417"><td class="memItemLeft" align="right" valign="top">void GL_APIENTRY&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#a334ce7125cfb54a811b748f23f228417">glDeleteProgram</a> (GLuint program)</td></tr>
<tr class="separator:a334ce7125cfb54a811b748f23f228417"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3a5fb1ea4384fc30fedc9a6caf73e6e1"><td class="memItemLeft" align="right" valign="top">void GL_APIENTRY&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#a3a5fb1ea4384fc30fedc9a6caf73e6e1">glDeleteShader</a> (GLuint shader)</td></tr>
<tr class="separator:a3a5fb1ea4384fc30fedc9a6caf73e6e1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4c71a67ba2f8104097a63d4f41a7e64e"><td class="memItemLeft" align="right" valign="top">void GL_APIENTRY&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#a4c71a67ba2f8104097a63d4f41a7e64e">glDetachShader</a> (GLuint program, GLuint shader)</td></tr>
<tr class="separator:a4c71a67ba2f8104097a63d4f41a7e64e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9cf2058f28e321f12a8e8c4c80ece00f"><td class="memItemLeft" align="right" valign="top">void GL_APIENTRY&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#a9cf2058f28e321f12a8e8c4c80ece00f">glGetProgramInfoLog</a> (GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog)</td></tr>
<tr class="separator:a9cf2058f28e321f12a8e8c4c80ece00f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acf2f21042df45cad38c043cd9198628b"><td class="memItemLeft" align="right" valign="top">void GL_APIENTRY&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#acf2f21042df45cad38c043cd9198628b">glGetProgramiv</a> (GLuint program, GLenum pname, GLint *params)</td></tr>
<tr class="separator:acf2f21042df45cad38c043cd9198628b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac7c9e9800f919f0f217a8465994d81de"><td class="memItemLeft" align="right" valign="top">void GL_APIENTRY&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#ac7c9e9800f919f0f217a8465994d81de">glGetShaderInfoLog</a> (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog)</td></tr>
<tr class="separator:ac7c9e9800f919f0f217a8465994d81de"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac164fec059717a7fdbf42aea5ea2ca1d"><td class="memItemLeft" align="right" valign="top">void GL_APIENTRY&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#ac164fec059717a7fdbf42aea5ea2ca1d">glGetShaderiv</a> (GLuint shader, GLenum pname, GLint *params)</td></tr>
<tr class="separator:ac164fec059717a7fdbf42aea5ea2ca1d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a07e3604c0cd0da716e5de2a7ec11c8ac"><td class="memItemLeft" align="right" valign="top">void GL_APIENTRY&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#a07e3604c0cd0da716e5de2a7ec11c8ac">glLinkProgram</a> (GLuint program)</td></tr>
<tr class="separator:a07e3604c0cd0da716e5de2a7ec11c8ac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9f1f3138bcad87b01f61c136942875bd"><td class="memItemLeft" align="right" valign="top">void GL_APIENTRY&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#a9f1f3138bcad87b01f61c136942875bd">glShaderSource</a> (GLuint shader, GLsizei count, const GLchar *const *string, const GLint *length)</td></tr>
<tr class="separator:a9f1f3138bcad87b01f61c136942875bd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab685deb85a327c7a4c22285619c3f26a"><td class="memItemLeft" align="right" valign="top">void GL_APIENTRY&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#ab685deb85a327c7a4c22285619c3f26a">glUseProgram</a> (GLuint program)</td></tr>
<tr class="separator:ab685deb85a327c7a4c22285619c3f26a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad9528d3fb71b7ee1e23fab6aed1cba83"><td class="memItemLeft" align="right" valign="top">void GL_APIENTRY&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#ad9528d3fb71b7ee1e23fab6aed1cba83">glBindBuffer</a> (GLenum target, GLuint buffer)</td></tr>
<tr class="separator:ad9528d3fb71b7ee1e23fab6aed1cba83"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a377c2f368dc6d8961943363077581dbd"><td class="memItemLeft" align="right" valign="top">void GL_APIENTRY&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#a377c2f368dc6d8961943363077581dbd">glBindBufferBase</a> (GLenum target, GLuint index, GLuint buffer)</td></tr>
<tr class="separator:a377c2f368dc6d8961943363077581dbd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4991c46050f5040b9fc85fc35f8297ed"><td class="memItemLeft" align="right" valign="top">void GL_APIENTRY&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#a4991c46050f5040b9fc85fc35f8297ed">glBufferData</a> (GLenum target, GLsizeiptr size, const GLvoid *data, GLenum usage)</td></tr>
<tr class="separator:a4991c46050f5040b9fc85fc35f8297ed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a528e76a977061a313bad3ab6fe7747fe"><td class="memItemLeft" align="right" valign="top">void GL_APIENTRY&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#a528e76a977061a313bad3ab6fe7747fe">glDeleteBuffers</a> (GLsizei n, const GLuint *buffers)</td></tr>
<tr class="separator:a528e76a977061a313bad3ab6fe7747fe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af7682f051486a2d562206f70b2c212ab"><td class="memItemLeft" align="right" valign="top">void GL_APIENTRY&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#af7682f051486a2d562206f70b2c212ab">glDispatchCompute</a> (GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z)</td></tr>
<tr class="separator:af7682f051486a2d562206f70b2c212ab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9ee298e3e0590cd31dffbc2dd8a5702c"><td class="memItemLeft" align="right" valign="top">void GL_APIENTRY&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#a9ee298e3e0590cd31dffbc2dd8a5702c">glFlush</a> (void)</td></tr>
<tr class="separator:a9ee298e3e0590cd31dffbc2dd8a5702c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a68154b66955d77ae9c5192218e02ebdc"><td class="memItemLeft" align="right" valign="top">void GL_APIENTRY&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#a68154b66955d77ae9c5192218e02ebdc">glGenBuffers</a> (GLsizei n, GLuint *buffers)</td></tr>
<tr class="separator:a68154b66955d77ae9c5192218e02ebdc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac203fe33b5832bc45e58cd4abeb4a234"><td class="memItemLeft" align="right" valign="top">GLuint GL_APIENTRY&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#ac203fe33b5832bc45e58cd4abeb4a234">glGetProgramResourceIndex</a> (GLuint program, GLenum programInterface, const GLchar *name)</td></tr>
<tr class="separator:ac203fe33b5832bc45e58cd4abeb4a234"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab3f63cc618bace46bf4624c9a21dd3c4"><td class="memItemLeft" align="right" valign="top">GLint GL_APIENTRY&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#ab3f63cc618bace46bf4624c9a21dd3c4">glGetUniformLocation</a> (GLuint program, const GLchar *name)</td></tr>
<tr class="separator:ab3f63cc618bace46bf4624c9a21dd3c4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7a6ac79ff4cf0bf3ed8c5cd3953ec6de"><td class="memItemLeft" align="right" valign="top">void *GL_APIENTRY&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#a7a6ac79ff4cf0bf3ed8c5cd3953ec6de">glMapBufferRange</a> (GLenum target, GLintptr <a class="el" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>, GLsizeiptr length, GLbitfield access)</td></tr>
<tr class="separator:a7a6ac79ff4cf0bf3ed8c5cd3953ec6de"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa3889deebdf32118fa72107fe521e131"><td class="memItemLeft" align="right" valign="top">void GL_APIENTRY&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#aa3889deebdf32118fa72107fe521e131">glMemoryBarrier</a> (GLbitfield barriers)</td></tr>
<tr class="separator:aa3889deebdf32118fa72107fe521e131"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a33ca42089dac5eea0502f914d4b41629"><td class="memItemLeft" align="right" valign="top">void GL_APIENTRY&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#a33ca42089dac5eea0502f914d4b41629">glUniform1ui</a> (GLint location, GLuint v0)</td></tr>
<tr class="separator:a33ca42089dac5eea0502f914d4b41629"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae5331c578edd6784ab4cc6e4f0710938"><td class="memItemLeft" align="right" valign="top">GLboolean GL_APIENTRY&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#ae5331c578edd6784ab4cc6e4f0710938">glUnmapBuffer</a> (GLenum target)</td></tr>
<tr class="separator:ae5331c578edd6784ab4cc6e4f0710938"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af677180282510057a304e67814062174"><td class="memItemLeft" align="right" valign="top">GLenum GL_APIENTRY&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#af677180282510057a304e67814062174">glGetError</a> (void)</td></tr>
<tr class="separator:af677180282510057a304e67814062174"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2ee378c6363791b2a733b2ba4ec6e846"><td class="memItemLeft" align="right" valign="top">const GLubyte *GL_APIENTRY&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#a2ee378c6363791b2a733b2ba4ec6e846">glGetString</a> (GLenum name)</td></tr>
<tr class="separator:a2ee378c6363791b2a733b2ba4ec6e846"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a21827516ba1b8b4c12c6238b3fd67200"><td class="memItemLeft" align="right" valign="top">void GL_APIENTRY&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#a21827516ba1b8b4c12c6238b3fd67200">glGetActiveUniformBlockiv</a> (GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint *params)</td></tr>
<tr class="separator:a21827516ba1b8b4c12c6238b3fd67200"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5943aadf8a3d988af82624d19cbd1c0a"><td class="memItemLeft" align="right" valign="top">void GL_APIENTRY&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#a5943aadf8a3d988af82624d19cbd1c0a">glUniformBlockBinding</a> (GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding)</td></tr>
<tr class="separator:a5943aadf8a3d988af82624d19cbd1c0a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a81b3135fe4b76436b0e901032fc4df1b"><td class="memItemLeft" align="right" valign="top">GLuint GL_APIENTRY&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#a81b3135fe4b76436b0e901032fc4df1b">glGetUniformBlockIndex</a> (GLuint program, const GLchar *uniformBlockName)</td></tr>
<tr class="separator:a81b3135fe4b76436b0e901032fc4df1b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeaa37f1850f96a9610b10f87af5b44a4"><td class="memItemLeft" align="right" valign="top">void GL_APIENTRY&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#aeaa37f1850f96a9610b10f87af5b44a4">glGenTextures</a> (GLsizei n, GLuint *textures)</td></tr>
<tr class="separator:aeaa37f1850f96a9610b10f87af5b44a4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afa7af01b67ca2c80d2d33824cdd1e694"><td class="memItemLeft" align="right" valign="top">void GL_APIENTRY&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#afa7af01b67ca2c80d2d33824cdd1e694">glDeleteTextures</a> (GLsizei n, const GLuint *textures)</td></tr>
<tr class="separator:afa7af01b67ca2c80d2d33824cdd1e694"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afdd4572fd462b84e467e9af2a94d1116"><td class="memItemLeft" align="right" valign="top">void GL_APIENTRY&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#afdd4572fd462b84e467e9af2a94d1116">glBindTexture</a> (GLenum target, GLuint texture)</td></tr>
<tr class="separator:afdd4572fd462b84e467e9af2a94d1116"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a52e5a8e8cf2a333616f36781b02f6b32"><td class="memItemLeft" align="right" valign="top">void GL_APIENTRY&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#a52e5a8e8cf2a333616f36781b02f6b32">glTexImage2D</a> (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid *pixels)</td></tr>
<tr class="separator:a52e5a8e8cf2a333616f36781b02f6b32"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1773d8c97f9c1063a45db4cf9d7c1613"><td class="memItemLeft" align="right" valign="top">void GL_APIENTRY&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#a1773d8c97f9c1063a45db4cf9d7c1613">glGenFramebuffers</a> (GLsizei n, GLuint *framebuffers)</td></tr>
<tr class="separator:a1773d8c97f9c1063a45db4cf9d7c1613"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abe8c9f9c8d9e2fb48fbd3ea2291caca9"><td class="memItemLeft" align="right" valign="top">void GL_APIENTRY&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#abe8c9f9c8d9e2fb48fbd3ea2291caca9">glDeleteFramebuffers</a> (GLsizei n, const GLuint *framebuffers)</td></tr>
<tr class="separator:abe8c9f9c8d9e2fb48fbd3ea2291caca9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4213ab91e8c4fc1dc12f3904f7cc170e"><td class="memItemLeft" align="right" valign="top">void GL_APIENTRY&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#a4213ab91e8c4fc1dc12f3904f7cc170e">glBindFramebuffer</a> (GLenum target, GLuint framebuffer)</td></tr>
<tr class="separator:a4213ab91e8c4fc1dc12f3904f7cc170e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1c5dc7cc04f7c0b1bd7c181b0da84d9b"><td class="memItemLeft" align="right" valign="top">void GL_APIENTRY&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_open_g_l_e_s_8cpp.xhtml#a1c5dc7cc04f7c0b1bd7c181b0da84d9b">glFramebufferTexture2D</a> (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level)</td></tr>
<tr class="separator:a1c5dc7cc04f7c0b1bd7c181b0da84d9b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Macro Definition Documentation</h2>
<a id="aa3518d2943000be78d58e9d433cc4eaa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa3518d2943000be78d58e9d433cc4eaa">&#9670;&nbsp;</a></span>EGL_ENTRY <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define EGL_ENTRY</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">_api</td><td>)</td>
          <td>&#160;&#160;&#160;_api = reinterpret_cast&lt;_api##_func&gt;(dlsym(egl_handle, #_api));</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00152">152</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>

</div>
</div>
<a id="aa3518d2943000be78d58e9d433cc4eaa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa3518d2943000be78d58e9d433cc4eaa">&#9670;&nbsp;</a></span>EGL_ENTRY <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define EGL_ENTRY</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">_api</td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line"><span class="keywordflow">if</span>((_api) == <span class="keyword">nullptr</span>) \</div><div class="line">        (_api) = reinterpret_cast&lt;_api##_func&gt;(<a class="code" href="_open_g_l_e_s_8cpp.xhtml#a8874678c01737df89fe9fa1ffde570a8">eglGetProcAddress</a>(#_api));</div><div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a8874678c01737df89fe9fa1ffde570a8"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a8874678c01737df89fe9fa1ffde570a8">eglGetProcAddress</a></div><div class="ttdeci">__eglMustCastToProperFunctionPointerType EGLAPIENTRY eglGetProcAddress(const char *procname)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00165">OpenGLES.cpp:165</a></div></div>
</div><!-- fragment -->
<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00152">152</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>

</div>
</div>
<a id="aa3518d2943000be78d58e9d433cc4eaa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa3518d2943000be78d58e9d433cc4eaa">&#9670;&nbsp;</a></span>EGL_ENTRY <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define EGL_ENTRY</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">_api</td><td>)</td>
          <td>&#160;&#160;&#160;_api##_func _api = nullptr;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00152">152</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>

</div>
</div>
<a id="a5b691a78f9cef2aed8c5dc87b0898b39"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5b691a78f9cef2aed8c5dc87b0898b39">&#9670;&nbsp;</a></span>GL_ENTRY <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define GL_ENTRY</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">_api</td><td>)</td>
          <td>&#160;&#160;&#160;_api = reinterpret_cast&lt;_api##_func&gt;(<a class="el" href="_open_g_l_e_s_8cpp.xhtml#a8874678c01737df89fe9fa1ffde570a8">eglGetProcAddress</a>(#_api));</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00153">153</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>

</div>
</div>
<a id="a5b691a78f9cef2aed8c5dc87b0898b39"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5b691a78f9cef2aed8c5dc87b0898b39">&#9670;&nbsp;</a></span>GL_ENTRY <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define GL_ENTRY</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">_api</td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line"><span class="keywordflow">if</span>((_api) == <span class="keyword">nullptr</span>) \</div><div class="line">        (_api) = reinterpret_cast&lt;_api##_func&gt;(dlsym(handle, #_api));</div></div><!-- fragment -->
<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00153">153</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>

</div>
</div>
<a id="a5b691a78f9cef2aed8c5dc87b0898b39"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5b691a78f9cef2aed8c5dc87b0898b39">&#9670;&nbsp;</a></span>GL_ENTRY <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define GL_ENTRY</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">_api</td><td>)</td>
          <td>&#160;&#160;&#160;<a class="el" href="_open_g_l_e_s_8cpp.xhtml#aa3518d2943000be78d58e9d433cc4eaa">EGL_ENTRY</a>(_api)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00153">153</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>

</div>
</div>
<h2 class="groupheader">Typedef Documentation</h2>
<a id="a39bb058fb4f13b0ceb51a30c2e7c13ba"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a39bb058fb4f13b0ceb51a30c2e7c13ba">&#9670;&nbsp;</a></span>eglBindAPI_func</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="_open_g_l_e_s_8cpp.xhtml#a39bb058fb4f13b0ceb51a30c2e7c13ba">eglBindAPI_func</a> =  EGLBoolean EGLAPIENTRY (*)(EGLenum api)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00032">32</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>

</div>
</div>
<a id="a45bcdc2fee472f58603654d00fac7fea"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a45bcdc2fee472f58603654d00fac7fea">&#9670;&nbsp;</a></span>eglChooseConfig_func</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="_open_g_l_e_s_8cpp.xhtml#a45bcdc2fee472f58603654d00fac7fea">eglChooseConfig_func</a> =  EGLBoolean EGLAPIENTRY (*)(EGLDisplay dpy, const EGLint *attrib_list, EGLConfig *configs, EGLint config_size, EGLint *num_config)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00033">33</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>

</div>
</div>
<a id="ae40fe14e93e58a809bbf1f8bebcee62b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae40fe14e93e58a809bbf1f8bebcee62b">&#9670;&nbsp;</a></span>eglCreateContext_func</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="_open_g_l_e_s_8cpp.xhtml#ae40fe14e93e58a809bbf1f8bebcee62b">eglCreateContext_func</a> =  EGLContext EGLAPIENTRY (*)(EGLDisplay dpy, EGLConfig config, EGLContext share_context, const EGLint *attrib_list)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00034">34</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>

</div>
</div>
<a id="ad9a1fc168717a342b9e39793605ada2b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad9a1fc168717a342b9e39793605ada2b">&#9670;&nbsp;</a></span>eglDestroyContext_func</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="_open_g_l_e_s_8cpp.xhtml#ad9a1fc168717a342b9e39793605ada2b">eglDestroyContext_func</a> =  EGLBoolean EGLAPIENTRY (*)(EGLDisplay dpy, EGLContext ctx)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00035">35</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>

</div>
</div>
<a id="a26e9fec0fd229ae63fd93edb24cb9f3a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a26e9fec0fd229ae63fd93edb24cb9f3a">&#9670;&nbsp;</a></span>eglGetDisplay_func</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="_open_g_l_e_s_8cpp.xhtml#a26e9fec0fd229ae63fd93edb24cb9f3a">eglGetDisplay_func</a> =  EGLDisplay EGLAPIENTRY (*)(EGLNativeDisplayType display_id)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00036">36</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>

</div>
</div>
<a id="a3645a2eb4da58ba0c3ed5c295913caf3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3645a2eb4da58ba0c3ed5c295913caf3">&#9670;&nbsp;</a></span>eglGetError_func</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="_open_g_l_e_s_8cpp.xhtml#a3645a2eb4da58ba0c3ed5c295913caf3">eglGetError_func</a> =  EGLint EGLAPIENTRY (*)()</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00040">40</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>

</div>
</div>
<a id="addae612338f2d0f234acaa34df861926"></a>
<h2 class="memtitle"><span class="permalink"><a href="#addae612338f2d0f234acaa34df861926">&#9670;&nbsp;</a></span>eglGetProcAddress_func</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="_open_g_l_e_s_8cpp.xhtml#addae612338f2d0f234acaa34df861926">eglGetProcAddress_func</a> =  __eglMustCastToProperFunctionPointerType EGLAPIENTRY (*)(const char *procname)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00031">31</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>

</div>
</div>
<a id="a73309e644fd9f860f55ca14d24119cdf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a73309e644fd9f860f55ca14d24119cdf">&#9670;&nbsp;</a></span>eglInitialize_func</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="_open_g_l_e_s_8cpp.xhtml#a73309e644fd9f860f55ca14d24119cdf">eglInitialize_func</a> =  EGLBoolean EGLAPIENTRY (*)(EGLDisplay dpy, EGLint *major, EGLint *minor)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00037">37</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>

</div>
</div>
<a id="a3e001bb1fbd825f9e9553b5d17ffb9f1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3e001bb1fbd825f9e9553b5d17ffb9f1">&#9670;&nbsp;</a></span>eglMakeCurrent_func</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="_open_g_l_e_s_8cpp.xhtml#a3e001bb1fbd825f9e9553b5d17ffb9f1">eglMakeCurrent_func</a> =  EGLBoolean EGLAPIENTRY (*)(EGLDisplay dpy, EGLSurface draw, EGLSurface read, EGLContext ctx)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00038">38</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>

</div>
</div>
<a id="ac02a0be24c3d1f37e5983f057355b192"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac02a0be24c3d1f37e5983f057355b192">&#9670;&nbsp;</a></span>eglQueryString_func</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="_open_g_l_e_s_8cpp.xhtml#ac02a0be24c3d1f37e5983f057355b192">eglQueryString_func</a> =  char const * EGLAPIENTRY (*)(EGLDisplay dpy, EGLint name)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00041">41</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>

</div>
</div>
<a id="ab45761847d030754739c1b3b63cdbeab"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab45761847d030754739c1b3b63cdbeab">&#9670;&nbsp;</a></span>eglTerminate_func</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="_open_g_l_e_s_8cpp.xhtml#ab45761847d030754739c1b3b63cdbeab">eglTerminate_func</a> =  EGLBoolean EGLAPIENTRY (*)(EGLDisplay dpy)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00039">39</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>

</div>
</div>
<a id="a793509ad769774d6d2b2898a9307d745"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a793509ad769774d6d2b2898a9307d745">&#9670;&nbsp;</a></span>glAttachShader_func</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="_open_g_l_e_s_8cpp.xhtml#a793509ad769774d6d2b2898a9307d745">glAttachShader_func</a> =  void GL_APIENTRY (*)(GLuint program, GLuint shader)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00042">42</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>

</div>
</div>
<a id="aca46e08b3624bcfc5540d0d36e577688"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aca46e08b3624bcfc5540d0d36e577688">&#9670;&nbsp;</a></span>glBindBuffer_func</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="_open_g_l_e_s_8cpp.xhtml#aca46e08b3624bcfc5540d0d36e577688">glBindBuffer_func</a> =  void GL_APIENTRY (*)(GLenum target, GLuint buffer)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00056">56</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>

</div>
</div>
<a id="a435a9ea180e443d4500084da695323b6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a435a9ea180e443d4500084da695323b6">&#9670;&nbsp;</a></span>glBindBufferBase_func</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="_open_g_l_e_s_8cpp.xhtml#a435a9ea180e443d4500084da695323b6">glBindBufferBase_func</a> =  void GL_APIENTRY (*)(GLenum target, GLuint index, GLuint buffer)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00057">57</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>

</div>
</div>
<a id="ae3ce3fe66e38e3678fc08ffb8208d5ec"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae3ce3fe66e38e3678fc08ffb8208d5ec">&#9670;&nbsp;</a></span>glBindFramebuffer_func</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="_open_g_l_e_s_8cpp.xhtml#ae3ce3fe66e38e3678fc08ffb8208d5ec">glBindFramebuffer_func</a> =  void GL_APIENTRY (*)(GLenum target, GLuint framebuffer)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00081">81</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>

</div>
</div>
<a id="aa2f5d9a549dfc28d72e0bba335dd48b3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa2f5d9a549dfc28d72e0bba335dd48b3">&#9670;&nbsp;</a></span>glBindTexture_func</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="_open_g_l_e_s_8cpp.xhtml#aa2f5d9a549dfc28d72e0bba335dd48b3">glBindTexture_func</a> =  void GL_APIENTRY (*)(GLenum target, GLuint texture)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00076">76</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>

</div>
</div>
<a id="a229121aaf2c5e610f5e3cab090cfab38"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a229121aaf2c5e610f5e3cab090cfab38">&#9670;&nbsp;</a></span>glBufferData_func</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="_open_g_l_e_s_8cpp.xhtml#a229121aaf2c5e610f5e3cab090cfab38">glBufferData_func</a> =  void GL_APIENTRY (*)(GLenum target, GLsizeiptr size, const GLvoid *data, GLenum usage)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00058">58</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>

</div>
</div>
<a id="aeb78376a832e7aa3cb91e1ceef89666e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aeb78376a832e7aa3cb91e1ceef89666e">&#9670;&nbsp;</a></span>glCompileShader_func</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="_open_g_l_e_s_8cpp.xhtml#aeb78376a832e7aa3cb91e1ceef89666e">glCompileShader_func</a> =  void GL_APIENTRY (*)(GLuint shader)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00043">43</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>

</div>
</div>
<a id="a0dd4e24993409491077ee74922a404e1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0dd4e24993409491077ee74922a404e1">&#9670;&nbsp;</a></span>glCreateProgram_func</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="_open_g_l_e_s_8cpp.xhtml#a0dd4e24993409491077ee74922a404e1">glCreateProgram_func</a> =  GLuint GL_APIENTRY (*)()</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00044">44</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>

</div>
</div>
<a id="a58cb9a679676e373b4cc6d0a518131d5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a58cb9a679676e373b4cc6d0a518131d5">&#9670;&nbsp;</a></span>glCreateShader_func</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="_open_g_l_e_s_8cpp.xhtml#a58cb9a679676e373b4cc6d0a518131d5">glCreateShader_func</a> =  GLuint GL_APIENTRY (*)(GLenum type)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00045">45</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>

</div>
</div>
<a id="a4e3efbc91e67ce6aa1659916556634ab"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4e3efbc91e67ce6aa1659916556634ab">&#9670;&nbsp;</a></span>glDeleteBuffers_func</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="_open_g_l_e_s_8cpp.xhtml#a4e3efbc91e67ce6aa1659916556634ab">glDeleteBuffers_func</a> =  void GL_APIENTRY (*)(GLsizei n, const GLuint *buffers)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00059">59</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>

</div>
</div>
<a id="a7b5954fd97217b3141ad7e14dcc141d6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7b5954fd97217b3141ad7e14dcc141d6">&#9670;&nbsp;</a></span>glDeleteFramebuffers_func</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="_open_g_l_e_s_8cpp.xhtml#a7b5954fd97217b3141ad7e14dcc141d6">glDeleteFramebuffers_func</a> =  void GL_APIENTRY (*)(GLsizei n, const GLuint *framebuffers)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00080">80</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>

</div>
</div>
<a id="a7d313afe766055d773c95b359521fb22"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7d313afe766055d773c95b359521fb22">&#9670;&nbsp;</a></span>glDeleteProgram_func</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="_open_g_l_e_s_8cpp.xhtml#a7d313afe766055d773c95b359521fb22">glDeleteProgram_func</a> =  void GL_APIENTRY (*)(GLuint program)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00046">46</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>

</div>
</div>
<a id="a0d49b3e64773db40479f7c4b1835ec1d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0d49b3e64773db40479f7c4b1835ec1d">&#9670;&nbsp;</a></span>glDeleteShader_func</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="_open_g_l_e_s_8cpp.xhtml#a0d49b3e64773db40479f7c4b1835ec1d">glDeleteShader_func</a> =  void GL_APIENTRY (*)(GLuint shader)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00047">47</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>

</div>
</div>
<a id="a7dbe5708f69c0323c005b5911dd79e39"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7dbe5708f69c0323c005b5911dd79e39">&#9670;&nbsp;</a></span>glDeleteTextures_func</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="_open_g_l_e_s_8cpp.xhtml#a7dbe5708f69c0323c005b5911dd79e39">glDeleteTextures_func</a> =  void GL_APIENTRY (*)(GLsizei n, const GLuint *textures)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00075">75</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>

</div>
</div>
<a id="a8a88f545679d1909b29aabad8fbfe31e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8a88f545679d1909b29aabad8fbfe31e">&#9670;&nbsp;</a></span>glDetachShader_func</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="_open_g_l_e_s_8cpp.xhtml#a8a88f545679d1909b29aabad8fbfe31e">glDetachShader_func</a> =  void GL_APIENTRY (*)(GLuint program, GLuint shader)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00048">48</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>

</div>
</div>
<a id="ab67febd926ffed1c0d55a827dafeda18"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab67febd926ffed1c0d55a827dafeda18">&#9670;&nbsp;</a></span>glDispatchCompute_func</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="_open_g_l_e_s_8cpp.xhtml#ab67febd926ffed1c0d55a827dafeda18">glDispatchCompute_func</a> =  void GL_APIENTRY (*)(GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00060">60</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>

</div>
</div>
<a id="a607609f737fab0b0565a7b84f2fa7d98"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a607609f737fab0b0565a7b84f2fa7d98">&#9670;&nbsp;</a></span>glFlush_func</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="_open_g_l_e_s_8cpp.xhtml#a607609f737fab0b0565a7b84f2fa7d98">glFlush_func</a> =  void GL_APIENTRY (*)()</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00061">61</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>

</div>
</div>
<a id="ab56dc4c4ad921ac0a23ccec193e963b2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab56dc4c4ad921ac0a23ccec193e963b2">&#9670;&nbsp;</a></span>glFramebufferTexture2D_func</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="_open_g_l_e_s_8cpp.xhtml#ab56dc4c4ad921ac0a23ccec193e963b2">glFramebufferTexture2D_func</a> =  void GL_APIENTRY (*)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00082">82</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>

</div>
</div>
<a id="a3b33df6fc93d0e151b779d1f253ceb97"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3b33df6fc93d0e151b779d1f253ceb97">&#9670;&nbsp;</a></span>glGenBuffers_func</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="_open_g_l_e_s_8cpp.xhtml#a3b33df6fc93d0e151b779d1f253ceb97">glGenBuffers_func</a> =  void GL_APIENTRY (*)(GLsizei n, GLuint *buffers)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00062">62</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>

</div>
</div>
<a id="a1c7704e1b45774a3b3e3de40224a7e00"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1c7704e1b45774a3b3e3de40224a7e00">&#9670;&nbsp;</a></span>glGenFramebuffers_func</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="_open_g_l_e_s_8cpp.xhtml#a1c7704e1b45774a3b3e3de40224a7e00">glGenFramebuffers_func</a> =  void GL_APIENTRY (*)(GLsizei n, GLuint *framebuffers)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00079">79</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>

</div>
</div>
<a id="afe67a81cde1204302022baf01894474b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afe67a81cde1204302022baf01894474b">&#9670;&nbsp;</a></span>glGenTextures_func</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="_open_g_l_e_s_8cpp.xhtml#afe67a81cde1204302022baf01894474b">glGenTextures_func</a> =  void GL_APIENTRY (*)(GLsizei n, GLuint *textures)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00074">74</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>

</div>
</div>
<a id="a72c559fda39b1ce7e3cb8bdec4f7e23d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a72c559fda39b1ce7e3cb8bdec4f7e23d">&#9670;&nbsp;</a></span>glGetActiveUniformBlockiv_func</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="_open_g_l_e_s_8cpp.xhtml#a72c559fda39b1ce7e3cb8bdec4f7e23d">glGetActiveUniformBlockiv_func</a> =  void GL_APIENTRY (*)(GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint *params)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00071">71</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>

</div>
</div>
<a id="a1ee47b6b815699bd4da94c665c219572"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1ee47b6b815699bd4da94c665c219572">&#9670;&nbsp;</a></span>glGetError_func</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="_open_g_l_e_s_8cpp.xhtml#a1ee47b6b815699bd4da94c665c219572">glGetError_func</a> =  GLenum GL_APIENTRY (*)()</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00069">69</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>

</div>
</div>
<a id="ad5109705500d3ca577909a72388d2dba"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad5109705500d3ca577909a72388d2dba">&#9670;&nbsp;</a></span>glGetProgramInfoLog_func</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="_open_g_l_e_s_8cpp.xhtml#ad5109705500d3ca577909a72388d2dba">glGetProgramInfoLog_func</a> =  void GL_APIENTRY (*)(GLuint program, GLsizei bufsize, GLsizei *length, GLchar *infolog)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00049">49</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>

</div>
</div>
<a id="a8f2e0943b90ed6e7ff51b3458fcbd6aa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8f2e0943b90ed6e7ff51b3458fcbd6aa">&#9670;&nbsp;</a></span>glGetProgramiv_func</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="_open_g_l_e_s_8cpp.xhtml#a8f2e0943b90ed6e7ff51b3458fcbd6aa">glGetProgramiv_func</a> =  void GL_APIENTRY (*)(GLuint program, GLenum pname, GLint *params)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00050">50</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>

</div>
</div>
<a id="abdeb5e4397d8da638a60f53699040faf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abdeb5e4397d8da638a60f53699040faf">&#9670;&nbsp;</a></span>glGetProgramResourceIndex_func</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="_open_g_l_e_s_8cpp.xhtml#abdeb5e4397d8da638a60f53699040faf">glGetProgramResourceIndex_func</a> =  GLuint GL_APIENTRY (*)(GLuint program, GLenum programInterface, const GLchar *name)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00063">63</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>

</div>
</div>
<a id="a64a4e181f49b72a4c50d8e8e5ad52076"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a64a4e181f49b72a4c50d8e8e5ad52076">&#9670;&nbsp;</a></span>glGetShaderInfoLog_func</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="_open_g_l_e_s_8cpp.xhtml#a64a4e181f49b72a4c50d8e8e5ad52076">glGetShaderInfoLog_func</a> =  void GL_APIENTRY (*)(GLuint shader, GLsizei bufsize, GLsizei *length, GLchar *infolog)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00051">51</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>

</div>
</div>
<a id="a098aea49ac81aedbe84aa20873dbacac"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a098aea49ac81aedbe84aa20873dbacac">&#9670;&nbsp;</a></span>glGetShaderiv_func</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="_open_g_l_e_s_8cpp.xhtml#a098aea49ac81aedbe84aa20873dbacac">glGetShaderiv_func</a> =  void GL_APIENTRY (*)(GLuint shader, GLenum pname, GLint *params)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00052">52</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>

</div>
</div>
<a id="ab6309a5c7ea63364d22adc28fceeae12"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab6309a5c7ea63364d22adc28fceeae12">&#9670;&nbsp;</a></span>glGetString_func</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="_open_g_l_e_s_8cpp.xhtml#ab6309a5c7ea63364d22adc28fceeae12">glGetString_func</a> =  const GLubyte * GL_APIENTRY (*)(GLenum name)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00070">70</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>

</div>
</div>
<a id="aebb3ff24c30f701f357afbd9fbcb3cdb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aebb3ff24c30f701f357afbd9fbcb3cdb">&#9670;&nbsp;</a></span>glGetUniformBlockIndex_func</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="_open_g_l_e_s_8cpp.xhtml#aebb3ff24c30f701f357afbd9fbcb3cdb">glGetUniformBlockIndex_func</a> =  GLuint GL_APIENTRY (*)(GLuint program, const GLchar *uniformBlockName)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00073">73</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>

</div>
</div>
<a id="acb6c0529eae7ee48cbde0d1e1389522d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acb6c0529eae7ee48cbde0d1e1389522d">&#9670;&nbsp;</a></span>glGetUniformLocation_func</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="_open_g_l_e_s_8cpp.xhtml#acb6c0529eae7ee48cbde0d1e1389522d">glGetUniformLocation_func</a> =  GLint GL_APIENTRY (*)(GLuint program, const GLchar *name)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00064">64</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>

</div>
</div>
<a id="aaba74f195d36a2db4f13739aae07424a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaba74f195d36a2db4f13739aae07424a">&#9670;&nbsp;</a></span>glLinkProgram_func</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="_open_g_l_e_s_8cpp.xhtml#aaba74f195d36a2db4f13739aae07424a">glLinkProgram_func</a> =  void GL_APIENTRY (*)(GLuint program)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00053">53</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>

</div>
</div>
<a id="a2ea23820bdcb09cccc54556c879de64c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2ea23820bdcb09cccc54556c879de64c">&#9670;&nbsp;</a></span>glMapBufferRange_func</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="_open_g_l_e_s_8cpp.xhtml#a2ea23820bdcb09cccc54556c879de64c">glMapBufferRange_func</a> =  void *GL_APIENTRY (*)(GLenum target, GLintptr <a class="el" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>, GLsizeiptr length, GLbitfield access)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00065">65</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>

</div>
</div>
<a id="af9416600d973cf090c41f584c874dd9d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af9416600d973cf090c41f584c874dd9d">&#9670;&nbsp;</a></span>glMemoryBarrier_func</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="_open_g_l_e_s_8cpp.xhtml#af9416600d973cf090c41f584c874dd9d">glMemoryBarrier_func</a> =  void GL_APIENTRY (*)(GLbitfield barriers)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00066">66</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>

</div>
</div>
<a id="a8654fc903edd9eacfe22788cab9b83e7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8654fc903edd9eacfe22788cab9b83e7">&#9670;&nbsp;</a></span>glShaderSource_func</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="_open_g_l_e_s_8cpp.xhtml#a8654fc903edd9eacfe22788cab9b83e7">glShaderSource_func</a> =  void GL_APIENTRY (*)(GLuint shader, GLsizei count, const GLchar *const *string, const GLint *length)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00054">54</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>

</div>
</div>
<a id="a8a57841dd4e175e1afb79634a2fc7838"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8a57841dd4e175e1afb79634a2fc7838">&#9670;&nbsp;</a></span>glTexImage2D_func</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="_open_g_l_e_s_8cpp.xhtml#a8a57841dd4e175e1afb79634a2fc7838">glTexImage2D_func</a> =  void GL_APIENTRY (*)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid *pixels)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00078">78</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>

</div>
</div>
<a id="a90f868801b1aacb4e6732d56a4a80447"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a90f868801b1aacb4e6732d56a4a80447">&#9670;&nbsp;</a></span>glUniform1ui_func</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="_open_g_l_e_s_8cpp.xhtml#a90f868801b1aacb4e6732d56a4a80447">glUniform1ui_func</a> =  void GL_APIENTRY (*)(GLint location, GLuint v0)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00067">67</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>

</div>
</div>
<a id="a408f02b52dabea4ad43a6af932ef60b0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a408f02b52dabea4ad43a6af932ef60b0">&#9670;&nbsp;</a></span>glUniformBlockBinding_func</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="_open_g_l_e_s_8cpp.xhtml#a408f02b52dabea4ad43a6af932ef60b0">glUniformBlockBinding_func</a> =  void GL_APIENTRY (*)(GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00072">72</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>

</div>
</div>
<a id="ad2a594cf5da72d124e1b7876af63897a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad2a594cf5da72d124e1b7876af63897a">&#9670;&nbsp;</a></span>glUnmapBuffer_func</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="_open_g_l_e_s_8cpp.xhtml#ad2a594cf5da72d124e1b7876af63897a">glUnmapBuffer_func</a> =  GLboolean GL_APIENTRY (*)(GLenum target)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00068">68</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>

</div>
</div>
<a id="a8dbb590cdc005f7db2dae87085921ec1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8dbb590cdc005f7db2dae87085921ec1">&#9670;&nbsp;</a></span>glUseProgram_func</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="_open_g_l_e_s_8cpp.xhtml#a8dbb590cdc005f7db2dae87085921ec1">glUseProgram_func</a> =  void GL_APIENTRY (*)(GLuint program)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00055">55</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a id="a0f290b0be95432b64e73ead723a947b7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0f290b0be95432b64e73ead723a947b7">&#9670;&nbsp;</a></span>eglBindAPI()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EGLBoolean EGLAPIENTRY eglBindAPI </td>
          <td>(</td>
          <td class="paramtype">EGLenum&#160;</td>
          <td class="paramname"><em>api</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00178">178</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;{</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().eglBindAPI;</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    {</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;        <span class="keywordflow">return</span> func(api);</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    }</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    {</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;        <span class="keywordflow">return</span> EGL_FALSE;</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    }</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;}</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="runtime_2_g_l_e_s___c_o_m_p_u_t_e_2_g_c_helpers_8cpp_source.xhtml#l00031">arm_compute::create_opengl_display_and_context()</a>.</p>

</div>
</div>
<a id="a89a92c28d6d90e4c0fd1de37f9680a79"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a89a92c28d6d90e4c0fd1de37f9680a79">&#9670;&nbsp;</a></span>eglChooseConfig()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EGLBoolean EGLAPIENTRY eglChooseConfig </td>
          <td>(</td>
          <td class="paramtype">EGLDisplay&#160;</td>
          <td class="paramname"><em>dpy</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const EGLint *&#160;</td>
          <td class="paramname"><em>attrib_list</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">EGLConfig *&#160;</td>
          <td class="paramname"><em>configs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">EGLint&#160;</td>
          <td class="paramname"><em>config_size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">EGLint *&#160;</td>
          <td class="paramname"><em>num_config</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00191">191</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;{</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().eglChooseConfig;</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    {</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;        <span class="keywordflow">return</span> func(dpy, attrib_list, configs, config_size, num_config);</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    }</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    {</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;        <span class="keywordflow">return</span> EGL_FALSE;</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    }</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;}</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="runtime_2_g_l_e_s___c_o_m_p_u_t_e_2_g_c_helpers_8cpp_source.xhtml#l00031">arm_compute::create_opengl_display_and_context()</a>.</p>

</div>
</div>
<a id="a82878b3783ce2a10736c91f7d153d009"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a82878b3783ce2a10736c91f7d153d009">&#9670;&nbsp;</a></span>eglCreateContext()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EGLContext EGLAPIENTRY eglCreateContext </td>
          <td>(</td>
          <td class="paramtype">EGLDisplay&#160;</td>
          <td class="paramname"><em>dpy</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">EGLConfig&#160;</td>
          <td class="paramname"><em>config</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">EGLContext&#160;</td>
          <td class="paramname"><em>share_context</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const EGLint *&#160;</td>
          <td class="paramname"><em>attrib_list</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00204">204</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;{</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().eglCreateContext;</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;    {</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;        <span class="keywordflow">return</span> func(dpy, config, share_context, attrib_list);</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    }</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;    {</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;    }</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;}</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="runtime_2_g_l_e_s___c_o_m_p_u_t_e_2_g_c_helpers_8cpp_source.xhtml#l00031">arm_compute::create_opengl_display_and_context()</a>.</p>

</div>
</div>
<a id="a80088eae3ba8f009a48c358adcefd3ca"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a80088eae3ba8f009a48c358adcefd3ca">&#9670;&nbsp;</a></span>eglDestroyContext()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EGLBoolean EGLAPIENTRY eglDestroyContext </td>
          <td>(</td>
          <td class="paramtype">EGLDisplay&#160;</td>
          <td class="paramname"><em>dpy</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">EGLContext&#160;</td>
          <td class="paramname"><em>ctx</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00217">217</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;{</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().eglDestroyContext;</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;    {</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;        <span class="keywordflow">return</span> func(dpy, ctx);</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;    }</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;    {</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;        <span class="keywordflow">return</span> EGL_FALSE;</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;    }</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;}</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_g_c_scheduler_8cpp_source.xhtml#l00039">GCScheduler::~GCScheduler()</a>.</p>

</div>
</div>
<a id="a2ffc3e7fe8b002896756a3508800d3fa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2ffc3e7fe8b002896756a3508800d3fa">&#9670;&nbsp;</a></span>eglGetDisplay()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EGLDisplay EGLAPIENTRY eglGetDisplay </td>
          <td>(</td>
          <td class="paramtype">EGLNativeDisplayType&#160;</td>
          <td class="paramname"><em>display_id</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00230">230</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;{</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().eglGetDisplay;</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;    {</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;        <span class="keywordflow">return</span> func(display_id);</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;    }</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;    {</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;    }</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;}</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="runtime_2_g_l_e_s___c_o_m_p_u_t_e_2_g_c_helpers_8cpp_source.xhtml#l00031">arm_compute::create_opengl_display_and_context()</a>.</p>

</div>
</div>
<a id="a161b2c24e091cfa13e2eeb66e66ccf04"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a161b2c24e091cfa13e2eeb66e66ccf04">&#9670;&nbsp;</a></span>eglGetError()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EGLint EGLAPIENTRY eglGetError </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00282">282</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;{</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().eglGetError;</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;    {</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;        <span class="keywordflow">return</span> func();</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;    }</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;    {</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;        <span class="keywordflow">return</span> GL_NO_ERROR;</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;    }</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;}</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="runtime_2_g_l_e_s___c_o_m_p_u_t_e_2_g_c_helpers_8cpp_source.xhtml#l00031">arm_compute::create_opengl_display_and_context()</a>.</p>

</div>
</div>
<a id="a8874678c01737df89fe9fa1ffde570a8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8874678c01737df89fe9fa1ffde570a8">&#9670;&nbsp;</a></span>eglGetProcAddress()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__eglMustCastToProperFunctionPointerType EGLAPIENTRY eglGetProcAddress </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>procname</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00165">165</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;{</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().eglGetProcAddress;</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    {</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;        <span class="keywordflow">return</span> func(procname);</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    }</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    {</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    }</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a071bc3efa12248af6089950f482689b9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a071bc3efa12248af6089950f482689b9">&#9670;&nbsp;</a></span>eglInitialize()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EGLBoolean EGLAPIENTRY eglInitialize </td>
          <td>(</td>
          <td class="paramtype">EGLDisplay&#160;</td>
          <td class="paramname"><em>dpy</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">EGLint *&#160;</td>
          <td class="paramname"><em>major</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">EGLint *&#160;</td>
          <td class="paramname"><em>minor</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00243">243</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;{</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().eglInitialize;</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;    {</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;        <span class="keywordflow">return</span> func(dpy, major, minor);</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;    }</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;    {</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;        <span class="keywordflow">return</span> EGL_FALSE;</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;    }</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;}</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="runtime_2_g_l_e_s___c_o_m_p_u_t_e_2_g_c_helpers_8cpp_source.xhtml#l00031">arm_compute::create_opengl_display_and_context()</a>.</p>

</div>
</div>
<a id="af6db9d046fe0e996c3693373864e6254"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af6db9d046fe0e996c3693373864e6254">&#9670;&nbsp;</a></span>eglMakeCurrent()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EGLBoolean EGLAPIENTRY eglMakeCurrent </td>
          <td>(</td>
          <td class="paramtype">EGLDisplay&#160;</td>
          <td class="paramname"><em>dpy</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">EGLSurface&#160;</td>
          <td class="paramname"><em>draw</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">EGLSurface&#160;</td>
          <td class="paramname"><em>read</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">EGLContext&#160;</td>
          <td class="paramname"><em>ctx</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00256">256</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;{</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().eglMakeCurrent;</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;    {</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;        <span class="keywordflow">return</span> func(dpy, draw, read, ctx);</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;    }</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;    {</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;        <span class="keywordflow">return</span> EGL_FALSE;</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;    }</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;}</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="runtime_2_g_l_e_s___c_o_m_p_u_t_e_2_g_c_helpers_8cpp_source.xhtml#l00031">arm_compute::create_opengl_display_and_context()</a>, <a class="el" href="_g_c_kernel_library_8cpp_source.xhtml#l00340">GCKernelLibrary::init()</a>, and <a class="el" href="_g_c_kernel_library_8cpp_source.xhtml#l00357">GCKernelLibrary::set_context()</a>.</p>

</div>
</div>
<a id="a4d1a4543cb39945be511a48c6b12efb8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4d1a4543cb39945be511a48c6b12efb8">&#9670;&nbsp;</a></span>eglQueryString()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">char const* EGLAPIENTRY eglQueryString </td>
          <td>(</td>
          <td class="paramtype">EGLDisplay&#160;</td>
          <td class="paramname"><em>dpy</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">EGLint&#160;</td>
          <td class="paramname"><em>name</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00295">295</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;{</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().eglQueryString;</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;    {</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;        <span class="keywordflow">return</span> func(dpy, name);</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;    }</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;    {</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;    }</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;}</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="runtime_2_g_l_e_s___c_o_m_p_u_t_e_2_g_c_helpers_8cpp_source.xhtml#l00031">arm_compute::create_opengl_display_and_context()</a>.</p>

</div>
</div>
<a id="a184f520190322b632ca710695195746a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a184f520190322b632ca710695195746a">&#9670;&nbsp;</a></span>eglTerminate()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EGLBoolean EGLAPIENTRY eglTerminate </td>
          <td>(</td>
          <td class="paramtype">EGLDisplay&#160;</td>
          <td class="paramname"><em>dpy</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00269">269</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;{</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().eglTerminate;</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;    {</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;        <span class="keywordflow">return</span> func(dpy);</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;    }</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;    {</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;        <span class="keywordflow">return</span> EGL_FALSE;</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;    }</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;}</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_g_c_scheduler_8cpp_source.xhtml#l00039">GCScheduler::~GCScheduler()</a>.</p>

</div>
</div>
<a id="a75f4854b14c6eba12a7feb4d53933d6f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a75f4854b14c6eba12a7feb4d53933d6f">&#9670;&nbsp;</a></span>glAttachShader()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void GL_APIENTRY glAttachShader </td>
          <td>(</td>
          <td class="paramtype">GLuint&#160;</td>
          <td class="paramname"><em>program</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">GLuint&#160;</td>
          <td class="paramname"><em>shader</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00308">308</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;{</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().glAttachShader;</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;    {</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;        <span class="keywordflow">return</span> func(program, shader);</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;    }</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;    {</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;    }</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;}</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_g_c_kernel_library_8cpp_source.xhtml#l00048">GCProgram::link_program()</a>.</p>

</div>
</div>
<a id="ad9528d3fb71b7ee1e23fab6aed1cba83"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad9528d3fb71b7ee1e23fab6aed1cba83">&#9670;&nbsp;</a></span>glBindBuffer()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void GL_APIENTRY glBindBuffer </td>
          <td>(</td>
          <td class="paramtype">GLenum&#160;</td>
          <td class="paramname"><em>target</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">GLuint&#160;</td>
          <td class="paramname"><em>buffer</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00490">490</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;{</div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().glBindBuffer;</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;    {</div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;        <span class="keywordflow">return</span> func(target, buffer);</div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;    }</div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;    {</div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;    }</div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;}</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_g_c_buffer_allocator_8cpp_source.xhtml#l00034">GCBufferAllocator::allocate()</a>, <a class="el" href="_g_c_kernel_library_8cpp_source.xhtml#l00160">GCKernel::cleanup()</a>, <a class="el" href="_g_c_memory_region_8cpp_source.xhtml#l00050">GCBufferMemoryRegion::GCBufferMemoryRegion()</a>, <a class="el" href="_g_c_memory_region_8cpp_source.xhtml#l00069">GCBufferMemoryRegion::map()</a>, <a class="el" href="_g_c_memory_region_8cpp_source.xhtml#l00081">GCBufferMemoryRegion::unmap()</a>, and <a class="el" href="_g_c_kernel_library_8cpp_source.xhtml#l00178">GCKernel::update_shader_params()</a>.</p>

</div>
</div>
<a id="a377c2f368dc6d8961943363077581dbd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a377c2f368dc6d8961943363077581dbd">&#9670;&nbsp;</a></span>glBindBufferBase()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void GL_APIENTRY glBindBufferBase </td>
          <td>(</td>
          <td class="paramtype">GLenum&#160;</td>
          <td class="paramname"><em>target</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">GLuint&#160;</td>
          <td class="paramname"><em>index</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">GLuint&#160;</td>
          <td class="paramname"><em>buffer</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00503">503</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;{</div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().glBindBufferBase;</div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;    {</div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;        <span class="keywordflow">return</span> func(target, index, buffer);</div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;    }</div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;    {</div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;    }</div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;}</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_g_c_kernel_library_8cpp_source.xhtml#l00178">GCKernel::update_shader_params()</a>.</p>

</div>
</div>
<a id="a4213ab91e8c4fc1dc12f3904f7cc170e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4213ab91e8c4fc1dc12f3904f7cc170e">&#9670;&nbsp;</a></span>glBindFramebuffer()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void GL_APIENTRY glBindFramebuffer </td>
          <td>(</td>
          <td class="paramtype">GLenum&#160;</td>
          <td class="paramname"><em>target</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">GLuint&#160;</td>
          <td class="paramname"><em>framebuffer</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00802">802</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00803"></a><span class="lineno">  803</span>&#160;{</div><div class="line"><a name="l00804"></a><span class="lineno">  804</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().glBindFramebuffer;</div><div class="line"><a name="l00805"></a><span class="lineno">  805</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00806"></a><span class="lineno">  806</span>&#160;    {</div><div class="line"><a name="l00807"></a><span class="lineno">  807</span>&#160;        <span class="keywordflow">return</span> func(target, framebuffer);</div><div class="line"><a name="l00808"></a><span class="lineno">  808</span>&#160;    }</div><div class="line"><a name="l00809"></a><span class="lineno">  809</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00810"></a><span class="lineno">  810</span>&#160;    {</div><div class="line"><a name="l00811"></a><span class="lineno">  811</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00812"></a><span class="lineno">  812</span>&#160;    }</div><div class="line"><a name="l00813"></a><span class="lineno">  813</span>&#160;}</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_g_c_kernel_library_8cpp_source.xhtml#l00526">GCKernelLibrary::setup_dummy_fbo()</a>, and <a class="el" href="_g_c_kernel_library_8cpp_source.xhtml#l00536">GCKernelLibrary::~GCKernelLibrary()</a>.</p>

</div>
</div>
<a id="afdd4572fd462b84e467e9af2a94d1116"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afdd4572fd462b84e467e9af2a94d1116">&#9670;&nbsp;</a></span>glBindTexture()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void GL_APIENTRY glBindTexture </td>
          <td>(</td>
          <td class="paramtype">GLenum&#160;</td>
          <td class="paramname"><em>target</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">GLuint&#160;</td>
          <td class="paramname"><em>texture</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00750">750</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00751"></a><span class="lineno">  751</span>&#160;{</div><div class="line"><a name="l00752"></a><span class="lineno">  752</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().glBindTexture;</div><div class="line"><a name="l00753"></a><span class="lineno">  753</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00754"></a><span class="lineno">  754</span>&#160;    {</div><div class="line"><a name="l00755"></a><span class="lineno">  755</span>&#160;        <span class="keywordflow">return</span> func(target, texture);</div><div class="line"><a name="l00756"></a><span class="lineno">  756</span>&#160;    }</div><div class="line"><a name="l00757"></a><span class="lineno">  757</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00758"></a><span class="lineno">  758</span>&#160;    {</div><div class="line"><a name="l00759"></a><span class="lineno">  759</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;    }</div><div class="line"><a name="l00761"></a><span class="lineno">  761</span>&#160;}</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_g_c_kernel_library_8cpp_source.xhtml#l00526">GCKernelLibrary::setup_dummy_fbo()</a>, and <a class="el" href="_g_c_kernel_library_8cpp_source.xhtml#l00536">GCKernelLibrary::~GCKernelLibrary()</a>.</p>

</div>
</div>
<a id="a4991c46050f5040b9fc85fc35f8297ed"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4991c46050f5040b9fc85fc35f8297ed">&#9670;&nbsp;</a></span>glBufferData()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void GL_APIENTRY glBufferData </td>
          <td>(</td>
          <td class="paramtype">GLenum&#160;</td>
          <td class="paramname"><em>target</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">GLsizeiptr&#160;</td>
          <td class="paramname"><em>size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const GLvoid *&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">GLenum&#160;</td>
          <td class="paramname"><em>usage</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00516">516</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;{</div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().glBufferData;</div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;    {</div><div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;        <span class="keywordflow">return</span> func(target, size, data, usage);</div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;    }</div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;    {</div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;    }</div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;}</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_g_c_buffer_allocator_8cpp_source.xhtml#l00034">GCBufferAllocator::allocate()</a>, <a class="el" href="_g_c_memory_region_8cpp_source.xhtml#l00050">GCBufferMemoryRegion::GCBufferMemoryRegion()</a>, and <a class="el" href="_g_c_kernel_library_8cpp_source.xhtml#l00178">GCKernel::update_shader_params()</a>.</p>

</div>
</div>
<a id="a76232dcbc71f0cb2b32c4e0f46cb2b64"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a76232dcbc71f0cb2b32c4e0f46cb2b64">&#9670;&nbsp;</a></span>glCompileShader()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void GL_APIENTRY glCompileShader </td>
          <td>(</td>
          <td class="paramtype">GLuint&#160;</td>
          <td class="paramname"><em>shader</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00321">321</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;{</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().glCompileShader;</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;    {</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;        <span class="keywordflow">return</span> func(shader);</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;    }</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;    {</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;    }</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;}</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_g_c_kernel_library_8cpp_source.xhtml#l00079">GCProgram::compile_shader()</a>.</p>

</div>
</div>
<a id="add28e8aa989a1ec2bffc6a45f7a75355"></a>
<h2 class="memtitle"><span class="permalink"><a href="#add28e8aa989a1ec2bffc6a45f7a75355">&#9670;&nbsp;</a></span>glCreateProgram()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">GLuint GL_APIENTRY glCreateProgram </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00334">334</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;{</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().glCreateProgram;</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;    {</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;        <span class="keywordflow">return</span> func();</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;    }</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;    {</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;        <span class="keywordflow">return</span> 0;</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;    }</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;}</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_g_c_kernel_library_8cpp_source.xhtml#l00048">GCProgram::link_program()</a>.</p>

</div>
</div>
<a id="ab8cce2e1a98daed0249b9a8f929dd176"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab8cce2e1a98daed0249b9a8f929dd176">&#9670;&nbsp;</a></span>glCreateShader()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">GLuint GL_APIENTRY glCreateShader </td>
          <td>(</td>
          <td class="paramtype">GLenum&#160;</td>
          <td class="paramname"><em>type</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00347">347</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;{</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().glCreateShader;</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;    {</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;        <span class="keywordflow">return</span> func(<a class="code" href="namespace_gemm_tuner.xhtml#a7aead736a07eaf25623ad7bfa1f0ee2d">type</a>);</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;    }</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;    {</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;        <span class="keywordflow">return</span> 0;</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;    }</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;}</div><div class="ttc" id="namespace_gemm_tuner_xhtml_a7aead736a07eaf25623ad7bfa1f0ee2d"><div class="ttname"><a href="namespace_gemm_tuner.xhtml#a7aead736a07eaf25623ad7bfa1f0ee2d">GemmTuner.type</a></div><div class="ttdeci">type</div><div class="ttdef"><b>Definition:</b> <a href="_gemm_tuner_8py_source.xhtml#l00527">GemmTuner.py:527</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_gemm_tuner_8py_source.xhtml#l00527">GemmTuner::type</a>.</p>

<p class="reference">Referenced by <a class="el" href="_g_c_kernel_library_8cpp_source.xhtml#l00079">GCProgram::compile_shader()</a>.</p>

</div>
</div>
<a id="a528e76a977061a313bad3ab6fe7747fe"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a528e76a977061a313bad3ab6fe7747fe">&#9670;&nbsp;</a></span>glDeleteBuffers()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void GL_APIENTRY glDeleteBuffers </td>
          <td>(</td>
          <td class="paramtype">GLsizei&#160;</td>
          <td class="paramname"><em>n</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const GLuint *&#160;</td>
          <td class="paramname"><em>buffers</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00529">529</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;{</div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().glDeleteBuffers;</div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;    {</div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;        <span class="keywordflow">return</span> func(n, buffers);</div><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;    }</div><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;    {</div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;    }</div><div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;}</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_g_c_kernel_library_8cpp_source.xhtml#l00160">GCKernel::cleanup()</a>, <a class="el" href="_g_c_buffer_allocator_8cpp_source.xhtml#l00046">GCBufferAllocator::free()</a>, and <a class="el" href="_g_c_memory_region_8cpp_source.xhtml#l00059">GCBufferMemoryRegion::~GCBufferMemoryRegion()</a>.</p>

</div>
</div>
<a id="abe8c9f9c8d9e2fb48fbd3ea2291caca9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abe8c9f9c8d9e2fb48fbd3ea2291caca9">&#9670;&nbsp;</a></span>glDeleteFramebuffers()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void GL_APIENTRY glDeleteFramebuffers </td>
          <td>(</td>
          <td class="paramtype">GLsizei&#160;</td>
          <td class="paramname"><em>n</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const GLuint *&#160;</td>
          <td class="paramname"><em>framebuffers</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00789">789</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00790"></a><span class="lineno">  790</span>&#160;{</div><div class="line"><a name="l00791"></a><span class="lineno">  791</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().glDeleteFramebuffers;</div><div class="line"><a name="l00792"></a><span class="lineno">  792</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00793"></a><span class="lineno">  793</span>&#160;    {</div><div class="line"><a name="l00794"></a><span class="lineno">  794</span>&#160;        <span class="keywordflow">return</span> func(n, framebuffers);</div><div class="line"><a name="l00795"></a><span class="lineno">  795</span>&#160;    }</div><div class="line"><a name="l00796"></a><span class="lineno">  796</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00797"></a><span class="lineno">  797</span>&#160;    {</div><div class="line"><a name="l00798"></a><span class="lineno">  798</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00799"></a><span class="lineno">  799</span>&#160;    }</div><div class="line"><a name="l00800"></a><span class="lineno">  800</span>&#160;}</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_g_c_kernel_library_8cpp_source.xhtml#l00536">GCKernelLibrary::~GCKernelLibrary()</a>.</p>

</div>
</div>
<a id="a334ce7125cfb54a811b748f23f228417"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a334ce7125cfb54a811b748f23f228417">&#9670;&nbsp;</a></span>glDeleteProgram()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void GL_APIENTRY glDeleteProgram </td>
          <td>(</td>
          <td class="paramtype">GLuint&#160;</td>
          <td class="paramname"><em>program</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00360">360</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;{</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().glDeleteProgram;</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;    {</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;        <span class="keywordflow">return</span> func(program);</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;    }</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;    {</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;    }</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;}</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_g_c_kernel_library_8cpp_source.xhtml#l00160">GCKernel::cleanup()</a>.</p>

</div>
</div>
<a id="a3a5fb1ea4384fc30fedc9a6caf73e6e1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3a5fb1ea4384fc30fedc9a6caf73e6e1">&#9670;&nbsp;</a></span>glDeleteShader()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void GL_APIENTRY glDeleteShader </td>
          <td>(</td>
          <td class="paramtype">GLuint&#160;</td>
          <td class="paramname"><em>shader</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00373">373</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;{</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().glDeleteShader;</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;    {</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;        <span class="keywordflow">return</span> func(shader);</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;    }</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;    {</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;    }</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;}</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_g_c_kernel_library_8cpp_source.xhtml#l00048">GCProgram::link_program()</a>.</p>

</div>
</div>
<a id="afa7af01b67ca2c80d2d33824cdd1e694"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afa7af01b67ca2c80d2d33824cdd1e694">&#9670;&nbsp;</a></span>glDeleteTextures()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void GL_APIENTRY glDeleteTextures </td>
          <td>(</td>
          <td class="paramtype">GLsizei&#160;</td>
          <td class="paramname"><em>n</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const GLuint *&#160;</td>
          <td class="paramname"><em>textures</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00737">737</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00738"></a><span class="lineno">  738</span>&#160;{</div><div class="line"><a name="l00739"></a><span class="lineno">  739</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().glDeleteTextures;</div><div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160;    {</div><div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160;        <span class="keywordflow">return</span> func(n, textures);</div><div class="line"><a name="l00743"></a><span class="lineno">  743</span>&#160;    }</div><div class="line"><a name="l00744"></a><span class="lineno">  744</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00745"></a><span class="lineno">  745</span>&#160;    {</div><div class="line"><a name="l00746"></a><span class="lineno">  746</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00747"></a><span class="lineno">  747</span>&#160;    }</div><div class="line"><a name="l00748"></a><span class="lineno">  748</span>&#160;}</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_g_c_kernel_library_8cpp_source.xhtml#l00536">GCKernelLibrary::~GCKernelLibrary()</a>.</p>

</div>
</div>
<a id="a4c71a67ba2f8104097a63d4f41a7e64e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4c71a67ba2f8104097a63d4f41a7e64e">&#9670;&nbsp;</a></span>glDetachShader()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void GL_APIENTRY glDetachShader </td>
          <td>(</td>
          <td class="paramtype">GLuint&#160;</td>
          <td class="paramname"><em>program</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">GLuint&#160;</td>
          <td class="paramname"><em>shader</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00386">386</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;{</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().glDetachShader;</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;    {</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;        <span class="keywordflow">return</span> func(program, shader);</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;    }</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;    {</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;    }</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;}</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_g_c_kernel_library_8cpp_source.xhtml#l00048">GCProgram::link_program()</a>.</p>

</div>
</div>
<a id="af7682f051486a2d562206f70b2c212ab"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af7682f051486a2d562206f70b2c212ab">&#9670;&nbsp;</a></span>glDispatchCompute()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void GL_APIENTRY glDispatchCompute </td>
          <td>(</td>
          <td class="paramtype">GLuint&#160;</td>
          <td class="paramname"><em>num_groups_x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">GLuint&#160;</td>
          <td class="paramname"><em>num_groups_y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">GLuint&#160;</td>
          <td class="paramname"><em>num_groups_z</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00542">542</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;{</div><div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().glDispatchCompute;</div><div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;    {</div><div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;        <span class="keywordflow">return</span> func(num_groups_x, num_groups_y, num_groups_z);</div><div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;    }</div><div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;    {</div><div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;    }</div><div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;}</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_i_g_c_kernel_8cpp_source.xhtml#l00041">arm_compute::enqueue()</a>.</p>

</div>
</div>
<a id="a9ee298e3e0590cd31dffbc2dd8a5702c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9ee298e3e0590cd31dffbc2dd8a5702c">&#9670;&nbsp;</a></span>glFlush()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void GL_APIENTRY glFlush </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00555">555</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;{</div><div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().glFlush;</div><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;    {</div><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;        <span class="keywordflow">return</span> func();</div><div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;    }</div><div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;    {</div><div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;    }</div><div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;}</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_g_c_scheduler_8cpp_source.xhtml#l00077">GCScheduler::dispatch()</a>.</p>

</div>
</div>
<a id="a1c5dc7cc04f7c0b1bd7c181b0da84d9b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1c5dc7cc04f7c0b1bd7c181b0da84d9b">&#9670;&nbsp;</a></span>glFramebufferTexture2D()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void GL_APIENTRY glFramebufferTexture2D </td>
          <td>(</td>
          <td class="paramtype">GLenum&#160;</td>
          <td class="paramname"><em>target</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">GLenum&#160;</td>
          <td class="paramname"><em>attachment</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">GLenum&#160;</td>
          <td class="paramname"><em>textarget</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">GLuint&#160;</td>
          <td class="paramname"><em>texture</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">GLint&#160;</td>
          <td class="paramname"><em>level</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00815">815</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00816"></a><span class="lineno">  816</span>&#160;{</div><div class="line"><a name="l00817"></a><span class="lineno">  817</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().glFramebufferTexture2D;</div><div class="line"><a name="l00818"></a><span class="lineno">  818</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00819"></a><span class="lineno">  819</span>&#160;    {</div><div class="line"><a name="l00820"></a><span class="lineno">  820</span>&#160;        <span class="keywordflow">return</span> func(target, attachment, textarget, texture, <a class="code" href="namespace_gemm_tuner.xhtml#afde8e18a788ccc92fc61cab298bca7e3">level</a>);</div><div class="line"><a name="l00821"></a><span class="lineno">  821</span>&#160;    }</div><div class="line"><a name="l00822"></a><span class="lineno">  822</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00823"></a><span class="lineno">  823</span>&#160;    {</div><div class="line"><a name="l00824"></a><span class="lineno">  824</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00825"></a><span class="lineno">  825</span>&#160;    }</div><div class="line"><a name="l00826"></a><span class="lineno">  826</span>&#160;}</div><div class="ttc" id="namespace_gemm_tuner_xhtml_afde8e18a788ccc92fc61cab298bca7e3"><div class="ttname"><a href="namespace_gemm_tuner.xhtml#afde8e18a788ccc92fc61cab298bca7e3">GemmTuner.level</a></div><div class="ttdeci">level</div><div class="ttdef"><b>Definition:</b> <a href="_gemm_tuner_8py_source.xhtml#l00557">GemmTuner.py:557</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_gemm_tuner_8py_source.xhtml#l00557">GemmTuner::level</a>.</p>

<p class="reference">Referenced by <a class="el" href="_g_c_kernel_library_8cpp_source.xhtml#l00526">GCKernelLibrary::setup_dummy_fbo()</a>.</p>

</div>
</div>
<a id="a68154b66955d77ae9c5192218e02ebdc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a68154b66955d77ae9c5192218e02ebdc">&#9670;&nbsp;</a></span>glGenBuffers()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void GL_APIENTRY glGenBuffers </td>
          <td>(</td>
          <td class="paramtype">GLsizei&#160;</td>
          <td class="paramname"><em>n</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">GLuint *&#160;</td>
          <td class="paramname"><em>buffers</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00568">568</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;{</div><div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().glGenBuffers;</div><div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;    {</div><div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;        <span class="keywordflow">return</span> func(n, buffers);</div><div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;    }</div><div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;    {</div><div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;    }</div><div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;}</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_g_c_memory_region_8cpp_source.xhtml#l00050">GCBufferMemoryRegion::GCBufferMemoryRegion()</a>, and <a class="el" href="_g_c_kernel_library_8cpp_source.xhtml#l00141">GCKernel::GCKernel()</a>.</p>

</div>
</div>
<a id="a1773d8c97f9c1063a45db4cf9d7c1613"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1773d8c97f9c1063a45db4cf9d7c1613">&#9670;&nbsp;</a></span>glGenFramebuffers()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void GL_APIENTRY glGenFramebuffers </td>
          <td>(</td>
          <td class="paramtype">GLsizei&#160;</td>
          <td class="paramname"><em>n</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">GLuint *&#160;</td>
          <td class="paramname"><em>framebuffers</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00776">776</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00777"></a><span class="lineno">  777</span>&#160;{</div><div class="line"><a name="l00778"></a><span class="lineno">  778</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().glGenFramebuffers;</div><div class="line"><a name="l00779"></a><span class="lineno">  779</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00780"></a><span class="lineno">  780</span>&#160;    {</div><div class="line"><a name="l00781"></a><span class="lineno">  781</span>&#160;        <span class="keywordflow">return</span> func(n, framebuffers);</div><div class="line"><a name="l00782"></a><span class="lineno">  782</span>&#160;    }</div><div class="line"><a name="l00783"></a><span class="lineno">  783</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00784"></a><span class="lineno">  784</span>&#160;    {</div><div class="line"><a name="l00785"></a><span class="lineno">  785</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00786"></a><span class="lineno">  786</span>&#160;    }</div><div class="line"><a name="l00787"></a><span class="lineno">  787</span>&#160;}</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_g_c_kernel_library_8cpp_source.xhtml#l00526">GCKernelLibrary::setup_dummy_fbo()</a>.</p>

</div>
</div>
<a id="aeaa37f1850f96a9610b10f87af5b44a4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aeaa37f1850f96a9610b10f87af5b44a4">&#9670;&nbsp;</a></span>glGenTextures()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void GL_APIENTRY glGenTextures </td>
          <td>(</td>
          <td class="paramtype">GLsizei&#160;</td>
          <td class="paramname"><em>n</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">GLuint *&#160;</td>
          <td class="paramname"><em>textures</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00724">724</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00725"></a><span class="lineno">  725</span>&#160;{</div><div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().glGenTextures;</div><div class="line"><a name="l00727"></a><span class="lineno">  727</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;    {</div><div class="line"><a name="l00729"></a><span class="lineno">  729</span>&#160;        <span class="keywordflow">return</span> func(n, textures);</div><div class="line"><a name="l00730"></a><span class="lineno">  730</span>&#160;    }</div><div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00732"></a><span class="lineno">  732</span>&#160;    {</div><div class="line"><a name="l00733"></a><span class="lineno">  733</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00734"></a><span class="lineno">  734</span>&#160;    }</div><div class="line"><a name="l00735"></a><span class="lineno">  735</span>&#160;}</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_g_c_kernel_library_8cpp_source.xhtml#l00526">GCKernelLibrary::setup_dummy_fbo()</a>.</p>

</div>
</div>
<a id="a21827516ba1b8b4c12c6238b3fd67200"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a21827516ba1b8b4c12c6238b3fd67200">&#9670;&nbsp;</a></span>glGetActiveUniformBlockiv()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void GL_APIENTRY glGetActiveUniformBlockiv </td>
          <td>(</td>
          <td class="paramtype">GLuint&#160;</td>
          <td class="paramname"><em>program</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">GLuint&#160;</td>
          <td class="paramname"><em>uniformBlockIndex</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">GLenum&#160;</td>
          <td class="paramname"><em>pname</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">GLint *&#160;</td>
          <td class="paramname"><em>params</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00685">685</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;{</div><div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().glGetActiveUniformBlockiv;</div><div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;    {</div><div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;        <span class="keywordflow">return</span> func(program, uniformBlockIndex, pname, params);</div><div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;    }</div><div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;    {</div><div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;    }</div><div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;}</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_g_c_kernel_library_8cpp_source.xhtml#l00141">GCKernel::GCKernel()</a>.</p>

</div>
</div>
<a id="af677180282510057a304e67814062174"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af677180282510057a304e67814062174">&#9670;&nbsp;</a></span>glGetError()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">GLenum GL_APIENTRY glGetError </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00659">659</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;{</div><div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().glGetError;</div><div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;    {</div><div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;        <span class="keywordflow">return</span> func();</div><div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;    }</div><div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;    {</div><div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;        <span class="keywordflow">return</span> GL_NO_ERROR;</div><div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;    }</div><div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a9cf2058f28e321f12a8e8c4c80ece00f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9cf2058f28e321f12a8e8c4c80ece00f">&#9670;&nbsp;</a></span>glGetProgramInfoLog()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void GL_APIENTRY glGetProgramInfoLog </td>
          <td>(</td>
          <td class="paramtype">GLuint&#160;</td>
          <td class="paramname"><em>program</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">GLsizei&#160;</td>
          <td class="paramname"><em>bufSize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">GLsizei *&#160;</td>
          <td class="paramname"><em>length</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">GLchar *&#160;</td>
          <td class="paramname"><em>infoLog</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00399">399</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;{</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().glGetProgramInfoLog;</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;    {</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;        <span class="keywordflow">return</span> func(program, bufSize, length, infoLog);</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;    }</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;    {</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;    }</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;}</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_g_c_kernel_library_8cpp_source.xhtml#l00048">GCProgram::link_program()</a>.</p>

</div>
</div>
<a id="acf2f21042df45cad38c043cd9198628b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acf2f21042df45cad38c043cd9198628b">&#9670;&nbsp;</a></span>glGetProgramiv()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void GL_APIENTRY glGetProgramiv </td>
          <td>(</td>
          <td class="paramtype">GLuint&#160;</td>
          <td class="paramname"><em>program</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">GLenum&#160;</td>
          <td class="paramname"><em>pname</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">GLint *&#160;</td>
          <td class="paramname"><em>params</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00412">412</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;{</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().glGetProgramiv;</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;    {</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;        <span class="keywordflow">return</span> func(program, pname, params);</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;    }</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;    {</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;    }</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;}</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_g_c_kernel_library_8cpp_source.xhtml#l00048">GCProgram::link_program()</a>.</p>

</div>
</div>
<a id="ac203fe33b5832bc45e58cd4abeb4a234"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac203fe33b5832bc45e58cd4abeb4a234">&#9670;&nbsp;</a></span>glGetProgramResourceIndex()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">GLuint GL_APIENTRY glGetProgramResourceIndex </td>
          <td>(</td>
          <td class="paramtype">GLuint&#160;</td>
          <td class="paramname"><em>program</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">GLenum&#160;</td>
          <td class="paramname"><em>programInterface</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const GLchar *&#160;</td>
          <td class="paramname"><em>name</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00581">581</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;{</div><div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().glGetProgramResourceIndex;</div><div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;    {</div><div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;        <span class="keywordflow">return</span> func(program, programInterface, name);</div><div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;    }</div><div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;    {</div><div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;        <span class="keywordflow">return</span> GL_INVALID_INDEX;</div><div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;    }</div><div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="ac7c9e9800f919f0f217a8465994d81de"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac7c9e9800f919f0f217a8465994d81de">&#9670;&nbsp;</a></span>glGetShaderInfoLog()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void GL_APIENTRY glGetShaderInfoLog </td>
          <td>(</td>
          <td class="paramtype">GLuint&#160;</td>
          <td class="paramname"><em>shader</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">GLsizei&#160;</td>
          <td class="paramname"><em>bufSize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">GLsizei *&#160;</td>
          <td class="paramname"><em>length</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">GLchar *&#160;</td>
          <td class="paramname"><em>infoLog</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00425">425</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;{</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().glGetShaderInfoLog;</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;    {</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;        <span class="keywordflow">return</span> func(shader, bufSize, length, infoLog);</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;    }</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;    {</div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;    }</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;}</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_g_c_kernel_library_8cpp_source.xhtml#l00079">GCProgram::compile_shader()</a>.</p>

</div>
</div>
<a id="ac164fec059717a7fdbf42aea5ea2ca1d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac164fec059717a7fdbf42aea5ea2ca1d">&#9670;&nbsp;</a></span>glGetShaderiv()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void GL_APIENTRY glGetShaderiv </td>
          <td>(</td>
          <td class="paramtype">GLuint&#160;</td>
          <td class="paramname"><em>shader</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">GLenum&#160;</td>
          <td class="paramname"><em>pname</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">GLint *&#160;</td>
          <td class="paramname"><em>params</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00438">438</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;{</div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().glGetShaderiv;</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;    {</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;        <span class="keywordflow">return</span> func(shader, pname, params);</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;    }</div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;    {</div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;    }</div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;}</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_g_c_kernel_library_8cpp_source.xhtml#l00079">GCProgram::compile_shader()</a>.</p>

</div>
</div>
<a id="a2ee378c6363791b2a733b2ba4ec6e846"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2ee378c6363791b2a733b2ba4ec6e846">&#9670;&nbsp;</a></span>glGetString()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const GLubyte* GL_APIENTRY glGetString </td>
          <td>(</td>
          <td class="paramtype">GLenum&#160;</td>
          <td class="paramname"><em>name</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00672">672</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;{</div><div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().glGetString;</div><div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;    {</div><div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;        <span class="keywordflow">return</span> func(name);</div><div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;    }</div><div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;    {</div><div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;    }</div><div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;}</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="core_2_g_l_e_s___c_o_m_p_u_t_e_2_g_c_helpers_8cpp_source.xhtml#l00030">arm_compute::get_target_from_device()</a>.</p>

</div>
</div>
<a id="a81b3135fe4b76436b0e901032fc4df1b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a81b3135fe4b76436b0e901032fc4df1b">&#9670;&nbsp;</a></span>glGetUniformBlockIndex()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">GLuint GL_APIENTRY glGetUniformBlockIndex </td>
          <td>(</td>
          <td class="paramtype">GLuint&#160;</td>
          <td class="paramname"><em>program</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const GLchar *&#160;</td>
          <td class="paramname"><em>uniformBlockName</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00711">711</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00712"></a><span class="lineno">  712</span>&#160;{</div><div class="line"><a name="l00713"></a><span class="lineno">  713</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().glGetUniformBlockIndex;</div><div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00715"></a><span class="lineno">  715</span>&#160;    {</div><div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160;        <span class="keywordflow">return</span> func(program, uniformBlockName);</div><div class="line"><a name="l00717"></a><span class="lineno">  717</span>&#160;    }</div><div class="line"><a name="l00718"></a><span class="lineno">  718</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;    {</div><div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;        <span class="keywordflow">return</span> GL_INVALID_INDEX;</div><div class="line"><a name="l00721"></a><span class="lineno">  721</span>&#160;    }</div><div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;}</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_g_c_kernel_library_8cpp_source.xhtml#l00141">GCKernel::GCKernel()</a>.</p>

</div>
</div>
<a id="ab3f63cc618bace46bf4624c9a21dd3c4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab3f63cc618bace46bf4624c9a21dd3c4">&#9670;&nbsp;</a></span>glGetUniformLocation()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">GLint GL_APIENTRY glGetUniformLocation </td>
          <td>(</td>
          <td class="paramtype">GLuint&#160;</td>
          <td class="paramname"><em>program</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const GLchar *&#160;</td>
          <td class="paramname"><em>name</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00594">594</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;{</div><div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().glGetUniformLocation;</div><div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;    {</div><div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;        <span class="keywordflow">return</span> func(program, name);</div><div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;    }</div><div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;    {</div><div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;        <span class="keywordflow">return</span> -1;</div><div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;    }</div><div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a07e3604c0cd0da716e5de2a7ec11c8ac"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a07e3604c0cd0da716e5de2a7ec11c8ac">&#9670;&nbsp;</a></span>glLinkProgram()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void GL_APIENTRY glLinkProgram </td>
          <td>(</td>
          <td class="paramtype">GLuint&#160;</td>
          <td class="paramname"><em>program</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00451">451</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;{</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().glLinkProgram;</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;    {</div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;        <span class="keywordflow">return</span> func(program);</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;    }</div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;    {</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;    }</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;}</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_g_c_kernel_library_8cpp_source.xhtml#l00048">GCProgram::link_program()</a>.</p>

</div>
</div>
<a id="a7a6ac79ff4cf0bf3ed8c5cd3953ec6de"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7a6ac79ff4cf0bf3ed8c5cd3953ec6de">&#9670;&nbsp;</a></span>glMapBufferRange()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void* GL_APIENTRY glMapBufferRange </td>
          <td>(</td>
          <td class="paramtype">GLenum&#160;</td>
          <td class="paramname"><em>target</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">GLintptr&#160;</td>
          <td class="paramname"><em>offset</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">GLsizeiptr&#160;</td>
          <td class="paramname"><em>length</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">GLbitfield&#160;</td>
          <td class="paramname"><em>access</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00607">607</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;{</div><div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().glMapBufferRange;</div><div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;    {</div><div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;        <span class="keywordflow">return</span> func(target, <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>, length, access);</div><div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;    }</div><div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;    {</div><div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;    }</div><div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;}</div><div class="ttc" id="src_2core_2_c_l_2cl__kernels_2_helpers_8h_xhtml_a009469e4d9b8fce3b6d5e97d2077827d"><div class="ttname"><a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a></div><div class="ttdeci">__global uchar * offset(const Image *img, int x, int y)</div><div class="ttdoc">Get the pointer position of a Image.</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l00510">helpers.h:510</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l00510">offset()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_g_c_memory_region_8cpp_source.xhtml#l00069">GCBufferMemoryRegion::map()</a>.</p>

</div>
</div>
<a id="aa3889deebdf32118fa72107fe521e131"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa3889deebdf32118fa72107fe521e131">&#9670;&nbsp;</a></span>glMemoryBarrier()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void GL_APIENTRY glMemoryBarrier </td>
          <td>(</td>
          <td class="paramtype">GLbitfield&#160;</td>
          <td class="paramname"><em>barriers</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00620">620</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;{</div><div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().glMemoryBarrier;</div><div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;    {</div><div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;        <span class="keywordflow">return</span> func(barriers);</div><div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;    }</div><div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;    {</div><div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;    }</div><div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;}</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_g_c_scheduler_8cpp_source.xhtml#l00086">GCScheduler::memory_barrier()</a>.</p>

</div>
</div>
<a id="a9f1f3138bcad87b01f61c136942875bd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9f1f3138bcad87b01f61c136942875bd">&#9670;&nbsp;</a></span>glShaderSource()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void GL_APIENTRY glShaderSource </td>
          <td>(</td>
          <td class="paramtype">GLuint&#160;</td>
          <td class="paramname"><em>shader</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">GLsizei&#160;</td>
          <td class="paramname"><em>count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const GLchar *const *&#160;</td>
          <td class="paramname"><em>string</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const GLint *&#160;</td>
          <td class="paramname"><em>length</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00464">464</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;{</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().glShaderSource;</div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;    {</div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;        <span class="keywordflow">return</span> func(shader, count, <span class="keywordtype">string</span>, length);</div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;    }</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;    {</div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;    }</div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;}</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_g_c_kernel_library_8cpp_source.xhtml#l00079">GCProgram::compile_shader()</a>.</p>

</div>
</div>
<a id="a52e5a8e8cf2a333616f36781b02f6b32"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a52e5a8e8cf2a333616f36781b02f6b32">&#9670;&nbsp;</a></span>glTexImage2D()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void GL_APIENTRY glTexImage2D </td>
          <td>(</td>
          <td class="paramtype">GLenum&#160;</td>
          <td class="paramname"><em>target</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">GLint&#160;</td>
          <td class="paramname"><em>level</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">GLint&#160;</td>
          <td class="paramname"><em>internalformat</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">GLsizei&#160;</td>
          <td class="paramname"><em>width</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">GLsizei&#160;</td>
          <td class="paramname"><em>height</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">GLint&#160;</td>
          <td class="paramname"><em>border</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">GLenum&#160;</td>
          <td class="paramname"><em>format</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">GLenum&#160;</td>
          <td class="paramname"><em>type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const GLvoid *&#160;</td>
          <td class="paramname"><em>pixels</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00763">763</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00764"></a><span class="lineno">  764</span>&#160;{</div><div class="line"><a name="l00765"></a><span class="lineno">  765</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().glTexImage2D;</div><div class="line"><a name="l00766"></a><span class="lineno">  766</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00767"></a><span class="lineno">  767</span>&#160;    {</div><div class="line"><a name="l00768"></a><span class="lineno">  768</span>&#160;        <span class="keywordflow">return</span> func(target, <a class="code" href="namespace_gemm_tuner.xhtml#afde8e18a788ccc92fc61cab298bca7e3">level</a>, internalformat, width, height, border, format, <a class="code" href="namespace_gemm_tuner.xhtml#a7aead736a07eaf25623ad7bfa1f0ee2d">type</a>, pixels);</div><div class="line"><a name="l00769"></a><span class="lineno">  769</span>&#160;    }</div><div class="line"><a name="l00770"></a><span class="lineno">  770</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00771"></a><span class="lineno">  771</span>&#160;    {</div><div class="line"><a name="l00772"></a><span class="lineno">  772</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00773"></a><span class="lineno">  773</span>&#160;    }</div><div class="line"><a name="l00774"></a><span class="lineno">  774</span>&#160;}</div><div class="ttc" id="namespace_gemm_tuner_xhtml_afde8e18a788ccc92fc61cab298bca7e3"><div class="ttname"><a href="namespace_gemm_tuner.xhtml#afde8e18a788ccc92fc61cab298bca7e3">GemmTuner.level</a></div><div class="ttdeci">level</div><div class="ttdef"><b>Definition:</b> <a href="_gemm_tuner_8py_source.xhtml#l00557">GemmTuner.py:557</a></div></div>
<div class="ttc" id="namespace_gemm_tuner_xhtml_a7aead736a07eaf25623ad7bfa1f0ee2d"><div class="ttname"><a href="namespace_gemm_tuner.xhtml#a7aead736a07eaf25623ad7bfa1f0ee2d">GemmTuner.type</a></div><div class="ttdeci">type</div><div class="ttdef"><b>Definition:</b> <a href="_gemm_tuner_8py_source.xhtml#l00527">GemmTuner.py:527</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_gemm_tuner_8py_source.xhtml#l00557">GemmTuner::level</a>, and <a class="el" href="_gemm_tuner_8py_source.xhtml#l00527">GemmTuner::type</a>.</p>

<p class="reference">Referenced by <a class="el" href="_g_c_kernel_library_8cpp_source.xhtml#l00526">GCKernelLibrary::setup_dummy_fbo()</a>.</p>

</div>
</div>
<a id="a33ca42089dac5eea0502f914d4b41629"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a33ca42089dac5eea0502f914d4b41629">&#9670;&nbsp;</a></span>glUniform1ui()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void GL_APIENTRY glUniform1ui </td>
          <td>(</td>
          <td class="paramtype">GLint&#160;</td>
          <td class="paramname"><em>location</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">GLuint&#160;</td>
          <td class="paramname"><em>v0</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00633">633</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;{</div><div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().glUniform1ui;</div><div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;    {</div><div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;        <span class="keywordflow">return</span> func(location, v0);</div><div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;    }</div><div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;    {</div><div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;    }</div><div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a5943aadf8a3d988af82624d19cbd1c0a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5943aadf8a3d988af82624d19cbd1c0a">&#9670;&nbsp;</a></span>glUniformBlockBinding()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void GL_APIENTRY glUniformBlockBinding </td>
          <td>(</td>
          <td class="paramtype">GLuint&#160;</td>
          <td class="paramname"><em>program</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">GLuint&#160;</td>
          <td class="paramname"><em>uniformBlockIndex</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">GLuint&#160;</td>
          <td class="paramname"><em>uniformBlockBinding</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00698">698</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;{</div><div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().glUniformBlockBinding;</div><div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;    {</div><div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;        <span class="keywordflow">return</span> func(program, uniformBlockIndex, uniformBlockBinding);</div><div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;    }</div><div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;    {</div><div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;    }</div><div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;}</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_g_c_kernel_library_8cpp_source.xhtml#l00178">GCKernel::update_shader_params()</a>.</p>

</div>
</div>
<a id="ae5331c578edd6784ab4cc6e4f0710938"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae5331c578edd6784ab4cc6e4f0710938">&#9670;&nbsp;</a></span>glUnmapBuffer()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">GLboolean GL_APIENTRY glUnmapBuffer </td>
          <td>(</td>
          <td class="paramtype">GLenum&#160;</td>
          <td class="paramname"><em>target</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00646">646</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;{</div><div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().glUnmapBuffer;</div><div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;    {</div><div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;        <span class="keywordflow">return</span> func(target);</div><div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;    }</div><div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;    {</div><div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;        <span class="keywordflow">return</span> GL_FALSE;</div><div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;    }</div><div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;}</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_g_c_memory_region_8cpp_source.xhtml#l00081">GCBufferMemoryRegion::unmap()</a>.</p>

</div>
</div>
<a id="ab685deb85a327c7a4c22285619c3f26a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab685deb85a327c7a4c22285619c3f26a">&#9670;&nbsp;</a></span>glUseProgram()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void GL_APIENTRY glUseProgram </td>
          <td>(</td>
          <td class="paramtype">GLuint&#160;</td>
          <td class="paramname"><em>program</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00477">477</a> of file <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml">OpenGLES.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;{</div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().glUseProgram;</div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;    {</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;        <span class="keywordflow">return</span> func(program);</div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;    }</div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;    {</div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;    }</div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;}</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_g_c_kernel_library_8cpp_source.xhtml#l00160">GCKernel::cleanup()</a>, <a class="el" href="_g_c_kernel_library_8cpp_source.xhtml#l00048">GCProgram::link_program()</a>, <a class="el" href="_g_c_kernel_library_8cpp_source.xhtml#l00173">GCKernel::unuse()</a>, and <a class="el" href="_g_c_kernel_library_8cpp_source.xhtml#l00168">GCKernel::use()</a>.</p>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_aebb8dcc11953d78e620bbef0b9e2183.xhtml">core</a></li><li class="navelem"><a class="el" href="dir_88eff89ba7e837209a0b9693ad92651e.xhtml">GLES_COMPUTE</a></li><li class="navelem"><a class="el" href="_open_g_l_e_s_8cpp.xhtml">OpenGLES.cpp</a></li>
    <li class="footer">Generated on Fri Feb 21 2020 11:10:21 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
