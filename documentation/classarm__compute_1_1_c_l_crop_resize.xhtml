<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: CLCropResize Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.02.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classarm__compute_1_1_c_l_crop_resize.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pub-attribs">Data Fields</a>  </div>
  <div class="headertitle">
<div class="title">CLCropResize Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Function to perform cropping and resizing.  
 <a href="classarm__compute_1_1_c_l_crop_resize.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_c_l_crop_resize_8h_source.xhtml">CLCropResize.h</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for CLCropResize:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classarm__compute_1_1_c_l_crop_resize__coll__graph.svg" width="195" height="247"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ab776ea56c9004a561a4c19f323aa4e9d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_crop_resize.xhtml#ab776ea56c9004a561a4c19f323aa4e9d">CLCropResize</a> ()</td></tr>
<tr class="memdesc:ab776ea56c9004a561a4c19f323aa4e9d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor.  <a href="#ab776ea56c9004a561a4c19f323aa4e9d">More...</a><br /></td></tr>
<tr class="separator:ab776ea56c9004a561a4c19f323aa4e9d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6db582c4450ad036ef75c162293745d8"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_crop_resize.xhtml#a6db582c4450ad036ef75c162293745d8">CLCropResize</a> (const <a class="el" href="classarm__compute_1_1_c_l_crop_resize.xhtml">CLCropResize</a> &amp;)=delete</td></tr>
<tr class="memdesc:a6db582c4450ad036ef75c162293745d8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied (As this class contains pointers)  <a href="#a6db582c4450ad036ef75c162293745d8">More...</a><br /></td></tr>
<tr class="separator:a6db582c4450ad036ef75c162293745d8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adf09f2f56e1b91fde00a25c2c80e156f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_c_l_crop_resize.xhtml">CLCropResize</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_crop_resize.xhtml#adf09f2f56e1b91fde00a25c2c80e156f">operator=</a> (const <a class="el" href="classarm__compute_1_1_c_l_crop_resize.xhtml">CLCropResize</a> &amp;)=delete</td></tr>
<tr class="memdesc:adf09f2f56e1b91fde00a25c2c80e156f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied (As this class contains pointers)  <a href="#adf09f2f56e1b91fde00a25c2c80e156f">More...</a><br /></td></tr>
<tr class="separator:adf09f2f56e1b91fde00a25c2c80e156f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad16309a9fc8d4d385fd15759fb43138e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_crop_resize.xhtml#ad16309a9fc8d4d385fd15759fb43138e">CLCropResize</a> (<a class="el" href="classarm__compute_1_1_c_l_crop_resize.xhtml">CLCropResize</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:ad16309a9fc8d4d385fd15759fb43138e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be moved.  <a href="#ad16309a9fc8d4d385fd15759fb43138e">More...</a><br /></td></tr>
<tr class="separator:ad16309a9fc8d4d385fd15759fb43138e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a00b11a73d3ee8593bb87ef894e221ecc"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_c_l_crop_resize.xhtml">CLCropResize</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_crop_resize.xhtml#a00b11a73d3ee8593bb87ef894e221ecc">operator=</a> (<a class="el" href="classarm__compute_1_1_c_l_crop_resize.xhtml">CLCropResize</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:a00b11a73d3ee8593bb87ef894e221ecc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be moved.  <a href="#a00b11a73d3ee8593bb87ef894e221ecc">More...</a><br /></td></tr>
<tr class="separator:a00b11a73d3ee8593bb87ef894e221ecc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa5e4ab5c6bfaca2efaeacc9f1b54a4e9"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_crop_resize.xhtml#aa5e4ab5c6bfaca2efaeacc9f1b54a4e9">~CLCropResize</a> ()=default</td></tr>
<tr class="memdesc:aa5e4ab5c6bfaca2efaeacc9f1b54a4e9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default destructor.  <a href="#aa5e4ab5c6bfaca2efaeacc9f1b54a4e9">More...</a><br /></td></tr>
<tr class="separator:aa5e4ab5c6bfaca2efaeacc9f1b54a4e9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a668319020f52120f3269e983cc72d5f3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_crop_resize.xhtml#a668319020f52120f3269e983cc72d5f3">configure</a> (const <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *input, <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *boxes, <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *box_ind, <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *output, <a class="el" href="structarm__compute_1_1_coordinates2_d.xhtml">Coordinates2D</a> crop_size, <a class="el" href="namespacearm__compute.xhtml#a966a9c417ce5e94dca08d9b5e745c0c9">InterpolationPolicy</a> method=<a class="el" href="namespacearm__compute.xhtml#a966a9c417ce5e94dca08d9b5e745c0c9aad6fddf718ad19b063e02fdd7e8e3e65">InterpolationPolicy::BILINEAR</a>, float extrapolation_value=0)</td></tr>
<tr class="memdesc:a668319020f52120f3269e983cc72d5f3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Configure kernel.  <a href="#a668319020f52120f3269e983cc72d5f3">More...</a><br /></td></tr>
<tr class="separator:a668319020f52120f3269e983cc72d5f3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad1717410afd0be936c6213a63c8005fb"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_crop_resize.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a> () override</td></tr>
<tr class="memdesc:ad1717410afd0be936c6213a63c8005fb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Run the kernels contained in the function.  <a href="#ad1717410afd0be936c6213a63c8005fb">More...</a><br /></td></tr>
<tr class="separator:ad1717410afd0be936c6213a63c8005fb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1_i_function"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1_i_function')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1_i_function.xhtml">IFunction</a></td></tr>
<tr class="memitem:ab921ecc3f3f6ae2b4bd61f3e1998d8c4 inherit pub_methods_classarm__compute_1_1_i_function"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_function.xhtml#ab921ecc3f3f6ae2b4bd61f3e1998d8c4">~IFunction</a> ()=default</td></tr>
<tr class="memdesc:ab921ecc3f3f6ae2b4bd61f3e1998d8c4 inherit pub_methods_classarm__compute_1_1_i_function"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor.  <a href="classarm__compute_1_1_i_function.xhtml#ab921ecc3f3f6ae2b4bd61f3e1998d8c4">More...</a><br /></td></tr>
<tr class="separator:ab921ecc3f3f6ae2b4bd61f3e1998d8c4 inherit pub_methods_classarm__compute_1_1_i_function"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a820f7291c24155a2980512fae45aac26 inherit pub_methods_classarm__compute_1_1_i_function"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_function.xhtml#a820f7291c24155a2980512fae45aac26">prepare</a> ()</td></tr>
<tr class="memdesc:a820f7291c24155a2980512fae45aac26 inherit pub_methods_classarm__compute_1_1_i_function"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prepare the function for executing.  <a href="classarm__compute_1_1_i_function.xhtml#a820f7291c24155a2980512fae45aac26">More...</a><br /></td></tr>
<tr class="separator:a820f7291c24155a2980512fae45aac26 inherit pub_methods_classarm__compute_1_1_i_function"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a50ea7a28151a85dbbe7483ac032a3886"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classarm__compute_1_1_status.xhtml">Status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_crop_resize.xhtml#a50ea7a28151a85dbbe7483ac032a3886">validate</a> (const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *input, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *boxes, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *box_ind, const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *output, <a class="el" href="structarm__compute_1_1_coordinates2_d.xhtml">Coordinates2D</a> crop_size, <a class="el" href="namespacearm__compute.xhtml#a966a9c417ce5e94dca08d9b5e745c0c9">InterpolationPolicy</a> method, float extrapolation_value)</td></tr>
<tr class="memdesc:a50ea7a28151a85dbbe7483ac032a3886"><td class="mdescLeft">&#160;</td><td class="mdescRight">Static function to check if given info will lead to a valid configuration of <a class="el" href="classarm__compute_1_1_n_e_slice.xhtml">NESlice</a>.  <a href="#a50ea7a28151a85dbbe7483ac032a3886">More...</a><br /></td></tr>
<tr class="separator:a50ea7a28151a85dbbe7483ac032a3886"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Data Fields</h2></td></tr>
<tr class="memitem:a1acfeaa60695d4df61d8d4b5c905aa53"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_crop_resize.xhtml#a1acfeaa60695d4df61d8d4b5c905aa53">_input</a></td></tr>
<tr class="separator:a1acfeaa60695d4df61d8d4b5c905aa53"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a72a3dc1eaa8912f18a01ed7a377e31f8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_crop_resize.xhtml#a72a3dc1eaa8912f18a01ed7a377e31f8">_boxes</a></td></tr>
<tr class="separator:a72a3dc1eaa8912f18a01ed7a377e31f8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aafd18b00f7069f03320be223260c945c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_crop_resize.xhtml#aafd18b00f7069f03320be223260c945c">_box_ind</a></td></tr>
<tr class="separator:aafd18b00f7069f03320be223260c945c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a62d192d931002b4866443cd7fc71419b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_crop_resize.xhtml#a62d192d931002b4866443cd7fc71419b">_output</a></td></tr>
<tr class="separator:a62d192d931002b4866443cd7fc71419b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad079478f73a5eac133d029fc1ff10225"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_crop_resize.xhtml#ad079478f73a5eac133d029fc1ff10225">_num_boxes</a></td></tr>
<tr class="separator:ad079478f73a5eac133d029fc1ff10225"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac17c6ba3cfe6338930b20d4541ff8b34"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearm__compute.xhtml#a966a9c417ce5e94dca08d9b5e745c0c9">InterpolationPolicy</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_crop_resize.xhtml#ac17c6ba3cfe6338930b20d4541ff8b34">_method</a></td></tr>
<tr class="separator:ac17c6ba3cfe6338930b20d4541ff8b34"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5e6dad2c0f2799f694d00240cb728859"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_crop_resize.xhtml#a5e6dad2c0f2799f694d00240cb728859">_extrapolation_value</a></td></tr>
<tr class="separator:a5e6dad2c0f2799f694d00240cb728859"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adb221b9aa2c38a5b7c50cbab3d2db3a0"><td class="memItemLeft" align="right" valign="top">std::vector&lt; std::unique_ptr&lt; <a class="el" href="classarm__compute_1_1_c_l_scale.xhtml">CLScale</a> &gt; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_crop_resize.xhtml#adb221b9aa2c38a5b7c50cbab3d2db3a0">_scale</a></td></tr>
<tr class="separator:adb221b9aa2c38a5b7c50cbab3d2db3a0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abac7525d26d0671b9487440e962f7cc3"><td class="memItemLeft" align="right" valign="top">std::vector&lt; std::unique_ptr&lt; <a class="el" href="classarm__compute_1_1_c_l_copy_kernel.xhtml">CLCopyKernel</a> &gt; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_crop_resize.xhtml#abac7525d26d0671b9487440e962f7cc3">_copy</a></td></tr>
<tr class="separator:abac7525d26d0671b9487440e962f7cc3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a44d7d5b204050ad00d596410b2513f84"><td class="memItemLeft" align="right" valign="top">std::vector&lt; std::unique_ptr&lt; <a class="el" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a> &gt; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_crop_resize.xhtml#a44d7d5b204050ad00d596410b2513f84">_crop_results</a></td></tr>
<tr class="separator:a44d7d5b204050ad00d596410b2513f84"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6632ee639b1072ab5cc43449df659b2c"><td class="memItemLeft" align="right" valign="top">std::vector&lt; std::unique_ptr&lt; <a class="el" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a> &gt; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_crop_resize.xhtml#a6632ee639b1072ab5cc43449df659b2c">_scaled_results</a></td></tr>
<tr class="separator:a6632ee639b1072ab5cc43449df659b2c"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Function to perform cropping and resizing. </p>

<p class="definition">Definition at line <a class="el" href="_c_l_crop_resize_8h_source.xhtml#l00043">43</a> of file <a class="el" href="_c_l_crop_resize_8h_source.xhtml">CLCropResize.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="ab776ea56c9004a561a4c19f323aa4e9d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab776ea56c9004a561a4c19f323aa4e9d">&#9670;&nbsp;</a></span>CLCropResize() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_l_crop_resize.xhtml">CLCropResize</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Default constructor. </p>

<p class="definition">Definition at line <a class="el" href="_c_l_crop_resize_8cpp_source.xhtml#l00166">166</a> of file <a class="el" href="_c_l_crop_resize_8cpp_source.xhtml">CLCropResize.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    : <a class="code" href="classarm__compute_1_1_c_l_crop_resize.xhtml#a1acfeaa60695d4df61d8d4b5c905aa53">_input</a>(<span class="keyword">nullptr</span>), <a class="code" href="classarm__compute_1_1_c_l_crop_resize.xhtml#a72a3dc1eaa8912f18a01ed7a377e31f8">_boxes</a>(<span class="keyword">nullptr</span>), <a class="code" href="classarm__compute_1_1_c_l_crop_resize.xhtml#aafd18b00f7069f03320be223260c945c">_box_ind</a>(<span class="keyword">nullptr</span>), <a class="code" href="classarm__compute_1_1_c_l_crop_resize.xhtml#a62d192d931002b4866443cd7fc71419b">_output</a>(<span class="keyword">nullptr</span>), <a class="code" href="classarm__compute_1_1_c_l_crop_resize.xhtml#ad079478f73a5eac133d029fc1ff10225">_num_boxes</a>(0), <a class="code" href="classarm__compute_1_1_c_l_crop_resize.xhtml#ac17c6ba3cfe6338930b20d4541ff8b34">_method</a>(), <a class="code" href="classarm__compute_1_1_c_l_crop_resize.xhtml#a5e6dad2c0f2799f694d00240cb728859">_extrapolation_value</a>(0), <a class="code" href="classarm__compute_1_1_c_l_crop_resize.xhtml#adb221b9aa2c38a5b7c50cbab3d2db3a0">_scale</a>(), <a class="code" href="classarm__compute_1_1_c_l_crop_resize.xhtml#abac7525d26d0671b9487440e962f7cc3">_copy</a>(), <a class="code" href="classarm__compute_1_1_c_l_crop_resize.xhtml#a44d7d5b204050ad00d596410b2513f84">_crop_results</a>(), <a class="code" href="classarm__compute_1_1_c_l_crop_resize.xhtml#a6632ee639b1072ab5cc43449df659b2c">_scaled_results</a>()</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;{</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;}</div><div class="ttc" id="classarm__compute_1_1_c_l_crop_resize_xhtml_a44d7d5b204050ad00d596410b2513f84"><div class="ttname"><a href="classarm__compute_1_1_c_l_crop_resize.xhtml#a44d7d5b204050ad00d596410b2513f84">arm_compute::CLCropResize::_crop_results</a></div><div class="ttdeci">std::vector&lt; std::unique_ptr&lt; CLTensor &gt; &gt; _crop_results</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_crop_resize_8h_source.xhtml#l00110">CLCropResize.h:110</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_crop_resize_xhtml_ad079478f73a5eac133d029fc1ff10225"><div class="ttname"><a href="classarm__compute_1_1_c_l_crop_resize.xhtml#ad079478f73a5eac133d029fc1ff10225">arm_compute::CLCropResize::_num_boxes</a></div><div class="ttdeci">size_t _num_boxes</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_crop_resize_8h_source.xhtml#l00104">CLCropResize.h:104</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_crop_resize_xhtml_abac7525d26d0671b9487440e962f7cc3"><div class="ttname"><a href="classarm__compute_1_1_c_l_crop_resize.xhtml#abac7525d26d0671b9487440e962f7cc3">arm_compute::CLCropResize::_copy</a></div><div class="ttdeci">std::vector&lt; std::unique_ptr&lt; CLCopyKernel &gt; &gt; _copy</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_crop_resize_8h_source.xhtml#l00109">CLCropResize.h:109</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_crop_resize_xhtml_a6632ee639b1072ab5cc43449df659b2c"><div class="ttname"><a href="classarm__compute_1_1_c_l_crop_resize.xhtml#a6632ee639b1072ab5cc43449df659b2c">arm_compute::CLCropResize::_scaled_results</a></div><div class="ttdeci">std::vector&lt; std::unique_ptr&lt; CLTensor &gt; &gt; _scaled_results</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_crop_resize_8h_source.xhtml#l00111">CLCropResize.h:111</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_crop_resize_xhtml_ac17c6ba3cfe6338930b20d4541ff8b34"><div class="ttname"><a href="classarm__compute_1_1_c_l_crop_resize.xhtml#ac17c6ba3cfe6338930b20d4541ff8b34">arm_compute::CLCropResize::_method</a></div><div class="ttdeci">InterpolationPolicy _method</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_crop_resize_8h_source.xhtml#l00105">CLCropResize.h:105</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_crop_resize_xhtml_a62d192d931002b4866443cd7fc71419b"><div class="ttname"><a href="classarm__compute_1_1_c_l_crop_resize.xhtml#a62d192d931002b4866443cd7fc71419b">arm_compute::CLCropResize::_output</a></div><div class="ttdeci">ICLTensor * _output</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_crop_resize_8h_source.xhtml#l00103">CLCropResize.h:103</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_crop_resize_xhtml_a1acfeaa60695d4df61d8d4b5c905aa53"><div class="ttname"><a href="classarm__compute_1_1_c_l_crop_resize.xhtml#a1acfeaa60695d4df61d8d4b5c905aa53">arm_compute::CLCropResize::_input</a></div><div class="ttdeci">const ICLTensor * _input</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_crop_resize_8h_source.xhtml#l00100">CLCropResize.h:100</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_crop_resize_xhtml_a5e6dad2c0f2799f694d00240cb728859"><div class="ttname"><a href="classarm__compute_1_1_c_l_crop_resize.xhtml#a5e6dad2c0f2799f694d00240cb728859">arm_compute::CLCropResize::_extrapolation_value</a></div><div class="ttdeci">float _extrapolation_value</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_crop_resize_8h_source.xhtml#l00106">CLCropResize.h:106</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_crop_resize_xhtml_adb221b9aa2c38a5b7c50cbab3d2db3a0"><div class="ttname"><a href="classarm__compute_1_1_c_l_crop_resize.xhtml#adb221b9aa2c38a5b7c50cbab3d2db3a0">arm_compute::CLCropResize::_scale</a></div><div class="ttdeci">std::vector&lt; std::unique_ptr&lt; CLScale &gt; &gt; _scale</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_crop_resize_8h_source.xhtml#l00108">CLCropResize.h:108</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_crop_resize_xhtml_a72a3dc1eaa8912f18a01ed7a377e31f8"><div class="ttname"><a href="classarm__compute_1_1_c_l_crop_resize.xhtml#a72a3dc1eaa8912f18a01ed7a377e31f8">arm_compute::CLCropResize::_boxes</a></div><div class="ttdeci">ICLTensor * _boxes</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_crop_resize_8h_source.xhtml#l00101">CLCropResize.h:101</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_crop_resize_xhtml_aafd18b00f7069f03320be223260c945c"><div class="ttname"><a href="classarm__compute_1_1_c_l_crop_resize.xhtml#aafd18b00f7069f03320be223260c945c">arm_compute::CLCropResize::_box_ind</a></div><div class="ttdeci">ICLTensor * _box_ind</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_crop_resize_8h_source.xhtml#l00102">CLCropResize.h:102</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a6db582c4450ad036ef75c162293745d8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6db582c4450ad036ef75c162293745d8">&#9670;&nbsp;</a></span>CLCropResize() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_l_crop_resize.xhtml">CLCropResize</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_c_l_crop_resize.xhtml">CLCropResize</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prevent instances of this class from being copied (As this class contains pointers) </p>

</div>
</div>
<a id="ad16309a9fc8d4d385fd15759fb43138e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad16309a9fc8d4d385fd15759fb43138e">&#9670;&nbsp;</a></span>CLCropResize() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_l_crop_resize.xhtml">CLCropResize</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_c_l_crop_resize.xhtml">CLCropResize</a> &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Allow instances of this class to be moved. </p>

</div>
</div>
<a id="aa5e4ab5c6bfaca2efaeacc9f1b54a4e9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa5e4ab5c6bfaca2efaeacc9f1b54a4e9">&#9670;&nbsp;</a></span>~CLCropResize()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual ~<a class="el" href="classarm__compute_1_1_c_l_crop_resize.xhtml">CLCropResize</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Default destructor. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a668319020f52120f3269e983cc72d5f3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a668319020f52120f3269e983cc72d5f3">&#9670;&nbsp;</a></span>configure()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void configure </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *&#160;</td>
          <td class="paramname"><em>boxes</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *&#160;</td>
          <td class="paramname"><em>box_ind</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1_coordinates2_d.xhtml">Coordinates2D</a>&#160;</td>
          <td class="paramname"><em>crop_size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearm__compute.xhtml#a966a9c417ce5e94dca08d9b5e745c0c9">InterpolationPolicy</a>&#160;</td>
          <td class="paramname"><em>method</em> = <code><a class="el" href="namespacearm__compute.xhtml#a966a9c417ce5e94dca08d9b5e745c0c9aad6fddf718ad19b063e02fdd7e8e3e65">InterpolationPolicy::BILINEAR</a></code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>extrapolation_value</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Configure kernel. </p>
<dl class="section note"><dt>Note</dt><dd>Supported tensor rank: up to 4 </dd>
<dd>
Box indices may be outside of the bounds, in which case <code>extrapolation_value</code> is used. </dd>
<dd>
Start and end indices of boxes are inclusive.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">input</td><td>Source tensor containing N batches of 3D images to be cropped. Data type supported: F32 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">boxes</td><td><a class="el" href="classarm__compute_1_1_tensor.xhtml" title="Basic implementation of the tensor interface.">Tensor</a> containing the boxes used to crop the images. Data type supported: F32 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">box_ind</td><td>One dimensional tensor containing the batch index of the 3D image in <code>input</code> that the corresponding box in <code>boxes</code> will be applied to. Data type supported: F32 </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">output</td><td>Destination tensor containing a cropped and resized image for each box in <code>boxes</code>. Data type supported: F32 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">crop_size</td><td>The dimensions that each cropped image will be resized to. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">method</td><td>The policy to be used when resizing image. Default is bilinear. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">extrapolation_value</td><td>Value to be used for values outside of the image for cropping and resizing. Default is 0. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_c_l_crop_resize_8cpp_source.xhtml#l00190">190</a> of file <a class="el" href="_c_l_crop_resize_8cpp_source.xhtml">CLCropResize.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;{</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    <a class="code" href="_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, output);</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    <a class="code" href="_error_8h.xhtml#a938dcd406ce611ef5345ad2531cdb948">ARM_COMPUTE_ERROR_THROW_ON</a>(<a class="code" href="classarm__compute_1_1_c_l_crop_resize.xhtml#a50ea7a28151a85dbbe7483ac032a3886">CLCropResize::validate</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;info(), boxes-&gt;info(), box_ind-&gt;info(), output-&gt;info(), crop_size, method, extrapolation_value));</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_crop_resize.xhtml#ad079478f73a5eac133d029fc1ff10225">_num_boxes</a> = boxes-&gt;info()-&gt;tensor_shape()[1];</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    TensorShape out_shape(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;info()-&gt;tensor_shape()[0], crop_size.<a class="code" href="struct_coordinates2_d.xhtml#a6150e0515f7202e2fb518f7206ed97dc">x</a>, crop_size.<a class="code" href="struct_coordinates2_d.xhtml#a0a2f84ed7838f07779ae24c5a9086d33">y</a>);</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_crop_resize.xhtml#a1acfeaa60695d4df61d8d4b5c905aa53">_input</a>               = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>;</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_crop_resize.xhtml#a72a3dc1eaa8912f18a01ed7a377e31f8">_boxes</a>               = boxes;</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_crop_resize.xhtml#aafd18b00f7069f03320be223260c945c">_box_ind</a>             = box_ind;</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_crop_resize.xhtml#a62d192d931002b4866443cd7fc71419b">_output</a>              = output;</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_crop_resize.xhtml#ac17c6ba3cfe6338930b20d4541ff8b34">_method</a>              = method;</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_crop_resize.xhtml#a5e6dad2c0f2799f694d00240cb728859">_extrapolation_value</a> = extrapolation_value;</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    <span class="comment">// For each crop box:</span></div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    <span class="comment">// - The initial cropped image is produced as specified by boxes[i] from the 3D image input[box_ind[i]].</span></div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;    <span class="comment">//   Possibly using a CLCropKernel and up to four CLMemsetKernels.</span></div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    <span class="comment">// - A tensor is required to hold this initial cropped image.</span></div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    <span class="comment">// - A scale function is used to resize the cropped image to the size specified by crop_size.</span></div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    <span class="comment">// - A tensor is required to hold the final scaled image before it is copied into the 4D output</span></div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;    <span class="comment">//   that will hold all final cropped and scaled 3D images using CLCopyKernel.</span></div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;    <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i = 0; i &lt; <a class="code" href="classarm__compute_1_1_c_l_crop_resize.xhtml#ad079478f73a5eac133d029fc1ff10225">_num_boxes</a>; ++i)</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;    {</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;        <span class="keyword">auto</span>       crop_tensor = support::cpp14::make_unique&lt;CLTensor&gt;();</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;        TensorInfo crop_result_info(1, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>);</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;        crop_result_info.set_data_layout(<a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">DataLayout::NHWC</a>);</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;        crop_tensor-&gt;allocator()-&gt;init(crop_result_info);</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;        <a class="code" href="classarm__compute_1_1_c_l_crop_resize.xhtml#a44d7d5b204050ad00d596410b2513f84">_crop_results</a>.emplace_back(std::move(crop_tensor));</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;        <span class="keyword">auto</span>       scale_tensor = support::cpp14::make_unique&lt;CLTensor&gt;();</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;        TensorInfo scaled_result_info(out_shape, 1, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>);</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;        scaled_result_info.set_data_layout(<a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">DataLayout::NHWC</a>);</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;        scale_tensor-&gt;allocator()-&gt;init(scaled_result_info);</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;        <a class="code" href="classarm__compute_1_1_c_l_crop_resize.xhtml#a6632ee639b1072ab5cc43449df659b2c">_scaled_results</a>.emplace_back(std::move(scale_tensor));</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;    }</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;}</div><div class="ttc" id="classarm__compute_1_1_c_l_crop_resize_xhtml_a44d7d5b204050ad00d596410b2513f84"><div class="ttname"><a href="classarm__compute_1_1_c_l_crop_resize.xhtml#a44d7d5b204050ad00d596410b2513f84">arm_compute::CLCropResize::_crop_results</a></div><div class="ttdeci">std::vector&lt; std::unique_ptr&lt; CLTensor &gt; &gt; _crop_results</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_crop_resize_8h_source.xhtml#l00110">CLCropResize.h:110</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_crop_resize_xhtml_ad079478f73a5eac133d029fc1ff10225"><div class="ttname"><a href="classarm__compute_1_1_c_l_crop_resize.xhtml#ad079478f73a5eac133d029fc1ff10225">arm_compute::CLCropResize::_num_boxes</a></div><div class="ttdeci">size_t _num_boxes</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_crop_resize_8h_source.xhtml#l00104">CLCropResize.h:104</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">arm_compute::Format::F32</a></div><div class="ttdoc">1 channel, 1 F32 per channel</div></div>
<div class="ttc" id="_error_8h_xhtml_a938dcd406ce611ef5345ad2531cdb948"><div class="ttname"><a href="_error_8h.xhtml#a938dcd406ce611ef5345ad2531cdb948">ARM_COMPUTE_ERROR_THROW_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_THROW_ON(status)</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00455">Error.h:455</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a8fcf2ddd9a1d58b1b280f5c0aed71845"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">arm_compute::test::validation::input</a></div><div class="ttdeci">auto input</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00487">LSTMLayerQuantized.cpp:487</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_crop_resize_xhtml_a6632ee639b1072ab5cc43449df659b2c"><div class="ttname"><a href="classarm__compute_1_1_c_l_crop_resize.xhtml#a6632ee639b1072ab5cc43449df659b2c">arm_compute::CLCropResize::_scaled_results</a></div><div class="ttdeci">std::vector&lt; std::unique_ptr&lt; CLTensor &gt; &gt; _scaled_results</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_crop_resize_8h_source.xhtml#l00111">CLCropResize.h:111</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_crop_resize_xhtml_ac17c6ba3cfe6338930b20d4541ff8b34"><div class="ttname"><a href="classarm__compute_1_1_c_l_crop_resize.xhtml#ac17c6ba3cfe6338930b20d4541ff8b34">arm_compute::CLCropResize::_method</a></div><div class="ttdeci">InterpolationPolicy _method</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_crop_resize_8h_source.xhtml#l00105">CLCropResize.h:105</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_crop_resize_xhtml_a50ea7a28151a85dbbe7483ac032a3886"><div class="ttname"><a href="classarm__compute_1_1_c_l_crop_resize.xhtml#a50ea7a28151a85dbbe7483ac032a3886">arm_compute::CLCropResize::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *input, ITensorInfo *boxes, ITensorInfo *box_ind, const ITensorInfo *output, Coordinates2D crop_size, InterpolationPolicy method, float extrapolation_value)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration of NESlice.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_crop_resize_8cpp_source.xhtml#l00171">CLCropResize.cpp:171</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_crop_resize_xhtml_a62d192d931002b4866443cd7fc71419b"><div class="ttname"><a href="classarm__compute_1_1_c_l_crop_resize.xhtml#a62d192d931002b4866443cd7fc71419b">arm_compute::CLCropResize::_output</a></div><div class="ttdeci">ICLTensor * _output</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_crop_resize_8h_source.xhtml#l00103">CLCropResize.h:103</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_crop_resize_xhtml_a1acfeaa60695d4df61d8d4b5c905aa53"><div class="ttname"><a href="classarm__compute_1_1_c_l_crop_resize.xhtml#a1acfeaa60695d4df61d8d4b5c905aa53">arm_compute::CLCropResize::_input</a></div><div class="ttdeci">const ICLTensor * _input</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_crop_resize_8h_source.xhtml#l00100">CLCropResize.h:100</a></div></div>
<div class="ttc" id="struct_coordinates2_d_xhtml_a6150e0515f7202e2fb518f7206ed97dc"><div class="ttname"><a href="struct_coordinates2_d.xhtml#a6150e0515f7202e2fb518f7206ed97dc">Coordinates2D::x</a></div><div class="ttdeci">int x</div><div class="ttdoc">The x coordinate.</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_types_8h_source.xhtml#l00030">types.h:30</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_crop_resize_xhtml_a5e6dad2c0f2799f694d00240cb728859"><div class="ttname"><a href="classarm__compute_1_1_c_l_crop_resize.xhtml#a5e6dad2c0f2799f694d00240cb728859">arm_compute::CLCropResize::_extrapolation_value</a></div><div class="ttdeci">float _extrapolation_value</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_crop_resize_8h_source.xhtml#l00106">CLCropResize.h:106</a></div></div>
<div class="ttc" id="_validate_8h_xhtml_a921b705e9e3e0fe928928447869e62a5"><div class="ttname"><a href="_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_NULLPTR(...)</div><div class="ttdef"><b>Definition:</b> <a href="_validate_8h_source.xhtml#l00161">Validate.h:161</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51"><div class="ttname"><a href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">arm_compute::DataLayout::NHWC</a></div><div class="ttdoc">Num samples, height, width, channels.</div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_crop_resize_xhtml_a72a3dc1eaa8912f18a01ed7a377e31f8"><div class="ttname"><a href="classarm__compute_1_1_c_l_crop_resize.xhtml#a72a3dc1eaa8912f18a01ed7a377e31f8">arm_compute::CLCropResize::_boxes</a></div><div class="ttdeci">ICLTensor * _boxes</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_crop_resize_8h_source.xhtml#l00101">CLCropResize.h:101</a></div></div>
<div class="ttc" id="struct_coordinates2_d_xhtml_a0a2f84ed7838f07779ae24c5a9086d33"><div class="ttname"><a href="struct_coordinates2_d.xhtml#a0a2f84ed7838f07779ae24c5a9086d33">Coordinates2D::y</a></div><div class="ttdeci">int y</div><div class="ttdoc">The y coordinate.</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_types_8h_source.xhtml#l00031">types.h:31</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_crop_resize_xhtml_aafd18b00f7069f03320be223260c945c"><div class="ttname"><a href="classarm__compute_1_1_c_l_crop_resize.xhtml#aafd18b00f7069f03320be223260c945c">arm_compute::CLCropResize::_box_ind</a></div><div class="ttdeci">ICLTensor * _box_ind</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_crop_resize_8h_source.xhtml#l00102">CLCropResize.h:102</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_c_l_crop_resize_8h_source.xhtml#l00102">CLCropResize::_box_ind</a>, <a class="el" href="_c_l_crop_resize_8h_source.xhtml#l00101">CLCropResize::_boxes</a>, <a class="el" href="_c_l_crop_resize_8h_source.xhtml#l00110">CLCropResize::_crop_results</a>, <a class="el" href="_c_l_crop_resize_8h_source.xhtml#l00106">CLCropResize::_extrapolation_value</a>, <a class="el" href="_c_l_crop_resize_8h_source.xhtml#l00100">CLCropResize::_input</a>, <a class="el" href="_c_l_crop_resize_8h_source.xhtml#l00105">CLCropResize::_method</a>, <a class="el" href="_c_l_crop_resize_8h_source.xhtml#l00104">CLCropResize::_num_boxes</a>, <a class="el" href="_c_l_crop_resize_8h_source.xhtml#l00103">CLCropResize::_output</a>, <a class="el" href="_c_l_crop_resize_8h_source.xhtml#l00111">CLCropResize::_scaled_results</a>, <a class="el" href="_validate_8h_source.xhtml#l00161">ARM_COMPUTE_ERROR_ON_NULLPTR</a>, <a class="el" href="_error_8h_source.xhtml#l00455">ARM_COMPUTE_ERROR_THROW_ON</a>, <a class="el" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">arm_compute::F32</a>, <a class="el" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">ITensor::info()</a>, <a class="el" href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00487">arm_compute::test::validation::input</a>, <a class="el" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">arm_compute::NHWC</a>, <a class="el" href="src_2core_2_tensor_info_8cpp_source.xhtml#l00378">TensorInfo::set_data_layout()</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a7c66505457d00ece3aa4b34cab80757d">ITensorInfo::tensor_shape()</a>, <a class="el" href="_c_l_crop_resize_8cpp_source.xhtml#l00171">CLCropResize::validate()</a>, <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l00439">Coordinates2D::x</a>, and <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l00440">Coordinates2D::y</a>.</p>

</div>
</div>
<a id="adf09f2f56e1b91fde00a25c2c80e156f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adf09f2f56e1b91fde00a25c2c80e156f">&#9670;&nbsp;</a></span>operator=() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_l_crop_resize.xhtml">CLCropResize</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_c_l_crop_resize.xhtml">CLCropResize</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prevent instances of this class from being copied (As this class contains pointers) </p>

</div>
</div>
<a id="a00b11a73d3ee8593bb87ef894e221ecc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a00b11a73d3ee8593bb87ef894e221ecc">&#9670;&nbsp;</a></span>operator=() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_l_crop_resize.xhtml">CLCropResize</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_c_l_crop_resize.xhtml">CLCropResize</a> &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Allow instances of this class to be moved. </p>

</div>
</div>
<a id="ad1717410afd0be936c6213a63c8005fb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad1717410afd0be936c6213a63c8005fb">&#9670;&nbsp;</a></span>run()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void run </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Run the kernels contained in the function. </p>
<p>For NEON kernels:</p><ul>
<li>Multi-threading is used for the kernels which are parallelisable.</li>
<li>By default std::thread::hardware_concurrency() threads are used.</li>
</ul>
<dl class="section note"><dt>Note</dt><dd><a class="el" href="classarm__compute_1_1_c_p_p_scheduler.xhtml#ae64eebaa07f4d2da6cc2ba538c3cb095">CPPScheduler::set_num_threads()</a> can be used to manually set the number of threads</dd></dl>
<p>For OpenCL kernels:</p><ul>
<li>All the kernels are enqueued on the queue associated with <a class="el" href="classarm__compute_1_1_c_l_scheduler.xhtml" title="Provides global access to a CL context and command queue.">CLScheduler</a>.</li>
<li>The queue is then flushed.</li>
</ul>
<dl class="section note"><dt>Note</dt><dd>The function will not block until the kernels are executed. It is the user's responsibility to wait. </dd>
<dd>
Will call <a class="el" href="classarm__compute_1_1_i_function.xhtml#a820f7291c24155a2980512fae45aac26" title="Prepare the function for executing.">prepare()</a> on first run if hasn't been done </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_function.xhtml#a18954417d3124a8095783ea13dc6d00b">IFunction</a>.</p>

<p class="definition">Definition at line <a class="el" href="_c_l_crop_resize_8cpp_source.xhtml#l00229">229</a> of file <a class="el" href="_c_l_crop_resize_8cpp_source.xhtml">CLCropResize.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;{</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    <a class="code" href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a>(<a class="code" href="classarm__compute_1_1_c_l_crop_resize.xhtml#a62d192d931002b4866443cd7fc71419b">_output</a> == <span class="keyword">nullptr</span>, <span class="stringliteral">&quot;Unconfigured function&quot;</span>);</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;    <span class="comment">// The contents of _boxes and _box_ind are required to calculate the shape</span></div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    <span class="comment">// of the initial cropped image and thus are required to configure the</span></div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;    <span class="comment">// kernels used for cropping and scaling.</span></div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_crop_resize.xhtml#a72a3dc1eaa8912f18a01ed7a377e31f8">_boxes</a>-&gt;<a class="code" href="classarm__compute_1_1_i_c_l_tensor.xhtml#ac0abc7a5c0d172947f0e6a0c0dde3df0">map</a>(<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().queue());</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_crop_resize.xhtml#aafd18b00f7069f03320be223260c945c">_box_ind</a>-&gt;<a class="code" href="classarm__compute_1_1_i_c_l_tensor.xhtml#ac0abc7a5c0d172947f0e6a0c0dde3df0">map</a>(<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().queue());</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;    <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i = 0; i &lt; <a class="code" href="classarm__compute_1_1_c_l_crop_resize.xhtml#ad079478f73a5eac133d029fc1ff10225">_num_boxes</a>; ++i)</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;    {</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;        <span class="comment">// Size of the crop box in _boxes and thus the shape of _crop_results[i]</span></div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;        <span class="comment">// may not be known until run-time and so the kernels cannot be configured until then.</span></div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;        uint32_t    batch_index;</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;        Coordinates start{};</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;        Coordinates end{};</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;        configure_crop(<a class="code" href="classarm__compute_1_1_c_l_crop_resize.xhtml#a1acfeaa60695d4df61d8d4b5c905aa53">_input</a>, <a class="code" href="classarm__compute_1_1_c_l_crop_resize.xhtml#a72a3dc1eaa8912f18a01ed7a377e31f8">_boxes</a>, <a class="code" href="classarm__compute_1_1_c_l_crop_resize.xhtml#aafd18b00f7069f03320be223260c945c">_box_ind</a>, <a class="code" href="classarm__compute_1_1_c_l_crop_resize.xhtml#a44d7d5b204050ad00d596410b2513f84">_crop_results</a>[i].get(), i, start, end, batch_index);</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;        <span class="keyword">auto</span> scale_kernel = support::cpp14::make_unique&lt;CLScale&gt;();</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;        scale_kernel-&gt;configure(<a class="code" href="classarm__compute_1_1_c_l_crop_resize.xhtml#a44d7d5b204050ad00d596410b2513f84">_crop_results</a>[i].get(), <a class="code" href="classarm__compute_1_1_c_l_crop_resize.xhtml#a6632ee639b1072ab5cc43449df659b2c">_scaled_results</a>[i].get(), <a class="code" href="classarm__compute_1_1_c_l_crop_resize.xhtml#ac17c6ba3cfe6338930b20d4541ff8b34">_method</a>, <a class="code" href="namespacearm__compute.xhtml#a14d24d90ab4ba2956e92e27890ba4c91a8d6b5cada83510220f59e00ce86d4d92">BorderMode::CONSTANT</a>, PixelValue(<a class="code" href="classarm__compute_1_1_c_l_crop_resize.xhtml#a5e6dad2c0f2799f694d00240cb728859">_extrapolation_value</a>), <a class="code" href="namespacearm__compute.xhtml#a16a59381d4d74d17d86d69eb4d286d7ba747385047b85ae751f83adb36435a3c1">SamplingPolicy::TOP_LEFT</a>);</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;        <a class="code" href="classarm__compute_1_1_c_l_crop_resize.xhtml#adb221b9aa2c38a5b7c50cbab3d2db3a0">_scale</a>.emplace_back(std::move(scale_kernel));</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;        Window win = <a class="code" href="namespacearm__compute.xhtml#ab7980fa5ee693e3282a76da047a1c3b5">calculate_max_window</a>(*<a class="code" href="classarm__compute_1_1_c_l_crop_resize.xhtml#a62d192d931002b4866443cd7fc71419b">_output</a>-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>());</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;        win.<a class="code" href="classarm__compute_1_1_window.xhtml#acd3d2bba51cb84d34dd7656ad2375a6e">set</a>(3, Window::Dimension(i, i + 1, 1));</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;        <span class="keyword">auto</span> copy_kernel = support::cpp14::make_unique&lt;CLCopyKernel&gt;();</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;        copy_kernel-&gt;configure(<a class="code" href="classarm__compute_1_1_c_l_crop_resize.xhtml#a6632ee639b1072ab5cc43449df659b2c">_scaled_results</a>[i].get(), <a class="code" href="classarm__compute_1_1_c_l_crop_resize.xhtml#a62d192d931002b4866443cd7fc71419b">_output</a>, <a class="code" href="namespacearm__compute.xhtml#ac1a1b012674e0f1de071a611391828ad">PaddingList</a>(), &amp;win);</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;        <a class="code" href="classarm__compute_1_1_c_l_crop_resize.xhtml#abac7525d26d0671b9487440e962f7cc3">_copy</a>.emplace_back(std::move(copy_kernel));</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;        <a class="code" href="classarm__compute_1_1_c_l_crop_resize.xhtml#a44d7d5b204050ad00d596410b2513f84">_crop_results</a>[i]-&gt;allocator()-&gt;allocate();</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;        <a class="code" href="classarm__compute_1_1_c_l_crop_resize.xhtml#a6632ee639b1072ab5cc43449df659b2c">_scaled_results</a>[i]-&gt;allocator()-&gt;allocate();</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;        run_crop(<a class="code" href="classarm__compute_1_1_c_l_crop_resize.xhtml#a1acfeaa60695d4df61d8d4b5c905aa53">_input</a>, <a class="code" href="classarm__compute_1_1_c_l_crop_resize.xhtml#a44d7d5b204050ad00d596410b2513f84">_crop_results</a>[i].get(), batch_index, start, end, <a class="code" href="classarm__compute_1_1_c_l_crop_resize.xhtml#a5e6dad2c0f2799f694d00240cb728859">_extrapolation_value</a>);</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;    }</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_crop_resize.xhtml#a72a3dc1eaa8912f18a01ed7a377e31f8">_boxes</a>-&gt;<a class="code" href="classarm__compute_1_1_i_c_l_tensor.xhtml#af974a2360069c2ef8df4496d00e4f6cc">unmap</a>(<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().queue());</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_crop_resize.xhtml#aafd18b00f7069f03320be223260c945c">_box_ind</a>-&gt;<a class="code" href="classarm__compute_1_1_i_c_l_tensor.xhtml#af974a2360069c2ef8df4496d00e4f6cc">unmap</a>(<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().queue());</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#ad55f80ed3cd8b6c4f247763b747016af">sync</a>();</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;    <span class="keywordflow">for</span>(<span class="keyword">auto</span> &amp;kernel : <a class="code" href="classarm__compute_1_1_c_l_crop_resize.xhtml#adb221b9aa2c38a5b7c50cbab3d2db3a0">_scale</a>)</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;    {</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;        kernel-&gt;run();</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;    }</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#ad55f80ed3cd8b6c4f247763b747016af">sync</a>();</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;    <span class="keywordflow">for</span>(<span class="keyword">auto</span> &amp;kernel : <a class="code" href="classarm__compute_1_1_c_l_crop_resize.xhtml#abac7525d26d0671b9487440e962f7cc3">_copy</a>)</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;    {</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;        <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#ae1a643e517f50bf0392fb6516dd7cf67">enqueue</a>(*kernel, <span class="keyword">true</span>);</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;    }</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#ad55f80ed3cd8b6c4f247763b747016af">sync</a>();</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;}</div><div class="ttc" id="classarm__compute_1_1_c_l_crop_resize_xhtml_a44d7d5b204050ad00d596410b2513f84"><div class="ttname"><a href="classarm__compute_1_1_c_l_crop_resize.xhtml#a44d7d5b204050ad00d596410b2513f84">arm_compute::CLCropResize::_crop_results</a></div><div class="ttdeci">std::vector&lt; std::unique_ptr&lt; CLTensor &gt; &gt; _crop_results</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_crop_resize_8h_source.xhtml#l00110">CLCropResize.h:110</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_c_l_tensor_xhtml_ac0abc7a5c0d172947f0e6a0c0dde3df0"><div class="ttname"><a href="classarm__compute_1_1_i_c_l_tensor.xhtml#ac0abc7a5c0d172947f0e6a0c0dde3df0">arm_compute::ICLTensor::map</a></div><div class="ttdeci">void map(cl::CommandQueue &amp;q, bool blocking=true)</div><div class="ttdoc">Enqueue a map operation of the allocated buffer on the given queue.</div><div class="ttdef"><b>Definition:</b> <a href="_i_c_l_tensor_8cpp_source.xhtml#l00035">ICLTensor.cpp:35</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_crop_resize_xhtml_ad079478f73a5eac133d029fc1ff10225"><div class="ttname"><a href="classarm__compute_1_1_c_l_crop_resize.xhtml#ad079478f73a5eac133d029fc1ff10225">arm_compute::CLCropResize::_num_boxes</a></div><div class="ttdeci">size_t _num_boxes</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_crop_resize_8h_source.xhtml#l00104">CLCropResize.h:104</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ac1a1b012674e0f1de071a611391828ad"><div class="ttname"><a href="namespacearm__compute.xhtml#ac1a1b012674e0f1de071a611391828ad">arm_compute::PaddingList</a></div><div class="ttdeci">std::vector&lt; PaddingInfo &gt; PaddingList</div><div class="ttdoc">List of padding information.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00455">Types.h:455</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_scheduler_xhtml_a9b58d0eb9a2af8e6d7908695e1557d6c"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">arm_compute::CLScheduler::get</a></div><div class="ttdeci">static CLScheduler &amp; get()</div><div class="ttdoc">Access the scheduler singleton.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00099">CLScheduler.cpp:99</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_crop_resize_xhtml_abac7525d26d0671b9487440e962f7cc3"><div class="ttname"><a href="classarm__compute_1_1_c_l_crop_resize.xhtml#abac7525d26d0671b9487440e962f7cc3">arm_compute::CLCropResize::_copy</a></div><div class="ttdeci">std::vector&lt; std::unique_ptr&lt; CLCopyKernel &gt; &gt; _copy</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_crop_resize_8h_source.xhtml#l00109">CLCropResize.h:109</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab7980fa5ee693e3282a76da047a1c3b5"><div class="ttname"><a href="namespacearm__compute.xhtml#ab7980fa5ee693e3282a76da047a1c3b5">arm_compute::calculate_max_window</a></div><div class="ttdeci">Window calculate_max_window(const ValidRegion &amp;valid_region, const Steps &amp;steps=Steps(), bool skip_border=false, BorderSize border_size=BorderSize())</div><div class="ttdoc">Calculate the maximum window for a given tensor shape and border setting.</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_helpers_8cpp_source.xhtml#l00028">Helpers.cpp:28</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_crop_resize_xhtml_a6632ee639b1072ab5cc43449df659b2c"><div class="ttname"><a href="classarm__compute_1_1_c_l_crop_resize.xhtml#a6632ee639b1072ab5cc43449df659b2c">arm_compute::CLCropResize::_scaled_results</a></div><div class="ttdeci">std::vector&lt; std::unique_ptr&lt; CLTensor &gt; &gt; _scaled_results</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_crop_resize_8h_source.xhtml#l00111">CLCropResize.h:111</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_crop_resize_xhtml_ac17c6ba3cfe6338930b20d4541ff8b34"><div class="ttname"><a href="classarm__compute_1_1_c_l_crop_resize.xhtml#ac17c6ba3cfe6338930b20d4541ff8b34">arm_compute::CLCropResize::_method</a></div><div class="ttdeci">InterpolationPolicy _method</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_crop_resize_8h_source.xhtml#l00105">CLCropResize.h:105</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_c_l_tensor_xhtml_af974a2360069c2ef8df4496d00e4f6cc"><div class="ttname"><a href="classarm__compute_1_1_i_c_l_tensor.xhtml#af974a2360069c2ef8df4496d00e4f6cc">arm_compute::ICLTensor::unmap</a></div><div class="ttdeci">void unmap(cl::CommandQueue &amp;q)</div><div class="ttdoc">Enqueue an unmap operation of the allocated and mapped buffer on the given queue.</div><div class="ttdef"><b>Definition:</b> <a href="_i_c_l_tensor_8cpp_source.xhtml#l00040">ICLTensor.cpp:40</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a0b0eb3235749a2909dc5a101afe59a1b"><div class="ttname"><a href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_MSG(cond, msg)</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00456">Error.h:456</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_crop_resize_xhtml_a62d192d931002b4866443cd7fc71419b"><div class="ttname"><a href="classarm__compute_1_1_c_l_crop_resize.xhtml#a62d192d931002b4866443cd7fc71419b">arm_compute::CLCropResize::_output</a></div><div class="ttdeci">ICLTensor * _output</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_crop_resize_8h_source.xhtml#l00103">CLCropResize.h:103</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_xhtml_a0e95dc1e53c361348314873b168ae237"><div class="ttname"><a href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">arm_compute::ITensor::info</a></div><div class="ttdeci">virtual ITensorInfo * info() const =0</div><div class="ttdoc">Interface to be implemented by the child class to return the tensor's metadata.</div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a16a59381d4d74d17d86d69eb4d286d7ba747385047b85ae751f83adb36435a3c1"><div class="ttname"><a href="namespacearm__compute.xhtml#a16a59381d4d74d17d86d69eb4d286d7ba747385047b85ae751f83adb36435a3c1">arm_compute::SamplingPolicy::TOP_LEFT</a></div><div class="ttdoc">Samples are taken at pixel top left corner.</div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_crop_resize_xhtml_a1acfeaa60695d4df61d8d4b5c905aa53"><div class="ttname"><a href="classarm__compute_1_1_c_l_crop_resize.xhtml#a1acfeaa60695d4df61d8d4b5c905aa53">arm_compute::CLCropResize::_input</a></div><div class="ttdeci">const ICLTensor * _input</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_crop_resize_8h_source.xhtml#l00100">CLCropResize.h:100</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_acd3d2bba51cb84d34dd7656ad2375a6e"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#acd3d2bba51cb84d34dd7656ad2375a6e">arm_compute::Window::set</a></div><div class="ttdeci">void set(size_t dimension, const Dimension &amp;dim)</div><div class="ttdoc">Set the values of a given dimension.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8inl_source.xhtml#l00049">Window.inl:49</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_scheduler_xhtml_ae1a643e517f50bf0392fb6516dd7cf67"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#ae1a643e517f50bf0392fb6516dd7cf67">arm_compute::CLScheduler::enqueue</a></div><div class="ttdeci">void enqueue(ICLKernel &amp;kernel, bool flush=true)</div><div class="ttdoc">Schedule the execution of the passed kernel if possible.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00154">CLScheduler.cpp:154</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_scheduler_xhtml_ad55f80ed3cd8b6c4f247763b747016af"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#ad55f80ed3cd8b6c4f247763b747016af">arm_compute::CLScheduler::sync</a></div><div class="ttdeci">void sync()</div><div class="ttdoc">Blocks until all commands in the associated command queue have finished.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00067">CLScheduler.cpp:67</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_crop_resize_xhtml_a5e6dad2c0f2799f694d00240cb728859"><div class="ttname"><a href="classarm__compute_1_1_c_l_crop_resize.xhtml#a5e6dad2c0f2799f694d00240cb728859">arm_compute::CLCropResize::_extrapolation_value</a></div><div class="ttdeci">float _extrapolation_value</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_crop_resize_8h_source.xhtml#l00106">CLCropResize.h:106</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a14d24d90ab4ba2956e92e27890ba4c91a8d6b5cada83510220f59e00ce86d4d92"><div class="ttname"><a href="namespacearm__compute.xhtml#a14d24d90ab4ba2956e92e27890ba4c91a8d6b5cada83510220f59e00ce86d4d92">arm_compute::PaddingMode::CONSTANT</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_crop_resize_xhtml_adb221b9aa2c38a5b7c50cbab3d2db3a0"><div class="ttname"><a href="classarm__compute_1_1_c_l_crop_resize.xhtml#adb221b9aa2c38a5b7c50cbab3d2db3a0">arm_compute::CLCropResize::_scale</a></div><div class="ttdeci">std::vector&lt; std::unique_ptr&lt; CLScale &gt; &gt; _scale</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_crop_resize_8h_source.xhtml#l00108">CLCropResize.h:108</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_crop_resize_xhtml_a72a3dc1eaa8912f18a01ed7a377e31f8"><div class="ttname"><a href="classarm__compute_1_1_c_l_crop_resize.xhtml#a72a3dc1eaa8912f18a01ed7a377e31f8">arm_compute::CLCropResize::_boxes</a></div><div class="ttdeci">ICLTensor * _boxes</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_crop_resize_8h_source.xhtml#l00101">CLCropResize.h:101</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_crop_resize_xhtml_aafd18b00f7069f03320be223260c945c"><div class="ttname"><a href="classarm__compute_1_1_c_l_crop_resize.xhtml#aafd18b00f7069f03320be223260c945c">arm_compute::CLCropResize::_box_ind</a></div><div class="ttdeci">ICLTensor * _box_ind</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_crop_resize_8h_source.xhtml#l00102">CLCropResize.h:102</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_c_l_crop_resize_8h_source.xhtml#l00102">CLCropResize::_box_ind</a>, <a class="el" href="_c_l_crop_resize_8h_source.xhtml#l00101">CLCropResize::_boxes</a>, <a class="el" href="_c_l_crop_resize_8h_source.xhtml#l00109">CLCropResize::_copy</a>, <a class="el" href="_c_l_crop_resize_8h_source.xhtml#l00110">CLCropResize::_crop_results</a>, <a class="el" href="_c_l_crop_resize_8h_source.xhtml#l00106">CLCropResize::_extrapolation_value</a>, <a class="el" href="_c_l_crop_resize_8h_source.xhtml#l00100">CLCropResize::_input</a>, <a class="el" href="_c_l_crop_resize_8h_source.xhtml#l00105">CLCropResize::_method</a>, <a class="el" href="_c_l_crop_resize_8h_source.xhtml#l00104">CLCropResize::_num_boxes</a>, <a class="el" href="_c_l_crop_resize_8h_source.xhtml#l00103">CLCropResize::_output</a>, <a class="el" href="_c_l_crop_resize_8h_source.xhtml#l00108">CLCropResize::_scale</a>, <a class="el" href="_c_l_crop_resize_8h_source.xhtml#l00111">CLCropResize::_scaled_results</a>, <a class="el" href="_error_8h_source.xhtml#l00456">ARM_COMPUTE_ERROR_ON_MSG</a>, <a class="el" href="src_2core_2_helpers_8cpp_source.xhtml#l00028">arm_compute::calculate_max_window()</a>, <a class="el" href="namespacearm__compute.xhtml#a14d24d90ab4ba2956e92e27890ba4c91a8d6b5cada83510220f59e00ce86d4d92">arm_compute::CONSTANT</a>, <a class="el" href="_c_l_scheduler_8cpp_source.xhtml#l00154">CLScheduler::enqueue()</a>, <a class="el" href="_c_l_scheduler_8cpp_source.xhtml#l00099">CLScheduler::get()</a>, <a class="el" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">ITensor::info()</a>, <a class="el" href="_i_c_l_tensor_8cpp_source.xhtml#l00035">ICLTensor::map()</a>, <a class="el" href="_window_8inl_source.xhtml#l00049">Window::set()</a>, <a class="el" href="_c_l_scheduler_8cpp_source.xhtml#l00067">CLScheduler::sync()</a>, <a class="el" href="namespacearm__compute.xhtml#a16a59381d4d74d17d86d69eb4d286d7ba747385047b85ae751f83adb36435a3c1">arm_compute::TOP_LEFT</a>, and <a class="el" href="_i_c_l_tensor_8cpp_source.xhtml#l00040">ICLTensor::unmap()</a>.</p>

</div>
</div>
<a id="a50ea7a28151a85dbbe7483ac032a3886"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a50ea7a28151a85dbbe7483ac032a3886">&#9670;&nbsp;</a></span>validate()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_status.xhtml">Status</a> validate </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>boxes</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>box_ind</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1_coordinates2_d.xhtml">Coordinates2D</a>&#160;</td>
          <td class="paramname"><em>crop_size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearm__compute.xhtml#a966a9c417ce5e94dca08d9b5e745c0c9">InterpolationPolicy</a>&#160;</td>
          <td class="paramname"><em>method</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>extrapolation_value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Static function to check if given info will lead to a valid configuration of <a class="el" href="classarm__compute_1_1_n_e_slice.xhtml">NESlice</a>. </p>
<dl class="section note"><dt>Note</dt><dd>Supported tensor rank: up to 4 </dd>
<dd>
Box indices may be outside of the bounds, in which case <code>extrapolation_value</code> is used. </dd>
<dd>
Start and end indices of boxes are inclusive.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">input</td><td>Source tensor info containing N batches of 3D images to be cropped. Data type supported: U16/S16/U32/S32/F16/F32 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">boxes</td><td><a class="el" href="classarm__compute_1_1_tensor.xhtml" title="Basic implementation of the tensor interface.">Tensor</a> info for the tensor containing the boxes used to crop the images. Data type supported: F32 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">box_ind</td><td><a class="el" href="classarm__compute_1_1_tensor.xhtml" title="Basic implementation of the tensor interface.">Tensor</a> info for the one dimensional tensor containing the batch index of the 3D image in <code>input</code> that the corresponding box in <code>boxes</code> will be applied to. Data type supported: F32 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">output</td><td><a class="el" href="classarm__compute_1_1_tensor.xhtml" title="Basic implementation of the tensor interface.">Tensor</a> info for the destination tensor containing a cropped and resized image for each box in <code>boxes</code>. Data type supported: F32 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">crop_size</td><td>The dimensions that each cropped image will be resized to. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">method</td><td>The policy to be used when resizing image. Default is bilinear. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">extrapolation_value</td><td>Value to be used for values outside of the image for cropping and resizing. Default is 0.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A status </dd></dl>

<p class="definition">Definition at line <a class="el" href="_c_l_crop_resize_8cpp_source.xhtml#l00171">171</a> of file <a class="el" href="_c_l_crop_resize_8cpp_source.xhtml">CLCropResize.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;{</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(crop_size.<a class="code" href="struct_coordinates2_d.xhtml#a6150e0515f7202e2fb518f7206ed97dc">x</a> &lt;= 0 || crop_size.<a class="code" href="struct_coordinates2_d.xhtml#a0a2f84ed7838f07779ae24c5a9086d33">y</a> &lt;= 0);</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(method == <a class="code" href="namespacearm__compute.xhtml#a966a9c417ce5e94dca08d9b5e745c0c9a639aaa22a784d5e5cb03a522267e79c4">InterpolationPolicy::AREA</a>);</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(boxes-&gt;tensor_shape()[0] != 4);</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(boxes-&gt;tensor_shape()[1] != box_ind-&gt;tensor_shape()[0]);</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    TensorInfo temp_info;</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1_c_l_crop_kernel.xhtml#a177d477dede47e247a26df5040e087d6">CLCropKernel::validate</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;clone().get(), &amp;temp_info, { 0, 0 }, { 1, 1 }, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;dimension(3) - 1, extrapolation_value));</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    <span class="keywordflow">if</span>(output-&gt;total_size() &gt; 0)</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    {</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;        <a class="code" href="_validate_8h.xhtml#aef783de4ec01874dbec6054a5868aea2">ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_NOT_IN</a>(output, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>);</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;        <a class="code" href="_validate_8h.xhtml#abdb9168800c70e5e2c4c020a3b905738">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_LAYOUT</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, output);</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;        TensorShape out_shape(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;tensor_shape()[0], crop_size.<a class="code" href="struct_coordinates2_d.xhtml#a6150e0515f7202e2fb518f7206ed97dc">x</a>, crop_size.<a class="code" href="struct_coordinates2_d.xhtml#a0a2f84ed7838f07779ae24c5a9086d33">y</a>, boxes-&gt;tensor_shape()[1]);</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;        <a class="code" href="_validate_8h.xhtml#a1da797d2762c1cdbb73bfc83136c3a38">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DIMENSIONS</a>(output-&gt;tensor_shape(), out_shape);</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    }</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    <span class="keywordflow">return</span> Status{};</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;}</div><div class="ttc" id="classarm__compute_1_1_c_l_crop_kernel_xhtml_a177d477dede47e247a26df5040e087d6"><div class="ttname"><a href="classarm__compute_1_1_c_l_crop_kernel.xhtml#a177d477dede47e247a26df5040e087d6">arm_compute::CLCropKernel::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *input, const ITensorInfo *output, Coordinates2D start, Coordinates2D end, uint32_t batch_index, float extrapolation_value=0, Window *output_window=nullptr)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration of CLStridedSliceKernel.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_crop_kernel_8cpp_source.xhtml#l00091">CLCropKernel.cpp:91</a></div></div>
<div class="ttc" id="_validate_8h_xhtml_abdb9168800c70e5e2c4c020a3b905738"><div class="ttname"><a href="_validate_8h.xhtml#abdb9168800c70e5e2c4c020a3b905738">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_LAYOUT</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_LAYOUT(...)</div><div class="ttdef"><b>Definition:</b> <a href="_validate_8h_source.xhtml#l00494">Validate.h:494</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a8a1e1c105f0bdaf37db408c7cfcb77a4"><div class="ttname"><a href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ON_ERROR(status)</div><div class="ttdoc">Checks if a status contains an error and returns it.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00204">Error.h:204</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">arm_compute::Format::F32</a></div><div class="ttdoc">1 channel, 1 F32 per channel</div></div>
<div class="ttc" id="_validate_8h_xhtml_aef783de4ec01874dbec6054a5868aea2"><div class="ttname"><a href="_validate_8h.xhtml#aef783de4ec01874dbec6054a5868aea2">ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_NOT_IN</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_NOT_IN(t,...)</div><div class="ttdef"><b>Definition:</b> <a href="_validate_8h_source.xhtml#l00694">Validate.h:694</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a206d6e247e0957ac3dee45d27756fc25"><div class="ttname"><a href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true, an error is returned.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00296">Error.h:296</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a8fcf2ddd9a1d58b1b280f5c0aed71845"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">arm_compute::test::validation::input</a></div><div class="ttdeci">auto input</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00487">LSTMLayerQuantized.cpp:487</a></div></div>
<div class="ttc" id="_validate_8h_xhtml_a1da797d2762c1cdbb73bfc83136c3a38"><div class="ttname"><a href="_validate_8h.xhtml#a1da797d2762c1cdbb73bfc83136c3a38">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DIMENSIONS</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DIMENSIONS(...)</div><div class="ttdef"><b>Definition:</b> <a href="_validate_8h_source.xhtml#l00288">Validate.h:288</a></div></div>
<div class="ttc" id="struct_coordinates2_d_xhtml_a6150e0515f7202e2fb518f7206ed97dc"><div class="ttname"><a href="struct_coordinates2_d.xhtml#a6150e0515f7202e2fb518f7206ed97dc">Coordinates2D::x</a></div><div class="ttdeci">int x</div><div class="ttdoc">The x coordinate.</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_types_8h_source.xhtml#l00030">types.h:30</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a966a9c417ce5e94dca08d9b5e745c0c9a639aaa22a784d5e5cb03a522267e79c4"><div class="ttname"><a href="namespacearm__compute.xhtml#a966a9c417ce5e94dca08d9b5e745c0c9a639aaa22a784d5e5cb03a522267e79c4">arm_compute::InterpolationPolicy::AREA</a></div><div class="ttdoc">Output values are determined by averaging the source pixels whose areas fall under the area of the de...</div></div>
<div class="ttc" id="struct_coordinates2_d_xhtml_a0a2f84ed7838f07779ae24c5a9086d33"><div class="ttname"><a href="struct_coordinates2_d.xhtml#a0a2f84ed7838f07779ae24c5a9086d33">Coordinates2D::y</a></div><div class="ttdeci">int y</div><div class="ttdoc">The y coordinate.</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_types_8h_source.xhtml#l00031">types.h:31</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="namespacearm__compute.xhtml#a966a9c417ce5e94dca08d9b5e745c0c9a639aaa22a784d5e5cb03a522267e79c4">arm_compute::AREA</a>, <a class="el" href="_error_8h_source.xhtml#l00296">ARM_COMPUTE_RETURN_ERROR_ON</a>, <a class="el" href="_validate_8h_source.xhtml#l00694">ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_NOT_IN</a>, <a class="el" href="_validate_8h_source.xhtml#l00494">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_LAYOUT</a>, <a class="el" href="_validate_8h_source.xhtml#l00288">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DIMENSIONS</a>, <a class="el" href="_error_8h_source.xhtml#l00204">ARM_COMPUTE_RETURN_ON_ERROR</a>, <a class="el" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">arm_compute::F32</a>, <a class="el" href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00487">arm_compute::test::validation::input</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a7c66505457d00ece3aa4b34cab80757d">ITensorInfo::tensor_shape()</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a18064e0011c3869d884653e9e7c47b66">ITensorInfo::total_size()</a>, <a class="el" href="_c_l_crop_kernel_8cpp_source.xhtml#l00091">CLCropKernel::validate()</a>, <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l00439">Coordinates2D::x</a>, and <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l00440">Coordinates2D::y</a>.</p>

<p class="reference">Referenced by <a class="el" href="_c_l_crop_resize_8cpp_source.xhtml#l00190">CLCropResize::configure()</a>.</p>

</div>
</div>
<h2 class="groupheader">Field Documentation</h2>
<a id="aafd18b00f7069f03320be223260c945c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aafd18b00f7069f03320be223260c945c">&#9670;&nbsp;</a></span>_box_ind</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a>* _box_ind</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_c_l_crop_resize_8h_source.xhtml#l00102">102</a> of file <a class="el" href="_c_l_crop_resize_8h_source.xhtml">CLCropResize.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_c_l_crop_resize_8cpp_source.xhtml#l00190">CLCropResize::configure()</a>, and <a class="el" href="_c_l_crop_resize_8cpp_source.xhtml#l00229">CLCropResize::run()</a>.</p>

</div>
</div>
<a id="a72a3dc1eaa8912f18a01ed7a377e31f8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a72a3dc1eaa8912f18a01ed7a377e31f8">&#9670;&nbsp;</a></span>_boxes</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a>* _boxes</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_c_l_crop_resize_8h_source.xhtml#l00101">101</a> of file <a class="el" href="_c_l_crop_resize_8h_source.xhtml">CLCropResize.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_c_l_crop_resize_8cpp_source.xhtml#l00190">CLCropResize::configure()</a>, and <a class="el" href="_c_l_crop_resize_8cpp_source.xhtml#l00229">CLCropResize::run()</a>.</p>

</div>
</div>
<a id="abac7525d26d0671b9487440e962f7cc3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abac7525d26d0671b9487440e962f7cc3">&#9670;&nbsp;</a></span>_copy</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;std::unique_ptr&lt;<a class="el" href="classarm__compute_1_1_c_l_copy_kernel.xhtml">CLCopyKernel</a>&gt; &gt; _copy</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_c_l_crop_resize_8h_source.xhtml#l00109">109</a> of file <a class="el" href="_c_l_crop_resize_8h_source.xhtml">CLCropResize.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_c_l_crop_resize_8cpp_source.xhtml#l00229">CLCropResize::run()</a>.</p>

</div>
</div>
<a id="a44d7d5b204050ad00d596410b2513f84"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a44d7d5b204050ad00d596410b2513f84">&#9670;&nbsp;</a></span>_crop_results</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;std::unique_ptr&lt;<a class="el" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a>&gt; &gt; _crop_results</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_c_l_crop_resize_8h_source.xhtml#l00110">110</a> of file <a class="el" href="_c_l_crop_resize_8h_source.xhtml">CLCropResize.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_c_l_crop_resize_8cpp_source.xhtml#l00190">CLCropResize::configure()</a>, and <a class="el" href="_c_l_crop_resize_8cpp_source.xhtml#l00229">CLCropResize::run()</a>.</p>

</div>
</div>
<a id="a5e6dad2c0f2799f694d00240cb728859"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5e6dad2c0f2799f694d00240cb728859">&#9670;&nbsp;</a></span>_extrapolation_value</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">float _extrapolation_value</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_c_l_crop_resize_8h_source.xhtml#l00106">106</a> of file <a class="el" href="_c_l_crop_resize_8h_source.xhtml">CLCropResize.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_c_l_crop_resize_8cpp_source.xhtml#l00190">CLCropResize::configure()</a>, and <a class="el" href="_c_l_crop_resize_8cpp_source.xhtml#l00229">CLCropResize::run()</a>.</p>

</div>
</div>
<a id="a1acfeaa60695d4df61d8d4b5c905aa53"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1acfeaa60695d4df61d8d4b5c905aa53">&#9670;&nbsp;</a></span>_input</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a>* _input</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_c_l_crop_resize_8h_source.xhtml#l00100">100</a> of file <a class="el" href="_c_l_crop_resize_8h_source.xhtml">CLCropResize.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_c_l_crop_resize_8cpp_source.xhtml#l00190">CLCropResize::configure()</a>, and <a class="el" href="_c_l_crop_resize_8cpp_source.xhtml#l00229">CLCropResize::run()</a>.</p>

</div>
</div>
<a id="ac17c6ba3cfe6338930b20d4541ff8b34"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac17c6ba3cfe6338930b20d4541ff8b34">&#9670;&nbsp;</a></span>_method</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearm__compute.xhtml#a966a9c417ce5e94dca08d9b5e745c0c9">InterpolationPolicy</a> _method</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_c_l_crop_resize_8h_source.xhtml#l00105">105</a> of file <a class="el" href="_c_l_crop_resize_8h_source.xhtml">CLCropResize.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_c_l_crop_resize_8cpp_source.xhtml#l00190">CLCropResize::configure()</a>, and <a class="el" href="_c_l_crop_resize_8cpp_source.xhtml#l00229">CLCropResize::run()</a>.</p>

</div>
</div>
<a id="ad079478f73a5eac133d029fc1ff10225"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad079478f73a5eac133d029fc1ff10225">&#9670;&nbsp;</a></span>_num_boxes</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">size_t _num_boxes</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_c_l_crop_resize_8h_source.xhtml#l00104">104</a> of file <a class="el" href="_c_l_crop_resize_8h_source.xhtml">CLCropResize.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_c_l_crop_resize_8cpp_source.xhtml#l00190">CLCropResize::configure()</a>, and <a class="el" href="_c_l_crop_resize_8cpp_source.xhtml#l00229">CLCropResize::run()</a>.</p>

</div>
</div>
<a id="a62d192d931002b4866443cd7fc71419b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a62d192d931002b4866443cd7fc71419b">&#9670;&nbsp;</a></span>_output</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a>* _output</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_c_l_crop_resize_8h_source.xhtml#l00103">103</a> of file <a class="el" href="_c_l_crop_resize_8h_source.xhtml">CLCropResize.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_c_l_crop_resize_8cpp_source.xhtml#l00190">CLCropResize::configure()</a>, and <a class="el" href="_c_l_crop_resize_8cpp_source.xhtml#l00229">CLCropResize::run()</a>.</p>

</div>
</div>
<a id="adb221b9aa2c38a5b7c50cbab3d2db3a0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adb221b9aa2c38a5b7c50cbab3d2db3a0">&#9670;&nbsp;</a></span>_scale</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;std::unique_ptr&lt;<a class="el" href="classarm__compute_1_1_c_l_scale.xhtml">CLScale</a>&gt; &gt; _scale</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_c_l_crop_resize_8h_source.xhtml#l00108">108</a> of file <a class="el" href="_c_l_crop_resize_8h_source.xhtml">CLCropResize.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_c_l_crop_resize_8cpp_source.xhtml#l00229">CLCropResize::run()</a>.</p>

</div>
</div>
<a id="a6632ee639b1072ab5cc43449df659b2c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6632ee639b1072ab5cc43449df659b2c">&#9670;&nbsp;</a></span>_scaled_results</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;std::unique_ptr&lt;<a class="el" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a>&gt; &gt; _scaled_results</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_c_l_crop_resize_8h_source.xhtml#l00111">111</a> of file <a class="el" href="_c_l_crop_resize_8h_source.xhtml">CLCropResize.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_c_l_crop_resize_8cpp_source.xhtml#l00190">CLCropResize::configure()</a>, and <a class="el" href="_c_l_crop_resize_8cpp_source.xhtml#l00229">CLCropResize::run()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>arm_compute/runtime/CL/functions/<a class="el" href="_c_l_crop_resize_8h_source.xhtml">CLCropResize.h</a></li>
<li>src/runtime/CL/functions/<a class="el" href="_c_l_crop_resize_8cpp_source.xhtml">CLCropResize.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1_c_l_crop_resize.xhtml">CLCropResize</a></li>
    <li class="footer">Generated on Thu Mar 5 2020 16:07:10 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
