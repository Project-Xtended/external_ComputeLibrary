<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: HOGInfo Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.02.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classarm__compute_1_1_h_o_g_info.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">HOGInfo Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Store the <a class="el" href="classarm__compute_1_1_h_o_g.xhtml" title="CPU implementation of HOG data-object.">HOG</a>'s metadata.  
 <a href="classarm__compute_1_1_h_o_g_info.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_h_o_g_info_8h_source.xhtml">HOGInfo.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:aed28257d62b9129062bfd61600531648"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml#aed28257d62b9129062bfd61600531648">HOGInfo</a> ()</td></tr>
<tr class="memdesc:aed28257d62b9129062bfd61600531648"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor.  <a href="#aed28257d62b9129062bfd61600531648">More...</a><br /></td></tr>
<tr class="separator:aed28257d62b9129062bfd61600531648"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ada121d63992678a09e1b3db5a2002bfa"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml#ada121d63992678a09e1b3db5a2002bfa">~HOGInfo</a> ()=default</td></tr>
<tr class="memdesc:ada121d63992678a09e1b3db5a2002bfa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default destructor.  <a href="#ada121d63992678a09e1b3db5a2002bfa">More...</a><br /></td></tr>
<tr class="separator:ada121d63992678a09e1b3db5a2002bfa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a10dcbc6006d1e12ba2cd1ae524c66122"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml#a10dcbc6006d1e12ba2cd1ae524c66122">HOGInfo</a> (const <a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml">HOGInfo</a> &amp;)=default</td></tr>
<tr class="memdesc:a10dcbc6006d1e12ba2cd1ae524c66122"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be copy constructed.  <a href="#a10dcbc6006d1e12ba2cd1ae524c66122">More...</a><br /></td></tr>
<tr class="separator:a10dcbc6006d1e12ba2cd1ae524c66122"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a64f60c469394d4f5f621546fc3108590"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml">HOGInfo</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml#a64f60c469394d4f5f621546fc3108590">operator=</a> (const <a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml">HOGInfo</a> &amp;)=default</td></tr>
<tr class="memdesc:a64f60c469394d4f5f621546fc3108590"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be copied.  <a href="#a64f60c469394d4f5f621546fc3108590">More...</a><br /></td></tr>
<tr class="separator:a64f60c469394d4f5f621546fc3108590"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a21c3fbc2803bbf3d975bec8977307f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml#a6a21c3fbc2803bbf3d975bec8977307f">HOGInfo</a> (<a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml">HOGInfo</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:a6a21c3fbc2803bbf3d975bec8977307f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be move constructed.  <a href="#a6a21c3fbc2803bbf3d975bec8977307f">More...</a><br /></td></tr>
<tr class="separator:a6a21c3fbc2803bbf3d975bec8977307f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3f48ffe9fe37db10eb23de67101c1500"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml">HOGInfo</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml#a3f48ffe9fe37db10eb23de67101c1500">operator=</a> (<a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml">HOGInfo</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:a3f48ffe9fe37db10eb23de67101c1500"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be moved.  <a href="#a3f48ffe9fe37db10eb23de67101c1500">More...</a><br /></td></tr>
<tr class="separator:a3f48ffe9fe37db10eb23de67101c1500"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeaa7d619922de47d6239b0167a58e2c7"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml#aeaa7d619922de47d6239b0167a58e2c7">HOGInfo</a> (const <a class="el" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> &amp;<a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml#aaefa291ad3cc3e3210c8b8ef2ffde476">cell_size</a>, const <a class="el" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> &amp;<a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml#ae561964ccc0e0a5750676b9c7dd7cd44">block_size</a>, const <a class="el" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> &amp;<a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml#a7cbda2c789c461237f0c6eaee8f8cd2a">detection_window_size</a>, const <a class="el" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> &amp;<a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml#a207391d3ac69d9a0839104f784f888fd">block_stride</a>, size_t <a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml#ad96530ddba514601d376f991b568b346">num_bins</a>, <a class="el" href="namespacearm__compute.xhtml#a673665b4587a2956fcbad5f0e9ba89d3">HOGNormType</a> <a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml#a5a4a2ab2f4396cc64b4a5676a90d7f07">normalization_type</a>=<a class="el" href="namespacearm__compute.xhtml#a673665b4587a2956fcbad5f0e9ba89d3ac9e68c0594494ec85805b225a7acb9c2">HOGNormType::L2HYS_NORM</a>, float <a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml#ac3f834a0c4744ccbc55d3b8bc810fdff">l2_hyst_threshold</a>=0.2f, PhaseType phase_type=PhaseType::UNSIGNED)</td></tr>
<tr class="memdesc:aeaa7d619922de47d6239b0167a58e2c7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="#aeaa7d619922de47d6239b0167a58e2c7">More...</a><br /></td></tr>
<tr class="separator:aeaa7d619922de47d6239b0167a58e2c7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a75215e8ba07a5ec88ee8c902e306e887"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml#a75215e8ba07a5ec88ee8c902e306e887">init</a> (const <a class="el" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> &amp;<a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml#aaefa291ad3cc3e3210c8b8ef2ffde476">cell_size</a>, const <a class="el" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> &amp;<a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml#ae561964ccc0e0a5750676b9c7dd7cd44">block_size</a>, const <a class="el" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> &amp;<a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml#a7cbda2c789c461237f0c6eaee8f8cd2a">detection_window_size</a>, const <a class="el" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> &amp;<a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml#a207391d3ac69d9a0839104f784f888fd">block_stride</a>, size_t <a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml#ad96530ddba514601d376f991b568b346">num_bins</a>, <a class="el" href="namespacearm__compute.xhtml#a673665b4587a2956fcbad5f0e9ba89d3">HOGNormType</a> <a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml#a5a4a2ab2f4396cc64b4a5676a90d7f07">normalization_type</a>=<a class="el" href="namespacearm__compute.xhtml#a673665b4587a2956fcbad5f0e9ba89d3ac9e68c0594494ec85805b225a7acb9c2">HOGNormType::L2HYS_NORM</a>, float <a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml#ac3f834a0c4744ccbc55d3b8bc810fdff">l2_hyst_threshold</a>=0.2f, PhaseType phase_type=PhaseType::UNSIGNED)</td></tr>
<tr class="memdesc:a75215e8ba07a5ec88ee8c902e306e887"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialize the metadata structure with the given parameters.  <a href="#a75215e8ba07a5ec88ee8c902e306e887">More...</a><br /></td></tr>
<tr class="separator:a75215e8ba07a5ec88ee8c902e306e887"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaefa291ad3cc3e3210c8b8ef2ffde476"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml#aaefa291ad3cc3e3210c8b8ef2ffde476">cell_size</a> () const</td></tr>
<tr class="memdesc:aaefa291ad3cc3e3210c8b8ef2ffde476"><td class="mdescLeft">&#160;</td><td class="mdescRight">The cell size in pixels.  <a href="#aaefa291ad3cc3e3210c8b8ef2ffde476">More...</a><br /></td></tr>
<tr class="separator:aaefa291ad3cc3e3210c8b8ef2ffde476"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae561964ccc0e0a5750676b9c7dd7cd44"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml#ae561964ccc0e0a5750676b9c7dd7cd44">block_size</a> () const</td></tr>
<tr class="memdesc:ae561964ccc0e0a5750676b9c7dd7cd44"><td class="mdescLeft">&#160;</td><td class="mdescRight">The block size in pixels.  <a href="#ae561964ccc0e0a5750676b9c7dd7cd44">More...</a><br /></td></tr>
<tr class="separator:ae561964ccc0e0a5750676b9c7dd7cd44"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7cbda2c789c461237f0c6eaee8f8cd2a"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml#a7cbda2c789c461237f0c6eaee8f8cd2a">detection_window_size</a> () const</td></tr>
<tr class="memdesc:a7cbda2c789c461237f0c6eaee8f8cd2a"><td class="mdescLeft">&#160;</td><td class="mdescRight">The detection window size in pixels.  <a href="#a7cbda2c789c461237f0c6eaee8f8cd2a">More...</a><br /></td></tr>
<tr class="separator:a7cbda2c789c461237f0c6eaee8f8cd2a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a207391d3ac69d9a0839104f784f888fd"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml#a207391d3ac69d9a0839104f784f888fd">block_stride</a> () const</td></tr>
<tr class="memdesc:a207391d3ac69d9a0839104f784f888fd"><td class="mdescLeft">&#160;</td><td class="mdescRight">The block stride in pixels.  <a href="#a207391d3ac69d9a0839104f784f888fd">More...</a><br /></td></tr>
<tr class="separator:a207391d3ac69d9a0839104f784f888fd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad96530ddba514601d376f991b568b346"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml#ad96530ddba514601d376f991b568b346">num_bins</a> () const</td></tr>
<tr class="memdesc:ad96530ddba514601d376f991b568b346"><td class="mdescLeft">&#160;</td><td class="mdescRight">The number of histogram bins for each cell.  <a href="#ad96530ddba514601d376f991b568b346">More...</a><br /></td></tr>
<tr class="separator:ad96530ddba514601d376f991b568b346"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5a4a2ab2f4396cc64b4a5676a90d7f07"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearm__compute.xhtml#a673665b4587a2956fcbad5f0e9ba89d3">HOGNormType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml#a5a4a2ab2f4396cc64b4a5676a90d7f07">normalization_type</a> () const</td></tr>
<tr class="memdesc:a5a4a2ab2f4396cc64b4a5676a90d7f07"><td class="mdescLeft">&#160;</td><td class="mdescRight">The normalization type.  <a href="#a5a4a2ab2f4396cc64b4a5676a90d7f07">More...</a><br /></td></tr>
<tr class="separator:a5a4a2ab2f4396cc64b4a5676a90d7f07"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac3f834a0c4744ccbc55d3b8bc810fdff"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml#ac3f834a0c4744ccbc55d3b8bc810fdff">l2_hyst_threshold</a> () const</td></tr>
<tr class="memdesc:ac3f834a0c4744ccbc55d3b8bc810fdff"><td class="mdescLeft">&#160;</td><td class="mdescRight">Threshold used for L2HYS_NORM normalization type.  <a href="#ac3f834a0c4744ccbc55d3b8bc810fdff">More...</a><br /></td></tr>
<tr class="separator:ac3f834a0c4744ccbc55d3b8bc810fdff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a039b8ebcdd462041d3988e6d2c145323"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearm__compute.xhtml#af00a42ecad444bbda75cde1b64bd7e72">PhaseType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml#a039b8ebcdd462041d3988e6d2c145323">phase_type</a> () const</td></tr>
<tr class="memdesc:a039b8ebcdd462041d3988e6d2c145323"><td class="mdescLeft">&#160;</td><td class="mdescRight">The type of <a class="el" href="namespacearm__compute.xhtml#af00a42ecad444bbda75cde1b64bd7e72">PhaseType</a>.  <a href="#a039b8ebcdd462041d3988e6d2c145323">More...</a><br /></td></tr>
<tr class="separator:a039b8ebcdd462041d3988e6d2c145323"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2a347c64540c1d48a579f830ddff622f"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml#a2a347c64540c1d48a579f830ddff622f">descriptor_size</a> () const</td></tr>
<tr class="memdesc:a2a347c64540c1d48a579f830ddff622f"><td class="mdescLeft">&#160;</td><td class="mdescRight">The size of <a class="el" href="classarm__compute_1_1_h_o_g.xhtml" title="CPU implementation of HOG data-object.">HOG</a> descriptor.  <a href="#a2a347c64540c1d48a579f830ddff622f">More...</a><br /></td></tr>
<tr class="separator:a2a347c64540c1d48a579f830ddff622f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a79b522bd4aa0d5533649e60ef7f5f42f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml#a79b522bd4aa0d5533649e60ef7f5f42f">num_cells_per_block</a> () const</td></tr>
<tr class="memdesc:a79b522bd4aa0d5533649e60ef7f5f42f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculates the number of cells for each block.  <a href="#a79b522bd4aa0d5533649e60ef7f5f42f">More...</a><br /></td></tr>
<tr class="separator:a79b522bd4aa0d5533649e60ef7f5f42f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3d18e8be8055827aa09839f6972ff271"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml#a3d18e8be8055827aa09839f6972ff271">num_cells_per_block_stride</a> () const</td></tr>
<tr class="memdesc:a3d18e8be8055827aa09839f6972ff271"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculates the number of cells per block stride.  <a href="#a3d18e8be8055827aa09839f6972ff271">More...</a><br /></td></tr>
<tr class="separator:a3d18e8be8055827aa09839f6972ff271"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a576ef6e002aae702e9c619a1afd31ddb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml#a576ef6e002aae702e9c619a1afd31ddb">num_block_positions_per_image</a> (const <a class="el" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> &amp;image_size) const</td></tr>
<tr class="memdesc:a576ef6e002aae702e9c619a1afd31ddb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculates the number of block positions for the given image size.  <a href="#a576ef6e002aae702e9c619a1afd31ddb">More...</a><br /></td></tr>
<tr class="separator:a576ef6e002aae702e9c619a1afd31ddb"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Store the <a class="el" href="classarm__compute_1_1_h_o_g.xhtml" title="CPU implementation of HOG data-object.">HOG</a>'s metadata. </p>

<p class="definition">Definition at line <a class="el" href="_h_o_g_info_8h_source.xhtml#l00035">35</a> of file <a class="el" href="_h_o_g_info_8h_source.xhtml">HOGInfo.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="aed28257d62b9129062bfd61600531648"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aed28257d62b9129062bfd61600531648">&#9670;&nbsp;</a></span>HOGInfo() <span class="overload">[1/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml">HOGInfo</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Default constructor. </p>

<p class="definition">Definition at line <a class="el" href="_h_o_g_info_8cpp_source.xhtml#l00031">31</a> of file <a class="el" href="_h_o_g_info_8cpp_source.xhtml">HOGInfo.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    : _cell_size(), _block_size(), _detection_window_size(), _block_stride(), _num_bins(0), _normalization_type(<a class="code" href="namespacearm__compute.xhtml#a673665b4587a2956fcbad5f0e9ba89d3ac9e68c0594494ec85805b225a7acb9c2">HOGNormType::L2HYS_NORM</a>), _l2_hyst_threshold(0.0f), _phase_type(<a class="code" href="namespacearm__compute.xhtml#af00a42ecad444bbda75cde1b64bd7e72aaf36b47f395cd01f48b8fc1013665054">PhaseType::UNSIGNED</a>),</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;      _descriptor_size(0)</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;{</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;}</div><div class="ttc" id="namespacearm__compute_xhtml_a673665b4587a2956fcbad5f0e9ba89d3ac9e68c0594494ec85805b225a7acb9c2"><div class="ttname"><a href="namespacearm__compute.xhtml#a673665b4587a2956fcbad5f0e9ba89d3ac9e68c0594494ec85805b225a7acb9c2">arm_compute::HOGNormType::L2HYS_NORM</a></div><div class="ttdoc">L2-norm followed by clipping.</div></div>
<div class="ttc" id="namespacearm__compute_xhtml_af00a42ecad444bbda75cde1b64bd7e72aaf36b47f395cd01f48b8fc1013665054"><div class="ttname"><a href="namespacearm__compute.xhtml#af00a42ecad444bbda75cde1b64bd7e72aaf36b47f395cd01f48b8fc1013665054">arm_compute::PhaseType::UNSIGNED</a></div><div class="ttdoc">Angle range: [0, 180].</div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="namespacearm__compute.xhtml#a673665b4587a2956fcbad5f0e9ba89d3ac9e68c0594494ec85805b225a7acb9c2">arm_compute::L2HYS_NORM</a>, and <a class="el" href="namespacearm__compute.xhtml#af00a42ecad444bbda75cde1b64bd7e72aaf36b47f395cd01f48b8fc1013665054">arm_compute::UNSIGNED</a>.</p>

</div>
</div>
<a id="ada121d63992678a09e1b3db5a2002bfa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ada121d63992678a09e1b3db5a2002bfa">&#9670;&nbsp;</a></span>~HOGInfo()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual ~<a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml">HOGInfo</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Default destructor. </p>

</div>
</div>
<a id="a10dcbc6006d1e12ba2cd1ae524c66122"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a10dcbc6006d1e12ba2cd1ae524c66122">&#9670;&nbsp;</a></span>HOGInfo() <span class="overload">[2/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml">HOGInfo</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml">HOGInfo</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Allow instances of this class to be copy constructed. </p>

</div>
</div>
<a id="a6a21c3fbc2803bbf3d975bec8977307f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6a21c3fbc2803bbf3d975bec8977307f">&#9670;&nbsp;</a></span>HOGInfo() <span class="overload">[3/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml">HOGInfo</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml">HOGInfo</a> &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Allow instances of this class to be move constructed. </p>

</div>
</div>
<a id="aeaa7d619922de47d6239b0167a58e2c7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aeaa7d619922de47d6239b0167a58e2c7">&#9670;&nbsp;</a></span>HOGInfo() <span class="overload">[4/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml">HOGInfo</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> &amp;&#160;</td>
          <td class="paramname"><em>cell_size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> &amp;&#160;</td>
          <td class="paramname"><em>block_size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> &amp;&#160;</td>
          <td class="paramname"><em>detection_window_size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> &amp;&#160;</td>
          <td class="paramname"><em>block_stride</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>num_bins</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearm__compute.xhtml#a673665b4587a2956fcbad5f0e9ba89d3">HOGNormType</a>&#160;</td>
          <td class="paramname"><em>normalization_type</em> = <code><a class="el" href="namespacearm__compute.xhtml#a673665b4587a2956fcbad5f0e9ba89d3ac9e68c0594494ec85805b225a7acb9c2">HOGNormType::L2HYS_NORM</a></code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>l2_hyst_threshold</em> = <code>0.2f</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearm__compute.xhtml#af00a42ecad444bbda75cde1b64bd7e72">PhaseType</a>&#160;</td>
          <td class="paramname"><em>phase_type</em> = <code><a class="el" href="namespacearm__compute.xhtml#af00a42ecad444bbda75cde1b64bd7e72aaf36b47f395cd01f48b8fc1013665054">PhaseType::UNSIGNED</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constructor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cell_size</td><td>Cell size in pixels </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">block_size</td><td>Block size in pixels. Must be a multiple of cell_size. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">detection_window_size</td><td>Detection window size in pixels. Must be a multiple of block_size and block_stride. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">block_stride</td><td>Distance in pixels between 2 consecutive blocks along the x and y direction. Must be a multiple of cell size </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">num_bins</td><td>Number of histogram bins for each cell </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">normalization_type</td><td>(Optional) Normalization type to use for each block </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">l2_hyst_threshold</td><td>(Optional) Threshold used for L2HYS_NORM normalization method </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">phase_type</td><td>(Optional) Type of <a class="el" href="namespacearm__compute.xhtml#af00a42ecad444bbda75cde1b64bd7e72">PhaseType</a> </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_h_o_g_info_8cpp_source.xhtml#l00037">37</a> of file <a class="el" href="_h_o_g_info_8cpp_source.xhtml">HOGInfo.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    : <a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml#aed28257d62b9129062bfd61600531648">HOGInfo</a>()</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;{</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    <a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml#a75215e8ba07a5ec88ee8c902e306e887">init</a>(<a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml#aaefa291ad3cc3e3210c8b8ef2ffde476">cell_size</a>, <a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml#ae561964ccc0e0a5750676b9c7dd7cd44">block_size</a>, <a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml#a7cbda2c789c461237f0c6eaee8f8cd2a">detection_window_size</a>, <a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml#a207391d3ac69d9a0839104f784f888fd">block_stride</a>, <a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml#ad96530ddba514601d376f991b568b346">num_bins</a>, <a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml#a5a4a2ab2f4396cc64b4a5676a90d7f07">normalization_type</a>, <a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml#ac3f834a0c4744ccbc55d3b8bc810fdff">l2_hyst_threshold</a>, <a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml#a039b8ebcdd462041d3988e6d2c145323">phase_type</a>);</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;}</div><div class="ttc" id="classarm__compute_1_1_h_o_g_info_xhtml_ad96530ddba514601d376f991b568b346"><div class="ttname"><a href="classarm__compute_1_1_h_o_g_info.xhtml#ad96530ddba514601d376f991b568b346">arm_compute::HOGInfo::num_bins</a></div><div class="ttdeci">size_t num_bins() const</div><div class="ttdoc">The number of histogram bins for each cell.</div><div class="ttdef"><b>Definition:</b> <a href="_h_o_g_info_8cpp_source.xhtml#l00111">HOGInfo.cpp:111</a></div></div>
<div class="ttc" id="classarm__compute_1_1_h_o_g_info_xhtml_a7cbda2c789c461237f0c6eaee8f8cd2a"><div class="ttname"><a href="classarm__compute_1_1_h_o_g_info.xhtml#a7cbda2c789c461237f0c6eaee8f8cd2a">arm_compute::HOGInfo::detection_window_size</a></div><div class="ttdeci">const Size2D &amp; detection_window_size() const</div><div class="ttdoc">The detection window size in pixels.</div><div class="ttdef"><b>Definition:</b> <a href="_h_o_g_info_8cpp_source.xhtml#l00101">HOGInfo.cpp:101</a></div></div>
<div class="ttc" id="classarm__compute_1_1_h_o_g_info_xhtml_aaefa291ad3cc3e3210c8b8ef2ffde476"><div class="ttname"><a href="classarm__compute_1_1_h_o_g_info.xhtml#aaefa291ad3cc3e3210c8b8ef2ffde476">arm_compute::HOGInfo::cell_size</a></div><div class="ttdeci">const Size2D &amp; cell_size() const</div><div class="ttdoc">The cell size in pixels.</div><div class="ttdef"><b>Definition:</b> <a href="_h_o_g_info_8cpp_source.xhtml#l00091">HOGInfo.cpp:91</a></div></div>
<div class="ttc" id="classarm__compute_1_1_h_o_g_info_xhtml_a039b8ebcdd462041d3988e6d2c145323"><div class="ttname"><a href="classarm__compute_1_1_h_o_g_info.xhtml#a039b8ebcdd462041d3988e6d2c145323">arm_compute::HOGInfo::phase_type</a></div><div class="ttdeci">PhaseType phase_type() const</div><div class="ttdoc">The type of PhaseType.</div><div class="ttdef"><b>Definition:</b> <a href="_h_o_g_info_8cpp_source.xhtml#l00126">HOGInfo.cpp:126</a></div></div>
<div class="ttc" id="classarm__compute_1_1_h_o_g_info_xhtml_a207391d3ac69d9a0839104f784f888fd"><div class="ttname"><a href="classarm__compute_1_1_h_o_g_info.xhtml#a207391d3ac69d9a0839104f784f888fd">arm_compute::HOGInfo::block_stride</a></div><div class="ttdeci">const Size2D &amp; block_stride() const</div><div class="ttdoc">The block stride in pixels.</div><div class="ttdef"><b>Definition:</b> <a href="_h_o_g_info_8cpp_source.xhtml#l00106">HOGInfo.cpp:106</a></div></div>
<div class="ttc" id="classarm__compute_1_1_h_o_g_info_xhtml_a5a4a2ab2f4396cc64b4a5676a90d7f07"><div class="ttname"><a href="classarm__compute_1_1_h_o_g_info.xhtml#a5a4a2ab2f4396cc64b4a5676a90d7f07">arm_compute::HOGInfo::normalization_type</a></div><div class="ttdeci">HOGNormType normalization_type() const</div><div class="ttdoc">The normalization type.</div><div class="ttdef"><b>Definition:</b> <a href="_h_o_g_info_8cpp_source.xhtml#l00116">HOGInfo.cpp:116</a></div></div>
<div class="ttc" id="classarm__compute_1_1_h_o_g_info_xhtml_aed28257d62b9129062bfd61600531648"><div class="ttname"><a href="classarm__compute_1_1_h_o_g_info.xhtml#aed28257d62b9129062bfd61600531648">arm_compute::HOGInfo::HOGInfo</a></div><div class="ttdeci">HOGInfo()</div><div class="ttdoc">Default constructor.</div><div class="ttdef"><b>Definition:</b> <a href="_h_o_g_info_8cpp_source.xhtml#l00031">HOGInfo.cpp:31</a></div></div>
<div class="ttc" id="classarm__compute_1_1_h_o_g_info_xhtml_ae561964ccc0e0a5750676b9c7dd7cd44"><div class="ttname"><a href="classarm__compute_1_1_h_o_g_info.xhtml#ae561964ccc0e0a5750676b9c7dd7cd44">arm_compute::HOGInfo::block_size</a></div><div class="ttdeci">const Size2D &amp; block_size() const</div><div class="ttdoc">The block size in pixels.</div><div class="ttdef"><b>Definition:</b> <a href="_h_o_g_info_8cpp_source.xhtml#l00096">HOGInfo.cpp:96</a></div></div>
<div class="ttc" id="classarm__compute_1_1_h_o_g_info_xhtml_ac3f834a0c4744ccbc55d3b8bc810fdff"><div class="ttname"><a href="classarm__compute_1_1_h_o_g_info.xhtml#ac3f834a0c4744ccbc55d3b8bc810fdff">arm_compute::HOGInfo::l2_hyst_threshold</a></div><div class="ttdeci">float l2_hyst_threshold() const</div><div class="ttdoc">Threshold used for L2HYS_NORM normalization type.</div><div class="ttdef"><b>Definition:</b> <a href="_h_o_g_info_8cpp_source.xhtml#l00121">HOGInfo.cpp:121</a></div></div>
<div class="ttc" id="classarm__compute_1_1_h_o_g_info_xhtml_a75215e8ba07a5ec88ee8c902e306e887"><div class="ttname"><a href="classarm__compute_1_1_h_o_g_info.xhtml#a75215e8ba07a5ec88ee8c902e306e887">arm_compute::HOGInfo::init</a></div><div class="ttdeci">void init(const Size2D &amp;cell_size, const Size2D &amp;block_size, const Size2D &amp;detection_window_size, const Size2D &amp;block_stride, size_t num_bins, HOGNormType normalization_type=HOGNormType::L2HYS_NORM, float l2_hyst_threshold=0.2f, PhaseType phase_type=PhaseType::UNSIGNED)</div><div class="ttdoc">Initialize the metadata structure with the given parameters.</div><div class="ttdef"><b>Definition:</b> <a href="_h_o_g_info_8cpp_source.xhtml#l00044">HOGInfo.cpp:44</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_h_o_g_info_8cpp_source.xhtml#l00096">HOGInfo::block_size()</a>, <a class="el" href="_h_o_g_info_8cpp_source.xhtml#l00106">HOGInfo::block_stride()</a>, <a class="el" href="_h_o_g_info_8cpp_source.xhtml#l00091">HOGInfo::cell_size()</a>, <a class="el" href="_h_o_g_info_8cpp_source.xhtml#l00101">HOGInfo::detection_window_size()</a>, <a class="el" href="_h_o_g_info_8cpp_source.xhtml#l00044">HOGInfo::init()</a>, <a class="el" href="_h_o_g_info_8cpp_source.xhtml#l00121">HOGInfo::l2_hyst_threshold()</a>, <a class="el" href="_h_o_g_info_8cpp_source.xhtml#l00116">HOGInfo::normalization_type()</a>, <a class="el" href="_h_o_g_info_8cpp_source.xhtml#l00111">HOGInfo::num_bins()</a>, and <a class="el" href="_h_o_g_info_8cpp_source.xhtml#l00126">HOGInfo::phase_type()</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="ae561964ccc0e0a5750676b9c7dd7cd44"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae561964ccc0e0a5750676b9c7dd7cd44">&#9670;&nbsp;</a></span>block_size()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> &amp; block_size </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>The block size in pixels. </p>
<dl class="section return"><dt>Returns</dt><dd>The block size in pixels </dd></dl>

<p class="definition">Definition at line <a class="el" href="_h_o_g_info_8cpp_source.xhtml#l00096">96</a> of file <a class="el" href="_h_o_g_info_8cpp_source.xhtml">HOGInfo.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;{</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    <span class="keywordflow">return</span> _block_size;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;}</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_n_e_h_o_g_detector_kernel_8cpp_source.xhtml#l00042">NEHOGDetectorKernel::configure()</a>, <a class="el" href="_c_l_h_o_g_detector_kernel_8cpp_source.xhtml#l00044">CLHOGDetectorKernel::configure()</a>, <a class="el" href="_c_l_h_o_g_multi_detection_8cpp_source.xhtml#l00056">CLHOGMultiDetection::configure()</a>, <a class="el" href="_n_e_h_o_g_multi_detection_8cpp_source.xhtml#l00054">NEHOGMultiDetection::configure()</a>, <a class="el" href="_c_l_h_o_g_descriptor_kernel_8cpp_source.xhtml#l00139">CLHOGBlockNormalizationKernel::configure()</a>, <a class="el" href="_n_e_h_o_g_descriptor_kernel_8cpp_source.xhtml#l00714">NEHOGBlockNormalizationKernel::configure()</a>, <a class="el" href="reference_2_h_o_g_descriptor_8cpp_source.xhtml#l00174">arm_compute::test::validation::reference::hog_block_normalization()</a>, <a class="el" href="_h_o_g_info_8cpp_source.xhtml#l00037">HOGInfo::HOGInfo()</a>, <a class="el" href="_h_o_g_info_8cpp_source.xhtml#l00044">HOGInfo::init()</a>, and <a class="el" href="utils_2_type_printer_8h_source.xhtml#l01828">arm_compute::operator&lt;&lt;()</a>.</p>

</div>
</div>
<a id="a207391d3ac69d9a0839104f784f888fd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a207391d3ac69d9a0839104f784f888fd">&#9670;&nbsp;</a></span>block_stride()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> &amp; block_stride </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>The block stride in pixels. </p>
<p>The block stride is the distance between 2 consecutive blocks</p>
<dl class="section return"><dt>Returns</dt><dd>The block stride in pixels </dd></dl>

<p class="definition">Definition at line <a class="el" href="_h_o_g_info_8cpp_source.xhtml#l00106">106</a> of file <a class="el" href="_h_o_g_info_8cpp_source.xhtml">HOGInfo.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;{</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <span class="keywordflow">return</span> _block_stride;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;}</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_n_e_h_o_g_detector_kernel_8cpp_source.xhtml#l00042">NEHOGDetectorKernel::configure()</a>, <a class="el" href="_c_l_h_o_g_detector_kernel_8cpp_source.xhtml#l00044">CLHOGDetectorKernel::configure()</a>, <a class="el" href="_c_l_h_o_g_multi_detection_8cpp_source.xhtml#l00056">CLHOGMultiDetection::configure()</a>, <a class="el" href="_n_e_h_o_g_multi_detection_8cpp_source.xhtml#l00054">NEHOGMultiDetection::configure()</a>, <a class="el" href="_c_l_h_o_g_descriptor_kernel_8cpp_source.xhtml#l00139">CLHOGBlockNormalizationKernel::configure()</a>, <a class="el" href="_n_e_h_o_g_descriptor_kernel_8cpp_source.xhtml#l00714">NEHOGBlockNormalizationKernel::configure()</a>, <a class="el" href="reference_2_h_o_g_descriptor_8cpp_source.xhtml#l00174">arm_compute::test::validation::reference::hog_block_normalization()</a>, <a class="el" href="reference_2_h_o_g_detector_8cpp_source.xhtml#l00048">arm_compute::test::validation::reference::hog_detector()</a>, <a class="el" href="_h_o_g_info_8cpp_source.xhtml#l00037">HOGInfo::HOGInfo()</a>, <a class="el" href="_h_o_g_info_8cpp_source.xhtml#l00044">HOGInfo::init()</a>, and <a class="el" href="utils_2_type_printer_8h_source.xhtml#l01828">arm_compute::operator&lt;&lt;()</a>.</p>

</div>
</div>
<a id="aaefa291ad3cc3e3210c8b8ef2ffde476"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaefa291ad3cc3e3210c8b8ef2ffde476">&#9670;&nbsp;</a></span>cell_size()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> &amp; cell_size </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>The cell size in pixels. </p>
<dl class="section return"><dt>Returns</dt><dd>The cell size in pixels </dd></dl>

<p class="definition">Definition at line <a class="el" href="_h_o_g_info_8cpp_source.xhtml#l00091">91</a> of file <a class="el" href="_h_o_g_info_8cpp_source.xhtml">HOGInfo.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;{</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <span class="keywordflow">return</span> _cell_size;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;}</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_c_l_h_o_g_descriptor_kernel_8cpp_source.xhtml#l00048">CLHOGOrientationBinningKernel::configure()</a>, <a class="el" href="_n_e_h_o_g_descriptor_8cpp_source.xhtml#l00039">NEHOGDescriptor::configure()</a>, <a class="el" href="_c_l_h_o_g_descriptor_8cpp_source.xhtml#l00039">CLHOGDescriptor::configure()</a>, <a class="el" href="_c_l_h_o_g_multi_detection_8cpp_source.xhtml#l00056">CLHOGMultiDetection::configure()</a>, <a class="el" href="_n_e_h_o_g_multi_detection_8cpp_source.xhtml#l00054">NEHOGMultiDetection::configure()</a>, <a class="el" href="_c_l_h_o_g_descriptor_kernel_8cpp_source.xhtml#l00139">CLHOGBlockNormalizationKernel::configure()</a>, <a class="el" href="_n_e_h_o_g_descriptor_kernel_8cpp_source.xhtml#l00714">NEHOGBlockNormalizationKernel::configure()</a>, <a class="el" href="reference_2_h_o_g_descriptor_8cpp_source.xhtml#l00174">arm_compute::test::validation::reference::hog_block_normalization()</a>, <a class="el" href="reference_2_h_o_g_descriptor_8cpp_source.xhtml#l00226">arm_compute::test::validation::reference::hog_descriptor()</a>, <a class="el" href="reference_2_h_o_g_descriptor_8cpp_source.xhtml#l00117">arm_compute::test::validation::reference::hog_orientation_binning()</a>, <a class="el" href="_h_o_g_info_8cpp_source.xhtml#l00037">HOGInfo::HOGInfo()</a>, <a class="el" href="_h_o_g_info_8cpp_source.xhtml#l00044">HOGInfo::init()</a>, and <a class="el" href="utils_2_type_printer_8h_source.xhtml#l01828">arm_compute::operator&lt;&lt;()</a>.</p>

</div>
</div>
<a id="a2a347c64540c1d48a579f830ddff622f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2a347c64540c1d48a579f830ddff622f">&#9670;&nbsp;</a></span>descriptor_size()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">size_t descriptor_size </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>The size of <a class="el" href="classarm__compute_1_1_h_o_g.xhtml" title="CPU implementation of HOG data-object.">HOG</a> descriptor. </p>
<dl class="section return"><dt>Returns</dt><dd>The size of <a class="el" href="classarm__compute_1_1_h_o_g.xhtml" title="CPU implementation of HOG data-object.">HOG</a> descriptor </dd></dl>

<p class="definition">Definition at line <a class="el" href="_h_o_g_info_8cpp_source.xhtml#l00131">131</a> of file <a class="el" href="_h_o_g_info_8cpp_source.xhtml">HOGInfo.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;{</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    <span class="keywordflow">return</span> _descriptor_size;</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;}</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_n_e_h_o_g_detector_kernel_8cpp_source.xhtml#l00042">NEHOGDetectorKernel::configure()</a>, <a class="el" href="_c_l_h_o_g_detector_kernel_8cpp_source.xhtml#l00044">CLHOGDetectorKernel::configure()</a>, <a class="el" href="reference_2_h_o_g_detector_8cpp_source.xhtml#l00048">arm_compute::test::validation::reference::hog_detector()</a>, and <a class="el" href="_h_o_g_8cpp_source.xhtml#l00036">HOG::init()</a>.</p>

</div>
</div>
<a id="a7cbda2c789c461237f0c6eaee8f8cd2a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7cbda2c789c461237f0c6eaee8f8cd2a">&#9670;&nbsp;</a></span>detection_window_size()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> &amp; detection_window_size </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>The detection window size in pixels. </p>
<dl class="section return"><dt>Returns</dt><dd>The detection window size in pixels </dd></dl>

<p class="definition">Definition at line <a class="el" href="_h_o_g_info_8cpp_source.xhtml#l00101">101</a> of file <a class="el" href="_h_o_g_info_8cpp_source.xhtml">HOGInfo.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;{</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    <span class="keywordflow">return</span> _detection_window_size;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;}</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_n_e_h_o_g_detector_kernel_8cpp_source.xhtml#l00042">NEHOGDetectorKernel::configure()</a>, <a class="el" href="_c_l_h_o_g_detector_kernel_8cpp_source.xhtml#l00044">CLHOGDetectorKernel::configure()</a>, <a class="el" href="reference_2_h_o_g_detector_8cpp_source.xhtml#l00048">arm_compute::test::validation::reference::hog_detector()</a>, <a class="el" href="_h_o_g_info_8cpp_source.xhtml#l00037">HOGInfo::HOGInfo()</a>, <a class="el" href="_h_o_g_info_8cpp_source.xhtml#l00044">HOGInfo::init()</a>, and <a class="el" href="utils_2_type_printer_8h_source.xhtml#l01828">arm_compute::operator&lt;&lt;()</a>.</p>

</div>
</div>
<a id="a75215e8ba07a5ec88ee8c902e306e887"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a75215e8ba07a5ec88ee8c902e306e887">&#9670;&nbsp;</a></span>init()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void init </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> &amp;&#160;</td>
          <td class="paramname"><em>cell_size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> &amp;&#160;</td>
          <td class="paramname"><em>block_size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> &amp;&#160;</td>
          <td class="paramname"><em>detection_window_size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> &amp;&#160;</td>
          <td class="paramname"><em>block_stride</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>num_bins</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearm__compute.xhtml#a673665b4587a2956fcbad5f0e9ba89d3">HOGNormType</a>&#160;</td>
          <td class="paramname"><em>normalization_type</em> = <code><a class="el" href="namespacearm__compute.xhtml#a673665b4587a2956fcbad5f0e9ba89d3ac9e68c0594494ec85805b225a7acb9c2">HOGNormType::L2HYS_NORM</a></code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>l2_hyst_threshold</em> = <code>0.2f</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearm__compute.xhtml#af00a42ecad444bbda75cde1b64bd7e72">PhaseType</a>&#160;</td>
          <td class="paramname"><em>phase_type</em> = <code><a class="el" href="namespacearm__compute.xhtml#af00a42ecad444bbda75cde1b64bd7e72aaf36b47f395cd01f48b8fc1013665054">PhaseType::UNSIGNED</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initialize the metadata structure with the given parameters. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cell_size</td><td>Cell size in pixels </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">block_size</td><td>Block size in pixels. Must be a multiple of cell_size. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">detection_window_size</td><td>Detection window size in pixels. Must be a multiple of block_size and block_stride. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">block_stride</td><td>Distance in pixels between 2 consecutive blocks along the x and y direction. Must be a multiple of cell size </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">num_bins</td><td>Number of histogram bins for each cell </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">normalization_type</td><td>(Optional) Normalization type to use for each block </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">l2_hyst_threshold</td><td>(Optional) Threshold used for L2HYS_NORM normalization method </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">phase_type</td><td>(Optional) Type of <a class="el" href="namespacearm__compute.xhtml#af00a42ecad444bbda75cde1b64bd7e72">PhaseType</a> </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_h_o_g_info_8cpp_source.xhtml#l00044">44</a> of file <a class="el" href="_h_o_g_info_8cpp_source.xhtml">HOGInfo.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;{</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <a class="code" href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a>((<a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml#ae561964ccc0e0a5750676b9c7dd7cd44">block_size</a>.<a class="code" href="classarm__compute_1_1_size2_d.xhtml#a02bed8590a9ddf520e58a060059518ec">width</a> % <a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml#aaefa291ad3cc3e3210c8b8ef2ffde476">cell_size</a>.<a class="code" href="classarm__compute_1_1_size2_d.xhtml#a02bed8590a9ddf520e58a060059518ec">width</a>), <span class="stringliteral">&quot;The block width must be multiple of cell width&quot;</span>);</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <a class="code" href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a>((<a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml#ae561964ccc0e0a5750676b9c7dd7cd44">block_size</a>.<a class="code" href="classarm__compute_1_1_size2_d.xhtml#a02afeaaf8574e7a78d6b466ff2695052">height</a> % <a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml#aaefa291ad3cc3e3210c8b8ef2ffde476">cell_size</a>.<a class="code" href="classarm__compute_1_1_size2_d.xhtml#a02afeaaf8574e7a78d6b466ff2695052">height</a>), <span class="stringliteral">&quot;Block height must be multiple of cell height&quot;</span>);</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <a class="code" href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a>((<a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml#a207391d3ac69d9a0839104f784f888fd">block_stride</a>.<a class="code" href="classarm__compute_1_1_size2_d.xhtml#a02bed8590a9ddf520e58a060059518ec">width</a> % <a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml#aaefa291ad3cc3e3210c8b8ef2ffde476">cell_size</a>.<a class="code" href="classarm__compute_1_1_size2_d.xhtml#a02bed8590a9ddf520e58a060059518ec">width</a>), <span class="stringliteral">&quot;Block stride width must be multiple of cell width&quot;</span>);</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <a class="code" href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a>((<a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml#a207391d3ac69d9a0839104f784f888fd">block_stride</a>.<a class="code" href="classarm__compute_1_1_size2_d.xhtml#a02afeaaf8574e7a78d6b466ff2695052">height</a> % <a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml#aaefa291ad3cc3e3210c8b8ef2ffde476">cell_size</a>.<a class="code" href="classarm__compute_1_1_size2_d.xhtml#a02afeaaf8574e7a78d6b466ff2695052">height</a>), <span class="stringliteral">&quot;Block stride height must be multiple of cell height&quot;</span>);</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <a class="code" href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a>(((<a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml#a7cbda2c789c461237f0c6eaee8f8cd2a">detection_window_size</a>.<a class="code" href="classarm__compute_1_1_size2_d.xhtml#a02bed8590a9ddf520e58a060059518ec">width</a> - <a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml#ae561964ccc0e0a5750676b9c7dd7cd44">block_size</a>.<a class="code" href="classarm__compute_1_1_size2_d.xhtml#a02bed8590a9ddf520e58a060059518ec">width</a>) % <a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml#a207391d3ac69d9a0839104f784f888fd">block_stride</a>.<a class="code" href="classarm__compute_1_1_size2_d.xhtml#a02bed8590a9ddf520e58a060059518ec">width</a>), <span class="stringliteral">&quot;Window width must be multiple of block width and block stride width&quot;</span>);</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <a class="code" href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a>(((<a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml#a7cbda2c789c461237f0c6eaee8f8cd2a">detection_window_size</a>.<a class="code" href="classarm__compute_1_1_size2_d.xhtml#a02afeaaf8574e7a78d6b466ff2695052">height</a> - <a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml#ae561964ccc0e0a5750676b9c7dd7cd44">block_size</a>.<a class="code" href="classarm__compute_1_1_size2_d.xhtml#a02afeaaf8574e7a78d6b466ff2695052">height</a>) % <a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml#a207391d3ac69d9a0839104f784f888fd">block_stride</a>.<a class="code" href="classarm__compute_1_1_size2_d.xhtml#a02afeaaf8574e7a78d6b466ff2695052">height</a>), <span class="stringliteral">&quot;Window height must be multiple of block height and block stride height&quot;</span>);</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    _cell_size             = <a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml#aaefa291ad3cc3e3210c8b8ef2ffde476">cell_size</a>;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    _block_size            = <a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml#ae561964ccc0e0a5750676b9c7dd7cd44">block_size</a>;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    _detection_window_size = <a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml#a7cbda2c789c461237f0c6eaee8f8cd2a">detection_window_size</a>;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    _block_stride          = <a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml#a207391d3ac69d9a0839104f784f888fd">block_stride</a>;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    _num_bins              = <a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml#ad96530ddba514601d376f991b568b346">num_bins</a>;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    _normalization_type    = <a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml#a5a4a2ab2f4396cc64b4a5676a90d7f07">normalization_type</a>;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    _l2_hyst_threshold     = <a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml#ac3f834a0c4744ccbc55d3b8bc810fdff">l2_hyst_threshold</a>;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    _phase_type            = <a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml#a039b8ebcdd462041d3988e6d2c145323">phase_type</a>;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <span class="comment">// Compute descriptor size. +1 takes into account of the bias</span></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    _descriptor_size = <a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml#a79b522bd4aa0d5533649e60ef7f5f42f">num_cells_per_block</a>().<a class="code" href="classarm__compute_1_1_size2_d.xhtml#a75026dc1fa3840404ae4553010efcd52">area</a>() * <a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml#a576ef6e002aae702e9c619a1afd31ddb">num_block_positions_per_image</a>(_detection_window_size).<a class="code" href="classarm__compute_1_1_size2_d.xhtml#a75026dc1fa3840404ae4553010efcd52">area</a>() * _num_bins + 1;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;}</div><div class="ttc" id="classarm__compute_1_1_h_o_g_info_xhtml_ad96530ddba514601d376f991b568b346"><div class="ttname"><a href="classarm__compute_1_1_h_o_g_info.xhtml#ad96530ddba514601d376f991b568b346">arm_compute::HOGInfo::num_bins</a></div><div class="ttdeci">size_t num_bins() const</div><div class="ttdoc">The number of histogram bins for each cell.</div><div class="ttdef"><b>Definition:</b> <a href="_h_o_g_info_8cpp_source.xhtml#l00111">HOGInfo.cpp:111</a></div></div>
<div class="ttc" id="classarm__compute_1_1_h_o_g_info_xhtml_a7cbda2c789c461237f0c6eaee8f8cd2a"><div class="ttname"><a href="classarm__compute_1_1_h_o_g_info.xhtml#a7cbda2c789c461237f0c6eaee8f8cd2a">arm_compute::HOGInfo::detection_window_size</a></div><div class="ttdeci">const Size2D &amp; detection_window_size() const</div><div class="ttdoc">The detection window size in pixels.</div><div class="ttdef"><b>Definition:</b> <a href="_h_o_g_info_8cpp_source.xhtml#l00101">HOGInfo.cpp:101</a></div></div>
<div class="ttc" id="classarm__compute_1_1_h_o_g_info_xhtml_aaefa291ad3cc3e3210c8b8ef2ffde476"><div class="ttname"><a href="classarm__compute_1_1_h_o_g_info.xhtml#aaefa291ad3cc3e3210c8b8ef2ffde476">arm_compute::HOGInfo::cell_size</a></div><div class="ttdeci">const Size2D &amp; cell_size() const</div><div class="ttdoc">The cell size in pixels.</div><div class="ttdef"><b>Definition:</b> <a href="_h_o_g_info_8cpp_source.xhtml#l00091">HOGInfo.cpp:91</a></div></div>
<div class="ttc" id="classarm__compute_1_1_h_o_g_info_xhtml_a039b8ebcdd462041d3988e6d2c145323"><div class="ttname"><a href="classarm__compute_1_1_h_o_g_info.xhtml#a039b8ebcdd462041d3988e6d2c145323">arm_compute::HOGInfo::phase_type</a></div><div class="ttdeci">PhaseType phase_type() const</div><div class="ttdoc">The type of PhaseType.</div><div class="ttdef"><b>Definition:</b> <a href="_h_o_g_info_8cpp_source.xhtml#l00126">HOGInfo.cpp:126</a></div></div>
<div class="ttc" id="classarm__compute_1_1_h_o_g_info_xhtml_a207391d3ac69d9a0839104f784f888fd"><div class="ttname"><a href="classarm__compute_1_1_h_o_g_info.xhtml#a207391d3ac69d9a0839104f784f888fd">arm_compute::HOGInfo::block_stride</a></div><div class="ttdeci">const Size2D &amp; block_stride() const</div><div class="ttdoc">The block stride in pixels.</div><div class="ttdef"><b>Definition:</b> <a href="_h_o_g_info_8cpp_source.xhtml#l00106">HOGInfo.cpp:106</a></div></div>
<div class="ttc" id="classarm__compute_1_1_h_o_g_info_xhtml_a5a4a2ab2f4396cc64b4a5676a90d7f07"><div class="ttname"><a href="classarm__compute_1_1_h_o_g_info.xhtml#a5a4a2ab2f4396cc64b4a5676a90d7f07">arm_compute::HOGInfo::normalization_type</a></div><div class="ttdeci">HOGNormType normalization_type() const</div><div class="ttdoc">The normalization type.</div><div class="ttdef"><b>Definition:</b> <a href="_h_o_g_info_8cpp_source.xhtml#l00116">HOGInfo.cpp:116</a></div></div>
<div class="ttc" id="classarm__compute_1_1_size2_d_xhtml_a02afeaaf8574e7a78d6b466ff2695052"><div class="ttname"><a href="classarm__compute_1_1_size2_d.xhtml#a02afeaaf8574e7a78d6b466ff2695052">arm_compute::Size2D::height</a></div><div class="ttdeci">size_t height</div><div class="ttdoc">Height of the image region or rectangle.</div><div class="ttdef"><b>Definition:</b> <a href="_size2_d_8h_source.xhtml#l00093">Size2D.h:93</a></div></div>
<div class="ttc" id="classarm__compute_1_1_h_o_g_info_xhtml_a79b522bd4aa0d5533649e60ef7f5f42f"><div class="ttname"><a href="classarm__compute_1_1_h_o_g_info.xhtml#a79b522bd4aa0d5533649e60ef7f5f42f">arm_compute::HOGInfo::num_cells_per_block</a></div><div class="ttdeci">Size2D num_cells_per_block() const</div><div class="ttdoc">Calculates the number of cells for each block.</div><div class="ttdef"><b>Definition:</b> <a href="_h_o_g_info_8cpp_source.xhtml#l00067">HOGInfo.cpp:67</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a0b0eb3235749a2909dc5a101afe59a1b"><div class="ttname"><a href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_MSG(cond, msg)</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00456">Error.h:456</a></div></div>
<div class="ttc" id="classarm__compute_1_1_h_o_g_info_xhtml_ae561964ccc0e0a5750676b9c7dd7cd44"><div class="ttname"><a href="classarm__compute_1_1_h_o_g_info.xhtml#ae561964ccc0e0a5750676b9c7dd7cd44">arm_compute::HOGInfo::block_size</a></div><div class="ttdeci">const Size2D &amp; block_size() const</div><div class="ttdoc">The block size in pixels.</div><div class="ttdef"><b>Definition:</b> <a href="_h_o_g_info_8cpp_source.xhtml#l00096">HOGInfo.cpp:96</a></div></div>
<div class="ttc" id="classarm__compute_1_1_h_o_g_info_xhtml_ac3f834a0c4744ccbc55d3b8bc810fdff"><div class="ttname"><a href="classarm__compute_1_1_h_o_g_info.xhtml#ac3f834a0c4744ccbc55d3b8bc810fdff">arm_compute::HOGInfo::l2_hyst_threshold</a></div><div class="ttdeci">float l2_hyst_threshold() const</div><div class="ttdoc">Threshold used for L2HYS_NORM normalization type.</div><div class="ttdef"><b>Definition:</b> <a href="_h_o_g_info_8cpp_source.xhtml#l00121">HOGInfo.cpp:121</a></div></div>
<div class="ttc" id="classarm__compute_1_1_size2_d_xhtml_a02bed8590a9ddf520e58a060059518ec"><div class="ttname"><a href="classarm__compute_1_1_size2_d.xhtml#a02bed8590a9ddf520e58a060059518ec">arm_compute::Size2D::width</a></div><div class="ttdeci">size_t width</div><div class="ttdoc">Width of the image region or rectangle.</div><div class="ttdef"><b>Definition:</b> <a href="_size2_d_8h_source.xhtml#l00092">Size2D.h:92</a></div></div>
<div class="ttc" id="classarm__compute_1_1_h_o_g_info_xhtml_a576ef6e002aae702e9c619a1afd31ddb"><div class="ttname"><a href="classarm__compute_1_1_h_o_g_info.xhtml#a576ef6e002aae702e9c619a1afd31ddb">arm_compute::HOGInfo::num_block_positions_per_image</a></div><div class="ttdeci">Size2D num_block_positions_per_image(const Size2D &amp;image_size) const</div><div class="ttdoc">Calculates the number of block positions for the given image size.</div><div class="ttdef"><b>Definition:</b> <a href="_h_o_g_info_8cpp_source.xhtml#l00083">HOGInfo.cpp:83</a></div></div>
<div class="ttc" id="classarm__compute_1_1_size2_d_xhtml_a75026dc1fa3840404ae4553010efcd52"><div class="ttname"><a href="classarm__compute_1_1_size2_d.xhtml#a75026dc1fa3840404ae4553010efcd52">arm_compute::Size2D::area</a></div><div class="ttdeci">size_t area() const</div><div class="ttdoc">The area of the image or rectangle calculated as (width * height)</div><div class="ttdef"><b>Definition:</b> <a href="_size2_d_8h_source.xhtml#l00053">Size2D.h:53</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_size2_d_8h_source.xhtml#l00053">Size2D::area()</a>, <a class="el" href="_error_8h_source.xhtml#l00456">ARM_COMPUTE_ERROR_ON_MSG</a>, <a class="el" href="_h_o_g_info_8cpp_source.xhtml#l00096">HOGInfo::block_size()</a>, <a class="el" href="_h_o_g_info_8cpp_source.xhtml#l00106">HOGInfo::block_stride()</a>, <a class="el" href="_h_o_g_info_8cpp_source.xhtml#l00091">HOGInfo::cell_size()</a>, <a class="el" href="_h_o_g_info_8cpp_source.xhtml#l00101">HOGInfo::detection_window_size()</a>, <a class="el" href="_size2_d_8h_source.xhtml#l00093">Size2D::height</a>, <a class="el" href="_h_o_g_info_8cpp_source.xhtml#l00121">HOGInfo::l2_hyst_threshold()</a>, <a class="el" href="_h_o_g_info_8cpp_source.xhtml#l00116">HOGInfo::normalization_type()</a>, <a class="el" href="_h_o_g_info_8cpp_source.xhtml#l00111">HOGInfo::num_bins()</a>, <a class="el" href="_h_o_g_info_8cpp_source.xhtml#l00083">HOGInfo::num_block_positions_per_image()</a>, <a class="el" href="_h_o_g_info_8cpp_source.xhtml#l00067">HOGInfo::num_cells_per_block()</a>, <a class="el" href="_h_o_g_info_8cpp_source.xhtml#l00126">HOGInfo::phase_type()</a>, and <a class="el" href="_size2_d_8h_source.xhtml#l00092">Size2D::width</a>.</p>

<p class="reference">Referenced by <a class="el" href="_h_o_g_info_8cpp_source.xhtml#l00037">HOGInfo::HOGInfo()</a>.</p>

</div>
</div>
<a id="ac3f834a0c4744ccbc55d3b8bc810fdff"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac3f834a0c4744ccbc55d3b8bc810fdff">&#9670;&nbsp;</a></span>l2_hyst_threshold()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">float l2_hyst_threshold </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Threshold used for L2HYS_NORM normalization type. </p>
<dl class="section return"><dt>Returns</dt><dd>Threshold used for L2HYS_NORM normalization type </dd></dl>

<p class="definition">Definition at line <a class="el" href="_h_o_g_info_8cpp_source.xhtml#l00121">121</a> of file <a class="el" href="_h_o_g_info_8cpp_source.xhtml">HOGInfo.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;{</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    <span class="keywordflow">return</span> _l2_hyst_threshold;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;}</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_c_l_h_o_g_descriptor_kernel_8cpp_source.xhtml#l00139">CLHOGBlockNormalizationKernel::configure()</a>, <a class="el" href="_validate_8cpp_source.xhtml#l00144">arm_compute::error_on_invalid_multi_hog()</a>, <a class="el" href="_h_o_g_info_8cpp_source.xhtml#l00037">HOGInfo::HOGInfo()</a>, <a class="el" href="_h_o_g_info_8cpp_source.xhtml#l00044">HOGInfo::init()</a>, and <a class="el" href="utils_2_type_printer_8h_source.xhtml#l01828">arm_compute::operator&lt;&lt;()</a>.</p>

</div>
</div>
<a id="a5a4a2ab2f4396cc64b4a5676a90d7f07"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5a4a2ab2f4396cc64b4a5676a90d7f07">&#9670;&nbsp;</a></span>normalization_type()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearm__compute.xhtml#a673665b4587a2956fcbad5f0e9ba89d3">HOGNormType</a> normalization_type </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>The normalization type. </p>
<dl class="section return"><dt>Returns</dt><dd>The normalization type </dd></dl>

<p class="definition">Definition at line <a class="el" href="_h_o_g_info_8cpp_source.xhtml#l00116">116</a> of file <a class="el" href="_h_o_g_info_8cpp_source.xhtml">HOGInfo.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;{</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <span class="keywordflow">return</span> _normalization_type;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;}</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_c_l_h_o_g_descriptor_kernel_8cpp_source.xhtml#l00139">CLHOGBlockNormalizationKernel::configure()</a>, <a class="el" href="_validate_8cpp_source.xhtml#l00144">arm_compute::error_on_invalid_multi_hog()</a>, <a class="el" href="_h_o_g_info_8cpp_source.xhtml#l00037">HOGInfo::HOGInfo()</a>, <a class="el" href="_h_o_g_info_8cpp_source.xhtml#l00044">HOGInfo::init()</a>, and <a class="el" href="utils_2_type_printer_8h_source.xhtml#l01828">arm_compute::operator&lt;&lt;()</a>.</p>

</div>
</div>
<a id="ad96530ddba514601d376f991b568b346"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad96530ddba514601d376f991b568b346">&#9670;&nbsp;</a></span>num_bins()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">size_t num_bins </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>The number of histogram bins for each cell. </p>
<dl class="section return"><dt>Returns</dt><dd>The number of histogram bins for each cell </dd></dl>

<p class="definition">Definition at line <a class="el" href="_h_o_g_info_8cpp_source.xhtml#l00111">111</a> of file <a class="el" href="_h_o_g_info_8cpp_source.xhtml">HOGInfo.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;{</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <span class="keywordflow">return</span> _num_bins;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;}</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_c_l_h_o_g_descriptor_kernel_8cpp_source.xhtml#l00048">CLHOGOrientationBinningKernel::configure()</a>, <a class="el" href="_n_e_h_o_g_descriptor_8cpp_source.xhtml#l00039">NEHOGDescriptor::configure()</a>, <a class="el" href="_c_l_h_o_g_descriptor_8cpp_source.xhtml#l00039">CLHOGDescriptor::configure()</a>, <a class="el" href="_n_e_h_o_g_descriptor_kernel_8cpp_source.xhtml#l00632">NEHOGOrientationBinningKernel::configure()</a>, <a class="el" href="_c_l_h_o_g_multi_detection_8cpp_source.xhtml#l00056">CLHOGMultiDetection::configure()</a>, <a class="el" href="_n_e_h_o_g_multi_detection_8cpp_source.xhtml#l00054">NEHOGMultiDetection::configure()</a>, <a class="el" href="_c_l_h_o_g_descriptor_kernel_8cpp_source.xhtml#l00139">CLHOGBlockNormalizationKernel::configure()</a>, <a class="el" href="_n_e_h_o_g_descriptor_kernel_8cpp_source.xhtml#l00714">NEHOGBlockNormalizationKernel::configure()</a>, <a class="el" href="reference_2_h_o_g_descriptor_8cpp_source.xhtml#l00174">arm_compute::test::validation::reference::hog_block_normalization()</a>, <a class="el" href="reference_2_h_o_g_descriptor_8cpp_source.xhtml#l00226">arm_compute::test::validation::reference::hog_descriptor()</a>, <a class="el" href="reference_2_h_o_g_detector_8cpp_source.xhtml#l00048">arm_compute::test::validation::reference::hog_detector()</a>, <a class="el" href="reference_2_h_o_g_descriptor_8cpp_source.xhtml#l00117">arm_compute::test::validation::reference::hog_orientation_binning()</a>, <a class="el" href="_h_o_g_info_8cpp_source.xhtml#l00037">HOGInfo::HOGInfo()</a>, <a class="el" href="_h_o_g_info_8cpp_source.xhtml#l00044">HOGInfo::init()</a>, <a class="el" href="src_2core_2_tensor_info_8cpp_source.xhtml#l00167">TensorInfo::init()</a>, <a class="el" href="src_2core_2_tensor_info_8cpp_source.xhtml#l00208">TensorInfo::init_auto_padding()</a>, and <a class="el" href="utils_2_type_printer_8h_source.xhtml#l01828">arm_compute::operator&lt;&lt;()</a>.</p>

</div>
</div>
<a id="a576ef6e002aae702e9c619a1afd31ddb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a576ef6e002aae702e9c619a1afd31ddb">&#9670;&nbsp;</a></span>num_block_positions_per_image()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> num_block_positions_per_image </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> &amp;&#160;</td>
          <td class="paramname"><em>image_size</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Calculates the number of block positions for the given image size. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">image_size</td><td>The input image size data object</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The <a class="el" href="classarm__compute_1_1_size2_d.xhtml" title="Class for specifying the size of an image or rectangle.">Size2D</a> data object which stores the number of block positions along the x and y directions </dd></dl>

<p class="definition">Definition at line <a class="el" href="_h_o_g_info_8cpp_source.xhtml#l00083">83</a> of file <a class="el" href="_h_o_g_info_8cpp_source.xhtml">HOGInfo.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;{</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(_block_stride.<a class="code" href="classarm__compute_1_1_size2_d.xhtml#a02bed8590a9ddf520e58a060059518ec">width</a> == 0 || _block_stride.<a class="code" href="classarm__compute_1_1_size2_d.xhtml#a02afeaaf8574e7a78d6b466ff2695052">height</a> == 0);</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a>{ ((image_size.<a class="code" href="classarm__compute_1_1_size2_d.xhtml#a02bed8590a9ddf520e58a060059518ec">width</a> - _block_size.<a class="code" href="classarm__compute_1_1_size2_d.xhtml#a02bed8590a9ddf520e58a060059518ec">width</a>) / _block_stride.<a class="code" href="classarm__compute_1_1_size2_d.xhtml#a02bed8590a9ddf520e58a060059518ec">width</a>) + 1,</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;                   ((image_size.<a class="code" href="classarm__compute_1_1_size2_d.xhtml#a02afeaaf8574e7a78d6b466ff2695052">height</a> - _block_size.<a class="code" href="classarm__compute_1_1_size2_d.xhtml#a02afeaaf8574e7a78d6b466ff2695052">height</a>) / _block_stride.<a class="code" href="classarm__compute_1_1_size2_d.xhtml#a02afeaaf8574e7a78d6b466ff2695052">height</a>) + 1 };</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;}</div><div class="ttc" id="_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00466">Error.h:466</a></div></div>
<div class="ttc" id="classarm__compute_1_1_size2_d_xhtml_a02afeaaf8574e7a78d6b466ff2695052"><div class="ttname"><a href="classarm__compute_1_1_size2_d.xhtml#a02afeaaf8574e7a78d6b466ff2695052">arm_compute::Size2D::height</a></div><div class="ttdeci">size_t height</div><div class="ttdoc">Height of the image region or rectangle.</div><div class="ttdef"><b>Definition:</b> <a href="_size2_d_8h_source.xhtml#l00093">Size2D.h:93</a></div></div>
<div class="ttc" id="classarm__compute_1_1_size2_d_xhtml_a02bed8590a9ddf520e58a060059518ec"><div class="ttname"><a href="classarm__compute_1_1_size2_d.xhtml#a02bed8590a9ddf520e58a060059518ec">arm_compute::Size2D::width</a></div><div class="ttdeci">size_t width</div><div class="ttdoc">Width of the image region or rectangle.</div><div class="ttdef"><b>Definition:</b> <a href="_size2_d_8h_source.xhtml#l00092">Size2D.h:92</a></div></div>
<div class="ttc" id="classarm__compute_1_1_size2_d_xhtml"><div class="ttname"><a href="classarm__compute_1_1_size2_d.xhtml">arm_compute::Size2D</a></div><div class="ttdoc">Class for specifying the size of an image or rectangle.</div><div class="ttdef"><b>Definition:</b> <a href="_size2_d_8h_source.xhtml#l00034">Size2D.h:34</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00466">ARM_COMPUTE_ERROR_ON</a>, <a class="el" href="_size2_d_8h_source.xhtml#l00093">Size2D::height</a>, and <a class="el" href="_size2_d_8h_source.xhtml#l00092">Size2D::width</a>.</p>

<p class="reference">Referenced by <a class="el" href="reference_2_h_o_g_detector_8cpp_source.xhtml#l00048">arm_compute::test::validation::reference::hog_detector()</a>, <a class="el" href="_h_o_g_info_8cpp_source.xhtml#l00044">HOGInfo::init()</a>, <a class="el" href="src_2core_2_tensor_info_8cpp_source.xhtml#l00167">TensorInfo::init()</a>, and <a class="el" href="src_2core_2_tensor_info_8cpp_source.xhtml#l00208">TensorInfo::init_auto_padding()</a>.</p>

</div>
</div>
<a id="a79b522bd4aa0d5533649e60ef7f5f42f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a79b522bd4aa0d5533649e60ef7f5f42f">&#9670;&nbsp;</a></span>num_cells_per_block()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> num_cells_per_block </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Calculates the number of cells for each block. </p>
<dl class="section return"><dt>Returns</dt><dd>The <a class="el" href="classarm__compute_1_1_size2_d.xhtml" title="Class for specifying the size of an image or rectangle.">Size2D</a> data object which stores the number of cells along the x and y directions </dd></dl>

<p class="definition">Definition at line <a class="el" href="_h_o_g_info_8cpp_source.xhtml#l00067">67</a> of file <a class="el" href="_h_o_g_info_8cpp_source.xhtml">HOGInfo.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;{</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(_cell_size.<a class="code" href="classarm__compute_1_1_size2_d.xhtml#a02bed8590a9ddf520e58a060059518ec">width</a> == 0 || _cell_size.<a class="code" href="classarm__compute_1_1_size2_d.xhtml#a02afeaaf8574e7a78d6b466ff2695052">height</a> == 0);</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a>{ _block_size.<a class="code" href="classarm__compute_1_1_size2_d.xhtml#a02bed8590a9ddf520e58a060059518ec">width</a> / _cell_size.<a class="code" href="classarm__compute_1_1_size2_d.xhtml#a02bed8590a9ddf520e58a060059518ec">width</a>,</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;                   _block_size.<a class="code" href="classarm__compute_1_1_size2_d.xhtml#a02afeaaf8574e7a78d6b466ff2695052">height</a> / _cell_size.<a class="code" href="classarm__compute_1_1_size2_d.xhtml#a02afeaaf8574e7a78d6b466ff2695052">height</a> };</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;}</div><div class="ttc" id="_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00466">Error.h:466</a></div></div>
<div class="ttc" id="classarm__compute_1_1_size2_d_xhtml_a02afeaaf8574e7a78d6b466ff2695052"><div class="ttname"><a href="classarm__compute_1_1_size2_d.xhtml#a02afeaaf8574e7a78d6b466ff2695052">arm_compute::Size2D::height</a></div><div class="ttdeci">size_t height</div><div class="ttdoc">Height of the image region or rectangle.</div><div class="ttdef"><b>Definition:</b> <a href="_size2_d_8h_source.xhtml#l00093">Size2D.h:93</a></div></div>
<div class="ttc" id="classarm__compute_1_1_size2_d_xhtml_a02bed8590a9ddf520e58a060059518ec"><div class="ttname"><a href="classarm__compute_1_1_size2_d.xhtml#a02bed8590a9ddf520e58a060059518ec">arm_compute::Size2D::width</a></div><div class="ttdeci">size_t width</div><div class="ttdoc">Width of the image region or rectangle.</div><div class="ttdef"><b>Definition:</b> <a href="_size2_d_8h_source.xhtml#l00092">Size2D.h:92</a></div></div>
<div class="ttc" id="classarm__compute_1_1_size2_d_xhtml"><div class="ttname"><a href="classarm__compute_1_1_size2_d.xhtml">arm_compute::Size2D</a></div><div class="ttdoc">Class for specifying the size of an image or rectangle.</div><div class="ttdef"><b>Definition:</b> <a href="_size2_d_8h_source.xhtml#l00034">Size2D.h:34</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00466">ARM_COMPUTE_ERROR_ON</a>, <a class="el" href="_size2_d_8h_source.xhtml#l00093">Size2D::height</a>, and <a class="el" href="_size2_d_8h_source.xhtml#l00092">Size2D::width</a>.</p>

<p class="reference">Referenced by <a class="el" href="reference_2_h_o_g_descriptor_8cpp_source.xhtml#l00174">arm_compute::test::validation::reference::hog_block_normalization()</a>, <a class="el" href="reference_2_h_o_g_detector_8cpp_source.xhtml#l00048">arm_compute::test::validation::reference::hog_detector()</a>, <a class="el" href="_h_o_g_info_8cpp_source.xhtml#l00044">HOGInfo::init()</a>, <a class="el" href="src_2core_2_tensor_info_8cpp_source.xhtml#l00167">TensorInfo::init()</a>, and <a class="el" href="src_2core_2_tensor_info_8cpp_source.xhtml#l00208">TensorInfo::init_auto_padding()</a>.</p>

</div>
</div>
<a id="a3d18e8be8055827aa09839f6972ff271"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3d18e8be8055827aa09839f6972ff271">&#9670;&nbsp;</a></span>num_cells_per_block_stride()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> num_cells_per_block_stride </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Calculates the number of cells per block stride. </p>
<dl class="section return"><dt>Returns</dt><dd>The <a class="el" href="classarm__compute_1_1_size2_d.xhtml" title="Class for specifying the size of an image or rectangle.">Size2D</a> data object which stores the number of cells per block stride along the x and y directions </dd></dl>

<p class="definition">Definition at line <a class="el" href="_h_o_g_info_8cpp_source.xhtml#l00075">75</a> of file <a class="el" href="_h_o_g_info_8cpp_source.xhtml">HOGInfo.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;{</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(_cell_size.<a class="code" href="classarm__compute_1_1_size2_d.xhtml#a02bed8590a9ddf520e58a060059518ec">width</a> == 0 || _cell_size.<a class="code" href="classarm__compute_1_1_size2_d.xhtml#a02afeaaf8574e7a78d6b466ff2695052">height</a> == 0);</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a>{ _block_stride.<a class="code" href="classarm__compute_1_1_size2_d.xhtml#a02bed8590a9ddf520e58a060059518ec">width</a> / _cell_size.<a class="code" href="classarm__compute_1_1_size2_d.xhtml#a02bed8590a9ddf520e58a060059518ec">width</a>,</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;                   _block_stride.<a class="code" href="classarm__compute_1_1_size2_d.xhtml#a02afeaaf8574e7a78d6b466ff2695052">height</a> / _cell_size.<a class="code" href="classarm__compute_1_1_size2_d.xhtml#a02afeaaf8574e7a78d6b466ff2695052">height</a> };</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;}</div><div class="ttc" id="_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00466">Error.h:466</a></div></div>
<div class="ttc" id="classarm__compute_1_1_size2_d_xhtml_a02afeaaf8574e7a78d6b466ff2695052"><div class="ttname"><a href="classarm__compute_1_1_size2_d.xhtml#a02afeaaf8574e7a78d6b466ff2695052">arm_compute::Size2D::height</a></div><div class="ttdeci">size_t height</div><div class="ttdoc">Height of the image region or rectangle.</div><div class="ttdef"><b>Definition:</b> <a href="_size2_d_8h_source.xhtml#l00093">Size2D.h:93</a></div></div>
<div class="ttc" id="classarm__compute_1_1_size2_d_xhtml_a02bed8590a9ddf520e58a060059518ec"><div class="ttname"><a href="classarm__compute_1_1_size2_d.xhtml#a02bed8590a9ddf520e58a060059518ec">arm_compute::Size2D::width</a></div><div class="ttdeci">size_t width</div><div class="ttdoc">Width of the image region or rectangle.</div><div class="ttdef"><b>Definition:</b> <a href="_size2_d_8h_source.xhtml#l00092">Size2D.h:92</a></div></div>
<div class="ttc" id="classarm__compute_1_1_size2_d_xhtml"><div class="ttname"><a href="classarm__compute_1_1_size2_d.xhtml">arm_compute::Size2D</a></div><div class="ttdoc">Class for specifying the size of an image or rectangle.</div><div class="ttdef"><b>Definition:</b> <a href="_size2_d_8h_source.xhtml#l00034">Size2D.h:34</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00466">ARM_COMPUTE_ERROR_ON</a>, <a class="el" href="_size2_d_8h_source.xhtml#l00093">Size2D::height</a>, and <a class="el" href="_size2_d_8h_source.xhtml#l00092">Size2D::width</a>.</p>

<p class="reference">Referenced by <a class="el" href="reference_2_h_o_g_descriptor_8cpp_source.xhtml#l00174">arm_compute::test::validation::reference::hog_block_normalization()</a>.</p>

</div>
</div>
<a id="a64f60c469394d4f5f621546fc3108590"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a64f60c469394d4f5f621546fc3108590">&#9670;&nbsp;</a></span>operator=() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml">HOGInfo</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml">HOGInfo</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Allow instances of this class to be copied. </p>

</div>
</div>
<a id="a3f48ffe9fe37db10eb23de67101c1500"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3f48ffe9fe37db10eb23de67101c1500">&#9670;&nbsp;</a></span>operator=() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml">HOGInfo</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml">HOGInfo</a> &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Allow instances of this class to be moved. </p>

</div>
</div>
<a id="a039b8ebcdd462041d3988e6d2c145323"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a039b8ebcdd462041d3988e6d2c145323">&#9670;&nbsp;</a></span>phase_type()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearm__compute.xhtml#af00a42ecad444bbda75cde1b64bd7e72">PhaseType</a> phase_type </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>The type of <a class="el" href="namespacearm__compute.xhtml#af00a42ecad444bbda75cde1b64bd7e72">PhaseType</a>. </p>
<dl class="section return"><dt>Returns</dt><dd>The type of <a class="el" href="namespacearm__compute.xhtml#af00a42ecad444bbda75cde1b64bd7e72">PhaseType</a> </dd></dl>

<p class="definition">Definition at line <a class="el" href="_h_o_g_info_8cpp_source.xhtml#l00126">126</a> of file <a class="el" href="_h_o_g_info_8cpp_source.xhtml">HOGInfo.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;{</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    <span class="keywordflow">return</span> _phase_type;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;}</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_c_l_h_o_g_descriptor_kernel_8cpp_source.xhtml#l00048">CLHOGOrientationBinningKernel::configure()</a>, <a class="el" href="_n_e_h_o_g_descriptor_8cpp_source.xhtml#l00039">NEHOGDescriptor::configure()</a>, <a class="el" href="_c_l_h_o_g_descriptor_8cpp_source.xhtml#l00039">CLHOGDescriptor::configure()</a>, <a class="el" href="_n_e_h_o_g_multi_detection_8cpp_source.xhtml#l00054">NEHOGMultiDetection::configure()</a>, <a class="el" href="_c_l_h_o_g_multi_detection_8cpp_source.xhtml#l00056">CLHOGMultiDetection::configure()</a>, <a class="el" href="_validate_8cpp_source.xhtml#l00144">arm_compute::error_on_invalid_multi_hog()</a>, <a class="el" href="reference_2_h_o_g_descriptor_8cpp_source.xhtml#l00226">arm_compute::test::validation::reference::hog_descriptor()</a>, <a class="el" href="_h_o_g_info_8cpp_source.xhtml#l00037">HOGInfo::HOGInfo()</a>, <a class="el" href="_h_o_g_info_8cpp_source.xhtml#l00044">HOGInfo::init()</a>, and <a class="el" href="utils_2_type_printer_8h_source.xhtml#l01828">arm_compute::operator&lt;&lt;()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>arm_compute/core/<a class="el" href="_h_o_g_info_8h_source.xhtml">HOGInfo.h</a></li>
<li>src/core/<a class="el" href="_h_o_g_info_8cpp_source.xhtml">HOGInfo.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml">HOGInfo</a></li>
    <li class="footer">Generated on Thu Mar 5 2020 16:07:14 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
