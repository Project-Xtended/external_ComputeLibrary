<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/core/NEON/kernels/NEWinogradConvolutionLayerKernel.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.02.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_n_e_winograd_convolution_layer_kernel_8cpp_source.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">NEWinogradConvolutionLayerKernel.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_n_e_winograd_convolution_layer_kernel_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2017-2019 ARM Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_n_e_winograd_convolution_layer_kernel_8h.xhtml">arm_compute/core/NEON/kernels/NEWinogradConvolutionLayerKernel.h</a>&quot;</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_access_window_static_8h.xhtml">arm_compute/core/AccessWindowStatic.h</a>&quot;</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_error_8h.xhtml">arm_compute/core/Error.h</a>&quot;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2core_2_helpers_8h.xhtml">arm_compute/core/Helpers.h</a>&quot;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_i_access_window_8h.xhtml">arm_compute/core/IAccessWindow.h</a>&quot;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_i_tensor_8h.xhtml">arm_compute/core/ITensor.h</a>&quot;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &quot;arm_compute/core/NEON/kernels/convolution/common/utils.hpp&quot;</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_tensor_info_8h.xhtml">arm_compute/core/TensorInfo.h</a>&quot;</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_validate_8h.xhtml">arm_compute/core/Validate.h</a>&quot;</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_window_8h.xhtml">arm_compute/core/Window.h</a>&quot;</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_shape_calculator_8h.xhtml">arm_compute/core/utils/misc/ShapeCalculator.h</a>&quot;</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_toolchain_support_8h.xhtml">support/ToolchainSupport.h</a>&quot;</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;{</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="comment">//Batched Gemms</span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="keyword">namespace</span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;{</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="keyword">inline</span> <span class="keywordtype">bool</span> is_kernel_size_supported(Size2D size)</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;{</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <span class="keyword">const</span> std::array&lt;Size2D, 8&gt; supported_input_sizes = { { Size2D(1, 3), Size2D(3, 1), Size2D(5, 5), Size2D(3, 3), Size2D(1, 5), Size2D(5, 1), Size2D(7, 1), Size2D(1, 7) } };</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <span class="keywordflow">return</span> std::end(supported_input_sizes) != std::find(std::begin(supported_input_sizes), std::end(supported_input_sizes), size);</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;}</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;Status validate_arguments_winograd_weight_trans(<span class="keyword">const</span> ITensorInfo *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, <span class="keyword">const</span> ITensorInfo *output, <span class="keyword">const</span> WinogradInfo &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a809d18ccde99d938a68cb90ef53aa749">winograd_info</a>)</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;{</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <a class="code" href="_validate_8h.xhtml#aff911654521523937ff24372a870b89f">ARM_COMPUTE_RETURN_ERROR_ON_NULLPTR</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>);</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <a class="code" href="_validate_8h.xhtml#aff911654521523937ff24372a870b89f">ARM_COMPUTE_RETURN_ERROR_ON_NULLPTR</a>(output);</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <a class="code" href="_validate_8h.xhtml#ae7eed178dac535c6e727061b1f5bc6eb">ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, 1, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>);</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">size_t</span> idx_width    = <a class="code" href="namespacearm__compute.xhtml#a46e938020a3ac8c926d0590b7fe957db">get_data_layout_dimension_index</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;data_layout(), <a class="code" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02a49da85b69bc6285eeee286ca49fa7195">DataLayoutDimension::WIDTH</a>);</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">size_t</span> idx_height   = <a class="code" href="namespacearm__compute.xhtml#a46e938020a3ac8c926d0590b7fe957db">get_data_layout_dimension_index</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;data_layout(), <a class="code" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02ad770ba3ce18fa409965dfdf5e7c348e6">DataLayoutDimension::HEIGHT</a>);</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span>   input_width  = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;dimension(idx_width);</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span>   input_height = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;dimension(idx_height);</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    <a class="code" href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>(!is_kernel_size_supported(Size2D(input_width, input_height)), <span class="stringliteral">&quot;Only 1x3, 3x1, 1x5, 5x1, 7x1, 1x7, 3x3 and 5x5 kernels are supported&quot;</span>);</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;num_dimensions() &gt; 4);</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <span class="keyword">const</span> Size2D &amp;output_tile = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a809d18ccde99d938a68cb90ef53aa749">winograd_info</a>.output_tile_size;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <span class="keyword">const</span> std::array&lt;Size2D, 8&gt; supported_tile_sizes = { { Size2D(2U, 2U), Size2D(4U, 4U), Size2D(1U, 6U), Size2D(6U, 1U), Size2D(4, 1), Size2D(1, 4), Size2D(2, 1), Size2D(1, 2) } };</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(std::end(supported_tile_sizes) == std::find(std::begin(supported_tile_sizes), std::end(supported_tile_sizes), output_tile));</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <span class="comment">// Checks performed when output is configured</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <span class="keywordflow">if</span>(output-&gt;total_size() != 0)</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    {</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;        <span class="keyword">const</span> TensorInfo tensor_info_output = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;clone()-&gt;set_tensor_shape(<a class="code" href="namespacearm__compute_1_1misc_1_1shape__calculator.xhtml#a25e3751f07d4b2771a05d8d01a7f7620">arm_compute::misc::shape_calculator::compute_winograd_filter_transform_shape</a>(*<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a809d18ccde99d938a68cb90ef53aa749">winograd_info</a>));</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        <a class="code" href="_validate_8h.xhtml#a27e4638546c88b8916f967e6e54480a9">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_SHAPES</a>(output, &amp;tensor_info_output);</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        <a class="code" href="_validate_8h.xhtml#a8f3ff7da485ff7e75dab07baadf5b4bd">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, output);</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    }</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <span class="keywordflow">return</span> Status{};</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;}</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;std::pair&lt;Status, Window&gt; validate_and_configure_window_winograd_weight_trans(ITensorInfo *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, ITensorInfo *output, <span class="keyword">const</span> WinogradInfo &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a809d18ccde99d938a68cb90ef53aa749">winograd_info</a>)</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;{</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <span class="comment">// Output tensor auto inizialitation if not yet initialized</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a47be6fa38308d0003c25b60b7dbc45ce">auto_init_if_empty</a>(*output, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;clone()-&gt;set_tensor_shape(<a class="code" href="namespacearm__compute_1_1misc_1_1shape__calculator.xhtml#a25e3751f07d4b2771a05d8d01a7f7620">arm_compute::misc::shape_calculator::compute_winograd_filter_transform_shape</a>(*<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a809d18ccde99d938a68cb90ef53aa749">winograd_info</a>)));</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <span class="keyword">const</span> Window win = <a class="code" href="namespacearm__compute.xhtml#ab7980fa5ee693e3282a76da047a1c3b5">calculate_max_window</a>(*<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, Steps(), <span class="keyword">true</span> <span class="comment">/* skip border*/</span>);</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <span class="keywordflow">return</span> std::make_pair(Status{}, win);</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;}</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;Status validate_arguments_winograd_input_trans(<span class="keyword">const</span> ITensorInfo *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, <span class="keyword">const</span> ITensorInfo *output, <span class="keyword">const</span> WinogradInfo &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a809d18ccde99d938a68cb90ef53aa749">winograd_info</a>)</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;{</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    <span class="keyword">const</span> Size2D        &amp;kernel_dims = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a809d18ccde99d938a68cb90ef53aa749">winograd_info</a>.kernel_size;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <span class="keyword">const</span> PadStrideInfo &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>   = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a809d18ccde99d938a68cb90ef53aa749">winograd_info</a>.convolution_info;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <a class="code" href="_validate_8h.xhtml#aff911654521523937ff24372a870b89f">ARM_COMPUTE_RETURN_ERROR_ON_NULLPTR</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>);</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <a class="code" href="_validate_8h.xhtml#aff911654521523937ff24372a870b89f">ARM_COMPUTE_RETURN_ERROR_ON_NULLPTR</a>(output);</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <a class="code" href="_validate_8h.xhtml#ae7eed178dac535c6e727061b1f5bc6eb">ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, 1, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>);</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <a class="code" href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>.stride().first != 1 || <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>.stride().second != 1, <span class="stringliteral">&quot;Winograd input transform only supports unit strides&quot;</span>);</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <a class="code" href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>(!is_kernel_size_supported(Size2D(kernel_dims.width, kernel_dims.height)),</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;                                    <span class="stringliteral">&quot;Only 1x3, 3x1, 3x3 and 5x5 kernels are supported&quot;</span>);</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    <span class="comment">// Validate configured output</span></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    <span class="keywordflow">if</span>(output-&gt;total_size() != 0)</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    {</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        <span class="keyword">const</span> TensorShape <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ab1806bf0c5a41f674fb9d2dc6af644f5">output_shape</a> = <a class="code" href="namespacearm__compute_1_1misc_1_1shape__calculator.xhtml#a04249f91ec2964d21a91bb7038821000">misc::shape_calculator::compute_winograd_input_transform_shape</a>(*<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a809d18ccde99d938a68cb90ef53aa749">winograd_info</a>);</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        <a class="code" href="_validate_8h.xhtml#a1da797d2762c1cdbb73bfc83136c3a38">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DIMENSIONS</a>(output-&gt;tensor_shape(), <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ab1806bf0c5a41f674fb9d2dc6af644f5">output_shape</a>);</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        <a class="code" href="_validate_8h.xhtml#a8f3ff7da485ff7e75dab07baadf5b4bd">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, output);</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    }</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    <span class="keywordflow">return</span> Status{};</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;}</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;std::pair&lt;Status, Window&gt; validate_and_configure_window_winograd_input_trans(ITensorInfo *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, ITensorInfo *output, <span class="keyword">const</span> WinogradInfo &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a809d18ccde99d938a68cb90ef53aa749">winograd_info</a>)</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;{</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    <span class="keyword">const</span> TensorShape <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ab1806bf0c5a41f674fb9d2dc6af644f5">output_shape</a> = <a class="code" href="namespacearm__compute_1_1misc_1_1shape__calculator.xhtml#a04249f91ec2964d21a91bb7038821000">misc::shape_calculator::compute_winograd_input_transform_shape</a>(*<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a809d18ccde99d938a68cb90ef53aa749">winograd_info</a>);</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    <span class="comment">// Output auto inizialitation if not yet initialized</span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a47be6fa38308d0003c25b60b7dbc45ce">auto_init_if_empty</a>(*output, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;clone()-&gt;set_tensor_shape(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ab1806bf0c5a41f674fb9d2dc6af644f5">output_shape</a>));</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    <span class="keywordflow">return</span> std::make_pair(Status{}, <a class="code" href="namespacearm__compute.xhtml#ab7980fa5ee693e3282a76da047a1c3b5">calculate_max_window</a>(*<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, Steps(), <span class="keyword">true</span>));</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;}</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;Status validate_arguments_winograd_output_trans(<span class="keyword">const</span> ITensorInfo *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, <span class="keyword">const</span> ITensorInfo *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3a77be8aebd8e00522b32061d46ccdbd">bias</a>, <span class="keyword">const</span> ITensorInfo *output, <span class="keyword">const</span> WinogradInfo &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a809d18ccde99d938a68cb90ef53aa749">winograd_info</a>)</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;{</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    <span class="keyword">const</span> PadStrideInfo &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>   = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a809d18ccde99d938a68cb90ef53aa749">winograd_info</a>.convolution_info;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <span class="keyword">const</span> Size2D         kernel_dims = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a809d18ccde99d938a68cb90ef53aa749">winograd_info</a>.kernel_size;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    <span class="comment">// Number of tiles along the X and Y direction</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> num_tiles_x = std::ceil((<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a809d18ccde99d938a68cb90ef53aa749">winograd_info</a>.input_dimensions.x() - (kernel_dims.width - 1) + <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>.pad_left() + <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>.pad_right()) / static_cast&lt;float&gt;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;                                               (<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a809d18ccde99d938a68cb90ef53aa749">winograd_info</a>.output_tile_size.width));</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> num_tiles_y = std::ceil((<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a809d18ccde99d938a68cb90ef53aa749">winograd_info</a>.input_dimensions.y() - (kernel_dims.height - 1) + <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>.pad_top() + <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>.pad_bottom()) / static_cast&lt;float&gt;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;                                               (<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a809d18ccde99d938a68cb90ef53aa749">winograd_info</a>.output_tile_size.height));</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    <span class="keyword">const</span> Size2D       num_tiles   = Size2D(num_tiles_x, num_tiles_y);</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    <a class="code" href="_validate_8h.xhtml#aff911654521523937ff24372a870b89f">ARM_COMPUTE_RETURN_ERROR_ON_NULLPTR</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>);</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    <a class="code" href="_validate_8h.xhtml#aff911654521523937ff24372a870b89f">ARM_COMPUTE_RETURN_ERROR_ON_NULLPTR</a>(output);</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    <a class="code" href="_validate_8h.xhtml#ae7eed178dac535c6e727061b1f5bc6eb">ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, 1, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>);</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;dimension(1) != num_tiles.area());</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    <a class="code" href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>(!is_kernel_size_supported(Size2D(kernel_dims.width, kernel_dims.height)),</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;                                    <span class="stringliteral">&quot;Only 1x3, 3x1, 3x3 and 5x5 kernels are supported&quot;</span>);</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    <span class="keyword">const</span> std::array&lt;unsigned int, 3&gt; supported_gemm_sizes = { { 8<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, 16<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, 36<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a> } };</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(std::end(supported_gemm_sizes) == std::find(std::begin(supported_gemm_sizes), std::end(supported_gemm_sizes), <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;dimension(2)));</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(kernel_dims);</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    <span class="keywordflow">if</span>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3a77be8aebd8e00522b32061d46ccdbd">bias</a> != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    {</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;        <a class="code" href="_validate_8h.xhtml#a8f3ff7da485ff7e75dab07baadf5b4bd">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3a77be8aebd8e00522b32061d46ccdbd">bias</a>);</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;        <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;dimension(0) != <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3a77be8aebd8e00522b32061d46ccdbd">bias</a>-&gt;dimension(0));</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;        <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3a77be8aebd8e00522b32061d46ccdbd">bias</a>-&gt;num_dimensions() != size_t(1));</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    }</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    <span class="comment">// Checks performed when output is configured</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    <span class="keywordflow">if</span>(output-&gt;total_size() != 0)</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    {</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;        <span class="keyword">const</span> TensorInfo tensor_info_output = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;clone()-&gt;set_tensor_shape(<a class="code" href="namespacearm__compute_1_1misc_1_1shape__calculator.xhtml#a5699c316d27b41f0790827791e88ae26">arm_compute::misc::shape_calculator::compute_winograd_output_transform_shape</a>(*<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a809d18ccde99d938a68cb90ef53aa749">winograd_info</a>));</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;        <a class="code" href="_validate_8h.xhtml#a27e4638546c88b8916f967e6e54480a9">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_SHAPES</a>(output, &amp;tensor_info_output);</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;        <a class="code" href="_validate_8h.xhtml#a8f3ff7da485ff7e75dab07baadf5b4bd">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, output);</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    }</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    <span class="keywordflow">return</span> Status{};</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;}</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;std::pair&lt;Status, Window&gt; validate_and_configure_window_winograd_output_trans(ITensorInfo *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, ITensorInfo *output, <span class="keyword">const</span> WinogradInfo &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a809d18ccde99d938a68cb90ef53aa749">winograd_info</a>)</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;{</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    <span class="comment">// Output tensor auto initialization if not yet initialized</span></div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a47be6fa38308d0003c25b60b7dbc45ce">auto_init_if_empty</a>(*output, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;clone()-&gt;set_tensor_shape(<a class="code" href="namespacearm__compute_1_1misc_1_1shape__calculator.xhtml#a5699c316d27b41f0790827791e88ae26">arm_compute::misc::shape_calculator::compute_winograd_output_transform_shape</a>(*<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a809d18ccde99d938a68cb90ef53aa749">winograd_info</a>)));</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    <span class="keywordflow">return</span> std::make_pair(Status{}, <a class="code" href="namespacearm__compute.xhtml#ab7980fa5ee693e3282a76da047a1c3b5">calculate_max_window</a>(*<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, Steps(), <span class="keyword">true</span>));</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;}</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;} <span class="comment">// namespace</span></div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00166"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_i_n_e_winograd_layer_transform_weights_kernel.xhtml#a8b4165c2e7c5c983b930a0f5f4df6acf">  166</a></span>&#160;<a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> <a class="code" href="classarm__compute_1_1_i_n_e_winograd_layer_transform_weights_kernel.xhtml#a8b4165c2e7c5c983b930a0f5f4df6acf">INEWinogradLayerTransformWeightsKernel&lt;T&gt;::validate</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a64a08a9fec5aeee8650e7182b6d171d0">weights</a>)</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;{</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    <a class="code" href="_validate_8h.xhtml#ae7eed178dac535c6e727061b1f5bc6eb">ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, 1, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>);</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    <a class="code" href="_validate_8h.xhtml#a8f3ff7da485ff7e75dab07baadf5b4bd">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a64a08a9fec5aeee8650e7182b6d171d0">weights</a>);</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    <span class="keyword">const</span> <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">DataLayout</a>   <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">data_layout</a> = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;data_layout();</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> width_idx   = <a class="code" href="namespacearm__compute.xhtml#a46e938020a3ac8c926d0590b7fe957db">get_data_layout_dimension_index</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">data_layout</a>, <a class="code" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02a49da85b69bc6285eeee286ca49fa7195">DataLayoutDimension::WIDTH</a>);</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> height_idx  = <a class="code" href="namespacearm__compute.xhtml#a46e938020a3ac8c926d0590b7fe957db">get_data_layout_dimension_index</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">data_layout</a>, <a class="code" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02ad770ba3ce18fa409965dfdf5e7c348e6">DataLayoutDimension::HEIGHT</a>);</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    <a class="code" href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>(!is_kernel_size_supported(<a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a64a08a9fec5aeee8650e7182b6d171d0">weights</a>-&gt;dimension(width_idx), <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a64a08a9fec5aeee8650e7182b6d171d0">weights</a>-&gt;dimension(height_idx))),</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;                                    <span class="stringliteral">&quot;Only 1x3, 3x1, 3x3 and 5x5 kernels are supported&quot;</span>);</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a64a08a9fec5aeee8650e7182b6d171d0">weights</a>-&gt;num_dimensions() &gt; 4);</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_status.xhtml">Status</a>{};</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;}</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="keyword">template</span> <span class="keyword">class </span><a class="code" href="classarm__compute_1_1_i_n_e_winograd_layer_transform_weights_kernel.xhtml">INEWinogradLayerTransformWeightsKernel&lt;float&gt;</a>;</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keywordtype">int</span> OutputTileRows, <span class="keywordtype">int</span> OutputTileCols, <span class="keywordtype">int</span> KernelRows, <span class="keywordtype">int</span> KernelCols&gt;</div><div class="line"><a name="l00182"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_winograd_layer_transform_weights_kernel.xhtml#a87a7d4fe23da86c3682b79300d23f248">  182</a></span>&#160;<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classarm__compute_1_1_n_e_winograd_layer_transform_weights_kernel.xhtml#a87a7d4fe23da86c3682b79300d23f248">NEWinogradLayerTransformWeightsKernel&lt;T, OutputTileRows, OutputTileCols, KernelRows, KernelCols&gt;::get_weight_storage_size</a>(<span class="keywordtype">int</span> num_output_channels, <span class="keywordtype">int</span> num_input_channels)<span class="keyword"> const</span></div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    <span class="keyword">const</span> KernelShape <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">shape</a>(num_output_channels, KernelRows, KernelCols, num_input_channels);</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    <span class="keywordflow">return</span> static_cast&lt;unsigned int&gt;(</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;               <span class="comment">// WinogradConv returns the size in bytes, we divide by `sizeof(T)` to express that in units of T</span></div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;               WinogradConv::get_kernel_storage_size(num_input_channels, num_output_channels) / <span class="keyword">sizeof</span>(T));</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;}</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keywordtype">int</span> OutputTileRows, <span class="keywordtype">int</span> OutputTileCols, <span class="keywordtype">int</span> KernelRows, <span class="keywordtype">int</span> KernelCols&gt;</div><div class="line"><a name="l00191"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_winograd_layer_transform_weights_kernel.xhtml#ad25daf413f7dd45f084ae22a25b8bbe5">  191</a></span>&#160;<a class="code" href="classarm__compute_1_1_n_e_winograd_layer_transform_weights_kernel.xhtml#ad25daf413f7dd45f084ae22a25b8bbe5">NEWinogradLayerTransformWeightsKernel&lt;T, OutputTileRows, OutputTileCols, KernelRows, KernelCols&gt;::NEWinogradLayerTransformWeightsKernel</a>()</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    : _transform(nullptr), _weights_hwio(nullptr), _output(nullptr), _matrix_stride(0), _num_output_channels(0), _num_input_channels(0)</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;{</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;}</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keywordtype">int</span> OutputTileRows, <span class="keywordtype">int</span> OutputTileCols, <span class="keywordtype">int</span> KernelRows, <span class="keywordtype">int</span> KernelCols&gt;</div><div class="line"><a name="l00197"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_winograd_layer_transform_weights_kernel.xhtml#a23e55164ea7e9df47f6eeb0feaaf876f">  197</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="classarm__compute_1_1_n_e_winograd_layer_transform_weights_kernel.xhtml#a23e55164ea7e9df47f6eeb0feaaf876f">NEWinogradLayerTransformWeightsKernel&lt;T, OutputTileRows, OutputTileCols, KernelRows, KernelCols&gt;::get_matrix_stride</a>(<span class="keywordtype">int</span> num_output_channels, <span class="keywordtype">int</span> num_input_channels)<span class="keyword"> const</span></div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    <span class="keywordflow">return</span> WinogradConv::get_kernel_matrix_stride(num_input_channels, num_output_channels);</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;}</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;<span class="preprocessor">#ifndef DOXYGEN_SKIP_THIS</span></div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keywordtype">int</span> OutputTileRows, <span class="keywordtype">int</span> OutputTileCols, <span class="keywordtype">int</span> KernelRows, <span class="keywordtype">int</span> KernelCols&gt;</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_i_n_e_winograd_layer_transform_weights_kernel.xhtml#a779dc9599bd3a0aa390ba9d3a1d8d6d1">NEWinogradLayerTransformWeightsKernel&lt;T, OutputTileRows, OutputTileCols, KernelRows, KernelCols&gt;::configure</a>(</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *weights_hwio,</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a>       *output,</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span>      matrix_stride,       <span class="comment">/** Stride across matrices in the output. */</span></div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span>      num_output_channels, <span class="comment">/** Number of filters. */</span></div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span>      num_input_channels)  <span class="comment">/** Number of channels in each filter. */</span></div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;{</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    _weights_hwio        = weights_hwio;</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;    _output              = output;</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;    _matrix_stride       = matrix_stride;</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;    _num_output_channels = num_output_channels;</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    _num_input_channels  = num_input_channels;</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    _transform           = arm_compute::support::cpp14::make_unique&lt;WeightsTransform&gt;(num_output_channels, num_input_channels);</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;    <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> win;</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;    <span class="keyword">auto</span>   win_last = _transform-&gt;get_window();</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;    win.<a class="code" href="classarm__compute_1_1_window.xhtml#acd3d2bba51cb84d34dd7656ad2375a6e">set</a>(<a class="code" href="classarm__compute_1_1_window.xhtml#aa96e81276ee4f87ab386cd05a5539a7d">Window::DimX</a>, <a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml">Window::Dimension</a>(0, win_last, 1));</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;    INEKernel::configure(win);</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;}</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* DOXYGEN_SKIP_THIS */</span><span class="preprocessor"></span></div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keywordtype">int</span> OutputTileRows, <span class="keywordtype">int</span> OutputTileCols, <span class="keywordtype">int</span> KernelRows, <span class="keywordtype">int</span> KernelCols&gt;</div><div class="line"><a name="l00226"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_winograd_layer_transform_weights_kernel.xhtml#a112b35dd205c62ea6ed1447ef226da82">  226</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_n_e_winograd_layer_transform_weights_kernel.xhtml#a112b35dd205c62ea6ed1447ef226da82">NEWinogradLayerTransformWeightsKernel&lt;T, OutputTileRows, OutputTileCols, KernelRows, KernelCols&gt;::run</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;window, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1_thread_info.xhtml">ThreadInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4f4125dba5283887b34f889b1c615c0c">info</a>)</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;{</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4f4125dba5283887b34f889b1c615c0c">info</a>);</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;    <a class="code" href="_validate_8h.xhtml#a1b35b0d258183cf9ef36adf684d0b88c">ARM_COMPUTE_ERROR_ON_UNCONFIGURED_KERNEL</a>(<span class="keyword">this</span>);</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">size_t</span> fst = window.<a class="code" href="classarm__compute_1_1_window.xhtml#a273fd2ecdd45169b2f702f01a7e5e382">x</a>().<a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#ab24e31d1a4830bf79564ee902ec6c060">start</a>();</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">size_t</span> lst = window.<a class="code" href="classarm__compute_1_1_window.xhtml#a273fd2ecdd45169b2f702f01a7e5e382">x</a>().<a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#a0f590bfcf19110f44efc502e7b5c1d9e">end</a>();</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;    _transform-&gt;set_weight_tensor(_weights_hwio-&gt;buffer());</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> matrix_row_stride = <a class="code" href="utils_8hpp.xhtml#a8f6fbf8b243a10af40ce8d47a1013384">roundup</a>(_num_output_channels, WinogradConv::N_BLOCK);</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;    _transform-&gt;set_output_matrices(_output-&gt;<a class="code" href="classarm__compute_1_1_tensor.xhtml#a24954cca5108a24706441fd99a7fb04c">buffer</a>(), _matrix_stride, matrix_row_stride);</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;    _transform-&gt;set_working_space(_output-&gt;<a class="code" href="classarm__compute_1_1_tensor.xhtml#a24954cca5108a24706441fd99a7fb04c">buffer</a>());</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;    _transform-&gt;run(fst, lst);</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;}</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keywordtype">int</span> OutputTileRows, <span class="keywordtype">int</span> OutputTileCols, <span class="keywordtype">int</span> KernelRows, <span class="keywordtype">int</span> KernelCols&gt;</div><div class="line"><a name="l00241"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_winograd_layer_transform_weights_kernel.xhtml#a4370ae5fda7bd455a171fc8ed4d3f283">  241</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1_n_e_winograd_layer_transform_weights_kernel.xhtml#a4370ae5fda7bd455a171fc8ed4d3f283">NEWinogradLayerTransformWeightsKernel&lt;T, OutputTileRows, OutputTileCols, KernelRows, KernelCols&gt;::is_parallelisable</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;}</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keywordtype">int</span> OutputTileRows, <span class="keywordtype">int</span> OutputTileCols, <span class="keywordtype">int</span> KernelRows, <span class="keywordtype">int</span> KernelCols&gt;</div><div class="line"><a name="l00247"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_winograd_layer_transform_weights_kernel.xhtml#a6d3d1d4d66f89908455bc5f05e259ce9">  247</a></span>&#160;<a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> <a class="code" href="classarm__compute_1_1_n_e_winograd_layer_transform_weights_kernel.xhtml#a6d3d1d4d66f89908455bc5f05e259ce9">NEWinogradLayerTransformWeightsKernel&lt;T, OutputTileRows, OutputTileCols, KernelRows, KernelCols&gt;::validate</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *output,</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;                                                                                                                  <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1_winograd_info.xhtml">WinogradInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a809d18ccde99d938a68cb90ef53aa749">winograd_info</a>)</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;{</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(validate_arguments_winograd_weight_trans(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, output, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a809d18ccde99d938a68cb90ef53aa749">winograd_info</a>));</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(validate_and_configure_window_winograd_weight_trans(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;clone().get(), output-&gt;<a class="code" href="classarm__compute_1_1misc_1_1_i_cloneable.xhtml#a4d10e5012a872e7f78f2b539b673049d">clone</a>().get(), <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a809d18ccde99d938a68cb90ef53aa749">winograd_info</a>).first);</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_status.xhtml">Status</a>{};</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;}</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;<span class="keyword">template</span> <span class="keyword">class </span><a class="code" href="classarm__compute_1_1_n_e_winograd_layer_transform_weights_kernel.xhtml">NEWinogradLayerTransformWeightsKernel&lt;float, 2, 2, 3, 3&gt;</a>;</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;<span class="keyword">template</span> <span class="keyword">class </span><a class="code" href="classarm__compute_1_1_n_e_winograd_layer_transform_weights_kernel.xhtml">NEWinogradLayerTransformWeightsKernel&lt;float, 4, 4, 3, 3&gt;</a>;</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;<span class="keyword">template</span> <span class="keyword">class </span><a class="code" href="classarm__compute_1_1_n_e_winograd_layer_transform_weights_kernel.xhtml">NEWinogradLayerTransformWeightsKernel&lt;float, 2, 2, 5, 5&gt;</a>;</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;<span class="keyword">template</span> <span class="keyword">class </span><a class="code" href="classarm__compute_1_1_n_e_winograd_layer_transform_weights_kernel.xhtml">NEWinogradLayerTransformWeightsKernel&lt;float, 1, 6, 1, 3&gt;</a>;</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;<span class="keyword">template</span> <span class="keyword">class </span><a class="code" href="classarm__compute_1_1_n_e_winograd_layer_transform_weights_kernel.xhtml">NEWinogradLayerTransformWeightsKernel&lt;float, 6, 1, 3, 1&gt;</a>;</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;<span class="keyword">template</span> <span class="keyword">class </span><a class="code" href="classarm__compute_1_1_n_e_winograd_layer_transform_weights_kernel.xhtml">NEWinogradLayerTransformWeightsKernel&lt;float, 1, 4, 1, 5&gt;</a>;</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;<span class="keyword">template</span> <span class="keyword">class </span><a class="code" href="classarm__compute_1_1_n_e_winograd_layer_transform_weights_kernel.xhtml">NEWinogradLayerTransformWeightsKernel&lt;float, 4, 1, 5, 1&gt;</a>;</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;<span class="keyword">template</span> <span class="keyword">class </span><a class="code" href="classarm__compute_1_1_n_e_winograd_layer_transform_weights_kernel.xhtml">NEWinogradLayerTransformWeightsKernel&lt;float, 1, 2, 1, 7&gt;</a>;</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;<span class="keyword">template</span> <span class="keyword">class </span><a class="code" href="classarm__compute_1_1_n_e_winograd_layer_transform_weights_kernel.xhtml">NEWinogradLayerTransformWeightsKernel&lt;float, 2, 1, 7, 1&gt;</a>;</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;<span class="comment">// Input transform</span></div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keywordtype">int</span> OutputTileRows, <span class="keywordtype">int</span> OutputTileCols, <span class="keywordtype">int</span> KernelRows, <span class="keywordtype">int</span> KernelCols&gt;</div><div class="line"><a name="l00268"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel.xhtml#a44ffbab5d0fe4ae10cbf84ddae1a90fe">  268</a></span>&#160;<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel.xhtml#a44ffbab5d0fe4ae10cbf84ddae1a90fe">NEWinogradLayerTransformInputKernel&lt;T, OutputTileRows, OutputTileCols, KernelRows, KernelCols&gt;::get_input_storage_size</a>(</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;    <span class="keywordtype">int</span>  num_batches,  <span class="comment">/* Number of batches in the input tensor. */</span></div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;    <span class="keywordtype">int</span>  num_channels, <span class="comment">/* Number of feature maps in the input tensor. */</span></div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;    <span class="keywordtype">int</span>  num_rows,     <span class="comment">/* Number of rows in each feature map. */</span></div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;    <span class="keywordtype">int</span>  num_cols,     <span class="comment">/* Number of columns in each feature map. */</span></div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;    <span class="keywordtype">bool</span> same_padding  <span class="comment">/* Use &quot;SAME&quot; padding, otherwise use &quot;VALID&quot;. */</span></div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;)<span class="keyword"> const</span></div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;    <span class="comment">// Construct shapes for the input and kernel tensors.</span></div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;    <span class="keyword">const</span> Tensor4DShape <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae59e3cf27216b7361c71cbd2830ec4c2">input_shape</a>(num_batches, num_rows, num_cols, num_channels);</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;    <span class="keyword">const</span> KernelShape   kern_shape(1, KernelRows, KernelCols, num_channels);</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;    <span class="comment">// Return the size, converted into units of TIn</span></div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;    <span class="keywordflow">return</span> static_cast&lt;unsigned int&gt;(WinogradConv::get_input_storage_size(num_batches, num_rows, num_cols, num_channels, same_padding) / <span class="keyword">sizeof</span>(T));</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;}</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keywordtype">int</span> OutputTileRows, <span class="keywordtype">int</span> OutputTileCols, <span class="keywordtype">int</span> KernelRows, <span class="keywordtype">int</span> KernelCols&gt;</div><div class="line"><a name="l00284"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel.xhtml#a8ccc8c221f26d7e2ed0b5cfbe4dc1b83">  284</a></span>&#160;<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel.xhtml#a8ccc8c221f26d7e2ed0b5cfbe4dc1b83">NEWinogradLayerTransformInputKernel&lt;T, OutputTileRows, OutputTileCols, KernelRows, KernelCols&gt;::get_working_space_size</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> num_threads)<span class="keyword"> const</span></div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;    <span class="keywordflow">return</span> _transform-&gt;get_working_space_size(num_threads) / <span class="keyword">sizeof</span>(T);</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;}</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keywordtype">int</span> OutputTileRows, <span class="keywordtype">int</span> OutputTileCols, <span class="keywordtype">int</span> KernelRows, <span class="keywordtype">int</span> KernelCols&gt;</div><div class="line"><a name="l00290"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel.xhtml#afe18d39e03270a72ce408e8b9fd6d013">  290</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel.xhtml#afe18d39e03270a72ce408e8b9fd6d013">NEWinogradLayerTransformInputKernel&lt;T, OutputTileRows, OutputTileCols, KernelRows, KernelCols&gt;::get_matrix_stride</a>(</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;    <span class="keywordtype">int</span>  num_batches,  <span class="comment">/* Number of batches in the input tensor. */</span></div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;    <span class="keywordtype">int</span>  num_channels, <span class="comment">/* Number of feature maps in the input tensor. */</span></div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;    <span class="keywordtype">int</span>  num_rows,     <span class="comment">/* Number of rows in each feature map. */</span></div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;    <span class="keywordtype">int</span>  num_cols,     <span class="comment">/* Number of columns in each feature map. */</span></div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;    <span class="keywordtype">bool</span> same_padding <span class="comment">/* Use &quot;SAME&quot; padding, otherwise use &quot;VALID&quot;. */</span>)<span class="keyword"> const</span></div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;    <span class="keywordflow">return</span> WinogradConv::get_input_matrix_stride(num_batches, num_rows, num_cols, num_channels, same_padding);</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;}</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keywordtype">int</span> OutputTileRows, <span class="keywordtype">int</span> OutputTileCols, <span class="keywordtype">int</span> KernelRows, <span class="keywordtype">int</span> KernelCols&gt;</div><div class="line"><a name="l00301"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel.xhtml#a975ca7003dae590387fdf8546e1b08fd">  301</a></span>&#160;<a class="code" href="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel.xhtml#a975ca7003dae590387fdf8546e1b08fd">NEWinogradLayerTransformInputKernel&lt;T, OutputTileRows, OutputTileCols, KernelRows, KernelCols&gt;::NEWinogradLayerTransformInputKernel</a>()</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;    : _transform(nullptr), _input_nhwc(nullptr), _num_batches(0), _num_rows(0), _num_cols(0), _num_channels(0), _padding(), _output(nullptr), _matrix_stride(0), _padding_top(), _padding_left(),</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;      _padding_right(), _padding_bottom(), _workspace(nullptr)</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;{</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;}</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keywordtype">int</span> OutputTileRows, <span class="keywordtype">int</span> OutputTileCols, <span class="keywordtype">int</span> KernelRows, <span class="keywordtype">int</span> KernelCols&gt;</div><div class="line"><a name="l00308"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel.xhtml#a2de2ab5ada4b5a360770b670af19b48d">  308</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel.xhtml#a2de2ab5ada4b5a360770b670af19b48d">NEWinogradLayerTransformInputKernel&lt;T, OutputTileRows, OutputTileCols, KernelRows, KernelCols&gt;::configure</a>(</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a>    *input_nhwc,</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span>         num_batches,   <span class="comment">/* Number of batches in input tensor. */</span></div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span>         num_rows,      <span class="comment">/* Number of rows in input tensor. */</span></div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span>         num_cols,      <span class="comment">/* Number of columns in input tensor. */</span></div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span>         num_channels,  <span class="comment">/* Number of channels in input tensor. */</span></div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;    <span class="keyword">const</span> PaddingType <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a735a025fce26c1ef147b54426df18181">padding</a>,       <span class="comment">/* Padding type. */</span></div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;    <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a>          *output,        <span class="comment">/* Base of output matrices. */</span></div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span>         matrix_stride, <span class="comment">/* Stride between output matrices. */</span></div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;    <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a>          *workspace)</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;{</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;    _input_nhwc    = input_nhwc;</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;    _num_batches   = num_batches;</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;    _num_rows      = num_rows;</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;    _num_cols      = num_cols;</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;    _num_channels  = num_channels;</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;    _padding       = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a735a025fce26c1ef147b54426df18181">padding</a>;</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;    _output        = output;</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;    _matrix_stride = matrix_stride;</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;    _workspace     = workspace;</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;    _padding_top    = (<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a735a025fce26c1ef147b54426df18181">padding</a> == PADDING_SAME) ? (KernelRows - 1) / 2 : 0;</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;    _padding_left   = (<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a735a025fce26c1ef147b54426df18181">padding</a> == PADDING_SAME) ? (KernelCols - 1) / 2 : 0;</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;    _padding_bottom = (<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a735a025fce26c1ef147b54426df18181">padding</a> == PADDING_SAME) ? <a class="code" href="utils_8hpp.xhtml#aa4508679e1d089c2bdcf000f72357683">iceildiv</a>(KernelRows - 1, 2) : 0;</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;    _padding_right  = (<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a735a025fce26c1ef147b54426df18181">padding</a> == PADDING_SAME) ? <a class="code" href="utils_8hpp.xhtml#aa4508679e1d089c2bdcf000f72357683">iceildiv</a>(KernelCols - 1, 2) : 0;</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;    _transform = arm_compute::support::cpp14::make_unique&lt;InputTransform&gt;(</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;                     KernelRows,</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;                     KernelCols,</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;                     num_batches,</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;                     num_rows,</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;                     num_cols,</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;                     num_channels,</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;                     _padding_top,    <span class="comment">/**&lt; Padding to apply to the top of the image. */</span></div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;                     _padding_left,   <span class="comment">/**&lt; Padding to apply to the left of the image. */</span></div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;                     _padding_bottom, <span class="comment">/**&lt; Padding to apply to the bottom of the image. */</span></div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;                     _padding_right   <span class="comment">/**&lt; Padding to apply to the right of the image. */</span></div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;                 );</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;    <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> win;</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;    <span class="keyword">auto</span>   win_last = _transform-&gt;get_window();</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;    win.<a class="code" href="classarm__compute_1_1_window.xhtml#acd3d2bba51cb84d34dd7656ad2375a6e">set</a>(<a class="code" href="classarm__compute_1_1_window.xhtml#aa96e81276ee4f87ab386cd05a5539a7d">Window::DimX</a>, <a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml">Window::Dimension</a>(0, win_last, 1));</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;    INEKernel::configure(win);</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;}</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keywordtype">int</span> OutputTileRows, <span class="keywordtype">int</span> OutputTileCols, <span class="keywordtype">int</span> KernelRows, <span class="keywordtype">int</span> KernelCols&gt;</div><div class="line"><a name="l00354"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel.xhtml#a112b35dd205c62ea6ed1447ef226da82">  354</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel.xhtml#a112b35dd205c62ea6ed1447ef226da82">NEWinogradLayerTransformInputKernel&lt;T, OutputTileRows, OutputTileCols, KernelRows, KernelCols&gt;::run</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;window, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1_thread_info.xhtml">ThreadInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4f4125dba5283887b34f889b1c615c0c">info</a>)</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;{</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4f4125dba5283887b34f889b1c615c0c">info</a>);</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;    <a class="code" href="_validate_8h.xhtml#a1b35b0d258183cf9ef36adf684d0b88c">ARM_COMPUTE_ERROR_ON_UNCONFIGURED_KERNEL</a>(<span class="keyword">this</span>);</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;    <a class="code" href="_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a>(_workspace);</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span>  element_size_in_bytes = _input_nhwc-&gt;info()-&gt;element_size();</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span>  input_col_stride      = _input_nhwc-&gt;info()-&gt;strides_in_bytes().y() / element_size_in_bytes;</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span>  input_row_stride      = _input_nhwc-&gt;info()-&gt;strides_in_bytes().z() / element_size_in_bytes;</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span>  input_batch_stride    = _input_nhwc-&gt;info()-&gt;strides_in_bytes()[3] / element_size_in_bytes;</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> input_nhwc_ptr        = reinterpret_cast&lt;const T *&gt;(_input_nhwc-&gt;buffer() + _input_nhwc-&gt;info()-&gt;offset_first_element_in_bytes());</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;    <span class="keyword">auto</span>       output_ptr            = reinterpret_cast&lt;T *&gt;(_output-&gt;<a class="code" href="classarm__compute_1_1_tensor.xhtml#a24954cca5108a24706441fd99a7fb04c">buffer</a>() + _output-&gt;<a class="code" href="classarm__compute_1_1_tensor.xhtml#a47d74e4e51f9b1a636c4831bd747a97c">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#ad0bd5cc32e7e4c0699eccba91e5de397">offset_first_element_in_bytes</a>());</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;    <a class="code" href="_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a>(output_ptr);</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;    _transform-&gt;set_input_tensor(input_nhwc_ptr, input_batch_stride, input_row_stride, input_col_stride);</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;    _transform-&gt;set_output_matrices(output_ptr, _matrix_stride, _num_channels);</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;    _transform-&gt;set_working_space(_workspace-&gt;<a class="code" href="classarm__compute_1_1_tensor.xhtml#a24954cca5108a24706441fd99a7fb04c">buffer</a>());</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;    <span class="comment">// The code below cannot be moved to configure because biases hasn&#39;t been allocated at that point</span></div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">size_t</span> fst = window.<a class="code" href="classarm__compute_1_1_window.xhtml#a273fd2ecdd45169b2f702f01a7e5e382">x</a>().<a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#ab24e31d1a4830bf79564ee902ec6c060">start</a>();</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">size_t</span> lst = window.<a class="code" href="classarm__compute_1_1_window.xhtml#a273fd2ecdd45169b2f702f01a7e5e382">x</a>().<a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#a0f590bfcf19110f44efc502e7b5c1d9e">end</a>();</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;    _transform-&gt;run(fst, lst, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4f4125dba5283887b34f889b1c615c0c">info</a>.thread_id);</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;}</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keywordtype">int</span> OutputTileRows, <span class="keywordtype">int</span> OutputTileCols, <span class="keywordtype">int</span> KernelRows, <span class="keywordtype">int</span> KernelCols&gt;</div><div class="line"><a name="l00380"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel.xhtml#a6d3d1d4d66f89908455bc5f05e259ce9">  380</a></span>&#160;<a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> <a class="code" href="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel.xhtml#a6d3d1d4d66f89908455bc5f05e259ce9">NEWinogradLayerTransformInputKernel&lt;T, OutputTileRows, OutputTileCols, KernelRows, KernelCols&gt;::validate</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *output, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1_winograd_info.xhtml">WinogradInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a809d18ccde99d938a68cb90ef53aa749">winograd_info</a>)</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;{</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(validate_arguments_winograd_input_trans(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, output, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a809d18ccde99d938a68cb90ef53aa749">winograd_info</a>));</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(validate_and_configure_window_winograd_input_trans(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;clone().get(), output-&gt;<a class="code" href="classarm__compute_1_1misc_1_1_i_cloneable.xhtml#a4d10e5012a872e7f78f2b539b673049d">clone</a>().get(), <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a809d18ccde99d938a68cb90ef53aa749">winograd_info</a>).first);</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_status.xhtml">Status</a>{};</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;}</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;<span class="keyword">template</span> <span class="keyword">class </span><a class="code" href="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel.xhtml">NEWinogradLayerTransformInputKernel&lt;float, 2, 2, 3, 3&gt;</a>;</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;<span class="keyword">template</span> <span class="keyword">class </span><a class="code" href="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel.xhtml">NEWinogradLayerTransformInputKernel&lt;float, 4, 4, 3, 3&gt;</a>;</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;<span class="keyword">template</span> <span class="keyword">class </span><a class="code" href="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel.xhtml">NEWinogradLayerTransformInputKernel&lt;float, 2, 2, 5, 5&gt;</a>;</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;<span class="keyword">template</span> <span class="keyword">class </span><a class="code" href="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel.xhtml">NEWinogradLayerTransformInputKernel&lt;float, 1, 6, 1, 3&gt;</a>;</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;<span class="keyword">template</span> <span class="keyword">class </span><a class="code" href="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel.xhtml">NEWinogradLayerTransformInputKernel&lt;float, 6, 1, 3, 1&gt;</a>;</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;<span class="keyword">template</span> <span class="keyword">class </span><a class="code" href="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel.xhtml">NEWinogradLayerTransformInputKernel&lt;float, 1, 4, 1, 5&gt;</a>;</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;<span class="keyword">template</span> <span class="keyword">class </span><a class="code" href="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel.xhtml">NEWinogradLayerTransformInputKernel&lt;float, 4, 1, 5, 1&gt;</a>;</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;<span class="keyword">template</span> <span class="keyword">class </span><a class="code" href="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel.xhtml">NEWinogradLayerTransformInputKernel&lt;float, 1, 2, 1, 7&gt;</a>;</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;<span class="keyword">template</span> <span class="keyword">class </span><a class="code" href="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel.xhtml">NEWinogradLayerTransformInputKernel&lt;float, 2, 1, 7, 1&gt;</a>;</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;<span class="comment">// Output transform</span></div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keywordtype">int</span> OutputTileRows, <span class="keywordtype">int</span> OutputTileCols, <span class="keywordtype">int</span> KernelRows, <span class="keywordtype">int</span> KernelCols&gt;</div><div class="line"><a name="l00402"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_winograd_layer_transform_output_kernel.xhtml#ae6c636cb9a0e2fb1cb68224b7b588ec5">  402</a></span>&#160;<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classarm__compute_1_1_n_e_winograd_layer_transform_output_kernel.xhtml#ae6c636cb9a0e2fb1cb68224b7b588ec5">NEWinogradLayerTransformOutputKernel&lt;T, OutputTileRows, OutputTileCols, KernelRows, KernelCols&gt;::get_output_storage_size</a>(</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;    <span class="keywordtype">int</span> num_batches,        <span class="comment">/* Number of batches in the output tensor. */</span></div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;    <span class="keywordtype">int</span> num_rows,           <span class="comment">/* Number of rows in each feature map of the input tensor. */</span></div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;    <span class="keywordtype">int</span> num_cols,           <span class="comment">/* Number of columns in each feature map of the input tensor. */</span></div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;    <span class="keywordtype">int</span> num_output_channels <span class="comment">/* Number of feature maps in the output tensor. */</span></div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;)<span class="keyword"> const</span></div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;    <span class="comment">// Construct shapes for the input and kernel tensors.</span></div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;    <span class="keyword">const</span> Tensor4DShape <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae59e3cf27216b7361c71cbd2830ec4c2">input_shape</a>(num_batches, num_rows, num_cols, 1);</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;    <span class="keyword">const</span> KernelShape   kern_shape(num_output_channels, KernelRows, KernelCols, 1);</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;    <span class="comment">// Return the size, converted into units of TOut</span></div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;    <span class="keywordflow">return</span> static_cast&lt;unsigned int&gt;(</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;               WinogradConv::get_output_storage_size(num_batches, num_rows, num_cols, num_output_channels) / <span class="keyword">sizeof</span>(T));</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;}</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keywordtype">int</span> OutputTileRows, <span class="keywordtype">int</span> OutputTileCols, <span class="keywordtype">int</span> KernelRows, <span class="keywordtype">int</span> KernelCols&gt;</div><div class="line"><a name="l00418"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_winograd_layer_transform_output_kernel.xhtml#a938350d536f0350fd2fd9eacf5d5f243">  418</a></span>&#160;<a class="code" href="classarm__compute_1_1_n_e_winograd_layer_transform_output_kernel.xhtml#a938350d536f0350fd2fd9eacf5d5f243">NEWinogradLayerTransformOutputKernel&lt;T, OutputTileRows, OutputTileCols, KernelRows, KernelCols&gt;::NEWinogradLayerTransformOutputKernel</a>()</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;    : _transform(nullptr), _biases(nullptr), _transformed_output(nullptr), _workspace(nullptr), _matrix_stride(0), _matrix_row_stride(0), _output_nhwc(nullptr), _num_batches(0), _num_rows(0),</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;      _num_cols(0), _num_channels(0)</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;{</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;}</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keywordtype">int</span> OutputTileRows, <span class="keywordtype">int</span> OutputTileCols, <span class="keywordtype">int</span> KernelRows, <span class="keywordtype">int</span> KernelCols&gt;</div><div class="line"><a name="l00425"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_winograd_layer_transform_output_kernel.xhtml#a8ccc8c221f26d7e2ed0b5cfbe4dc1b83">  425</a></span>&#160;<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classarm__compute_1_1_n_e_winograd_layer_transform_output_kernel.xhtml#a8ccc8c221f26d7e2ed0b5cfbe4dc1b83">NEWinogradLayerTransformOutputKernel&lt;T, OutputTileRows, OutputTileCols, KernelRows, KernelCols&gt;::get_working_space_size</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> num_threads)<span class="keyword"> const</span></div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;    <span class="keywordflow">return</span> _transform-&gt;get_working_space_size(num_threads) / <span class="keyword">sizeof</span>(T);</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;}</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keywordtype">int</span> OutputTileRows, <span class="keywordtype">int</span> OutputTileCols, <span class="keywordtype">int</span> KernelRows, <span class="keywordtype">int</span> KernelCols&gt;</div><div class="line"><a name="l00431"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_winograd_layer_transform_output_kernel.xhtml#afb7a854c198da809aaef67b142afccd4">  431</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="classarm__compute_1_1_n_e_winograd_layer_transform_output_kernel.xhtml#afb7a854c198da809aaef67b142afccd4">NEWinogradLayerTransformOutputKernel&lt;T, OutputTileRows, OutputTileCols, KernelRows, KernelCols&gt;::get_matrix_stride</a>(</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;    <span class="keywordtype">int</span> num_batches,        <span class="comment">/* Number of batches in the output tensor. */</span></div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;    <span class="keywordtype">int</span> num_rows,           <span class="comment">/* Number of rows in each feature map of the input tensor. */</span></div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;    <span class="keywordtype">int</span> num_cols,           <span class="comment">/* Number of columns in each feature map of the input tensor. */</span></div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;    <span class="keywordtype">int</span> num_output_channels <span class="comment">/* Number of feature maps in the output tensor. */</span></div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;)<span class="keyword"> const</span></div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;    <span class="keywordflow">return</span> WinogradConv::get_output_matrix_stride(num_batches, num_rows, num_cols, num_output_channels);</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;}</div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keywordtype">int</span> OutputTileRows, <span class="keywordtype">int</span> OutputTileCols, <span class="keywordtype">int</span> KernelRows, <span class="keywordtype">int</span> KernelCols&gt;</div><div class="line"><a name="l00442"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_winograd_layer_transform_output_kernel.xhtml#a68395f12828f1fd9c19dda038c68e1bd">  442</a></span>&#160;std::pair&lt;unsigned int, unsigned int&gt; <a class="code" href="classarm__compute_1_1_n_e_winograd_layer_transform_output_kernel.xhtml#a68395f12828f1fd9c19dda038c68e1bd">NEWinogradLayerTransformOutputKernel&lt;T, OutputTileRows, OutputTileCols, KernelRows, KernelCols&gt;::get_output_shape</a>(</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;    <span class="keywordtype">int</span>  num_rows, <span class="comment">/* Number of rows in each feature map of the input tensor. */</span></div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;    <span class="keywordtype">int</span>  num_cols, <span class="comment">/* Number of columns in each feature map of the input tensor. */</span></div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;    <span class="keywordtype">bool</span> padding_same)<span class="keyword"> const</span></div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;    <span class="keywordflow">return</span> WinogradConv::get_output_shape(std::make_pair&lt;unsigned int, unsigned int&gt;(num_rows, num_cols), padding_same);</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;}</div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;</div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keywordtype">int</span> OutputTileRows, <span class="keywordtype">int</span> OutputTileCols, <span class="keywordtype">int</span> KernelRows, <span class="keywordtype">int</span> KernelCols&gt;</div><div class="line"><a name="l00451"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_winograd_layer_transform_output_kernel.xhtml#a3bf98b4973ae5441ca41a8b68dcd2bc7">  451</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_n_e_winograd_layer_transform_output_kernel.xhtml#a3bf98b4973ae5441ca41a8b68dcd2bc7">NEWinogradLayerTransformOutputKernel&lt;T, OutputTileRows, OutputTileCols, KernelRows, KernelCols&gt;::configure</a>(</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a>              *biases,</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a>              *transformed_output,</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span>                   matrix_stride,</div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;    <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a>                    *output_nhwc,</div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span>                   num_batches,</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span>                   num_rows,</div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span>                   num_cols,</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span>                   num_channels,</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;    <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a>                    *workspace,</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;    <span class="keyword">const</span> <a class="code" href="namespacearm__compute_1_1graph.xhtml#a5f9016ea3e28a033b7cc216bdda912be">arm_gemm::Activation</a> &amp;activation)</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;{</div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;    _biases             = biases;</div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;    _workspace          = workspace;</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;    _transformed_output = transformed_output;</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;    _matrix_stride      = matrix_stride;</div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;    _matrix_row_stride  = <a class="code" href="utils_8hpp.xhtml#a8f6fbf8b243a10af40ce8d47a1013384">roundup</a>(num_channels, WinogradConv::N_BLOCK);</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;    _output_nhwc        = output_nhwc;</div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;    _num_batches        = num_batches;</div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;    _num_rows           = num_rows;</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;    _num_cols           = num_cols;</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;    _num_channels       = num_channels;</div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;    <span class="comment">// We don&#39;t have the biases buffer at this stage as it hasn&#39;t been allocated, we pass in nullptr OutputTransform is only used here to compute the window</span></div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;    _transform = arm_compute::support::cpp14::make_unique&lt;OutputTransform&gt;(num_batches, num_rows, num_cols, num_channels, activation);</div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;    <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> win;</div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;    <span class="keyword">auto</span>   win_last = _transform-&gt;get_window();</div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;    win.<a class="code" href="classarm__compute_1_1_window.xhtml#acd3d2bba51cb84d34dd7656ad2375a6e">set</a>(<a class="code" href="classarm__compute_1_1_window.xhtml#aa96e81276ee4f87ab386cd05a5539a7d">Window::DimX</a>, <a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml">Window::Dimension</a>(0, win_last, 1));</div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;    _output_nhwc-&gt;info()-&gt;set_valid_region(<a class="code" href="structarm__compute_1_1_valid_region.xhtml">ValidRegion</a>(<a class="code" href="classarm__compute_1_1_coordinates.xhtml">Coordinates</a>(), _output_nhwc-&gt;info()-&gt;tensor_shape()));</div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;</div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;    INEKernel::configure(win);</div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;}</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;</div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keywordtype">int</span> OutputTileRows, <span class="keywordtype">int</span> OutputTileCols, <span class="keywordtype">int</span> KernelRows, <span class="keywordtype">int</span> KernelCols&gt;</div><div class="line"><a name="l00484"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_winograd_layer_transform_output_kernel.xhtml#a112b35dd205c62ea6ed1447ef226da82">  484</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_n_e_winograd_layer_transform_output_kernel.xhtml#a112b35dd205c62ea6ed1447ef226da82">NEWinogradLayerTransformOutputKernel&lt;T, OutputTileRows, OutputTileCols, KernelRows, KernelCols&gt;::run</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;window, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1_thread_info.xhtml">ThreadInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4f4125dba5283887b34f889b1c615c0c">info</a>)</div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;{</div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4f4125dba5283887b34f889b1c615c0c">info</a>);</div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;    <a class="code" href="_validate_8h.xhtml#a1b35b0d258183cf9ef36adf684d0b88c">ARM_COMPUTE_ERROR_ON_UNCONFIGURED_KERNEL</a>(<span class="keyword">this</span>);</div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;    <a class="code" href="_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a>(_workspace);</div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;    <a class="code" href="_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a>(_transformed_output);</div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;    <a class="code" href="_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a>(_output_nhwc);</div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;</div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> out_batch_stride = _output_nhwc-&gt;info()-&gt;strides_in_bytes()[3] / <span class="keyword">sizeof</span>(T);</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> out_row_stride   = _output_nhwc-&gt;info()-&gt;strides_in_bytes()[2] / <span class="keyword">sizeof</span>(T);</div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> out_col_stride   = _output_nhwc-&gt;info()-&gt;strides_in_bytes()[1] / <span class="keyword">sizeof</span>(T);</div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;</div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;    _transform-&gt;set_input_matrices(_transformed_output-&gt;buffer(), _matrix_stride, _matrix_row_stride);</div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;    _transform-&gt;set_bias((_biases ? reinterpret_cast&lt;T *&gt;(_biases-&gt;buffer() + _biases-&gt;info()-&gt;offset_first_element_in_bytes()) : <span class="keyword">nullptr</span>));</div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;    _transform-&gt;set_output_tensor(_output_nhwc-&gt;buffer() + _output_nhwc-&gt;info()-&gt;offset_first_element_in_bytes(), out_batch_stride, out_row_stride, out_col_stride);</div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;    _transform-&gt;set_working_space(_workspace-&gt;<a class="code" href="classarm__compute_1_1_tensor.xhtml#a24954cca5108a24706441fd99a7fb04c">buffer</a>());</div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;    <span class="comment">// The code below cannot be moved to configure because biases hasn&#39;t been allocated at that point</span></div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">size_t</span> fst = window.<a class="code" href="classarm__compute_1_1_window.xhtml#a273fd2ecdd45169b2f702f01a7e5e382">x</a>().<a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#ab24e31d1a4830bf79564ee902ec6c060">start</a>();</div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">size_t</span> lst = window.<a class="code" href="classarm__compute_1_1_window.xhtml#a273fd2ecdd45169b2f702f01a7e5e382">x</a>().<a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#a0f590bfcf19110f44efc502e7b5c1d9e">end</a>();</div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;    _transform-&gt;run(fst, lst, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4f4125dba5283887b34f889b1c615c0c">info</a>.thread_id);</div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;}</div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;</div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keywordtype">int</span> OutputTileRows, <span class="keywordtype">int</span> OutputTileCols, <span class="keywordtype">int</span> KernelRows, <span class="keywordtype">int</span> KernelCols&gt;</div><div class="line"><a name="l00507"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_winograd_layer_transform_output_kernel.xhtml#a9ede996037a6406aca5217f9ad5e2f28">  507</a></span>&#160;<a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> <a class="code" href="classarm__compute_1_1_n_e_winograd_layer_transform_output_kernel.xhtml#a9ede996037a6406aca5217f9ad5e2f28">NEWinogradLayerTransformOutputKernel&lt;T, OutputTileRows, OutputTileCols, KernelRows, KernelCols&gt;::validate</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3a77be8aebd8e00522b32061d46ccdbd">bias</a>, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *output,</div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;                                                                                                                 <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1_winograd_info.xhtml">WinogradInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a809d18ccde99d938a68cb90ef53aa749">winograd_info</a>)</div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;{</div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(validate_arguments_winograd_output_trans(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, (<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3a77be8aebd8e00522b32061d46ccdbd">bias</a> != <span class="keyword">nullptr</span> ? <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3a77be8aebd8e00522b32061d46ccdbd">bias</a>-&gt;clone().get() : <span class="keyword">nullptr</span>), output, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a809d18ccde99d938a68cb90ef53aa749">winograd_info</a>));</div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(validate_and_configure_window_winograd_output_trans(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;clone().get(), output-&gt;<a class="code" href="classarm__compute_1_1misc_1_1_i_cloneable.xhtml#a4d10e5012a872e7f78f2b539b673049d">clone</a>().get(), <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a809d18ccde99d938a68cb90ef53aa749">winograd_info</a>).first);</div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;</div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_status.xhtml">Status</a>{};</div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;}</div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;</div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;<span class="keyword">template</span> <span class="keyword">class </span><a class="code" href="classarm__compute_1_1_n_e_winograd_layer_transform_output_kernel.xhtml">NEWinogradLayerTransformOutputKernel&lt;float, 2, 2, 3, 3&gt;</a>;</div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;<span class="keyword">template</span> <span class="keyword">class </span><a class="code" href="classarm__compute_1_1_n_e_winograd_layer_transform_output_kernel.xhtml">NEWinogradLayerTransformOutputKernel&lt;float, 4, 4, 3, 3&gt;</a>;</div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;<span class="keyword">template</span> <span class="keyword">class </span><a class="code" href="classarm__compute_1_1_n_e_winograd_layer_transform_output_kernel.xhtml">NEWinogradLayerTransformOutputKernel&lt;float, 2, 2, 5, 5&gt;</a>;</div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;<span class="keyword">template</span> <span class="keyword">class </span><a class="code" href="classarm__compute_1_1_n_e_winograd_layer_transform_output_kernel.xhtml">NEWinogradLayerTransformOutputKernel&lt;float, 1, 6, 1, 3&gt;</a>;</div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;<span class="keyword">template</span> <span class="keyword">class </span><a class="code" href="classarm__compute_1_1_n_e_winograd_layer_transform_output_kernel.xhtml">NEWinogradLayerTransformOutputKernel&lt;float, 6, 1, 3, 1&gt;</a>;</div><div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;</div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;<span class="keyword">template</span> <span class="keyword">class </span><a class="code" href="classarm__compute_1_1_n_e_winograd_layer_transform_output_kernel.xhtml">NEWinogradLayerTransformOutputKernel&lt;float, 1, 4, 1, 5&gt;</a>;</div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;<span class="keyword">template</span> <span class="keyword">class </span><a class="code" href="classarm__compute_1_1_n_e_winograd_layer_transform_output_kernel.xhtml">NEWinogradLayerTransformOutputKernel&lt;float, 4, 1, 5, 1&gt;</a>;</div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;<span class="keyword">template</span> <span class="keyword">class </span><a class="code" href="classarm__compute_1_1_n_e_winograd_layer_transform_output_kernel.xhtml">NEWinogradLayerTransformOutputKernel&lt;float, 1, 2, 1, 7&gt;</a>;</div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;<span class="keyword">template</span> <span class="keyword">class </span><a class="code" href="classarm__compute_1_1_n_e_winograd_layer_transform_output_kernel.xhtml">NEWinogradLayerTransformOutputKernel&lt;float, 2, 1, 7, 1&gt;</a>;</div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;</div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;} <span class="comment">// namespace arm_compute</span></div><div class="ttc" id="utils_8hpp_xhtml_aa4508679e1d089c2bdcf000f72357683"><div class="ttname"><a href="utils_8hpp.xhtml#aa4508679e1d089c2bdcf000f72357683">iceildiv</a></div><div class="ttdeci">T iceildiv(const T a, const T b)</div><div class="ttdef"><b>Definition:</b> <a href="utils_8hpp_source.xhtml#l00038">utils.hpp:38</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_winograd_layer_transform_weights_kernel_xhtml_a112b35dd205c62ea6ed1447ef226da82"><div class="ttname"><a href="classarm__compute_1_1_n_e_winograd_layer_transform_weights_kernel.xhtml#a112b35dd205c62ea6ed1447ef226da82">arm_compute::NEWinogradLayerTransformWeightsKernel::run</a></div><div class="ttdeci">void run(const Window &amp;window, const ThreadInfo &amp;info) override</div><div class="ttdoc">Execute the kernel on the passed window.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_winograd_convolution_layer_kernel_8cpp_source.xhtml#l00226">NEWinogradConvolutionLayerKernel.cpp:226</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a45cde9abb508c62d67c3bb2b9bf566a5"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">arm_compute::test::validation::shape</a></div><div class="ttdeci">shape</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_absolute_difference_8cpp_source.xhtml#l00097">AbsoluteDifference.cpp:97</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_acf5f12bbab64dd614bd8220c97fe484f"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">arm_compute::test::validation::data_layout</a></div><div class="ttdeci">const DataLayout data_layout</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_o_n_2_im2_col_8cpp_source.xhtml#l00146">Im2Col.cpp:146</a></div></div>
<div class="ttc" id="_toolchain_support_8h_xhtml"><div class="ttname"><a href="_toolchain_support_8h.xhtml">ToolchainSupport.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_winograd_layer_transform_weights_kernel_xhtml_a23e55164ea7e9df47f6eeb0feaaf876f"><div class="ttname"><a href="classarm__compute_1_1_n_e_winograd_layer_transform_weights_kernel.xhtml#a23e55164ea7e9df47f6eeb0feaaf876f">arm_compute::NEWinogradLayerTransformWeightsKernel::get_matrix_stride</a></div><div class="ttdeci">int get_matrix_stride(int num_output_channels, int num_input_channels) const override</div><div class="ttdoc">Gets the stride between matrices in the input worspace.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_winograd_convolution_layer_kernel_8cpp_source.xhtml#l00197">NEWinogradConvolutionLayerKernel.cpp:197</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1misc_1_1shape__calculator_xhtml_a04249f91ec2964d21a91bb7038821000"><div class="ttname"><a href="namespacearm__compute_1_1misc_1_1shape__calculator.xhtml#a04249f91ec2964d21a91bb7038821000">arm_compute::misc::shape_calculator::compute_winograd_input_transform_shape</a></div><div class="ttdeci">TensorShape compute_winograd_input_transform_shape(const ITensorInfo &amp;input, const WinogradInfo &amp;winograd_info)</div><div class="ttdoc">Calculate the winograd input transform shape.</div><div class="ttdef"><b>Definition:</b> <a href="_shape_calculator_8h_source.xhtml#l00667">ShapeCalculator.h:667</a></div></div>
<div class="ttc" id="_i_tensor_8h_xhtml"><div class="ttname"><a href="_i_tensor_8h.xhtml">ITensor.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_winograd_layer_transform_output_kernel_xhtml"><div class="ttname"><a href="classarm__compute_1_1_n_e_winograd_layer_transform_output_kernel.xhtml">arm_compute::NEWinogradLayerTransformOutputKernel</a></div><div class="ttdoc">NEON kernel to perform Winograd output transform.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_winograd_convolution_layer_kernel_8h_source.xhtml#l00315">NEWinogradConvolutionLayerKernel.h:315</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel_xhtml_afe18d39e03270a72ce408e8b9fd6d013"><div class="ttname"><a href="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel.xhtml#afe18d39e03270a72ce408e8b9fd6d013">arm_compute::NEWinogradLayerTransformInputKernel::get_matrix_stride</a></div><div class="ttdeci">int get_matrix_stride(int num_batches, int num_channels, int num_rows, int num_cols, bool same_padding) const override</div><div class="ttdoc">Gets the stride between matrices in the input worspace.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_winograd_convolution_layer_kernel_8cpp_source.xhtml#l00290">NEWinogradConvolutionLayerKernel.cpp:290</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel_xhtml_a44ffbab5d0fe4ae10cbf84ddae1a90fe"><div class="ttname"><a href="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel.xhtml#a44ffbab5d0fe4ae10cbf84ddae1a90fe">arm_compute::NEWinogradLayerTransformInputKernel::get_input_storage_size</a></div><div class="ttdeci">unsigned int get_input_storage_size(int num_batches, int num_channels, int num_rows, int num_cols, bool same_padding) const override</div><div class="ttdoc">Determine how much memory (in units of TIn) to allocate for the transformed input.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_winograd_convolution_layer_kernel_8cpp_source.xhtml#l00268">NEWinogradConvolutionLayerKernel.cpp:268</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_winograd_layer_transform_output_kernel_xhtml_a8ccc8c221f26d7e2ed0b5cfbe4dc1b83"><div class="ttname"><a href="classarm__compute_1_1_n_e_winograd_layer_transform_output_kernel.xhtml#a8ccc8c221f26d7e2ed0b5cfbe4dc1b83">arm_compute::NEWinogradLayerTransformOutputKernel::get_working_space_size</a></div><div class="ttdeci">unsigned int get_working_space_size(unsigned int num_threads) const override</div><div class="ttdoc">Get the working space required to perform the transformation.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_winograd_convolution_layer_kernel_8cpp_source.xhtml#l00425">NEWinogradConvolutionLayerKernel.cpp:425</a></div></div>
<div class="ttc" id="_validate_8h_xhtml_a8f3ff7da485ff7e75dab07baadf5b4bd"><div class="ttname"><a href="_validate_8h.xhtml#a8f3ff7da485ff7e75dab07baadf5b4bd">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES(...)</div><div class="ttdef"><b>Definition:</b> <a href="_validate_8h_source.xhtml#l00545">Validate.h:545</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel_xhtml_a6d3d1d4d66f89908455bc5f05e259ce9"><div class="ttname"><a href="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel.xhtml#a6d3d1d4d66f89908455bc5f05e259ce9">arm_compute::NEWinogradLayerTransformInputKernel::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *input, const ITensorInfo *output, const WinogradInfo &amp;winograd_info)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration of NEWinogradLayerTransform...</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_winograd_convolution_layer_kernel_8cpp_source.xhtml#l00380">NEWinogradConvolutionLayerKernel.cpp:380</a></div></div>
<div class="ttc" id="structarm__compute_1_1_winograd_info_xhtml"><div class="ttname"><a href="structarm__compute_1_1_winograd_info.xhtml">arm_compute::WinogradInfo</a></div><div class="ttdoc">Winograd information.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l02154">Types.h:2154</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a00525ff582f16038a1d3819aa44a23a3"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">arm_compute::test::validation::conv_info</a></div><div class="ttdeci">conv_info</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_winograd_8cpp_source.xhtml#l00597">Winograd.cpp:597</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a8a1e1c105f0bdaf37db408c7cfcb77a4"><div class="ttname"><a href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ON_ERROR(status)</div><div class="ttdoc">Checks if a status contains an error and returns it.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00204">Error.h:204</a></div></div>
<div class="ttc" id="_window_8h_xhtml"><div class="ttname"><a href="_window_8h.xhtml">Window.h</a></div></div>
<div class="ttc" id="_validate_8h_xhtml_ae7eed178dac535c6e727061b1f5bc6eb"><div class="ttname"><a href="_validate_8h.xhtml#ae7eed178dac535c6e727061b1f5bc6eb">ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN(t, c,...)</div><div class="ttdef"><b>Definition:</b> <a href="_validate_8h_source.xhtml#l00792">Validate.h:792</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">arm_compute::Format::F32</a></div><div class="ttdoc">1 channel, 1 F32 per channel</div></div>
<div class="ttc" id="classarm__compute_1_1_i_n_e_winograd_layer_transform_weights_kernel_xhtml_a779dc9599bd3a0aa390ba9d3a1d8d6d1"><div class="ttname"><a href="classarm__compute_1_1_i_n_e_winograd_layer_transform_weights_kernel.xhtml#a779dc9599bd3a0aa390ba9d3a1d8d6d1">arm_compute::INEWinogradLayerTransformWeightsKernel::configure</a></div><div class="ttdeci">virtual void configure(const ITensor *weights_hwio, ITensor *output, const int matrix_stride, const int num_output_channels, const int num_input_channels)=0</div><div class="ttdoc">Configure the weights transform kernel.</div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a74ce3f7420453d3446218ff3b7453e02ad770ba3ce18fa409965dfdf5e7c348e6"><div class="ttname"><a href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02ad770ba3ce18fa409965dfdf5e7c348e6">arm_compute::DataLayoutDimension::HEIGHT</a></div><div class="ttdoc">height</div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a809d18ccde99d938a68cb90ef53aa749"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a809d18ccde99d938a68cb90ef53aa749">arm_compute::test::validation::winograd_info</a></div><div class="ttdeci">winograd_info</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_winograd_8cpp_source.xhtml#l00328">Winograd.cpp:328</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml">arm_compute::ITensorInfo</a></div><div class="ttdoc">Store the tensor's metadata.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_info_8h_source.xhtml#l00040">ITensorInfo.h:40</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel_xhtml_a975ca7003dae590387fdf8546e1b08fd"><div class="ttname"><a href="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel.xhtml#a975ca7003dae590387fdf8546e1b08fd">arm_compute::NEWinogradLayerTransformInputKernel::NEWinogradLayerTransformInputKernel</a></div><div class="ttdeci">NEWinogradLayerTransformInputKernel()</div><div class="ttdoc">Default constructor.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_winograd_convolution_layer_kernel_8cpp_source.xhtml#l00301">NEWinogradConvolutionLayerKernel.cpp:301</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_1_1_dimension_xhtml"><div class="ttname"><a href="classarm__compute_1_1_window_1_1_dimension.xhtml">arm_compute::Window::Dimension</a></div><div class="ttdoc">Describe one of the image's dimensions with a start, end and step.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00075">Window.h:75</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1graph_xhtml_a5f9016ea3e28a033b7cc216bdda912be"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#a5f9016ea3e28a033b7cc216bdda912be">arm_compute::graph::Activation</a></div><div class="ttdeci">arm_compute::ActivationLayerInfo::ActivationFunction Activation</div><div class="ttdoc">Constant TensorID specifying an equivalent of null tensor.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2_types_8h_source.xhtml#l00068">Types.h:68</a></div></div>
<div class="ttc" id="classarm__compute_1_1_status_xhtml"><div class="ttname"><a href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a></div><div class="ttdoc">Status class.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00052">Error.h:52</a></div></div>
<div class="ttc" id="_tensor_info_8h_xhtml"><div class="ttname"><a href="_tensor_info_8h.xhtml">TensorInfo.h</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a206d6e247e0957ac3dee45d27756fc25"><div class="ttname"><a href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true, an error is returned.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00296">Error.h:296</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor.xhtml">arm_compute::ITensor</a></div><div class="ttdoc">Interface for NEON tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_8h_source.xhtml#l00036">ITensor.h:36</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab7980fa5ee693e3282a76da047a1c3b5"><div class="ttname"><a href="namespacearm__compute.xhtml#ab7980fa5ee693e3282a76da047a1c3b5">arm_compute::calculate_max_window</a></div><div class="ttdeci">Window calculate_max_window(const ValidRegion &amp;valid_region, const Steps &amp;steps=Steps(), bool skip_border=false, BorderSize border_size=BorderSize())</div><div class="ttdoc">Calculate the maximum window for a given tensor shape and border setting.</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_helpers_8cpp_source.xhtml#l00028">Helpers.cpp:28</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2020 ARM Limited.</div><div class="ttdef"><b>Definition:</b> <a href="00__introduction_8dox_source.xhtml#l00024">00_introduction.dox:24</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a47be6fa38308d0003c25b60b7dbc45ce"><div class="ttname"><a href="namespacearm__compute.xhtml#a47be6fa38308d0003c25b60b7dbc45ce">arm_compute::auto_init_if_empty</a></div><div class="ttdeci">bool auto_init_if_empty(ITensorInfo &amp;info, const TensorShape &amp;shape, int num_channels, DataType data_type, QuantizationInfo quantization_info=QuantizationInfo())</div><div class="ttdoc">Auto initialize the tensor info (shape, number of channels and data type) if the current assignment i...</div><div class="ttdef"><b>Definition:</b> <a href="_helpers_8inl_source.xhtml#l00202">Helpers.inl:202</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_ae59e3cf27216b7361c71cbd2830ec4c2"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ae59e3cf27216b7361c71cbd2830ec4c2">arm_compute::test::validation::input_shape</a></div><div class="ttdeci">input_shape</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_convolution_layer_8cpp_source.xhtml#l00182">ConvolutionLayer.cpp:182</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_xhtml_a47d74e4e51f9b1a636c4831bd747a97c"><div class="ttname"><a href="classarm__compute_1_1_tensor.xhtml#a47d74e4e51f9b1a636c4831bd747a97c">arm_compute::Tensor::info</a></div><div class="ttdeci">ITensorInfo * info() const override</div><div class="ttdoc">Interface to be implemented by the child class to return the tensor's metadata.</div><div class="ttdef"><b>Definition:</b> <a href="runtime_2_tensor_8cpp_source.xhtml#l00033">Tensor.cpp:33</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a8fcf2ddd9a1d58b1b280f5c0aed71845"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">arm_compute::test::validation::input</a></div><div class="ttdeci">auto input</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00487">LSTMLayerQuantized.cpp:487</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_winograd_layer_transform_weights_kernel_xhtml_a6d3d1d4d66f89908455bc5f05e259ce9"><div class="ttname"><a href="classarm__compute_1_1_n_e_winograd_layer_transform_weights_kernel.xhtml#a6d3d1d4d66f89908455bc5f05e259ce9">arm_compute::NEWinogradLayerTransformWeightsKernel::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *input, const ITensorInfo *output, const WinogradInfo &amp;winograd_info)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration of NEWinogradLayerTransform...</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_winograd_convolution_layer_kernel_8cpp_source.xhtml#l00247">NEWinogradConvolutionLayerKernel.cpp:247</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_n_e_winograd_layer_transform_weights_kernel_xhtml_a8b4165c2e7c5c983b930a0f5f4df6acf"><div class="ttname"><a href="classarm__compute_1_1_i_n_e_winograd_layer_transform_weights_kernel.xhtml#a8b4165c2e7c5c983b930a0f5f4df6acf">arm_compute::INEWinogradLayerTransformWeightsKernel::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *input, const ITensorInfo *weights)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration of NEWinogradLayerTransform...</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_winograd_convolution_layer_kernel_8cpp_source.xhtml#l00166">NEWinogradConvolutionLayerKernel.cpp:166</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_winograd_layer_transform_output_kernel_xhtml_a68395f12828f1fd9c19dda038c68e1bd"><div class="ttname"><a href="classarm__compute_1_1_n_e_winograd_layer_transform_output_kernel.xhtml#a68395f12828f1fd9c19dda038c68e1bd">arm_compute::NEWinogradLayerTransformOutputKernel::get_output_shape</a></div><div class="ttdeci">std::pair&lt; unsigned int, unsigned int &gt; get_output_shape(int num_rows, int num_cols, bool padding_same) const override</div><div class="ttdoc">Get the output shape of a convolution.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_winograd_convolution_layer_kernel_8cpp_source.xhtml#l00442">NEWinogradConvolutionLayerKernel.cpp:442</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_winograd_layer_transform_weights_kernel_xhtml_a4370ae5fda7bd455a171fc8ed4d3f283"><div class="ttname"><a href="classarm__compute_1_1_n_e_winograd_layer_transform_weights_kernel.xhtml#a4370ae5fda7bd455a171fc8ed4d3f283">arm_compute::NEWinogradLayerTransformWeightsKernel::is_parallelisable</a></div><div class="ttdeci">bool is_parallelisable() const override</div><div class="ttdoc">Indicates whether or not the kernel is parallelisable.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_winograd_convolution_layer_kernel_8cpp_source.xhtml#l00241">NEWinogradConvolutionLayerKernel.cpp:241</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_aa96e81276ee4f87ab386cd05a5539a7d"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#aa96e81276ee4f87ab386cd05a5539a7d">arm_compute::Window::DimX</a></div><div class="ttdeci">static constexpr size_t DimX</div><div class="ttdoc">Alias for dimension 0 also known as X dimension.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00043">Window.h:43</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a6dc630a6ae9cc063b3924bcea8dee9d6"><div class="ttname"><a href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a></div><div class="ttdeci">#define ARM_COMPUTE_UNUSED(...)</div><div class="ttdoc">To avoid unused variables warnings.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00152">Error.h:152</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_winograd_layer_transform_output_kernel_xhtml_a3bf98b4973ae5441ca41a8b68dcd2bc7"><div class="ttname"><a href="classarm__compute_1_1_n_e_winograd_layer_transform_output_kernel.xhtml#a3bf98b4973ae5441ca41a8b68dcd2bc7">arm_compute::NEWinogradLayerTransformOutputKernel::configure</a></div><div class="ttdeci">void configure(const ITensor *biases, const ITensor *transformed_output, const int matrix_stride, ITensor *output_nhwc, const int num_batches, const int num_rows, const int num_cols, const int num_channels, ITensor *workspace, const arm_gemm::Activation &amp;activation) override</div><div class="ttdoc">Configure the output transform kernel.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_winograd_convolution_layer_kernel_8cpp_source.xhtml#l00451">NEWinogradConvolutionLayerKernel.cpp:451</a></div></div>
<div class="ttc" id="_validate_8h_xhtml_a27e4638546c88b8916f967e6e54480a9"><div class="ttname"><a href="_validate_8h.xhtml#a27e4638546c88b8916f967e6e54480a9">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_SHAPES</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_SHAPES(...)</div><div class="ttdef"><b>Definition:</b> <a href="_validate_8h_source.xhtml#l00443">Validate.h:443</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_n_e_winograd_layer_transform_weights_kernel_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_n_e_winograd_layer_transform_weights_kernel.xhtml">arm_compute::INEWinogradLayerTransformWeightsKernel</a></div><div class="ttdoc">Interface for the NEON kernel to perform Winograd weights transform.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_winograd_convolution_layer_kernel_8h_source.xhtml#l00442">NEWinogradConvolutionLayerKernel.h:442</a></div></div>
<div class="ttc" id="_validate_8h_xhtml_a1da797d2762c1cdbb73bfc83136c3a38"><div class="ttname"><a href="_validate_8h.xhtml#a1da797d2762c1cdbb73bfc83136c3a38">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DIMENSIONS</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DIMENSIONS(...)</div><div class="ttdef"><b>Definition:</b> <a href="_validate_8h_source.xhtml#l00288">Validate.h:288</a></div></div>
<div class="ttc" id="_n_e_winograd_convolution_layer_kernel_8h_xhtml"><div class="ttname"><a href="_n_e_winograd_convolution_layer_kernel_8h.xhtml">NEWinogradConvolutionLayerKernel.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_coordinates_xhtml"><div class="ttname"><a href="classarm__compute_1_1_coordinates.xhtml">arm_compute::Coordinates</a></div><div class="ttdoc">Coordinates of an item.</div><div class="ttdef"><b>Definition:</b> <a href="_coordinates_8h_source.xhtml#l00037">Coordinates.h:37</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1utils_1_1cast_xhtml_a2ea3d1fc01a3a442900249ca182ffa5e"><div class="ttname"><a href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">arm_compute::utils::cast::U</a></div><div class="ttdeci">U</div><div class="ttdef"><b>Definition:</b> <a href="_saturate_cast_8h_source.xhtml#l00057">SaturateCast.h:57</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel_xhtml_a8ccc8c221f26d7e2ed0b5cfbe4dc1b83"><div class="ttname"><a href="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel.xhtml#a8ccc8c221f26d7e2ed0b5cfbe4dc1b83">arm_compute::NEWinogradLayerTransformInputKernel::get_working_space_size</a></div><div class="ttdeci">unsigned int get_working_space_size(unsigned int num_threads) const override</div><div class="ttdoc">Get the working space required to perform the transformation.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_winograd_convolution_layer_kernel_8cpp_source.xhtml#l00284">NEWinogradConvolutionLayerKernel.cpp:284</a></div></div>
<div class="ttc" id="_shape_calculator_8h_xhtml"><div class="ttname"><a href="_shape_calculator_8h.xhtml">ShapeCalculator.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1misc_1_1_i_cloneable_xhtml_a4d10e5012a872e7f78f2b539b673049d"><div class="ttname"><a href="classarm__compute_1_1misc_1_1_i_cloneable.xhtml#a4d10e5012a872e7f78f2b539b673049d">arm_compute::misc::ICloneable::clone</a></div><div class="ttdeci">virtual std::unique_ptr&lt; T &gt; clone() const =0</div><div class="ttdoc">Provide a clone of the current object of class T.</div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_acd3d2bba51cb84d34dd7656ad2375a6e"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#acd3d2bba51cb84d34dd7656ad2375a6e">arm_compute::Window::set</a></div><div class="ttdeci">void set(size_t dimension, const Dimension &amp;dim)</div><div class="ttdoc">Set the values of a given dimension.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8inl_source.xhtml#l00049">Window.inl:49</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel_xhtml"><div class="ttname"><a href="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel.xhtml">arm_compute::NEWinogradLayerTransformInputKernel</a></div><div class="ttdoc">NEON kernel to perform Winograd input transform.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_winograd_convolution_layer_kernel_8h_source.xhtml#l00100">NEWinogradConvolutionLayerKernel.h:100</a></div></div>
<div class="ttc" id="_error_8h_xhtml"><div class="ttname"><a href="_error_8h.xhtml">Error.h</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1misc_1_1shape__calculator_xhtml_a25e3751f07d4b2771a05d8d01a7f7620"><div class="ttname"><a href="namespacearm__compute_1_1misc_1_1shape__calculator.xhtml#a25e3751f07d4b2771a05d8d01a7f7620">arm_compute::misc::shape_calculator::compute_winograd_filter_transform_shape</a></div><div class="ttdeci">TensorShape compute_winograd_filter_transform_shape(const ITensorInfo &amp;input, const WinogradInfo &amp;winograd_info)</div><div class="ttdoc">Calculate the winograd filter transform shape.</div><div class="ttdef"><b>Definition:</b> <a href="_shape_calculator_8h_source.xhtml#l00644">ShapeCalculator.h:644</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a3a77be8aebd8e00522b32061d46ccdbd"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a3a77be8aebd8e00522b32061d46ccdbd">arm_compute::test::validation::bias</a></div><div class="ttdeci">CLTensor bias</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_convolution_layer_8cpp_source.xhtml#l00189">ConvolutionLayer.cpp:189</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_winograd_layer_transform_weights_kernel_xhtml_ad25daf413f7dd45f084ae22a25b8bbe5"><div class="ttname"><a href="classarm__compute_1_1_n_e_winograd_layer_transform_weights_kernel.xhtml#ad25daf413f7dd45f084ae22a25b8bbe5">arm_compute::NEWinogradLayerTransformWeightsKernel::NEWinogradLayerTransformWeightsKernel</a></div><div class="ttdeci">NEWinogradLayerTransformWeightsKernel()</div><div class="ttdoc">Default constructor.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_winograd_convolution_layer_kernel_8cpp_source.xhtml#l00191">NEWinogradConvolutionLayerKernel.cpp:191</a></div></div>
<div class="ttc" id="utils_8hpp_xhtml_a8f6fbf8b243a10af40ce8d47a1013384"><div class="ttname"><a href="utils_8hpp.xhtml#a8f6fbf8b243a10af40ce8d47a1013384">roundup</a></div><div class="ttdeci">T roundup(const T a, const T b)</div><div class="ttdef"><b>Definition:</b> <a href="utils_8hpp_source.xhtml#l00043">utils.hpp:43</a></div></div>
<div class="ttc" id="_validate_8h_xhtml_aff911654521523937ff24372a870b89f"><div class="ttname"><a href="_validate_8h.xhtml#aff911654521523937ff24372a870b89f">ARM_COMPUTE_RETURN_ERROR_ON_NULLPTR</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_NULLPTR(...)</div><div class="ttdef"><b>Definition:</b> <a href="_validate_8h_source.xhtml#l00163">Validate.h:163</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_winograd_layer_transform_output_kernel_xhtml_ae6c636cb9a0e2fb1cb68224b7b588ec5"><div class="ttname"><a href="classarm__compute_1_1_n_e_winograd_layer_transform_output_kernel.xhtml#ae6c636cb9a0e2fb1cb68224b7b588ec5">arm_compute::NEWinogradLayerTransformOutputKernel::get_output_storage_size</a></div><div class="ttdeci">unsigned int get_output_storage_size(int num_batches, int num_rows, int num_cols, int num_output_channels) const override</div><div class="ttdoc">Determine how much memory (in units of TOut) to allocate for the (Winograd domain) output.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_winograd_convolution_layer_kernel_8cpp_source.xhtml#l00402">NEWinogradConvolutionLayerKernel.cpp:402</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_winograd_layer_transform_weights_kernel_xhtml"><div class="ttname"><a href="classarm__compute_1_1_n_e_winograd_layer_transform_weights_kernel.xhtml">arm_compute::NEWinogradLayerTransformWeightsKernel</a></div><div class="ttdoc">NEON kernel to perform Winograd weights transform.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_winograd_convolution_layer_kernel_8h_source.xhtml#l00501">NEWinogradConvolutionLayerKernel.h:501</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_ad0bd5cc32e7e4c0699eccba91e5de397"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#ad0bd5cc32e7e4c0699eccba91e5de397">arm_compute::ITensorInfo::offset_first_element_in_bytes</a></div><div class="ttdeci">virtual size_t offset_first_element_in_bytes() const =0</div><div class="ttdoc">The offset from the beginning of the memory allocation to the first element of the tensor.</div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel_xhtml_a112b35dd205c62ea6ed1447ef226da82"><div class="ttname"><a href="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel.xhtml#a112b35dd205c62ea6ed1447ef226da82">arm_compute::NEWinogradLayerTransformInputKernel::run</a></div><div class="ttdeci">void run(const Window &amp;window, const ThreadInfo &amp;info) override</div><div class="ttdoc">Execute the kernel on the passed window.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_winograd_convolution_layer_kernel_8cpp_source.xhtml#l00354">NEWinogradConvolutionLayerKernel.cpp:354</a></div></div>
<div class="ttc" id="_validate_8h_xhtml_a921b705e9e3e0fe928928447869e62a5"><div class="ttname"><a href="_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_NULLPTR(...)</div><div class="ttdef"><b>Definition:</b> <a href="_validate_8h_source.xhtml#l00161">Validate.h:161</a></div></div>
<div class="ttc" id="structarm__compute_1_1_thread_info_xhtml"><div class="ttname"><a href="structarm__compute_1_1_thread_info.xhtml">arm_compute::ThreadInfo</a></div><div class="ttdoc">Information about executing thread and CPU.</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_types_8h_source.xhtml#l00225">CPPTypes.h:225</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1misc_1_1shape__calculator_xhtml_a5699c316d27b41f0790827791e88ae26"><div class="ttname"><a href="namespacearm__compute_1_1misc_1_1shape__calculator.xhtml#a5699c316d27b41f0790827791e88ae26">arm_compute::misc::shape_calculator::compute_winograd_output_transform_shape</a></div><div class="ttdeci">TensorShape compute_winograd_output_transform_shape(const ITensorInfo &amp;input, const WinogradInfo &amp;winograd_info)</div><div class="ttdoc">Calculate the winograd output transform shape.</div><div class="ttdef"><b>Definition:</b> <a href="_shape_calculator_8h_source.xhtml#l00703">ShapeCalculator.h:703</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_winograd_layer_transform_output_kernel_xhtml_a938350d536f0350fd2fd9eacf5d5f243"><div class="ttname"><a href="classarm__compute_1_1_n_e_winograd_layer_transform_output_kernel.xhtml#a938350d536f0350fd2fd9eacf5d5f243">arm_compute::NEWinogradLayerTransformOutputKernel::NEWinogradLayerTransformOutputKernel</a></div><div class="ttdeci">NEWinogradLayerTransformOutputKernel()</div><div class="ttdoc">Constructor.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_winograd_convolution_layer_kernel_8cpp_source.xhtml#l00418">NEWinogradConvolutionLayerKernel.cpp:418</a></div></div>
<div class="ttc" id="classarm__compute_1_1_size2_d_xhtml"><div class="ttname"><a href="classarm__compute_1_1_size2_d.xhtml">arm_compute::Size2D</a></div><div class="ttdoc">Class for specifying the size of an image or rectangle.</div><div class="ttdef"><b>Definition:</b> <a href="_size2_d_8h_source.xhtml#l00034">Size2D.h:34</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_xhtml_a24954cca5108a24706441fd99a7fb04c"><div class="ttname"><a href="classarm__compute_1_1_tensor.xhtml#a24954cca5108a24706441fd99a7fb04c">arm_compute::Tensor::buffer</a></div><div class="ttdeci">uint8_t * buffer() const override</div><div class="ttdoc">Interface to be implemented by the child class to return a pointer to CPU memory.</div><div class="ttdef"><b>Definition:</b> <a href="runtime_2_tensor_8cpp_source.xhtml#l00043">Tensor.cpp:43</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a64a08a9fec5aeee8650e7182b6d171d0"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a64a08a9fec5aeee8650e7182b6d171d0">arm_compute::test::validation::weights</a></div><div class="ttdeci">CLTensor weights</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_convolution_layer_8cpp_source.xhtml#l00188">ConvolutionLayer.cpp:188</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_winograd_layer_transform_weights_kernel_xhtml_a87a7d4fe23da86c3682b79300d23f248"><div class="ttname"><a href="classarm__compute_1_1_n_e_winograd_layer_transform_weights_kernel.xhtml#a87a7d4fe23da86c3682b79300d23f248">arm_compute::NEWinogradLayerTransformWeightsKernel::get_weight_storage_size</a></div><div class="ttdeci">unsigned int get_weight_storage_size(int num_output_channels, int num_input_channels) const override</div><div class="ttdoc">Determine how much memory (in units of T) to allocate for the transformed weights.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_winograd_convolution_layer_kernel_8cpp_source.xhtml#l00182">NEWinogradConvolutionLayerKernel.cpp:182</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_ab1806bf0c5a41f674fb9d2dc6af644f5"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ab1806bf0c5a41f674fb9d2dc6af644f5">arm_compute::test::validation::output_shape</a></div><div class="ttdeci">output_shape</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_convolution_layer_8cpp_source.xhtml#l00182">ConvolutionLayer.cpp:182</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a1c69762a42ab8add645d0a949b6f4b1f"><div class="ttname"><a href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_MSG(cond, msg)</div><div class="ttdoc">If the condition is true, an error is returned.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00244">Error.h:244</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a74ce3f7420453d3446218ff3b7453e02a49da85b69bc6285eeee286ca49fa7195"><div class="ttname"><a href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02a49da85b69bc6285eeee286ca49fa7195">arm_compute::DataLayoutDimension::WIDTH</a></div><div class="ttdoc">width</div></div>
<div class="ttc" id="arm__compute_2core_2_helpers_8h_xhtml"><div class="ttname"><a href="arm__compute_2core_2_helpers_8h.xhtml">Helpers.h</a></div></div>
<div class="ttc" id="_access_window_static_8h_xhtml"><div class="ttname"><a href="_access_window_static_8h.xhtml">AccessWindowStatic.h</a></div></div>
<div class="ttc" id="structarm__compute_1_1_valid_region_xhtml"><div class="ttname"><a href="structarm__compute_1_1_valid_region.xhtml">arm_compute::ValidRegion</a></div><div class="ttdoc">Container for valid region of a window.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00184">Types.h:184</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a46e938020a3ac8c926d0590b7fe957db"><div class="ttname"><a href="namespacearm__compute.xhtml#a46e938020a3ac8c926d0590b7fe957db">arm_compute::get_data_layout_dimension_index</a></div><div class="ttdeci">size_t get_data_layout_dimension_index(const DataLayout data_layout, const DataLayoutDimension data_layout_dimension)</div><div class="ttdoc">Get the index of the given dimension.</div><div class="ttdef"><b>Definition:</b> <a href="_helpers_8inl_source.xhtml#l00327">Helpers.inl:327</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a4f4125dba5283887b34f889b1c615c0c"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a4f4125dba5283887b34f889b1c615c0c">arm_compute::test::validation::info</a></div><div class="ttdeci">info</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_convolution_layer_8cpp_source.xhtml#l00182">ConvolutionLayer.cpp:182</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_1_1_dimension_xhtml_a0f590bfcf19110f44efc502e7b5c1d9e"><div class="ttname"><a href="classarm__compute_1_1_window_1_1_dimension.xhtml#a0f590bfcf19110f44efc502e7b5c1d9e">arm_compute::Window::Dimension::end</a></div><div class="ttdeci">constexpr int end() const</div><div class="ttdoc">Return the end of the dimension.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00097">Window.h:97</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a735a025fce26c1ef147b54426df18181"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a735a025fce26c1ef147b54426df18181">arm_compute::test::validation::padding</a></div><div class="ttdeci">const PaddingSize padding</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_absolute_difference_8cpp_source.xhtml#l00113">AbsoluteDifference.cpp:113</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_winograd_layer_transform_output_kernel_xhtml_a9ede996037a6406aca5217f9ad5e2f28"><div class="ttname"><a href="classarm__compute_1_1_n_e_winograd_layer_transform_output_kernel.xhtml#a9ede996037a6406aca5217f9ad5e2f28">arm_compute::NEWinogradLayerTransformOutputKernel::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *input, const ITensorInfo *bias, const ITensorInfo *output, const WinogradInfo &amp;winograd_info)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration of NEWinogradLayerTransform...</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_winograd_convolution_layer_kernel_8cpp_source.xhtml#l00507">NEWinogradConvolutionLayerKernel.cpp:507</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0"><div class="ttname"><a href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">arm_compute::DataLayout</a></div><div class="ttdeci">DataLayout</div><div class="ttdoc">[DataLayout enum definition]</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00117">Types.h:117</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_1_1_dimension_xhtml_ab24e31d1a4830bf79564ee902ec6c060"><div class="ttname"><a href="classarm__compute_1_1_window_1_1_dimension.xhtml#ab24e31d1a4830bf79564ee902ec6c060">arm_compute::Window::Dimension::start</a></div><div class="ttdeci">constexpr int start() const</div><div class="ttdoc">Return the start of the dimension.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00092">Window.h:92</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml">arm_compute::Window</a></div><div class="ttdoc">Describe a multidimensional execution window.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00039">Window.h:39</a></div></div>
<div class="ttc" id="_validate_8h_xhtml_a1b35b0d258183cf9ef36adf684d0b88c"><div class="ttname"><a href="_validate_8h.xhtml#a1b35b0d258183cf9ef36adf684d0b88c">ARM_COMPUTE_ERROR_ON_UNCONFIGURED_KERNEL</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_UNCONFIGURED_KERNEL(k)</div><div class="ttdef"><b>Definition:</b> <a href="_validate_8h_source.xhtml#l00941">Validate.h:941</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel_xhtml_a2de2ab5ada4b5a360770b670af19b48d"><div class="ttname"><a href="classarm__compute_1_1_n_e_winograd_layer_transform_input_kernel.xhtml#a2de2ab5ada4b5a360770b670af19b48d">arm_compute::NEWinogradLayerTransformInputKernel::configure</a></div><div class="ttdeci">void configure(const ITensor *input_nhwc, const int num_batches, const int num_rows, const int num_cols, const int num_channels, const PaddingType padding, ITensor *output, const int matrix_stride, ITensor *workspace) override</div><div class="ttdoc">Configure the output transform kernel.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_winograd_convolution_layer_kernel_8cpp_source.xhtml#l00308">NEWinogradConvolutionLayerKernel.cpp:308</a></div></div>
<div class="ttc" id="_i_access_window_8h_xhtml"><div class="ttname"><a href="_i_access_window_8h.xhtml">IAccessWindow.h</a></div></div>
<div class="ttc" id="_validate_8h_xhtml"><div class="ttname"><a href="_validate_8h.xhtml">Validate.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_winograd_layer_transform_output_kernel_xhtml_afb7a854c198da809aaef67b142afccd4"><div class="ttname"><a href="classarm__compute_1_1_n_e_winograd_layer_transform_output_kernel.xhtml#afb7a854c198da809aaef67b142afccd4">arm_compute::NEWinogradLayerTransformOutputKernel::get_matrix_stride</a></div><div class="ttdeci">int get_matrix_stride(int num_batches, int num_rows, int num_cols, int num_output_channels) const override</div><div class="ttdoc">Gets the stride between matrices in the output worspace.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_winograd_convolution_layer_kernel_8cpp_source.xhtml#l00431">NEWinogradConvolutionLayerKernel.cpp:431</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_winograd_layer_transform_output_kernel_xhtml_a112b35dd205c62ea6ed1447ef226da82"><div class="ttname"><a href="classarm__compute_1_1_n_e_winograd_layer_transform_output_kernel.xhtml#a112b35dd205c62ea6ed1447ef226da82">arm_compute::NEWinogradLayerTransformOutputKernel::run</a></div><div class="ttdeci">void run(const Window &amp;window, const ThreadInfo &amp;info) override</div><div class="ttdoc">Execute the kernel on the passed window.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_winograd_convolution_layer_kernel_8cpp_source.xhtml#l00484">NEWinogradConvolutionLayerKernel.cpp:484</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_a273fd2ecdd45169b2f702f01a7e5e382"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#a273fd2ecdd45169b2f702f01a7e5e382">arm_compute::Window::x</a></div><div class="ttdeci">constexpr const Dimension &amp; x() const</div><div class="ttdoc">Alias to access the first dimension of the window.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00143">Window.h:143</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_aebb8dcc11953d78e620bbef0b9e2183.xhtml">core</a></li><li class="navelem"><a class="el" href="dir_d91e1966cc57df4f49d1e07be7697713.xhtml">NEON</a></li><li class="navelem"><a class="el" href="dir_1ce938f580a6f304b99685e2c1dd19db.xhtml">kernels</a></li><li class="navelem"><a class="el" href="_n_e_winograd_convolution_layer_kernel_8cpp.xhtml">NEWinogradConvolutionLayerKernel.cpp</a></li>
    <li class="footer">Generated on Thu Mar 5 2020 16:07:02 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
