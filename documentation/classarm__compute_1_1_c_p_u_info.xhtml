<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: CPUInfo Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classarm__compute_1_1_c_p_u_info.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">CPUInfo Class Reference<span class="mlabels"><span class="mlabel">final</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="_c_p_p_types_8h_source.xhtml">CPPTypes.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ac10ab8f6db7ac07935466d38350e7c9b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml#ac10ab8f6db7ac07935466d38350e7c9b">CPUInfo</a> ()</td></tr>
<tr class="memdesc:ac10ab8f6db7ac07935466d38350e7c9b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="#ac10ab8f6db7ac07935466d38350e7c9b">More...</a><br /></td></tr>
<tr class="separator:ac10ab8f6db7ac07935466d38350e7c9b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5c8dff64ce1ad7bdae70879024bde002"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml">CPUInfo</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml#a5c8dff64ce1ad7bdae70879024bde002">operator=</a> (const <a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml">CPUInfo</a> &amp;cpuinfo)=delete</td></tr>
<tr class="memdesc:a5c8dff64ce1ad7bdae70879024bde002"><td class="mdescLeft">&#160;</td><td class="mdescRight">Disable copy constructor and assignment operator to avoid copying the vector of CPUs each time <a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml">CPUInfo</a> is initialized once in the <a class="el" href="classarm__compute_1_1_i_scheduler.xhtml" title="Scheduler interface to run kernels.">IScheduler</a> and <a class="el" href="structarm__compute_1_1_thread_info.xhtml" title="Information about executing thread and CPU.">ThreadInfo</a> will get a pointer to it.  <a href="#a5c8dff64ce1ad7bdae70879024bde002">More...</a><br /></td></tr>
<tr class="separator:a5c8dff64ce1ad7bdae70879024bde002"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0efc7dde750cb74d8377fbb439bc4892"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml#a0efc7dde750cb74d8377fbb439bc4892">CPUInfo</a> (const <a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml">CPUInfo</a> &amp;cpuinfo)=delete</td></tr>
<tr class="separator:a0efc7dde750cb74d8377fbb439bc4892"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4e0de605e4f8c2f0c9bda12dc0621242"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml">CPUInfo</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml#a4e0de605e4f8c2f0c9bda12dc0621242">operator=</a> (<a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml">CPUInfo</a> &amp;&amp;cpuinfo)=default</td></tr>
<tr class="separator:a4e0de605e4f8c2f0c9bda12dc0621242"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a25062951575f94b0425f1e992be9f999"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml#a25062951575f94b0425f1e992be9f999">CPUInfo</a> (<a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml">CPUInfo</a> &amp;&amp;cpuinfo)=default</td></tr>
<tr class="separator:a25062951575f94b0425f1e992be9f999"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0647761f309e3b3edb5a5501b3ff38d2"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml#a0647761f309e3b3edb5a5501b3ff38d2">has_fp16</a> () const</td></tr>
<tr class="memdesc:a0647761f309e3b3edb5a5501b3ff38d2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks if the cpu model supports fp16.  <a href="#a0647761f309e3b3edb5a5501b3ff38d2">More...</a><br /></td></tr>
<tr class="separator:a0647761f309e3b3edb5a5501b3ff38d2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8d31247d25bfe0a0b669d367aa801c2d"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml#a8d31247d25bfe0a0b669d367aa801c2d">has_dotprod</a> () const</td></tr>
<tr class="memdesc:a8d31247d25bfe0a0b669d367aa801c2d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks if the cpu model supports dot product.  <a href="#a8d31247d25bfe0a0b669d367aa801c2d">More...</a><br /></td></tr>
<tr class="separator:a8d31247d25bfe0a0b669d367aa801c2d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1d1a4992ced850f18f97b27492bbb081"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearm__compute.xhtml#aa41d7415a5386798147cccae2333d5d4">CPUModel</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml#a1d1a4992ced850f18f97b27492bbb081">get_cpu_model</a> (unsigned int cpuid) const</td></tr>
<tr class="memdesc:a1d1a4992ced850f18f97b27492bbb081"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the cpu model for a given cpuid.  <a href="#a1d1a4992ced850f18f97b27492bbb081">More...</a><br /></td></tr>
<tr class="separator:a1d1a4992ced850f18f97b27492bbb081"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa382062453f40443af73d726fe75340b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearm__compute.xhtml#aa41d7415a5386798147cccae2333d5d4">CPUModel</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml#aa382062453f40443af73d726fe75340b">get_cpu_model</a> () const</td></tr>
<tr class="memdesc:aa382062453f40443af73d726fe75340b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the current thread's cpu model.  <a href="#aa382062453f40443af73d726fe75340b">More...</a><br /></td></tr>
<tr class="separator:aa382062453f40443af73d726fe75340b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a61970c81ba14081e613c12d0e85af761"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml#a61970c81ba14081e613c12d0e85af761">get_L1_cache_size</a> () const</td></tr>
<tr class="memdesc:a61970c81ba14081e613c12d0e85af761"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the L1 cache size.  <a href="#a61970c81ba14081e613c12d0e85af761">More...</a><br /></td></tr>
<tr class="separator:a61970c81ba14081e613c12d0e85af761"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3152ff6ceec3d31c02feb4e91812f040"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml#a3152ff6ceec3d31c02feb4e91812f040">get_L2_cache_size</a> () const</td></tr>
<tr class="memdesc:a3152ff6ceec3d31c02feb4e91812f040"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the L2 cache size.  <a href="#a3152ff6ceec3d31c02feb4e91812f040">More...</a><br /></td></tr>
<tr class="separator:a3152ff6ceec3d31c02feb4e91812f040"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3a3b116920c82d5047b3928f5ddfb7cf"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml#a3a3b116920c82d5047b3928f5ddfb7cf">set_L1_cache_size</a> (unsigned int size)</td></tr>
<tr class="memdesc:a3a3b116920c82d5047b3928f5ddfb7cf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the L1 cache size.  <a href="#a3a3b116920c82d5047b3928f5ddfb7cf">More...</a><br /></td></tr>
<tr class="separator:a3a3b116920c82d5047b3928f5ddfb7cf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aacee1df94b722ce49632be47b6578b3d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml#aacee1df94b722ce49632be47b6578b3d">set_L2_cache_size</a> (unsigned int size)</td></tr>
<tr class="memdesc:aacee1df94b722ce49632be47b6578b3d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the L2 cache size.  <a href="#aacee1df94b722ce49632be47b6578b3d">More...</a><br /></td></tr>
<tr class="separator:aacee1df94b722ce49632be47b6578b3d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6dfc7d658828318e6c54988913c22ec7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml#a6dfc7d658828318e6c54988913c22ec7">set_fp16</a> (const bool fp16)</td></tr>
<tr class="memdesc:a6dfc7d658828318e6c54988913c22ec7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set fp16 support.  <a href="#a6dfc7d658828318e6c54988913c22ec7">More...</a><br /></td></tr>
<tr class="separator:a6dfc7d658828318e6c54988913c22ec7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6d2db590ac4d869e8feb648beb80fcea"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml#a6d2db590ac4d869e8feb648beb80fcea">set_dotprod</a> (const bool dotprod)</td></tr>
<tr class="memdesc:a6d2db590ac4d869e8feb648beb80fcea"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set dot product support.  <a href="#a6d2db590ac4d869e8feb648beb80fcea">More...</a><br /></td></tr>
<tr class="separator:a6d2db590ac4d869e8feb648beb80fcea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acb24f7c57aaeee1da27db2b4b52434ee"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml#acb24f7c57aaeee1da27db2b4b52434ee">set_cpu_model</a> (unsigned int cpuid, <a class="el" href="namespacearm__compute.xhtml#aa41d7415a5386798147cccae2333d5d4">CPUModel</a> model)</td></tr>
<tr class="memdesc:acb24f7c57aaeee1da27db2b4b52434ee"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the cpumodel for a given cpu core.  <a href="#acb24f7c57aaeee1da27db2b4b52434ee">More...</a><br /></td></tr>
<tr class="separator:acb24f7c57aaeee1da27db2b4b52434ee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aba3b726afdf36bdcd7496e1bfb523e71"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml#aba3b726afdf36bdcd7496e1bfb523e71">set_cpu_num</a> (unsigned int cpu_count)</td></tr>
<tr class="memdesc:aba3b726afdf36bdcd7496e1bfb523e71"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set max number of cpus.  <a href="#aba3b726afdf36bdcd7496e1bfb523e71">More...</a><br /></td></tr>
<tr class="separator:aba3b726afdf36bdcd7496e1bfb523e71"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3828c0e892d45f2b4af6dc5d34c377b7"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml#a3828c0e892d45f2b4af6dc5d34c377b7">get_cpu_num</a> () const</td></tr>
<tr class="memdesc:a3828c0e892d45f2b4af6dc5d34c377b7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the maximum number of CPUs present.  <a href="#a3828c0e892d45f2b4af6dc5d34c377b7">More...</a><br /></td></tr>
<tr class="separator:a3828c0e892d45f2b4af6dc5d34c377b7"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p class="definition">Definition at line <a class="el" href="_c_p_p_types_8h_source.xhtml#l00105">105</a> of file <a class="el" href="_c_p_p_types_8h_source.xhtml">CPPTypes.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="ac10ab8f6db7ac07935466d38350e7c9b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac10ab8f6db7ac07935466d38350e7c9b">&#9670;&nbsp;</a></span>CPUInfo() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml">CPUInfo</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constructor. </p>

<p class="definition">Definition at line <a class="el" href="_c_p_p_types_8cpp_source.xhtml#l00102">102</a> of file <a class="el" href="_c_p_p_types_8cpp_source.xhtml">CPPTypes.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    : _percpu(1)</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;{</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <span class="comment">// The core library knows nothing about the CPUs so we set only 1 CPU to be generic.</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    <span class="comment">// The runtime NESCheduler will initialise this vector with the correct CPU models.</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <span class="comment">// See void detect_cpus_configuration(CPUInfo &amp;cpuinfo) in CPPUtils.h</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    _percpu[0] = <a class="code" href="namespacearm__compute.xhtml#aa41d7415a5386798147cccae2333d5d4ac942dc2a9f958acddc67e11472d3ca0b">CPUModel::GENERIC</a>;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;}</div><div class="ttc" id="namespacearm__compute_xhtml_aa41d7415a5386798147cccae2333d5d4ac942dc2a9f958acddc67e11472d3ca0b"><div class="ttname"><a href="namespacearm__compute.xhtml#aa41d7415a5386798147cccae2333d5d4ac942dc2a9f958acddc67e11472d3ca0b">arm_compute::CPUModel::GENERIC</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="namespacearm__compute.xhtml#aa41d7415a5386798147cccae2333d5d4ac942dc2a9f958acddc67e11472d3ca0b">arm_compute::GENERIC</a>.</p>

</div>
</div>
<a id="a0efc7dde750cb74d8377fbb439bc4892"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0efc7dde750cb74d8377fbb439bc4892">&#9670;&nbsp;</a></span>CPUInfo() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml">CPUInfo</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml">CPUInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>cpuinfo</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a25062951575f94b0425f1e992be9f999"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a25062951575f94b0425f1e992be9f999">&#9670;&nbsp;</a></span>CPUInfo() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml">CPUInfo</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml">CPUInfo</a> &amp;&amp;&#160;</td>
          <td class="paramname"><em>cpuinfo</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a1d1a4992ced850f18f97b27492bbb081"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1d1a4992ced850f18f97b27492bbb081">&#9670;&nbsp;</a></span>get_cpu_model() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearm__compute.xhtml#aa41d7415a5386798147cccae2333d5d4">CPUModel</a> get_cpu_model </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>cpuid</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the cpu model for a given cpuid. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cpuid</td><td>the id of the cpu core to be retrieved,</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the <a class="el" href="namespacearm__compute.xhtml#aa41d7415a5386798147cccae2333d5d4">CPUModel</a> of the cpuid queiried. </dd></dl>

<p class="definition">Definition at line <a class="el" href="_c_p_p_types_8cpp_source.xhtml#l00068">68</a> of file <a class="el" href="_c_p_p_types_8cpp_source.xhtml">CPPTypes.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;{</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <span class="keywordflow">if</span>(cpuid &lt; _percpu.size())</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    {</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        <span class="keywordflow">return</span> _percpu[cpuid];</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    }</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute.xhtml#aa41d7415a5386798147cccae2333d5d4ac942dc2a9f958acddc67e11472d3ca0b">CPUModel::GENERIC</a>;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;}</div><div class="ttc" id="namespacearm__compute_xhtml_aa41d7415a5386798147cccae2333d5d4ac942dc2a9f958acddc67e11472d3ca0b"><div class="ttname"><a href="namespacearm__compute.xhtml#aa41d7415a5386798147cccae2333d5d4ac942dc2a9f958acddc67e11472d3ca0b">arm_compute::CPUModel::GENERIC</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="namespacearm__compute.xhtml#aa41d7415a5386798147cccae2333d5d4ac942dc2a9f958acddc67e11472d3ca0b">arm_compute::GENERIC</a>.</p>

<p class="reference">Referenced by <a class="el" href="main_8cpp_source.xhtml#l00093">main()</a>.</p>

</div>
</div>
<a id="aa382062453f40443af73d726fe75340b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa382062453f40443af73d726fe75340b">&#9670;&nbsp;</a></span>get_cpu_model() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearm__compute.xhtml#aa41d7415a5386798147cccae2333d5d4">CPUModel</a> get_cpu_model </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the current thread's cpu model. </p>
<dl class="section return"><dt>Returns</dt><dd>Current thread's <a class="el" href="namespacearm__compute.xhtml#aa41d7415a5386798147cccae2333d5d4">CPUModel</a> </dd></dl>

<p class="definition">Definition at line <a class="el" href="_c_p_p_types_8cpp_source.xhtml#l00111">111</a> of file <a class="el" href="_c_p_p_types_8cpp_source.xhtml">CPPTypes.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;{</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="preprocessor">#if defined(BARE_METAL) || (!defined(__arm__) &amp;&amp; !defined(__aarch64__))</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_c_p_u_info.xhtml#aa382062453f40443af73d726fe75340b">get_cpu_model</a>(0);</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="preprocessor">#else  </span><span class="comment">/* defined(BARE_METAL) || (!defined(__arm__) &amp;&amp; !defined(__aarch64__)) */</span><span class="preprocessor"></span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_c_p_u_info.xhtml#aa382062453f40443af73d726fe75340b">get_cpu_model</a>(sched_getcpu());</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* defined(BARE_METAL) || (!defined(__arm__) &amp;&amp; !defined(__aarch64__)) */</span><span class="preprocessor"></span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;}</div><div class="ttc" id="classarm__compute_1_1_c_p_u_info_xhtml_aa382062453f40443af73d726fe75340b"><div class="ttname"><a href="classarm__compute_1_1_c_p_u_info.xhtml#aa382062453f40443af73d726fe75340b">arm_compute::CPUInfo::get_cpu_model</a></div><div class="ttdeci">CPUModel get_cpu_model() const</div><div class="ttdoc">Gets the current thread's cpu model.</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_types_8cpp_source.xhtml#l00111">CPPTypes.cpp:111</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a3828c0e892d45f2b4af6dc5d34c377b7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3828c0e892d45f2b4af6dc5d34c377b7">&#9670;&nbsp;</a></span>get_cpu_num()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int get_cpu_num </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return the maximum number of CPUs present. </p>
<dl class="section return"><dt>Returns</dt><dd>Number of CPUs </dd></dl>

<p class="definition">Definition at line <a class="el" href="_c_p_p_types_8cpp_source.xhtml#l00054">54</a> of file <a class="el" href="_c_p_p_types_8cpp_source.xhtml">CPPTypes.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;{</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    <span class="keywordflow">return</span> _percpu.size();</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;}</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="main_8cpp_source.xhtml#l00093">main()</a>.</p>

</div>
</div>
<a id="a61970c81ba14081e613c12d0e85af761"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a61970c81ba14081e613c12d0e85af761">&#9670;&nbsp;</a></span>get_L1_cache_size()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int get_L1_cache_size </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the L1 cache size. </p>
<dl class="section return"><dt>Returns</dt><dd>the size of the L1 cache </dd></dl>

<p class="definition">Definition at line <a class="el" href="_c_p_p_types_8cpp_source.xhtml#l00077">77</a> of file <a class="el" href="_c_p_p_types_8cpp_source.xhtml">CPPTypes.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;{</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <span class="keywordflow">return</span> _L1_cache_size;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a3152ff6ceec3d31c02feb4e91812f040"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3152ff6ceec3d31c02feb4e91812f040">&#9670;&nbsp;</a></span>get_L2_cache_size()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int get_L2_cache_size </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the L2 cache size. </p>
<dl class="section return"><dt>Returns</dt><dd>the size of the L1 cache </dd></dl>

<p class="definition">Definition at line <a class="el" href="_c_p_p_types_8cpp_source.xhtml#l00087">87</a> of file <a class="el" href="_c_p_p_types_8cpp_source.xhtml">CPPTypes.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;{</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <span class="keywordflow">return</span> _L2_cache_size;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a8d31247d25bfe0a0b669d367aa801c2d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8d31247d25bfe0a0b669d367aa801c2d">&#9670;&nbsp;</a></span>has_dotprod()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool has_dotprod </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Checks if the cpu model supports dot product. </p>
<dl class="section return"><dt>Returns</dt><dd>true of the cpu supports dot product, false otherwise </dd></dl>

<p class="definition">Definition at line <a class="el" href="_c_p_p_types_8cpp_source.xhtml#l00063">63</a> of file <a class="el" href="_c_p_p_types_8cpp_source.xhtml">CPPTypes.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;{</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <span class="keywordflow">return</span> _dotprod;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;}</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="main_8cpp_source.xhtml#l00093">main()</a>.</p>

</div>
</div>
<a id="a0647761f309e3b3edb5a5501b3ff38d2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0647761f309e3b3edb5a5501b3ff38d2">&#9670;&nbsp;</a></span>has_fp16()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool has_fp16 </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Checks if the cpu model supports fp16. </p>
<dl class="section return"><dt>Returns</dt><dd>true of the cpu supports fp16, false otherwise </dd></dl>

<p class="definition">Definition at line <a class="el" href="_c_p_p_types_8cpp_source.xhtml#l00058">58</a> of file <a class="el" href="_c_p_p_types_8cpp_source.xhtml">CPPTypes.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;{</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    <span class="keywordflow">return</span> _fp16;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;}</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="main_8cpp_source.xhtml#l00093">main()</a>.</p>

</div>
</div>
<a id="a5c8dff64ce1ad7bdae70879024bde002"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5c8dff64ce1ad7bdae70879024bde002">&#9670;&nbsp;</a></span>operator=() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml">CPUInfo</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml">CPUInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>cpuinfo</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Disable copy constructor and assignment operator to avoid copying the vector of CPUs each time <a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml">CPUInfo</a> is initialized once in the <a class="el" href="classarm__compute_1_1_i_scheduler.xhtml" title="Scheduler interface to run kernels.">IScheduler</a> and <a class="el" href="structarm__compute_1_1_thread_info.xhtml" title="Information about executing thread and CPU.">ThreadInfo</a> will get a pointer to it. </p>

</div>
</div>
<a id="a4e0de605e4f8c2f0c9bda12dc0621242"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4e0de605e4f8c2f0c9bda12dc0621242">&#9670;&nbsp;</a></span>operator=() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml">CPUInfo</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml">CPUInfo</a> &amp;&amp;&#160;</td>
          <td class="paramname"><em>cpuinfo</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="acb24f7c57aaeee1da27db2b4b52434ee"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acb24f7c57aaeee1da27db2b4b52434ee">&#9670;&nbsp;</a></span>set_cpu_model()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void set_cpu_model </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>cpuid</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearm__compute.xhtml#aa41d7415a5386798147cccae2333d5d4">CPUModel</a>&#160;</td>
          <td class="paramname"><em>model</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set the cpumodel for a given cpu core. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cpuid</td><td>the id of the core to be set. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">model</td><td>the <a class="el" href="namespacearm__compute.xhtml#aa41d7415a5386798147cccae2333d5d4">CPUModel</a> to be set. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_c_p_p_types_8cpp_source.xhtml#l00045">45</a> of file <a class="el" href="_c_p_p_types_8cpp_source.xhtml">CPPTypes.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;{</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(cpuid &gt;= _percpu.size());</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <span class="keywordflow">if</span>(_percpu.size() &gt; cpuid)</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    {</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;        _percpu[cpuid] = model;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    }</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;}</div><div class="ttc" id="_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00466">Error.h:466</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00466">ARM_COMPUTE_ERROR_ON</a>.</p>

<p class="reference">Referenced by <a class="el" href="_c_p_u_utils_8cpp_source.xhtml#l00346">arm_compute::get_cpu_configuration()</a>.</p>

</div>
</div>
<a id="aba3b726afdf36bdcd7496e1bfb523e71"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aba3b726afdf36bdcd7496e1bfb523e71">&#9670;&nbsp;</a></span>set_cpu_num()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void set_cpu_num </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>cpu_count</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set max number of cpus. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cpu_count</td><td>the number of CPUs in the system. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_c_p_p_types_8cpp_source.xhtml#l00097">97</a> of file <a class="el" href="_c_p_p_types_8cpp_source.xhtml">CPPTypes.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;{</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    _percpu.resize(cpu_count);</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;}</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_c_p_u_utils_8cpp_source.xhtml#l00346">arm_compute::get_cpu_configuration()</a>.</p>

</div>
</div>
<a id="a6d2db590ac4d869e8feb648beb80fcea"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6d2db590ac4d869e8feb648beb80fcea">&#9670;&nbsp;</a></span>set_dotprod()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void set_dotprod </td>
          <td>(</td>
          <td class="paramtype">const bool&#160;</td>
          <td class="paramname"><em>dotprod</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set dot product support. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">dotprod</td><td>whether the cpu supports dot product. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_c_p_p_types_8cpp_source.xhtml#l00040">40</a> of file <a class="el" href="_c_p_p_types_8cpp_source.xhtml">CPPTypes.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;{</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    _dotprod = dotprod;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;}</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_c_p_u_utils_8cpp_source.xhtml#l00346">arm_compute::get_cpu_configuration()</a>.</p>

</div>
</div>
<a id="a6dfc7d658828318e6c54988913c22ec7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6dfc7d658828318e6c54988913c22ec7">&#9670;&nbsp;</a></span>set_fp16()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void set_fp16 </td>
          <td>(</td>
          <td class="paramtype">const bool&#160;</td>
          <td class="paramname"><em>fp16</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set fp16 support. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">fp16</td><td>whether the cpu supports fp16. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_c_p_p_types_8cpp_source.xhtml#l00035">35</a> of file <a class="el" href="_c_p_p_types_8cpp_source.xhtml">CPPTypes.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;{</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    _fp16 = fp16;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;}</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_c_p_u_utils_8cpp_source.xhtml#l00346">arm_compute::get_cpu_configuration()</a>.</p>

</div>
</div>
<a id="a3a3b116920c82d5047b3928f5ddfb7cf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3a3b116920c82d5047b3928f5ddfb7cf">&#9670;&nbsp;</a></span>set_L1_cache_size()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void set_L1_cache_size </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>size</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set the L1 cache size. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">size</td><td>the new size to be set. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_c_p_p_types_8cpp_source.xhtml#l00082">82</a> of file <a class="el" href="_c_p_p_types_8cpp_source.xhtml">CPPTypes.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;{</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    _L1_cache_size = size;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="aacee1df94b722ce49632be47b6578b3d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aacee1df94b722ce49632be47b6578b3d">&#9670;&nbsp;</a></span>set_L2_cache_size()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void set_L2_cache_size </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>size</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set the L2 cache size. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">size</td><td>the new size to be set. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_c_p_p_types_8cpp_source.xhtml#l00092">92</a> of file <a class="el" href="_c_p_p_types_8cpp_source.xhtml">CPPTypes.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;{</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    _L2_cache_size = size;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>arm_compute/core/CPP/<a class="el" href="_c_p_p_types_8h_source.xhtml">CPPTypes.h</a></li>
<li>src/core/CPP/<a class="el" href="_c_p_p_types_8cpp_source.xhtml">CPPTypes.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml">CPUInfo</a></li>
    <li class="footer">Generated on Fri Feb 21 2020 11:10:27 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
