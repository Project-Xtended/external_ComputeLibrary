<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: tests/validation/NEON/PixelWiseMultiplication.cpp File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.02.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_n_e_o_n_2_pixel_wise_multiplication_8cpp.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#namespaces">Namespaces</a> &#124;
<a href="#define-members">Macros</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">PixelWiseMultiplication.cpp File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &quot;<a class="el" href="_rounding_8h_source.xhtml">arm_compute/core/Rounding.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_n_e_pixel_wise_multiplication_8h_source.xhtml">arm_compute/runtime/NEON/functions/NEPixelWiseMultiplication.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_accessor_8h_source.xhtml">tests/NEON/Accessor.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_padding_calculator_8h_source.xhtml">tests/PaddingCalculator.h</a>&quot;</code><br />
<code>#include &quot;tests/datasets/ConvertPolicyDataset.h&quot;</code><br />
<code>#include &quot;tests/datasets/ShapeDatasets.h&quot;</code><br />
<code>#include &quot;<a class="el" href="tests_2framework_2_macros_8h_source.xhtml">tests/framework/Macros.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_validation_8h_source.xhtml">tests/validation/Validation.h</a>&quot;</code><br />
<code>#include &quot;tests/validation/fixtures/PixelWiseMultiplicationFixture.h&quot;</code><br />
</div>
<p><a href="_n_e_o_n_2_pixel_wise_multiplication_8cpp_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"></a>
Namespaces</h2></td></tr>
<tr class="memitem:namespacearm__compute"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></td></tr>
<tr class="memdesc:namespacearm__compute"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copyright (c) 2017-2020 ARM Limited. <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespacearm__compute_1_1test"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test.xhtml">arm_compute::test</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespacearm__compute_1_1test_1_1validation"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml">arm_compute::test::validation</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:aafb2ac305c1cfb580f29d538687f1fb5"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_n_e_o_n_2_pixel_wise_multiplication_8cpp.xhtml#aafb2ac305c1cfb580f29d538687f1fb5">DEFAULT_VALIDATE</a>&#160;&#160;&#160;validate(Accessor(_target), _reference);</td></tr>
<tr class="separator:aafb2ac305c1cfb580f29d538687f1fb5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8d69c709ef45fd63b622f283b0723eaf"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_n_e_o_n_2_pixel_wise_multiplication_8cpp.xhtml#a8d69c709ef45fd63b622f283b0723eaf">VALIDATE</a>(<a class="el" href="activation__quant__helpers_8h.xhtml#a5a392548f2df67370cb15d2a5d75cd7b">TYPE</a>,  TOLERANCE)&#160;&#160;&#160;validate(Accessor(_target), _reference, AbsoluteTolerance&lt;<a class="el" href="activation__quant__helpers_8h.xhtml#a5a392548f2df67370cb15d2a5d75cd7b">TYPE</a>&gt;(TOLERANCE), 0.f);</td></tr>
<tr class="separator:a8d69c709ef45fd63b622f283b0723eaf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6c21e1e9072e5251356f8a97ffb7b98d"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_n_e_o_n_2_pixel_wise_multiplication_8cpp.xhtml#a6c21e1e9072e5251356f8a97ffb7b98d">WRAP_VALIDATE</a>(<a class="el" href="activation__quant__helpers_8h.xhtml#a5a392548f2df67370cb15d2a5d75cd7b">TYPE</a>,  TOLERANCE)&#160;&#160;&#160;validate_wrap(Accessor(_target), _reference, AbsoluteTolerance&lt;<a class="el" href="activation__quant__helpers_8h.xhtml#a5a392548f2df67370cb15d2a5d75cd7b">TYPE</a>&gt;(TOLERANCE), 0.f);</td></tr>
<tr class="separator:a6c21e1e9072e5251356f8a97ffb7b98d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac598fd8a5d0b27a19e9efa5f9d4aee82"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_n_e_o_n_2_pixel_wise_multiplication_8cpp.xhtml#ac598fd8a5d0b27a19e9efa5f9d4aee82">PIXEL_WISE_MULTIPLICATION_DATA_TEST_CASE</a>(DT1,  DT2,  SCALE,  RP)</td></tr>
<tr class="separator:ac598fd8a5d0b27a19e9efa5f9d4aee82"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a715b00582b213476123ac1439e8e0c1a"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_n_e_o_n_2_pixel_wise_multiplication_8cpp.xhtml#a715b00582b213476123ac1439e8e0c1a">PIXEL_WISE_MULTIPLICATION_FIXTURE_DATA_TEST_CASE</a>(TEST_NAME,  FIXTURE,  MODE,  SHAPES,  DT1,  DT2,  SCALE,  RP,  <a class="el" href="_n_e_o_n_2_pixel_wise_multiplication_8cpp.xhtml#a8d69c709ef45fd63b622f283b0723eaf">VALIDATE</a>)</td></tr>
<tr class="separator:a715b00582b213476123ac1439e8e0c1a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:a4a184dc16ffe872f9109749caa16f424"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4a184dc16ffe872f9109749caa16f424">NEPixelWiseMultiplicationQASYMM8Fixture</a> = PixelWiseMultiplicationValidationQuantizedFixture&lt; Tensor, Accessor, NEPixelWiseMultiplication, uint8_t, uint8_t &gt;</td></tr>
<tr class="separator:a4a184dc16ffe872f9109749caa16f424"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a62155134157cad332888200a48e72147"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a62155134157cad332888200a48e72147">NEPixelWiseMultiplicationQASYMM8SignedFixture</a> = PixelWiseMultiplicationValidationQuantizedFixture&lt; Tensor, Accessor, NEPixelWiseMultiplication, int8_t, int8_t &gt;</td></tr>
<tr class="separator:a62155134157cad332888200a48e72147"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2f96f1a79e47957c2154dc9b26a3b613"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a2f96f1a79e47957c2154dc9b26a3b613">NEPixelWiseMultiplicationQSYMM16Fixture</a> = PixelWiseMultiplicationValidationQuantizedFixture&lt; Tensor, Accessor, NEPixelWiseMultiplication, int16_t, int16_t &gt;</td></tr>
<tr class="separator:a2f96f1a79e47957c2154dc9b26a3b613"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afee06a3dc4c4d76774fd21379082899b"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:afee06a3dc4c4d76774fd21379082899b"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#afee06a3dc4c4d76774fd21379082899b">NEPixelWiseMultiplicationToU8Fixture</a> = PixelWiseMultiplicationValidationFixture&lt; Tensor, Accessor, NEPixelWiseMultiplication, T, uint8_t &gt;</td></tr>
<tr class="separator:afee06a3dc4c4d76774fd21379082899b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa89d74432688d58ba7731203876c55cb"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:aa89d74432688d58ba7731203876c55cb"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa89d74432688d58ba7731203876c55cb">NEPixelWiseMultiplicationToS16Fixture</a> = PixelWiseMultiplicationValidationFixture&lt; Tensor, Accessor, NEPixelWiseMultiplication, T, int16_t &gt;</td></tr>
<tr class="separator:aa89d74432688d58ba7731203876c55cb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a00633c0a03f1a6a5d04e25b365ca5750"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a00633c0a03f1a6a5d04e25b365ca5750"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00633c0a03f1a6a5d04e25b365ca5750">NEPixelWiseMultiplicationToF16Fixture</a> = PixelWiseMultiplicationValidationFixture&lt; Tensor, Accessor, NEPixelWiseMultiplication, T, half_float::half &gt;</td></tr>
<tr class="separator:a00633c0a03f1a6a5d04e25b365ca5750"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2de8d560e3aa77dcd9f7f6d9094d1174"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a2de8d560e3aa77dcd9f7f6d9094d1174"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a2de8d560e3aa77dcd9f7f6d9094d1174">NEPixelWiseMultiplicationToF32Fixture</a> = PixelWiseMultiplicationValidationFixture&lt; Tensor, Accessor, NEPixelWiseMultiplication, T, float &gt;</td></tr>
<tr class="separator:a2de8d560e3aa77dcd9f7f6d9094d1174"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa670d48d66ab33363db0a492e2453e81"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:aa670d48d66ab33363db0a492e2453e81"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa670d48d66ab33363db0a492e2453e81">NEPixelWiseMultiplicationBroadcastFixture</a> = PixelWiseMultiplicationBroadcastValidationFixture&lt; Tensor, Accessor, NEPixelWiseMultiplication, T, float &gt;</td></tr>
<tr class="separator:aa670d48d66ab33363db0a492e2453e81"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a3a139ac948058cd3e5fdeba3bc2bf544"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3a139ac948058cd3e5fdeba3bc2bf544">DATA_TEST_CASE</a> (Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(framework::dataset::make(&quot;Input1Info&quot;, { TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8_SIGNED), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8_SIGNED), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8_SIGNED), }), framework::dataset::make(&quot;Input2Info&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S16), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8_SIGNED), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8_SIGNED), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8_SIGNED), })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S16), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8_SIGNED), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8_SIGNED), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8_SIGNED), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8_SIGNED), })), framework::dataset::make(&quot;Scale&quot;,{ scale_unity, scale_unity, scale_unity, -1.f, scale_unity, scale_unity, scale_unity, scale_unity, scale_unity, scale_unity, scale_unity, scale_unity, scale_unity})), framework::dataset::make(&quot;OverflowPolicy&quot;,{ ConvertPolicy::WRAP, ConvertPolicy::WRAP, ConvertPolicy::WRAP, ConvertPolicy::WRAP, ConvertPolicy::WRAP, ConvertPolicy::WRAP, ConvertPolicy::WRAP, ConvertPolicy::WRAP, ConvertPolicy::SATURATE, ConvertPolicy::WRAP, ConvertPolicy::WRAP, ConvertPolicy::SATURATE, ConvertPolicy::WRAP, })), framework::dataset::make(&quot;Expected&quot;, { true, true, false, false, false, false, false, false, true, false, false, true, false })), input1_info, input2_info, output_info, scale, policy, expected)</td></tr>
<tr class="separator:a3a139ac948058cd3e5fdeba3bc2bf544"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0958b4a950b3d73e3e897f55e02b4146"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a0958b4a950b3d73e3e897f55e02b4146">FIXTURE_DATA_TEST_CASE</a> (RunSmall, NEPixelWiseMultiplicationQASYMM8SignedFixture, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(datasets::SmallShapes(), framework::dataset::make(&quot;DataType&quot;, DataType::QASYMM8_SIGNED)), framework::dataset::make(&quot;Scale&quot;, { scale_unity })), PixelWiseMultiplicationPolicySTZDataset), PixelWiseMultiplicationQASYMM8QuantDataset))</td></tr>
<tr class="separator:a0958b4a950b3d73e3e897f55e02b4146"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac2ed31007ae463a3cec24a581f3651f6"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac2ed31007ae463a3cec24a581f3651f6">TEST_SUITE_END</a> () const auto Int16QuantizedActivationFunctionsDataset = ActivationValidationQuantizedFixture&lt;CLTensor, CLAccessor, CLActivationLayer, T&gt;</td></tr>
<tr class="memdesc:ac2ed31007ae463a3cec24a581f3651f6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Input data sets.  <a href="namespacearm__compute_1_1test_1_1validation.xhtml#ac2ed31007ae463a3cec24a581f3651f6">More...</a><br /></td></tr>
<tr class="separator:ac2ed31007ae463a3cec24a581f3651f6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1677ae4fbcbad2fefc4913d1d4408b13"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1677ae4fbcbad2fefc4913d1d4408b13">combine</a> (combine(combine(combine(datasets::SmallShapes(), framework::dataset::make(&quot;DataType&quot;, DataType::QASYMM8)), framework::dataset::make(&quot;Scale&quot;, { scale_255 })), PixelWiseMultiplicationPolicySTNUDataset), PixelWiseMultiplicationQASYMM8QuantDataset))</td></tr>
<tr class="separator:a1677ae4fbcbad2fefc4913d1d4408b13"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a24c30832fce63a3bd60a9ce1f7973e4d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a24c30832fce63a3bd60a9ce1f7973e4d">FIXTURE_DATA_TEST_CASE</a> (RunLarge, NEPixelWiseMultiplicationQASYMM8Fixture, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(datasets::LargeShapes(), framework::dataset::make(&quot;DataType&quot;, DataType::QASYMM8)), framework::dataset::make(&quot;Scale&quot;, { scale_255 })), PixelWiseMultiplicationPolicySTNUDataset), PixelWiseMultiplicationQASYMM8QuantDataset))</td></tr>
<tr class="separator:a24c30832fce63a3bd60a9ce1f7973e4d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a29595850d2fe64fc2db2d6f5be893006"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a29595850d2fe64fc2db2d6f5be893006">combine</a> (combine(combine(combine(datasets::SmallShapes(), framework::dataset::make(&quot;DataType&quot;, DataType::QASYMM8)), framework::dataset::make(&quot;Scale&quot;, { scale_unity })), PixelWiseMultiplicationPolicySTZDataset), PixelWiseMultiplicationQASYMM8QuantDataset))</td></tr>
<tr class="separator:a29595850d2fe64fc2db2d6f5be893006"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7c4ad78dae067b8fe874e682f2bdf9aa"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7c4ad78dae067b8fe874e682f2bdf9aa">FIXTURE_DATA_TEST_CASE</a> (RunLarge, NEPixelWiseMultiplicationQASYMM8Fixture, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(datasets::LargeShapes(), framework::dataset::make(&quot;DataType&quot;, DataType::QASYMM8)), framework::dataset::make(&quot;Scale&quot;, { scale_unity })), PixelWiseMultiplicationPolicySTZDataset), PixelWiseMultiplicationQASYMM8QuantDataset))</td></tr>
<tr class="separator:a7c4ad78dae067b8fe874e682f2bdf9aa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9e9070395c8af520fa8626849237194e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a9e9070395c8af520fa8626849237194e">combine</a> (combine(combine(combine(datasets::SmallShapes(), framework::dataset::make(&quot;DataType&quot;, DataType::QASYMM8)), framework::dataset::make(&quot;Scale&quot;, { scale_other })), PixelWiseMultiplicationPolicySTZDataset), PixelWiseMultiplicationQASYMM8QuantDataset))</td></tr>
<tr class="separator:a9e9070395c8af520fa8626849237194e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac4fc2b0c7fd3a44bdd979407d259b8a8"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac4fc2b0c7fd3a44bdd979407d259b8a8">FIXTURE_DATA_TEST_CASE</a> (RunLarge, NEPixelWiseMultiplicationQASYMM8Fixture, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(datasets::LargeShapes(), framework::dataset::make(&quot;DataType&quot;, DataType::QASYMM8)), framework::dataset::make(&quot;Scale&quot;, { scale_other })), PixelWiseMultiplicationPolicySTZDataset), PixelWiseMultiplicationQASYMM8QuantDataset))</td></tr>
<tr class="separator:ac4fc2b0c7fd3a44bdd979407d259b8a8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4d4269c001596eed0a854ebdc30bbb2c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4d4269c001596eed0a854ebdc30bbb2c">combine</a> (combine(combine(combine(datasets::SmallShapes(), framework::dataset::make(&quot;DataType&quot;, DataType::QSYMM16)), framework::dataset::make(&quot;Scale&quot;, { scale_255 })), PixelWiseMultiplicationPolicySTNUDataset), PixelWiseMultiplicationQSYMM16QuantDataset))</td></tr>
<tr class="separator:a4d4269c001596eed0a854ebdc30bbb2c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8270e7333613272751d5fd3625e80104"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8270e7333613272751d5fd3625e80104">FIXTURE_DATA_TEST_CASE</a> (RunLarge, NEPixelWiseMultiplicationQSYMM16Fixture, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(datasets::LargeShapes(), framework::dataset::make(&quot;DataType&quot;, DataType::QSYMM16)), framework::dataset::make(&quot;Scale&quot;, { scale_255 })), PixelWiseMultiplicationPolicySTNUDataset), PixelWiseMultiplicationQSYMM16QuantDataset))</td></tr>
<tr class="separator:a8270e7333613272751d5fd3625e80104"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab6815ab055c71f8086d514e181517fd2"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ab6815ab055c71f8086d514e181517fd2">combine</a> (combine(combine(combine(datasets::SmallShapes(), framework::dataset::make(&quot;DataType&quot;, DataType::QSYMM16)), framework::dataset::make(&quot;Scale&quot;, { scale_unity })), PixelWiseMultiplicationPolicySTZDataset), PixelWiseMultiplicationQSYMM16QuantDataset))</td></tr>
<tr class="separator:ab6815ab055c71f8086d514e181517fd2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a900bca17f8ed533ea591fc6009511c9e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a900bca17f8ed533ea591fc6009511c9e">FIXTURE_DATA_TEST_CASE</a> (RunLarge, NEPixelWiseMultiplicationQSYMM16Fixture, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(datasets::LargeShapes(), framework::dataset::make(&quot;DataType&quot;, DataType::QSYMM16)), framework::dataset::make(&quot;Scale&quot;, { scale_unity })), PixelWiseMultiplicationPolicySTZDataset), PixelWiseMultiplicationQSYMM16QuantDataset))</td></tr>
<tr class="separator:a900bca17f8ed533ea591fc6009511c9e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a90f265b54832953b1598f9de2f60c870"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a90f265b54832953b1598f9de2f60c870">combine</a> (combine(combine(combine(datasets::SmallShapes(), framework::dataset::make(&quot;DataType&quot;, DataType::QSYMM16)), framework::dataset::make(&quot;Scale&quot;, { scale_other })), PixelWiseMultiplicationPolicySTZDataset), PixelWiseMultiplicationQSYMM16QuantDataset))</td></tr>
<tr class="separator:a90f265b54832953b1598f9de2f60c870"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a04c9cf73d4e056c6786ef03096620e07"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a04c9cf73d4e056c6786ef03096620e07">FIXTURE_DATA_TEST_CASE</a> (RunLarge, NEPixelWiseMultiplicationQSYMM16Fixture, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(datasets::LargeShapes(), framework::dataset::make(&quot;DataType&quot;, DataType::QSYMM16)), framework::dataset::make(&quot;Scale&quot;, { scale_other })), PixelWiseMultiplicationPolicySTZDataset), PixelWiseMultiplicationQSYMM16QuantDataset))</td></tr>
<tr class="separator:a04c9cf73d4e056c6786ef03096620e07"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a93909eca9713d1ebde9f796f4b9358bc"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a93909eca9713d1ebde9f796f4b9358bc">combine</a> (combine(combine(combine(combine(concat(datasets::SmallShapes(), datasets::LargeShapes()), framework::dataset::make(&quot;DataType1&quot;, DataType::U8)), framework::dataset::make(&quot;DataType2&quot;, DataType::U8)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_255))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_NEAREST_UP))</td></tr>
<tr class="separator:a93909eca9713d1ebde9f796f4b9358bc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8f725602915f9a36862ea6ff4aff925e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8f725602915f9a36862ea6ff4aff925e">FIXTURE_DATA_TEST_CASE</a> (RunSmall, NEPixelWiseMultiplicationToU8Fixture&lt; uint8_t &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(combine(datasets::SmallShapes(), framework::dataset::make(&quot;DataType1&quot;, DataType::U8)), framework::dataset::make(&quot;DataType2&quot;, DataType::U8)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_255))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_NEAREST_UP)))</td></tr>
<tr class="separator:a8f725602915f9a36862ea6ff4aff925e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a60fee647a75c9ef766fae0f41d4f14c5"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a60fee647a75c9ef766fae0f41d4f14c5">FIXTURE_DATA_TEST_CASE</a> (RunLarge, NEPixelWiseMultiplicationToU8Fixture&lt; uint8_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(datasets::LargeShapes(), framework::dataset::make(&quot;DataType1&quot;, DataType::U8)), framework::dataset::make(&quot;DataType2&quot;, DataType::U8)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_255))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_NEAREST_UP)))</td></tr>
<tr class="separator:a60fee647a75c9ef766fae0f41d4f14c5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad094e874a245764e0133c61a85e7d3a4"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad094e874a245764e0133c61a85e7d3a4">combine</a> (combine(combine(combine(combine(concat(datasets::SmallShapes(), datasets::LargeShapes()), framework::dataset::make(&quot;DataType1&quot;, DataType::U8)), framework::dataset::make(&quot;DataType2&quot;, DataType::U8)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_unity))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_ZERO))</td></tr>
<tr class="separator:ad094e874a245764e0133c61a85e7d3a4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa39faa5bc7636a7981279c09204fb4c7"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa39faa5bc7636a7981279c09204fb4c7">FIXTURE_DATA_TEST_CASE</a> (RunSmall, NEPixelWiseMultiplicationToU8Fixture&lt; uint8_t &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(combine(datasets::SmallShapes(), framework::dataset::make(&quot;DataType1&quot;, DataType::U8)), framework::dataset::make(&quot;DataType2&quot;, DataType::U8)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_unity))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_ZERO)))</td></tr>
<tr class="separator:aa39faa5bc7636a7981279c09204fb4c7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a45a9fdf5736081ef4cada3c6a13fefd1"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a45a9fdf5736081ef4cada3c6a13fefd1">FIXTURE_DATA_TEST_CASE</a> (RunLarge, NEPixelWiseMultiplicationToU8Fixture&lt; uint8_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(datasets::LargeShapes(), framework::dataset::make(&quot;DataType1&quot;, DataType::U8)), framework::dataset::make(&quot;DataType2&quot;, DataType::U8)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_unity))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_ZERO)))</td></tr>
<tr class="separator:a45a9fdf5736081ef4cada3c6a13fefd1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a246ff6c535c53ebc0fed7a9a2ba8b3cf"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a246ff6c535c53ebc0fed7a9a2ba8b3cf">combine</a> (combine(combine(combine(combine(concat(datasets::SmallShapes(), datasets::LargeShapes()), framework::dataset::make(&quot;DataType1&quot;, DataType::U8)), framework::dataset::make(&quot;DataType2&quot;, DataType::U8)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_other))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_ZERO))</td></tr>
<tr class="separator:a246ff6c535c53ebc0fed7a9a2ba8b3cf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeef7e78eea6da0668b136ced1176a734"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aeef7e78eea6da0668b136ced1176a734">FIXTURE_DATA_TEST_CASE</a> (RunSmall, NEPixelWiseMultiplicationToU8Fixture&lt; uint8_t &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(combine(datasets::SmallShapes(), framework::dataset::make(&quot;DataType1&quot;, DataType::U8)), framework::dataset::make(&quot;DataType2&quot;, DataType::U8)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_other))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_ZERO)))</td></tr>
<tr class="separator:aeef7e78eea6da0668b136ced1176a734"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5a3441aa92b954816ec3a2154b6ba1e9"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5a3441aa92b954816ec3a2154b6ba1e9">FIXTURE_DATA_TEST_CASE</a> (RunLarge, NEPixelWiseMultiplicationToU8Fixture&lt; uint8_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(datasets::LargeShapes(), framework::dataset::make(&quot;DataType1&quot;, DataType::U8)), framework::dataset::make(&quot;DataType2&quot;, DataType::U8)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_other))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_ZERO)))</td></tr>
<tr class="separator:a5a3441aa92b954816ec3a2154b6ba1e9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a40cf8fe3a3c43782b0347ae818e5c798"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a40cf8fe3a3c43782b0347ae818e5c798">combine</a> (combine(combine(combine(combine(concat(datasets::SmallShapes(), datasets::LargeShapes()), framework::dataset::make(&quot;DataType1&quot;, DataType::U8)), framework::dataset::make(&quot;DataType2&quot;, DataType::S16)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_255))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_NEAREST_UP))</td></tr>
<tr class="separator:a40cf8fe3a3c43782b0347ae818e5c798"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a05f89ccd037778e4faae08db8a57c3eb"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a05f89ccd037778e4faae08db8a57c3eb">FIXTURE_DATA_TEST_CASE</a> (RunSmall, NEPixelWiseMultiplicationToS16Fixture&lt; uint8_t &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(combine(datasets::SmallShapes(), framework::dataset::make(&quot;DataType1&quot;, DataType::U8)), framework::dataset::make(&quot;DataType2&quot;, DataType::S16)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_255))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_NEAREST_UP)))</td></tr>
<tr class="separator:a05f89ccd037778e4faae08db8a57c3eb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac089d4ab2011db4bc96f46c617362c62"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac089d4ab2011db4bc96f46c617362c62">FIXTURE_DATA_TEST_CASE</a> (RunLarge, NEPixelWiseMultiplicationToS16Fixture&lt; uint8_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(datasets::LargeShapes(), framework::dataset::make(&quot;DataType1&quot;, DataType::U8)), framework::dataset::make(&quot;DataType2&quot;, DataType::S16)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_255))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_NEAREST_UP)))</td></tr>
<tr class="separator:ac089d4ab2011db4bc96f46c617362c62"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a547ec451bd92391b6fac0ec4b6daa8be"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a547ec451bd92391b6fac0ec4b6daa8be">combine</a> (combine(combine(combine(combine(concat(datasets::SmallShapes(), datasets::LargeShapes()), framework::dataset::make(&quot;DataType1&quot;, DataType::U8)), framework::dataset::make(&quot;DataType2&quot;, DataType::S16)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_unity))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_ZERO))</td></tr>
<tr class="separator:a547ec451bd92391b6fac0ec4b6daa8be"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae3a0f90a41ed20795d362db90913ca42"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae3a0f90a41ed20795d362db90913ca42">FIXTURE_DATA_TEST_CASE</a> (RunSmall, NEPixelWiseMultiplicationToS16Fixture&lt; uint8_t &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(combine(datasets::SmallShapes(), framework::dataset::make(&quot;DataType1&quot;, DataType::U8)), framework::dataset::make(&quot;DataType2&quot;, DataType::S16)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_unity))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_ZERO)))</td></tr>
<tr class="separator:ae3a0f90a41ed20795d362db90913ca42"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab38f2668572d3766460002cad2f12063"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ab38f2668572d3766460002cad2f12063">FIXTURE_DATA_TEST_CASE</a> (RunLarge, NEPixelWiseMultiplicationToS16Fixture&lt; uint8_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(datasets::LargeShapes(), framework::dataset::make(&quot;DataType1&quot;, DataType::U8)), framework::dataset::make(&quot;DataType2&quot;, DataType::S16)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_unity))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_ZERO)))</td></tr>
<tr class="separator:ab38f2668572d3766460002cad2f12063"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a43dac421227584910e1cf5fdc40e37bc"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a43dac421227584910e1cf5fdc40e37bc">combine</a> (combine(combine(combine(combine(concat(datasets::SmallShapes(), datasets::LargeShapes()), framework::dataset::make(&quot;DataType1&quot;, DataType::U8)), framework::dataset::make(&quot;DataType2&quot;, DataType::S16)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_other))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_ZERO))</td></tr>
<tr class="separator:a43dac421227584910e1cf5fdc40e37bc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae9c5149638f83cdec624f15c992a1c87"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae9c5149638f83cdec624f15c992a1c87">FIXTURE_DATA_TEST_CASE</a> (RunSmall, NEPixelWiseMultiplicationToS16Fixture&lt; uint8_t &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(combine(datasets::SmallShapes(), framework::dataset::make(&quot;DataType1&quot;, DataType::U8)), framework::dataset::make(&quot;DataType2&quot;, DataType::S16)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_other))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_ZERO)))</td></tr>
<tr class="separator:ae9c5149638f83cdec624f15c992a1c87"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0a8e207b93423f59931b89c0461915ab"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a0a8e207b93423f59931b89c0461915ab">FIXTURE_DATA_TEST_CASE</a> (RunLarge, NEPixelWiseMultiplicationToS16Fixture&lt; uint8_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(datasets::LargeShapes(), framework::dataset::make(&quot;DataType1&quot;, DataType::U8)), framework::dataset::make(&quot;DataType2&quot;, DataType::S16)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_other))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_ZERO)))</td></tr>
<tr class="separator:a0a8e207b93423f59931b89c0461915ab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a429340c0121881e7301e17804f50bb16"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a429340c0121881e7301e17804f50bb16">combine</a> (combine(combine(combine(combine(concat(datasets::SmallShapes(), datasets::LargeShapes()), framework::dataset::make(&quot;DataType1&quot;, DataType::S16)), framework::dataset::make(&quot;DataType2&quot;, DataType::S16)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_255))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_NEAREST_UP))</td></tr>
<tr class="separator:a429340c0121881e7301e17804f50bb16"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4a869936fe653dfaf2cc28abdda8dad6"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4a869936fe653dfaf2cc28abdda8dad6">FIXTURE_DATA_TEST_CASE</a> (RunSmall, NEPixelWiseMultiplicationToS16Fixture&lt; int16_t &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(combine(datasets::SmallShapes(), framework::dataset::make(&quot;DataType1&quot;, DataType::S16)), framework::dataset::make(&quot;DataType2&quot;, DataType::S16)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_255))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_NEAREST_UP)))</td></tr>
<tr class="separator:a4a869936fe653dfaf2cc28abdda8dad6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afcdc8de20e27ba531bfef776ecdface3"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#afcdc8de20e27ba531bfef776ecdface3">FIXTURE_DATA_TEST_CASE</a> (RunLarge, NEPixelWiseMultiplicationToS16Fixture&lt; int16_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(datasets::LargeShapes(), framework::dataset::make(&quot;DataType1&quot;, DataType::S16)), framework::dataset::make(&quot;DataType2&quot;, DataType::S16)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_255))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_NEAREST_UP)))</td></tr>
<tr class="separator:afcdc8de20e27ba531bfef776ecdface3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a1bcc11395e1ae79eb8b7690755a659"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6a1bcc11395e1ae79eb8b7690755a659">combine</a> (combine(combine(combine(combine(concat(datasets::SmallShapes(), datasets::LargeShapes()), framework::dataset::make(&quot;DataType1&quot;, DataType::S16)), framework::dataset::make(&quot;DataType2&quot;, DataType::S16)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_unity))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_ZERO))</td></tr>
<tr class="separator:a6a1bcc11395e1ae79eb8b7690755a659"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a051d3165eccbd35e75fa2fdb6385d244"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a051d3165eccbd35e75fa2fdb6385d244">FIXTURE_DATA_TEST_CASE</a> (RunSmall, NEPixelWiseMultiplicationToS16Fixture&lt; int16_t &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(combine(datasets::SmallShapes(), framework::dataset::make(&quot;DataType1&quot;, DataType::S16)), framework::dataset::make(&quot;DataType2&quot;, DataType::S16)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_unity))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_ZERO)))</td></tr>
<tr class="separator:a051d3165eccbd35e75fa2fdb6385d244"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2b784b3c67ae875ff7627e3a535dcac8"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a2b784b3c67ae875ff7627e3a535dcac8">FIXTURE_DATA_TEST_CASE</a> (RunLarge, NEPixelWiseMultiplicationToS16Fixture&lt; int16_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(datasets::LargeShapes(), framework::dataset::make(&quot;DataType1&quot;, DataType::S16)), framework::dataset::make(&quot;DataType2&quot;, DataType::S16)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_unity))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_ZERO)))</td></tr>
<tr class="separator:a2b784b3c67ae875ff7627e3a535dcac8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5b1c766fcd694609051e4d7a8fdb0df1"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5b1c766fcd694609051e4d7a8fdb0df1">combine</a> (combine(combine(combine(combine(concat(datasets::SmallShapes(), datasets::LargeShapes()), framework::dataset::make(&quot;DataType1&quot;, DataType::S16)), framework::dataset::make(&quot;DataType2&quot;, DataType::S16)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_other))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_ZERO))</td></tr>
<tr class="separator:a5b1c766fcd694609051e4d7a8fdb0df1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a95230ffbed4068c3da024bec3f27b334"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a95230ffbed4068c3da024bec3f27b334">FIXTURE_DATA_TEST_CASE</a> (RunSmall, NEPixelWiseMultiplicationToS16Fixture&lt; int16_t &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(combine(datasets::SmallShapes(), framework::dataset::make(&quot;DataType1&quot;, DataType::S16)), framework::dataset::make(&quot;DataType2&quot;, DataType::S16)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_other))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_ZERO)))</td></tr>
<tr class="separator:a95230ffbed4068c3da024bec3f27b334"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a73a6f7f4d28a884a3bd6831a27a720cc"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a73a6f7f4d28a884a3bd6831a27a720cc">FIXTURE_DATA_TEST_CASE</a> (RunLarge, NEPixelWiseMultiplicationToS16Fixture&lt; int16_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(datasets::LargeShapes(), framework::dataset::make(&quot;DataType1&quot;, DataType::S16)), framework::dataset::make(&quot;DataType2&quot;, DataType::S16)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_other))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_ZERO)))</td></tr>
<tr class="separator:a73a6f7f4d28a884a3bd6831a27a720cc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a501df29d417ae1790160ebc1357d1717"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a501df29d417ae1790160ebc1357d1717">combine</a> (combine(combine(combine(combine(concat(datasets::SmallShapes(), datasets::LargeShapes()), framework::dataset::make(&quot;DataType1&quot;, DataType::F32)), framework::dataset::make(&quot;DataType2&quot;, DataType::F32)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_255))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_NEAREST_UP))</td></tr>
<tr class="separator:a501df29d417ae1790160ebc1357d1717"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a027c9ed250173025e2469ad5d5818c69"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a027c9ed250173025e2469ad5d5818c69">FIXTURE_DATA_TEST_CASE</a> (RunSmall, NEPixelWiseMultiplicationToF32Fixture&lt; float &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(combine(datasets::SmallShapes(), framework::dataset::make(&quot;DataType1&quot;, DataType::F32)), framework::dataset::make(&quot;DataType2&quot;, DataType::F32)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_255))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_NEAREST_UP)))</td></tr>
<tr class="separator:a027c9ed250173025e2469ad5d5818c69"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a59c6093a849cb44df90025dea3366400"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a59c6093a849cb44df90025dea3366400">FIXTURE_DATA_TEST_CASE</a> (RunLarge, NEPixelWiseMultiplicationToF32Fixture&lt; float &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(datasets::LargeShapes(), framework::dataset::make(&quot;DataType1&quot;, DataType::F32)), framework::dataset::make(&quot;DataType2&quot;, DataType::F32)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_255))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_NEAREST_UP)))</td></tr>
<tr class="separator:a59c6093a849cb44df90025dea3366400"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a46c2c41e06d21c47f960505c9f49fa0d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a46c2c41e06d21c47f960505c9f49fa0d">combine</a> (combine(combine(combine(combine(concat(datasets::SmallShapes(), datasets::LargeShapes()), framework::dataset::make(&quot;DataType1&quot;, DataType::F32)), framework::dataset::make(&quot;DataType2&quot;, DataType::F32)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_unity))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_ZERO))</td></tr>
<tr class="separator:a46c2c41e06d21c47f960505c9f49fa0d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afe68ff0cc80b6d68c2bd56a1dd330514"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#afe68ff0cc80b6d68c2bd56a1dd330514">FIXTURE_DATA_TEST_CASE</a> (RunSmall, NEPixelWiseMultiplicationToF32Fixture&lt; float &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(combine(datasets::SmallShapes(), framework::dataset::make(&quot;DataType1&quot;, DataType::F32)), framework::dataset::make(&quot;DataType2&quot;, DataType::F32)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_unity))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_ZERO)))</td></tr>
<tr class="separator:afe68ff0cc80b6d68c2bd56a1dd330514"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac52b56b57d9dcfdb12e0df9da3eb5b75"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac52b56b57d9dcfdb12e0df9da3eb5b75">FIXTURE_DATA_TEST_CASE</a> (RunLarge, NEPixelWiseMultiplicationToF32Fixture&lt; float &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(datasets::LargeShapes(), framework::dataset::make(&quot;DataType1&quot;, DataType::F32)), framework::dataset::make(&quot;DataType2&quot;, DataType::F32)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_unity))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_ZERO)))</td></tr>
<tr class="separator:ac52b56b57d9dcfdb12e0df9da3eb5b75"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af664738437237ceaafa84915b636396b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#af664738437237ceaafa84915b636396b">combine</a> (combine(combine(combine(combine(concat(datasets::SmallShapes(), datasets::LargeShapes()), framework::dataset::make(&quot;DataType1&quot;, DataType::F32)), framework::dataset::make(&quot;DataType2&quot;, DataType::F32)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_other))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_ZERO))</td></tr>
<tr class="separator:af664738437237ceaafa84915b636396b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acaca42ec0ec6459356598dba527eaf06"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#acaca42ec0ec6459356598dba527eaf06">FIXTURE_DATA_TEST_CASE</a> (RunSmall, NEPixelWiseMultiplicationToF32Fixture&lt; float &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(combine(datasets::SmallShapes(), framework::dataset::make(&quot;DataType1&quot;, DataType::F32)), framework::dataset::make(&quot;DataType2&quot;, DataType::F32)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_other))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_ZERO)))</td></tr>
<tr class="separator:acaca42ec0ec6459356598dba527eaf06"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aed966eb5c0c998ceed6fc0a11dc83848"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aed966eb5c0c998ceed6fc0a11dc83848">FIXTURE_DATA_TEST_CASE</a> (RunLarge, NEPixelWiseMultiplicationToF32Fixture&lt; float &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(datasets::LargeShapes(), framework::dataset::make(&quot;DataType1&quot;, DataType::F32)), framework::dataset::make(&quot;DataType2&quot;, DataType::F32)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_other))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_ZERO)))</td></tr>
<tr class="separator:aed966eb5c0c998ceed6fc0a11dc83848"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a274d2afc8082b3cdf926001c5969d317"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a274d2afc8082b3cdf926001c5969d317">combine</a> (combine(combine(combine(combine(datasets::SmallShapesBroadcast(), framework::dataset::make(&quot;DataType1&quot;, DataType::F32)), framework::dataset::make(&quot;DataType2&quot;, DataType::F32)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_255))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_NEAREST_UP)))</td></tr>
<tr class="separator:a274d2afc8082b3cdf926001c5969d317"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:a291ba30858ed1dc2a1154ddfcf28eac9"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a291ba30858ed1dc2a1154ddfcf28eac9">dt1</a></td></tr>
<tr class="separator:a291ba30858ed1dc2a1154ddfcf28eac9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a80668d60af0d74d7e9f33bf4a233d695"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a80668d60af0d74d7e9f33bf4a233d695">dt2</a></td></tr>
<tr class="separator:a80668d60af0d74d7e9f33bf4a233d695"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acec6d8ad52a28972fa74e071c1a63b6a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#acec6d8ad52a28972fa74e071c1a63b6a">scale</a></td></tr>
<tr class="separator:acec6d8ad52a28972fa74e071c1a63b6a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5d58c32bff63e4c34b3234f884a4da58"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5d58c32bff63e4c34b3234f884a4da58">convert_policy</a></td></tr>
<tr class="separator:a5d58c32bff63e4c34b3234f884a4da58"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a60ad1078faeaf3f59266d69ad937339f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a60ad1078faeaf3f59266d69ad937339f">rounding_policy</a> { validate_configuration(shape, dt1, dt2, scale, convert_policy, rounding_policy)</td></tr>
<tr class="separator:a60ad1078faeaf3f59266d69ad937339f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2e7e44aefaae0abe0312a137133917c4"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a2e7e44aefaae0abe0312a137133917c4">NEPixelWiseMultiplicationBroadcastFixture&lt; float &gt;</a></td></tr>
<tr class="separator:a2e7e44aefaae0abe0312a137133917c4"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Macro Definition Documentation</h2>
<a id="aafb2ac305c1cfb580f29d538687f1fb5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aafb2ac305c1cfb580f29d538687f1fb5">&#9670;&nbsp;</a></span>DEFAULT_VALIDATE</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define DEFAULT_VALIDATE&#160;&#160;&#160;validate(Accessor(_target), _reference);</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_n_e_o_n_2_pixel_wise_multiplication_8cpp_source.xhtml#l00067">67</a> of file <a class="el" href="_n_e_o_n_2_pixel_wise_multiplication_8cpp_source.xhtml">PixelWiseMultiplication.cpp</a>.</p>

</div>
</div>
<a id="ac598fd8a5d0b27a19e9efa5f9d4aee82"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac598fd8a5d0b27a19e9efa5f9d4aee82">&#9670;&nbsp;</a></span>PIXEL_WISE_MULTIPLICATION_DATA_TEST_CASE</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PIXEL_WISE_MULTIPLICATION_DATA_TEST_CASE</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">DT1, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">DT2, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">SCALE, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">RP&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line"><a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3a139ac948058cd3e5fdeba3bc2bf544">DATA_TEST_CASE</a>(Configuration, framework::DatasetMode::ALL,                                                   \</div><div class="line">                   <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#af664738437237ceaafa84915b636396b">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#af664738437237ceaafa84915b636396b">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#af664738437237ceaafa84915b636396b">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#af664738437237ceaafa84915b636396b">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#af664738437237ceaafa84915b636396b">combine</a>(                                                      \</div><div class="line">                   <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a20b2c46a6ccea85acf64c599a68251d7">concat</a>(datasets::SmallShapes(), datasets::LargeShapes()),                                     \</div><div class="line">                   <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">framework::dataset::make</a>(<span class="stringliteral">&quot;DataType1&quot;</span>, DataType::DT1)),                                        \</div><div class="line">                   <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">framework::dataset::make</a>(<span class="stringliteral">&quot;DataType2&quot;</span>, DataType::DT2)),                                        \</div><div class="line">                   <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">framework::dataset::make</a>(<span class="stringliteral">&quot;Scale&quot;</span>, std::move(SCALE))),                                         \</div><div class="line">                   datasets::ConvertPolicies()),                                                                 \</div><div class="line">                   <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">framework::dataset::make</a>(<span class="stringliteral">&quot;RoundingPolicy&quot;</span>, RoundingPolicy::RP)),                              \</div><div class="line">                   <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">shape</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a291ba30858ed1dc2a1154ddfcf28eac9">dt1</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a80668d60af0d74d7e9f33bf4a233d695">dt2</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acec6d8ad52a28972fa74e071c1a63b6a">scale</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5d58c32bff63e4c34b3234f884a4da58">convert_policy</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a60ad1078faeaf3f59266d69ad937339f">rounding_policy</a>)                                      \</div><div class="line">    {                                                                                                            \</div><div class="line">        validate_configuration(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">shape</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a291ba30858ed1dc2a1154ddfcf28eac9">dt1</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a80668d60af0d74d7e9f33bf4a233d695">dt2</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acec6d8ad52a28972fa74e071c1a63b6a">scale</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5d58c32bff63e4c34b3234f884a4da58">convert_policy</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a60ad1078faeaf3f59266d69ad937339f">rounding_policy</a>);                         \</div><div class="line">    }</div><div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_af664738437237ceaafa84915b636396b"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#af664738437237ceaafa84915b636396b">arm_compute::test::validation::combine</a></div><div class="ttdeci">combine(combine(combine(combine(combine(concat(datasets::SmallShapes(), datasets::LargeShapes()), framework::dataset::make(&quot;DataType1&quot;, DataType::F32)), framework::dataset::make(&quot;DataType2&quot;, DataType::F32)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_other))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_ZERO))</div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a45cde9abb508c62d67c3bb2b9bf566a5"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">arm_compute::test::validation::shape</a></div><div class="ttdeci">shape</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_absolute_difference_8cpp_source.xhtml#l00097">AbsoluteDifference.cpp:97</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a80668d60af0d74d7e9f33bf4a233d695"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a80668d60af0d74d7e9f33bf4a233d695">arm_compute::test::validation::dt2</a></div><div class="ttdeci">dt2</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_o_n_2_pixel_wise_multiplication_8cpp_source.xhtml#l00375">PixelWiseMultiplication.cpp:375</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a5d58c32bff63e4c34b3234f884a4da58"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a5d58c32bff63e4c34b3234f884a4da58">arm_compute::test::validation::convert_policy</a></div><div class="ttdeci">convert_policy</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_o_n_2_pixel_wise_multiplication_8cpp_source.xhtml#l00375">PixelWiseMultiplication.cpp:375</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1framework_1_1dataset_xhtml_a352791fb808d42a82ad70df5efa3508b"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">arm_compute::test::framework::dataset::make</a></div><div class="ttdeci">std::enable_if&lt; is_container&lt; T &gt;::value, ContainerDataset&lt; T &gt; &gt;::type make(std::string name, T &amp;&amp;values)</div><div class="ttdoc">Helper function to create a ContainerDataset.</div><div class="ttdef"><b>Definition:</b> <a href="_container_dataset_8h_source.xhtml#l00161">ContainerDataset.h:161</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a3a139ac948058cd3e5fdeba3bc2bf544"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a3a139ac948058cd3e5fdeba3bc2bf544">arm_compute::test::validation::DATA_TEST_CASE</a></div><div class="ttdeci">DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(framework::dataset::make(&quot;Input1Info&quot;, { TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8_SIGNED), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8_SIGNED), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8_SIGNED), }), framework::dataset::make(&quot;Input2Info&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S16), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8_SIGNED), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8_SIGNED), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8_SIGNED), })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S16), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8_SIGNED), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8_SIGNED), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8_SIGNED), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8_SIGNED), })), framework::dataset::make(&quot;Scale&quot;,{ scale_unity, scale_unity, scale_unity, -1.f, scale_unity, scale_unity, scale_unity, scale_unity, scale_unity, scale_unity, scale_unity, scale_unity, scale_unity})), framework::dataset::make(&quot;OverflowPolicy&quot;,{ ConvertPolicy::WRAP, ConvertPolicy::WRAP, ConvertPolicy::WRAP, ConvertPolicy::WRAP, ConvertPolicy::WRAP, ConvertPolicy::WRAP, ConvertPolicy::WRAP, ConvertPolicy::WRAP, ConvertPolicy::SATURATE, ConvertPolicy::WRAP, ConvertPolicy::WRAP, ConvertPolicy::SATURATE, ConvertPolicy::WRAP, })), framework::dataset::make(&quot;Expected&quot;, { true, true, false, false, false, false, false, false, true, false, false, true, false })), input1_info, input2_info, output_info, scale, policy, expected)</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_o_n_2_pixel_wise_multiplication_8cpp_source.xhtml#l00150">PixelWiseMultiplication.cpp:150</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a291ba30858ed1dc2a1154ddfcf28eac9"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a291ba30858ed1dc2a1154ddfcf28eac9">arm_compute::test::validation::dt1</a></div><div class="ttdeci">dt1</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_o_n_2_pixel_wise_multiplication_8cpp_source.xhtml#l00375">PixelWiseMultiplication.cpp:375</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_acec6d8ad52a28972fa74e071c1a63b6a"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#acec6d8ad52a28972fa74e071c1a63b6a">arm_compute::test::validation::scale</a></div><div class="ttdeci">scale</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_o_n_2_pixel_wise_multiplication_8cpp_source.xhtml#l00375">PixelWiseMultiplication.cpp:375</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a60ad1078faeaf3f59266d69ad937339f"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a60ad1078faeaf3f59266d69ad937339f">arm_compute::test::validation::rounding_policy</a></div><div class="ttdeci">rounding_policy</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_o_n_2_pixel_wise_multiplication_8cpp_source.xhtml#l00375">PixelWiseMultiplication.cpp:375</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1framework_1_1dataset_xhtml_a20b2c46a6ccea85acf64c599a68251d7"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a20b2c46a6ccea85acf64c599a68251d7">arm_compute::test::framework::dataset::concat</a></div><div class="ttdeci">JoinDataset&lt; T, U &gt; concat(T &amp;&amp;dataset1, U &amp;&amp;dataset2)</div><div class="ttdoc">Helper function to create a JoinDataset.</div><div class="ttdef"><b>Definition:</b> <a href="_join_dataset_8h_source.xhtml#l00160">JoinDataset.h:160</a></div></div>
</div><!-- fragment -->
<p class="definition">Definition at line <a class="el" href="_n_e_o_n_2_pixel_wise_multiplication_8cpp_source.xhtml#l00073">73</a> of file <a class="el" href="_n_e_o_n_2_pixel_wise_multiplication_8cpp_source.xhtml">PixelWiseMultiplication.cpp</a>.</p>

</div>
</div>
<a id="a715b00582b213476123ac1439e8e0c1a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a715b00582b213476123ac1439e8e0c1a">&#9670;&nbsp;</a></span>PIXEL_WISE_MULTIPLICATION_FIXTURE_DATA_TEST_CASE</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PIXEL_WISE_MULTIPLICATION_FIXTURE_DATA_TEST_CASE</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">TEST_NAME, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">FIXTURE, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">MODE, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">SHAPES, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">DT1, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">DT2, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">SCALE, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">RP, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><a class="el" href="_n_e_o_n_2_pixel_wise_multiplication_8cpp.xhtml#a8d69c709ef45fd63b622f283b0723eaf">VALIDATE</a>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line"><a class="code" href="tests_2framework_2_macros_8h.xhtml#a42699a26fbdddf91da4aa58a610bb8a8">FIXTURE_DATA_TEST_CASE</a>(TEST_NAME, NEPixelWiseMultiplication##FIXTURE, framework::DatasetMode::MODE,                   \</div><div class="line">                           <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#af664738437237ceaafa84915b636396b">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#af664738437237ceaafa84915b636396b">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#af664738437237ceaafa84915b636396b">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#af664738437237ceaafa84915b636396b">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#af664738437237ceaafa84915b636396b">combine</a>(                                                       \</div><div class="line">                           datasets::SHAPES,                                                                              \</div><div class="line">                           <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">framework::dataset::make</a>(<span class="stringliteral">&quot;DataType1&quot;</span>, DataType::DT1)),                                         \</div><div class="line">                           <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">framework::dataset::make</a>(<span class="stringliteral">&quot;DataType2&quot;</span>, DataType::DT2)),                                         \</div><div class="line">                           <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">framework::dataset::make</a>(<span class="stringliteral">&quot;Scale&quot;</span>, std::move(SCALE))),                                          \</div><div class="line">                           datasets::ConvertPolicies()),                                                                  \</div><div class="line">                           <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">framework::dataset::make</a>(<span class="stringliteral">&quot;RoundingPolicy&quot;</span>, RoundingPolicy::RP)))                               \</div><div class="line">    {                                                                                                                     \</div><div class="line">        VALIDATE                                                                                                          \</div><div class="line">    }</div><div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_af664738437237ceaafa84915b636396b"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#af664738437237ceaafa84915b636396b">arm_compute::test::validation::combine</a></div><div class="ttdeci">combine(combine(combine(combine(combine(concat(datasets::SmallShapes(), datasets::LargeShapes()), framework::dataset::make(&quot;DataType1&quot;, DataType::F32)), framework::dataset::make(&quot;DataType2&quot;, DataType::F32)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_other))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_ZERO))</div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1framework_1_1dataset_xhtml_a352791fb808d42a82ad70df5efa3508b"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">arm_compute::test::framework::dataset::make</a></div><div class="ttdeci">std::enable_if&lt; is_container&lt; T &gt;::value, ContainerDataset&lt; T &gt; &gt;::type make(std::string name, T &amp;&amp;values)</div><div class="ttdoc">Helper function to create a ContainerDataset.</div><div class="ttdef"><b>Definition:</b> <a href="_container_dataset_8h_source.xhtml#l00161">ContainerDataset.h:161</a></div></div>
<div class="ttc" id="tests_2framework_2_macros_8h_xhtml_a42699a26fbdddf91da4aa58a610bb8a8"><div class="ttname"><a href="tests_2framework_2_macros_8h.xhtml#a42699a26fbdddf91da4aa58a610bb8a8">FIXTURE_DATA_TEST_CASE</a></div><div class="ttdeci">#define FIXTURE_DATA_TEST_CASE(TEST_NAME, FIXTURE, MODE, DATASET)</div><div class="ttdef"><b>Definition:</b> <a href="tests_2framework_2_macros_8h_source.xhtml#l00229">Macros.h:229</a></div></div>
</div><!-- fragment -->
<p class="definition">Definition at line <a class="el" href="_n_e_o_n_2_pixel_wise_multiplication_8cpp_source.xhtml#l00087">87</a> of file <a class="el" href="_n_e_o_n_2_pixel_wise_multiplication_8cpp_source.xhtml">PixelWiseMultiplication.cpp</a>.</p>

</div>
</div>
<a id="a8d69c709ef45fd63b622f283b0723eaf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8d69c709ef45fd63b622f283b0723eaf">&#9670;&nbsp;</a></span>VALIDATE</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define VALIDATE</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><a class="el" href="activation__quant__helpers_8h.xhtml#a5a392548f2df67370cb15d2a5d75cd7b">TYPE</a>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">TOLERANCE&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;validate(Accessor(_target), _reference, AbsoluteTolerance&lt;<a class="el" href="activation__quant__helpers_8h.xhtml#a5a392548f2df67370cb15d2a5d75cd7b">TYPE</a>&gt;(TOLERANCE), 0.f);</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_n_e_o_n_2_pixel_wise_multiplication_8cpp_source.xhtml#l00068">68</a> of file <a class="el" href="_n_e_o_n_2_pixel_wise_multiplication_8cpp_source.xhtml">PixelWiseMultiplication.cpp</a>.</p>

</div>
</div>
<a id="a6c21e1e9072e5251356f8a97ffb7b98d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6c21e1e9072e5251356f8a97ffb7b98d">&#9670;&nbsp;</a></span>WRAP_VALIDATE</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define WRAP_VALIDATE</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><a class="el" href="activation__quant__helpers_8h.xhtml#a5a392548f2df67370cb15d2a5d75cd7b">TYPE</a>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">TOLERANCE&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;validate_wrap(Accessor(_target), _reference, AbsoluteTolerance&lt;<a class="el" href="activation__quant__helpers_8h.xhtml#a5a392548f2df67370cb15d2a5d75cd7b">TYPE</a>&gt;(TOLERANCE), 0.f);</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_n_e_o_n_2_pixel_wise_multiplication_8cpp_source.xhtml#l00069">69</a> of file <a class="el" href="_n_e_o_n_2_pixel_wise_multiplication_8cpp_source.xhtml">PixelWiseMultiplication.cpp</a>.</p>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_59425e443f801f1f2fd8bbe4959a3ccf.xhtml">tests</a></li><li class="navelem"><a class="el" href="dir_e7c7b16542faa38cb4655ff1750d3604.xhtml">validation</a></li><li class="navelem"><a class="el" href="dir_0538a82dae0483a21d0f1e9d7e0a45c6.xhtml">NEON</a></li><li class="navelem"><a class="el" href="_n_e_o_n_2_pixel_wise_multiplication_8cpp.xhtml">PixelWiseMultiplication.cpp</a></li>
    <li class="footer">Generated on Thu Mar 5 2020 16:07:08 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
