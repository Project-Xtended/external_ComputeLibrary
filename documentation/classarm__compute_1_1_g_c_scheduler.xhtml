<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: GCScheduler Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classarm__compute_1_1_g_c_scheduler.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">GCScheduler Class Reference<span class="mlabels"><span class="mlabel">final</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p>Provides global access to a OpenGL ES context and command queue.  
 <a href="classarm__compute_1_1_g_c_scheduler.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_g_c_scheduler_8h_source.xhtml">GCScheduler.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a9af3c44162fc357b39278c4c52090163"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_g_c_scheduler.xhtml#a9af3c44162fc357b39278c4c52090163">GCScheduler</a> ()</td></tr>
<tr class="memdesc:a9af3c44162fc357b39278c4c52090163"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="#a9af3c44162fc357b39278c4c52090163">More...</a><br /></td></tr>
<tr class="separator:a9af3c44162fc357b39278c4c52090163"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae85977518e8888d20716029899d94b24"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_g_c_scheduler.xhtml#ae85977518e8888d20716029899d94b24">~GCScheduler</a> ()</td></tr>
<tr class="memdesc:ae85977518e8888d20716029899d94b24"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor.  <a href="#ae85977518e8888d20716029899d94b24">More...</a><br /></td></tr>
<tr class="separator:ae85977518e8888d20716029899d94b24"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa033d4d0b5e7dd622b3f0d381581cb5b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_g_c_scheduler.xhtml#aa033d4d0b5e7dd622b3f0d381581cb5b">GCScheduler</a> (const <a class="el" href="classarm__compute_1_1_g_c_scheduler.xhtml">GCScheduler</a> &amp;)=delete</td></tr>
<tr class="memdesc:aa033d4d0b5e7dd622b3f0d381581cb5b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied.  <a href="#aa033d4d0b5e7dd622b3f0d381581cb5b">More...</a><br /></td></tr>
<tr class="separator:aa033d4d0b5e7dd622b3f0d381581cb5b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a31afe20424274e6781a97d8b3561e680"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_g_c_scheduler.xhtml">GCScheduler</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_g_c_scheduler.xhtml#a31afe20424274e6781a97d8b3561e680">operator=</a> (const <a class="el" href="classarm__compute_1_1_g_c_scheduler.xhtml">GCScheduler</a> &amp;)=delete</td></tr>
<tr class="memdesc:a31afe20424274e6781a97d8b3561e680"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied.  <a href="#a31afe20424274e6781a97d8b3561e680">More...</a><br /></td></tr>
<tr class="separator:a31afe20424274e6781a97d8b3561e680"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a19bb5002a62b62e050e89c975f7b9fdf"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_g_c_scheduler.xhtml#a19bb5002a62b62e050e89c975f7b9fdf">default_init</a> ()</td></tr>
<tr class="memdesc:a19bb5002a62b62e050e89c975f7b9fdf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialises the context and command queue used by the scheduler to default values and sets a default device and kernel path for the <a class="el" href="classarm__compute_1_1_g_c_kernel_library.xhtml">GCKernelLibrary</a>.  <a href="#a19bb5002a62b62e050e89c975f7b9fdf">More...</a><br /></td></tr>
<tr class="separator:a19bb5002a62b62e050e89c975f7b9fdf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa105f74eb3adab10bfedbbca89cbcea7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_g_c_scheduler.xhtml#aa105f74eb3adab10bfedbbca89cbcea7">default_init_with_context</a> (EGLDisplay display, EGLContext ctx)</td></tr>
<tr class="memdesc:aa105f74eb3adab10bfedbbca89cbcea7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes the context and display used by the <a class="el" href="classarm__compute_1_1_scheduler.xhtml" title="Configurable scheduler which supports multiple multithreading APIs and choosing between different sch...">Scheduler</a>.  <a href="#aa105f74eb3adab10bfedbbca89cbcea7">More...</a><br /></td></tr>
<tr class="separator:aa105f74eb3adab10bfedbbca89cbcea7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a66a29e27a51a13250143981b0ee4ad19"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_g_c_scheduler.xhtml#a66a29e27a51a13250143981b0ee4ad19">dispatch</a> (<a class="el" href="classarm__compute_1_1_i_g_c_kernel.xhtml">IGCKernel</a> &amp;kernel, bool flush=true)</td></tr>
<tr class="memdesc:a66a29e27a51a13250143981b0ee4ad19"><td class="mdescLeft">&#160;</td><td class="mdescRight">Schedule the execution of the passed kernel if possible.  <a href="#a66a29e27a51a13250143981b0ee4ad19">More...</a><br /></td></tr>
<tr class="separator:a66a29e27a51a13250143981b0ee4ad19"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9120bd38578ddee701b5526dfe2369db"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_g_c_scheduler.xhtml#a9120bd38578ddee701b5526dfe2369db">init</a> (EGLDisplay dpy, EGLContext ctx)</td></tr>
<tr class="memdesc:a9120bd38578ddee701b5526dfe2369db"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialises the display and context to be used by the scheduler.  <a href="#a9120bd38578ddee701b5526dfe2369db">More...</a><br /></td></tr>
<tr class="separator:a9120bd38578ddee701b5526dfe2369db"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2dcf87458fcfdfb5e9fdd369e0320d78"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_g_c_scheduler.xhtml#a2dcf87458fcfdfb5e9fdd369e0320d78">memory_barrier</a> ()</td></tr>
<tr class="memdesc:a2dcf87458fcfdfb5e9fdd369e0320d78"><td class="mdescLeft">&#160;</td><td class="mdescRight">Defines a barrier ordering memory transactions.  <a href="#a2dcf87458fcfdfb5e9fdd369e0320d78">More...</a><br /></td></tr>
<tr class="separator:a2dcf87458fcfdfb5e9fdd369e0320d78"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa550ff0352ff2388e02f7b0a41bf5fe7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3">GPUTarget</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_g_c_scheduler.xhtml#aa550ff0352ff2388e02f7b0a41bf5fe7">get_target</a> () const</td></tr>
<tr class="memdesc:aa550ff0352ff2388e02f7b0a41bf5fe7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the target GPU.  <a href="#aa550ff0352ff2388e02f7b0a41bf5fe7">More...</a><br /></td></tr>
<tr class="separator:aa550ff0352ff2388e02f7b0a41bf5fe7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad5ba9d34a3a855bf1dd2e36316ff550a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_g_c_scheduler.xhtml#ad5ba9d34a3a855bf1dd2e36316ff550a">set_target</a> (<a class="el" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3">GPUTarget</a> target)</td></tr>
<tr class="memdesc:ad5ba9d34a3a855bf1dd2e36316ff550a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Accessor to set target GPU to be used by the scheduler.  <a href="#ad5ba9d34a3a855bf1dd2e36316ff550a">More...</a><br /></td></tr>
<tr class="separator:ad5ba9d34a3a855bf1dd2e36316ff550a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a9c5f715748222ab9607cc52134b36b0b"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classarm__compute_1_1_g_c_scheduler.xhtml">GCScheduler</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_g_c_scheduler.xhtml#a9c5f715748222ab9607cc52134b36b0b">get</a> ()</td></tr>
<tr class="memdesc:a9c5f715748222ab9607cc52134b36b0b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Access the scheduler singleton.  <a href="#a9c5f715748222ab9607cc52134b36b0b">More...</a><br /></td></tr>
<tr class="separator:a9c5f715748222ab9607cc52134b36b0b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Provides global access to a OpenGL ES context and command queue. </p>

<p class="definition">Definition at line <a class="el" href="_g_c_scheduler_8h_source.xhtml#l00037">37</a> of file <a class="el" href="_g_c_scheduler_8h_source.xhtml">GCScheduler.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a9af3c44162fc357b39278c4c52090163"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9af3c44162fc357b39278c4c52090163">&#9670;&nbsp;</a></span>GCScheduler() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_g_c_scheduler.xhtml">GCScheduler</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constructor. </p>

<p class="definition">Definition at line <a class="el" href="_g_c_scheduler_8cpp_source.xhtml#l00034">34</a> of file <a class="el" href="_g_c_scheduler_8cpp_source.xhtml">GCScheduler.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    : _display(EGL_NO_DISPLAY), _context(EGL_NO_CONTEXT), _target(<a class="code" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3afa362f4daec88442a387ff7cda411a38">GPUTarget::MIDGARD</a>)</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;{</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;}</div><div class="ttc" id="namespacearm__compute_xhtml_a735ac6c2a02e320969625308810444f3afa362f4daec88442a387ff7cda411a38"><div class="ttname"><a href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3afa362f4daec88442a387ff7cda411a38">arm_compute::GPUTarget::MIDGARD</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3afa362f4daec88442a387ff7cda411a38">arm_compute::MIDGARD</a>.</p>

</div>
</div>
<a id="ae85977518e8888d20716029899d94b24"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae85977518e8888d20716029899d94b24">&#9670;&nbsp;</a></span>~GCScheduler()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="classarm__compute_1_1_g_c_scheduler.xhtml">GCScheduler</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Destructor. </p>

<p class="definition">Definition at line <a class="el" href="_g_c_scheduler_8cpp_source.xhtml#l00039">39</a> of file <a class="el" href="_g_c_scheduler_8cpp_source.xhtml">GCScheduler.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;{</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    <a class="code" href="_open_g_l_e_s_8cpp.xhtml#a80088eae3ba8f009a48c358adcefd3ca">eglDestroyContext</a>(_display, _context);</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    <a class="code" href="_open_g_l_e_s_8cpp.xhtml#a184f520190322b632ca710695195746a">eglTerminate</a>(_display);</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    _context = EGL_NO_CONTEXT;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    _display = EGL_NO_DISPLAY;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;}</div><div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a80088eae3ba8f009a48c358adcefd3ca"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a80088eae3ba8f009a48c358adcefd3ca">eglDestroyContext</a></div><div class="ttdeci">EGLBoolean EGLAPIENTRY eglDestroyContext(EGLDisplay dpy, EGLContext ctx)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00217">OpenGLES.cpp:217</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a184f520190322b632ca710695195746a"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a184f520190322b632ca710695195746a">eglTerminate</a></div><div class="ttdeci">EGLBoolean EGLAPIENTRY eglTerminate(EGLDisplay dpy)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00269">OpenGLES.cpp:269</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00217">eglDestroyContext()</a>, and <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00269">eglTerminate()</a>.</p>

</div>
</div>
<a id="aa033d4d0b5e7dd622b3f0d381581cb5b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa033d4d0b5e7dd622b3f0d381581cb5b">&#9670;&nbsp;</a></span>GCScheduler() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_g_c_scheduler.xhtml">GCScheduler</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_g_c_scheduler.xhtml">GCScheduler</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prevent instances of this class from being copied. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a19bb5002a62b62e050e89c975f7b9fdf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a19bb5002a62b62e050e89c975f7b9fdf">&#9670;&nbsp;</a></span>default_init()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void default_init </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initialises the context and command queue used by the scheduler to default values and sets a default device and kernel path for the <a class="el" href="classarm__compute_1_1_g_c_kernel_library.xhtml">GCKernelLibrary</a>. </p>

<p class="definition">Definition at line <a class="el" href="_g_c_scheduler_8cpp_source.xhtml#l00048">48</a> of file <a class="el" href="_g_c_scheduler_8cpp_source.xhtml">GCScheduler.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;{</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    setup_context();</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <a class="code" href="classarm__compute_1_1_g_c_scheduler.xhtml#a9120bd38578ddee701b5526dfe2369db">init</a>(_display, _context);</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;}</div><div class="ttc" id="classarm__compute_1_1_g_c_scheduler_xhtml_a9120bd38578ddee701b5526dfe2369db"><div class="ttname"><a href="classarm__compute_1_1_g_c_scheduler.xhtml#a9120bd38578ddee701b5526dfe2369db">arm_compute::GCScheduler::init</a></div><div class="ttdeci">void init(EGLDisplay dpy, EGLContext ctx)</div><div class="ttdoc">Initialises the display and context to be used by the scheduler.</div><div class="ttdef"><b>Definition:</b> <a href="_g_c_scheduler_8cpp_source.xhtml#l00063">GCScheduler.cpp:63</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_g_c_scheduler_8cpp_source.xhtml#l00063">GCScheduler::init()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_g_c_device_backend_8cpp_source.xhtml#l00060">GCDeviceBackend::initialize_backend()</a>, and <a class="el" href="main_8cpp_source.xhtml#l00093">main()</a>.</p>

</div>
</div>
<a id="aa105f74eb3adab10bfedbbca89cbcea7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa105f74eb3adab10bfedbbca89cbcea7">&#9670;&nbsp;</a></span>default_init_with_context()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void default_init_with_context </td>
          <td>(</td>
          <td class="paramtype">EGLDisplay&#160;</td>
          <td class="paramname"><em>display</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">EGLContext&#160;</td>
          <td class="paramname"><em>ctx</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initializes the context and display used by the <a class="el" href="classarm__compute_1_1_scheduler.xhtml" title="Configurable scheduler which supports multiple multithreading APIs and choosing between different sch...">Scheduler</a>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">display</td><td>Display to use </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">ctx</td><td>Context to use </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_g_c_scheduler_8cpp_source.xhtml#l00055">55</a> of file <a class="el" href="_g_c_scheduler_8cpp_source.xhtml">GCScheduler.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;{</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    _context = ctx;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    _display = display;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    _target = <a class="code" href="namespacearm__compute.xhtml#a281384aa081efe5819eedd6a7c2a429b">get_target_from_device</a>();</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;}</div><div class="ttc" id="namespacearm__compute_xhtml_a281384aa081efe5819eedd6a7c2a429b"><div class="ttname"><a href="namespacearm__compute.xhtml#a281384aa081efe5819eedd6a7c2a429b">arm_compute::get_target_from_device</a></div><div class="ttdeci">GPUTarget get_target_from_device(const cl::Device &amp;device)</div><div class="ttdoc">Helper function to get the GPU target from CL device.</div><div class="ttdef"><b>Definition:</b> <a href="core_2_c_l_2_c_l_helpers_8cpp_source.xhtml#l00226">CLHelpers.cpp:226</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="core_2_c_l_2_c_l_helpers_8cpp_source.xhtml#l00226">arm_compute::get_target_from_device()</a>.</p>

</div>
</div>
<a id="a66a29e27a51a13250143981b0ee4ad19"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a66a29e27a51a13250143981b0ee4ad19">&#9670;&nbsp;</a></span>dispatch()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void dispatch </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_g_c_kernel.xhtml">IGCKernel</a> &amp;&#160;</td>
          <td class="paramname"><em>kernel</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>flush</em> = <code>true</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Schedule the execution of the passed kernel if possible. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">kernel</td><td><a class="el" href="classarm__compute_1_1_kernel.xhtml" title="Kernel class.">Kernel</a> to execute. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">flush</td><td>(Optional) Specifies if the command queue will be flushed after running the kernel. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_g_c_scheduler_8cpp_source.xhtml#l00077">77</a> of file <a class="el" href="_g_c_scheduler_8cpp_source.xhtml">GCScheduler.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;{</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    kernel.<a class="code" href="classarm__compute_1_1_i_g_c_kernel.xhtml#a6f56c8bb44166634652b877d6eb7a9a2">run</a>(kernel.<a class="code" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>());</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <span class="keywordflow">if</span>(flush)</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    {</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;        <a class="code" href="_open_g_l_e_s_8h.xhtml#a496c7b08ac063d996956854207366913">ARM_COMPUTE_GL_CHECK</a>(<a class="code" href="_open_g_l_e_s_8cpp.xhtml#a9ee298e3e0590cd31dffbc2dd8a5702c">glFlush</a>());</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    }</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;}</div><div class="ttc" id="_open_g_l_e_s_8h_xhtml_a496c7b08ac063d996956854207366913"><div class="ttname"><a href="_open_g_l_e_s_8h.xhtml#a496c7b08ac063d996956854207366913">ARM_COMPUTE_GL_CHECK</a></div><div class="ttdeci">#define ARM_COMPUTE_GL_CHECK(x)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8h_source.xhtml#l00045">OpenGLES.h:45</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_g_c_kernel_xhtml_a6f56c8bb44166634652b877d6eb7a9a2"><div class="ttname"><a href="classarm__compute_1_1_i_g_c_kernel.xhtml#a6f56c8bb44166634652b877d6eb7a9a2">arm_compute::IGCKernel::run</a></div><div class="ttdeci">virtual void run(const Window &amp;window)=0</div><div class="ttdoc">Enqueue the OpenGL ES shader to process the given window.</div></div>
<div class="ttc" id="classarm__compute_1_1_i_kernel_xhtml_ad34a46f53686c12a5c5e717cc9617fb6"><div class="ttname"><a href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">arm_compute::IKernel::window</a></div><div class="ttdeci">const Window &amp; window() const</div><div class="ttdoc">The maximum window the kernel can be executed on.</div><div class="ttdef"><b>Definition:</b> <a href="_i_kernel_8cpp_source.xhtml#l00028">IKernel.cpp:28</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a9ee298e3e0590cd31dffbc2dd8a5702c"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a9ee298e3e0590cd31dffbc2dd8a5702c">glFlush</a></div><div class="ttdeci">void GL_APIENTRY glFlush(void)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00555">OpenGLES.cpp:555</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_open_g_l_e_s_8h_source.xhtml#l00045">ARM_COMPUTE_GL_CHECK</a>, <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00555">glFlush()</a>, <a class="el" href="classarm__compute_1_1_i_g_c_kernel.xhtml#a6f56c8bb44166634652b877d6eb7a9a2">IGCKernel::run()</a>, and <a class="el" href="_i_kernel_8cpp_source.xhtml#l00028">IKernel::window()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_g_c_g_e_m_m_8cpp_source.xhtml#l00192">GCGEMM::prepare()</a>, <a class="el" href="_i_g_c_simple_function_8cpp_source.xhtml#l00038">IGCSimpleFunction::run()</a>, <a class="el" href="_g_c_dropout_layer_8cpp_source.xhtml#l00047">GCDropoutLayer::run()</a>, <a class="el" href="_g_c_concatenate_layer_8cpp_source.xhtml#l00074">GCConcatenateLayer::run()</a>, <a class="el" href="_g_c_convolution_layer_8cpp_source.xhtml#l00064">GCConvolutionLayerReshapeWeights::run()</a>, <a class="el" href="_g_c_batch_normalization_layer_8cpp_source.xhtml#l00046">GCBatchNormalizationLayer::run()</a>, <a class="el" href="_g_c_normalization_layer_8cpp_source.xhtml#l00057">GCNormalizationLayer::run()</a>, <a class="el" href="_g_c_depthwise_convolution_layer_8cpp_source.xhtml#l00061">GCDepthwiseConvolutionLayer3x3::run()</a>, <a class="el" href="_g_c_softmax_layer_8cpp_source.xhtml#l00070">GCSoftmaxLayer::run()</a>, <a class="el" href="_g_c_pooling_layer_8cpp_source.xhtml#l00058">GCPoolingLayer::run()</a>, <a class="el" href="_g_c_normalize_planar_y_u_v_layer_8cpp_source.xhtml#l00051">GCNormalizePlanarYUVLayer::run()</a>, <a class="el" href="_g_c_direct_convolution_layer_8cpp_source.xhtml#l00076">GCDirectConvolutionLayer::run()</a>, <a class="el" href="_g_c_fully_connected_layer_8cpp_source.xhtml#l00149">GCFullyConnectedLayer::run()</a>, <a class="el" href="_g_c_g_e_m_m_8cpp_source.xhtml#l00161">GCGEMM::run()</a>, and <a class="el" href="_g_c_convolution_layer_8cpp_source.xhtml#l00200">GCConvolutionLayer::run()</a>.</p>

</div>
</div>
<a id="a9c5f715748222ab9607cc52134b36b0b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9c5f715748222ab9607cc52134b36b0b">&#9670;&nbsp;</a></span>get()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_g_c_scheduler.xhtml">GCScheduler</a> &amp; get </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Access the scheduler singleton. </p>
<dl class="section return"><dt>Returns</dt><dd>The scheduler </dd></dl>

<p class="definition">Definition at line <a class="el" href="_g_c_scheduler_8cpp_source.xhtml#l00070">70</a> of file <a class="el" href="_g_c_scheduler_8cpp_source.xhtml">GCScheduler.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;{</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    std::call_once(_initialize_symbols, <a class="code" href="namespacearm__compute.xhtml#ad8ec10f67d9849be264c23c5329d9324">opengles31_is_available</a>);</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <span class="keyword">static</span> <a class="code" href="classarm__compute_1_1_g_c_scheduler.xhtml">GCScheduler</a> scheduler;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <span class="keywordflow">return</span> scheduler;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;}</div><div class="ttc" id="namespacearm__compute_xhtml_ad8ec10f67d9849be264c23c5329d9324"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ec10f67d9849be264c23c5329d9324">arm_compute::opengles31_is_available</a></div><div class="ttdeci">bool opengles31_is_available()</div><div class="ttdoc">Check if the OpenGL ES 3.1 API is available at runtime.</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00160">OpenGLES.cpp:160</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_c_scheduler_xhtml"><div class="ttname"><a href="classarm__compute_1_1_g_c_scheduler.xhtml">arm_compute::GCScheduler</a></div><div class="ttdoc">Provides global access to a OpenGL ES context and command queue.</div><div class="ttdef"><b>Definition:</b> <a href="_g_c_scheduler_8h_source.xhtml#l00037">GCScheduler.h:37</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00160">arm_compute::opengles31_is_available()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_g_c_g_e_m_m_8cpp_source.xhtml#l00081">GCGEMM::configure()</a>, <a class="el" href="_g_c_convolution_layer_8cpp_source.xhtml#l00090">GCConvolutionLayer::configure()</a>, <a class="el" href="_g_c_device_backend_8cpp_source.xhtml#l00060">GCDeviceBackend::initialize_backend()</a>, <a class="el" href="main_8cpp_source.xhtml#l00093">main()</a>, <a class="el" href="_g_c_g_e_m_m_8cpp_source.xhtml#l00192">GCGEMM::prepare()</a>, <a class="el" href="_i_g_c_simple_function_8cpp_source.xhtml#l00038">IGCSimpleFunction::run()</a>, <a class="el" href="_g_c_dropout_layer_8cpp_source.xhtml#l00047">GCDropoutLayer::run()</a>, <a class="el" href="_g_c_concatenate_layer_8cpp_source.xhtml#l00074">GCConcatenateLayer::run()</a>, <a class="el" href="_g_c_convolution_layer_8cpp_source.xhtml#l00064">GCConvolutionLayerReshapeWeights::run()</a>, <a class="el" href="_g_c_batch_normalization_layer_8cpp_source.xhtml#l00046">GCBatchNormalizationLayer::run()</a>, <a class="el" href="_g_c_normalization_layer_8cpp_source.xhtml#l00057">GCNormalizationLayer::run()</a>, <a class="el" href="_g_c_softmax_layer_8cpp_source.xhtml#l00070">GCSoftmaxLayer::run()</a>, <a class="el" href="_g_c_depthwise_convolution_layer_8cpp_source.xhtml#l00061">GCDepthwiseConvolutionLayer3x3::run()</a>, <a class="el" href="_g_c_pooling_layer_8cpp_source.xhtml#l00058">GCPoolingLayer::run()</a>, <a class="el" href="_g_c_normalize_planar_y_u_v_layer_8cpp_source.xhtml#l00051">GCNormalizePlanarYUVLayer::run()</a>, <a class="el" href="_g_c_direct_convolution_layer_8cpp_source.xhtml#l00076">GCDirectConvolutionLayer::run()</a>, <a class="el" href="_g_c_fully_connected_layer_8cpp_source.xhtml#l00149">GCFullyConnectedLayer::run()</a>, <a class="el" href="_g_c_g_e_m_m_8cpp_source.xhtml#l00161">GCGEMM::run()</a>, and <a class="el" href="_g_c_convolution_layer_8cpp_source.xhtml#l00200">GCConvolutionLayer::run()</a>.</p>

</div>
</div>
<a id="aa550ff0352ff2388e02f7b0a41bf5fe7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa550ff0352ff2388e02f7b0a41bf5fe7">&#9670;&nbsp;</a></span>get_target()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3">GPUTarget</a> get_target </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the target GPU. </p>
<dl class="section return"><dt>Returns</dt><dd>The target GPU. </dd></dl>

<p class="definition">Definition at line <a class="el" href="_g_c_scheduler_8h_source.xhtml#l00081">81</a> of file <a class="el" href="_g_c_scheduler_8h_source.xhtml">GCScheduler.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    {</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        <span class="keywordflow">return</span> _target;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    }</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_g_c_g_e_m_m_8cpp_source.xhtml#l00081">GCGEMM::configure()</a>.</p>

</div>
</div>
<a id="a9120bd38578ddee701b5526dfe2369db"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9120bd38578ddee701b5526dfe2369db">&#9670;&nbsp;</a></span>init()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void init </td>
          <td>(</td>
          <td class="paramtype">EGLDisplay&#160;</td>
          <td class="paramname"><em>dpy</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">EGLContext&#160;</td>
          <td class="paramname"><em>ctx</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initialises the display and context to be used by the scheduler. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">dpy</td><td>The EGL display connection </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">ctx</td><td>The EGL rendering context </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_g_c_scheduler_8cpp_source.xhtml#l00063">63</a> of file <a class="el" href="_g_c_scheduler_8cpp_source.xhtml">GCScheduler.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;{</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    _target = <a class="code" href="namespacearm__compute.xhtml#a281384aa081efe5819eedd6a7c2a429b">get_target_from_device</a>();</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <a class="code" href="classarm__compute_1_1_g_c_kernel_library.xhtml#a677e1b4dae70aaa7a18e9a8f1a4692e8">GCKernelLibrary::get</a>().<a class="code" href="classarm__compute_1_1_g_c_kernel_library.xhtml#abe24625d55f2fb35da7e293e5e28d483">init</a>(<span class="stringliteral">&quot;./cs_shaders/&quot;</span>, dpy, ctx);</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;}</div><div class="ttc" id="namespacearm__compute_xhtml_a281384aa081efe5819eedd6a7c2a429b"><div class="ttname"><a href="namespacearm__compute.xhtml#a281384aa081efe5819eedd6a7c2a429b">arm_compute::get_target_from_device</a></div><div class="ttdeci">GPUTarget get_target_from_device(const cl::Device &amp;device)</div><div class="ttdoc">Helper function to get the GPU target from CL device.</div><div class="ttdef"><b>Definition:</b> <a href="core_2_c_l_2_c_l_helpers_8cpp_source.xhtml#l00226">CLHelpers.cpp:226</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_c_kernel_library_xhtml_a677e1b4dae70aaa7a18e9a8f1a4692e8"><div class="ttname"><a href="classarm__compute_1_1_g_c_kernel_library.xhtml#a677e1b4dae70aaa7a18e9a8f1a4692e8">arm_compute::GCKernelLibrary::get</a></div><div class="ttdeci">static GCKernelLibrary &amp; get()</div><div class="ttdoc">Get the static instance of GCKernelLibrary.</div><div class="ttdef"><b>Definition:</b> <a href="_g_c_kernel_library_8cpp_source.xhtml#l00334">GCKernelLibrary.cpp:334</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_c_kernel_library_xhtml_abe24625d55f2fb35da7e293e5e28d483"><div class="ttname"><a href="classarm__compute_1_1_g_c_kernel_library.xhtml#abe24625d55f2fb35da7e293e5e28d483">arm_compute::GCKernelLibrary::init</a></div><div class="ttdeci">void init(std::string shader_path=&quot;./&quot;, EGLDisplay dpy=EGL_NO_DISPLAY, EGLContext ctx=EGL_NO_CONTEXT)</div><div class="ttdoc">Initialises the kernel library.</div><div class="ttdef"><b>Definition:</b> <a href="_g_c_kernel_library_8cpp_source.xhtml#l00340">GCKernelLibrary.cpp:340</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_g_c_kernel_library_8cpp_source.xhtml#l00334">GCKernelLibrary::get()</a>, <a class="el" href="core_2_c_l_2_c_l_helpers_8cpp_source.xhtml#l00226">arm_compute::get_target_from_device()</a>, and <a class="el" href="_g_c_kernel_library_8cpp_source.xhtml#l00340">GCKernelLibrary::init()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_g_c_scheduler_8cpp_source.xhtml#l00048">GCScheduler::default_init()</a>.</p>

</div>
</div>
<a id="a2dcf87458fcfdfb5e9fdd369e0320d78"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2dcf87458fcfdfb5e9fdd369e0320d78">&#9670;&nbsp;</a></span>memory_barrier()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void memory_barrier </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Defines a barrier ordering memory transactions. </p>

<p class="definition">Definition at line <a class="el" href="_g_c_scheduler_8cpp_source.xhtml#l00086">86</a> of file <a class="el" href="_g_c_scheduler_8cpp_source.xhtml">GCScheduler.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;{</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    <a class="code" href="_open_g_l_e_s_8h.xhtml#a496c7b08ac063d996956854207366913">ARM_COMPUTE_GL_CHECK</a>(<a class="code" href="_open_g_l_e_s_8cpp.xhtml#aa3889deebdf32118fa72107fe521e131">glMemoryBarrier</a>(GL_SHADER_STORAGE_BARRIER_BIT));</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;}</div><div class="ttc" id="_open_g_l_e_s_8h_xhtml_a496c7b08ac063d996956854207366913"><div class="ttname"><a href="_open_g_l_e_s_8h.xhtml#a496c7b08ac063d996956854207366913">ARM_COMPUTE_GL_CHECK</a></div><div class="ttdeci">#define ARM_COMPUTE_GL_CHECK(x)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8h_source.xhtml#l00045">OpenGLES.h:45</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_aa3889deebdf32118fa72107fe521e131"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#aa3889deebdf32118fa72107fe521e131">glMemoryBarrier</a></div><div class="ttdeci">void GL_APIENTRY glMemoryBarrier(GLbitfield barriers)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00620">OpenGLES.cpp:620</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_open_g_l_e_s_8h_source.xhtml#l00045">ARM_COMPUTE_GL_CHECK</a>, and <a class="el" href="_open_g_l_e_s_8cpp_source.xhtml#l00620">glMemoryBarrier()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_g_c_g_e_m_m_8cpp_source.xhtml#l00192">GCGEMM::prepare()</a>, <a class="el" href="_i_g_c_simple_function_8cpp_source.xhtml#l00038">IGCSimpleFunction::run()</a>, <a class="el" href="_g_c_normalization_layer_8cpp_source.xhtml#l00057">GCNormalizationLayer::run()</a>, <a class="el" href="_g_c_softmax_layer_8cpp_source.xhtml#l00070">GCSoftmaxLayer::run()</a>, <a class="el" href="_g_c_depthwise_convolution_layer_8cpp_source.xhtml#l00061">GCDepthwiseConvolutionLayer3x3::run()</a>, <a class="el" href="_g_c_pooling_layer_8cpp_source.xhtml#l00058">GCPoolingLayer::run()</a>, <a class="el" href="_g_c_direct_convolution_layer_8cpp_source.xhtml#l00076">GCDirectConvolutionLayer::run()</a>, <a class="el" href="_g_c_fully_connected_layer_8cpp_source.xhtml#l00149">GCFullyConnectedLayer::run()</a>, <a class="el" href="_g_c_g_e_m_m_8cpp_source.xhtml#l00161">GCGEMM::run()</a>, and <a class="el" href="_g_c_convolution_layer_8cpp_source.xhtml#l00200">GCConvolutionLayer::run()</a>.</p>

</div>
</div>
<a id="a31afe20424274e6781a97d8b3561e680"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a31afe20424274e6781a97d8b3561e680">&#9670;&nbsp;</a></span>operator=()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_g_c_scheduler.xhtml">GCScheduler</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_g_c_scheduler.xhtml">GCScheduler</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prevent instances of this class from being copied. </p>

</div>
</div>
<a id="ad5ba9d34a3a855bf1dd2e36316ff550a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad5ba9d34a3a855bf1dd2e36316ff550a">&#9670;&nbsp;</a></span>set_target()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void set_target </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3">GPUTarget</a>&#160;</td>
          <td class="paramname"><em>target</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Accessor to set target GPU to be used by the scheduler. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">target</td><td>The target GPU. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_g_c_scheduler_8h_source.xhtml#l00089">89</a> of file <a class="el" href="_g_c_scheduler_8h_source.xhtml">GCScheduler.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    {</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        _target = target;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>arm_compute/runtime/GLES_COMPUTE/<a class="el" href="_g_c_scheduler_8h_source.xhtml">GCScheduler.h</a></li>
<li>src/runtime/GLES_COMPUTE/<a class="el" href="_g_c_scheduler_8cpp_source.xhtml">GCScheduler.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1_g_c_scheduler.xhtml">GCScheduler</a></li>
    <li class="footer">Generated on Fri Feb 21 2020 11:10:27 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
