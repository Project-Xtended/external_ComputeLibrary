<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: CLHOG Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.02.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classarm__compute_1_1_c_l_h_o_g.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">CLHOG Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>OpenCL implementation of <a class="el" href="classarm__compute_1_1_h_o_g.xhtml" title="CPU implementation of HOG data-object.">HOG</a> data-object.  
 <a href="classarm__compute_1_1_c_l_h_o_g.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_c_l_h_o_g_8h_source.xhtml">CLHOG.h</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for CLHOG:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classarm__compute_1_1_c_l_h_o_g__coll__graph.svg" width="82" height="187"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a4de824d64d1e21c5cee52e8d05cd0e58"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_h_o_g.xhtml#a4de824d64d1e21c5cee52e8d05cd0e58">CLHOG</a> ()</td></tr>
<tr class="memdesc:a4de824d64d1e21c5cee52e8d05cd0e58"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor.  <a href="#a4de824d64d1e21c5cee52e8d05cd0e58">More...</a><br /></td></tr>
<tr class="separator:a4de824d64d1e21c5cee52e8d05cd0e58"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a055b5bd45e91f842b49def638c017b5b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_h_o_g.xhtml#a055b5bd45e91f842b49def638c017b5b">init</a> (const <a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml">HOGInfo</a> &amp;input)</td></tr>
<tr class="memdesc:a055b5bd45e91f842b49def638c017b5b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allocate the <a class="el" href="classarm__compute_1_1_h_o_g.xhtml" title="CPU implementation of HOG data-object.">HOG</a> descriptor using the given <a class="el" href="classarm__compute_1_1_h_o_g.xhtml" title="CPU implementation of HOG data-object.">HOG</a>'s metadata.  <a href="#a055b5bd45e91f842b49def638c017b5b">More...</a><br /></td></tr>
<tr class="separator:a055b5bd45e91f842b49def638c017b5b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a14c53d2d17be6fa8a2c9861527c7b002"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_h_o_g.xhtml#a14c53d2d17be6fa8a2c9861527c7b002">map</a> (bool blocking=true)</td></tr>
<tr class="memdesc:a14c53d2d17be6fa8a2c9861527c7b002"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enqueue a map operation of the allocated buffer.  <a href="#a14c53d2d17be6fa8a2c9861527c7b002">More...</a><br /></td></tr>
<tr class="separator:a14c53d2d17be6fa8a2c9861527c7b002"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1ffeb3b5abb3d61f62b58a391816201c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_h_o_g.xhtml#a1ffeb3b5abb3d61f62b58a391816201c">unmap</a> ()</td></tr>
<tr class="memdesc:a1ffeb3b5abb3d61f62b58a391816201c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enqueue an unmap operation of the allocated and mapped buffer.  <a href="#a1ffeb3b5abb3d61f62b58a391816201c">More...</a><br /></td></tr>
<tr class="separator:a1ffeb3b5abb3d61f62b58a391816201c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1468b0adb6ec3f9d38aa7d60b8a91974"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_h_o_g.xhtml#a1468b0adb6ec3f9d38aa7d60b8a91974">free</a> () override</td></tr>
<tr class="memdesc:a1468b0adb6ec3f9d38aa7d60b8a91974"><td class="mdescLeft">&#160;</td><td class="mdescRight">Interface to be implemented by the child class to free the allocated cl buffer.  <a href="#a1468b0adb6ec3f9d38aa7d60b8a91974">More...</a><br /></td></tr>
<tr class="separator:a1468b0adb6ec3f9d38aa7d60b8a91974"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a590275107811799e9bd0ee7bac11a2"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml">HOGInfo</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_h_o_g.xhtml#a6a590275107811799e9bd0ee7bac11a2">info</a> () const override</td></tr>
<tr class="memdesc:a6a590275107811799e9bd0ee7bac11a2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Interface to be implemented by the child class to return the <a class="el" href="classarm__compute_1_1_h_o_g.xhtml" title="CPU implementation of HOG data-object.">HOG</a>'s metadata.  <a href="#a6a590275107811799e9bd0ee7bac11a2">More...</a><br /></td></tr>
<tr class="separator:a6a590275107811799e9bd0ee7bac11a2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a53c338c0d76f41c472cdbf66fafdfe91"><td class="memItemLeft" align="right" valign="top">const cl::Buffer &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_h_o_g.xhtml#a53c338c0d76f41c472cdbf66fafdfe91">cl_buffer</a> () const override</td></tr>
<tr class="memdesc:a53c338c0d76f41c472cdbf66fafdfe91"><td class="mdescLeft">&#160;</td><td class="mdescRight">Interface to be implemented by the child class to return a reference to the OpenCL buffer containing the hog's descriptor.  <a href="#a53c338c0d76f41c472cdbf66fafdfe91">More...</a><br /></td></tr>
<tr class="separator:a53c338c0d76f41c472cdbf66fafdfe91"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac0abc7a5c0d172947f0e6a0c0dde3df0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_h_o_g.xhtml#ac0abc7a5c0d172947f0e6a0c0dde3df0">map</a> (cl::CommandQueue &amp;q, bool blocking=true)</td></tr>
<tr class="memdesc:ac0abc7a5c0d172947f0e6a0c0dde3df0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enqueue a map operation of the allocated buffer on the given queue.  <a href="#ac0abc7a5c0d172947f0e6a0c0dde3df0">More...</a><br /></td></tr>
<tr class="separator:ac0abc7a5c0d172947f0e6a0c0dde3df0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af974a2360069c2ef8df4496d00e4f6cc"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_h_o_g.xhtml#af974a2360069c2ef8df4496d00e4f6cc">unmap</a> (cl::CommandQueue &amp;q)</td></tr>
<tr class="memdesc:af974a2360069c2ef8df4496d00e4f6cc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enqueue an unmap operation of the allocated and mapped buffer on the given queue.  <a href="#af974a2360069c2ef8df4496d00e4f6cc">More...</a><br /></td></tr>
<tr class="separator:af974a2360069c2ef8df4496d00e4f6cc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1_i_c_l_h_o_g"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1_i_c_l_h_o_g')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1_i_c_l_h_o_g.xhtml">ICLHOG</a></td></tr>
<tr class="memitem:a04ce3d16477ead3711cf9d46d61abef1 inherit pub_methods_classarm__compute_1_1_i_c_l_h_o_g"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_h_o_g.xhtml#a04ce3d16477ead3711cf9d46d61abef1">ICLHOG</a> ()</td></tr>
<tr class="memdesc:a04ce3d16477ead3711cf9d46d61abef1 inherit pub_methods_classarm__compute_1_1_i_c_l_h_o_g"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor.  <a href="classarm__compute_1_1_i_c_l_h_o_g.xhtml#a04ce3d16477ead3711cf9d46d61abef1">More...</a><br /></td></tr>
<tr class="separator:a04ce3d16477ead3711cf9d46d61abef1 inherit pub_methods_classarm__compute_1_1_i_c_l_h_o_g"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a60f111f23edc7afc0161a2f991a5fe9e inherit pub_methods_classarm__compute_1_1_i_c_l_h_o_g"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_h_o_g.xhtml#a60f111f23edc7afc0161a2f991a5fe9e">ICLHOG</a> (const <a class="el" href="classarm__compute_1_1_i_c_l_h_o_g.xhtml">ICLHOG</a> &amp;)=delete</td></tr>
<tr class="memdesc:a60f111f23edc7afc0161a2f991a5fe9e inherit pub_methods_classarm__compute_1_1_i_c_l_h_o_g"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied (As this class contains pointers)  <a href="classarm__compute_1_1_i_c_l_h_o_g.xhtml#a60f111f23edc7afc0161a2f991a5fe9e">More...</a><br /></td></tr>
<tr class="separator:a60f111f23edc7afc0161a2f991a5fe9e inherit pub_methods_classarm__compute_1_1_i_c_l_h_o_g"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a580c5fa0472ca0d70b463da27803a264 inherit pub_methods_classarm__compute_1_1_i_c_l_h_o_g"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_i_c_l_h_o_g.xhtml">ICLHOG</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_h_o_g.xhtml#a580c5fa0472ca0d70b463da27803a264">operator=</a> (const <a class="el" href="classarm__compute_1_1_i_c_l_h_o_g.xhtml">ICLHOG</a> &amp;)=delete</td></tr>
<tr class="memdesc:a580c5fa0472ca0d70b463da27803a264 inherit pub_methods_classarm__compute_1_1_i_c_l_h_o_g"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied (As this class contains pointers)  <a href="classarm__compute_1_1_i_c_l_h_o_g.xhtml#a580c5fa0472ca0d70b463da27803a264">More...</a><br /></td></tr>
<tr class="separator:a580c5fa0472ca0d70b463da27803a264 inherit pub_methods_classarm__compute_1_1_i_c_l_h_o_g"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5fa39e889172d1997da4d8369d7eff2d inherit pub_methods_classarm__compute_1_1_i_c_l_h_o_g"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_h_o_g.xhtml#a5fa39e889172d1997da4d8369d7eff2d">ICLHOG</a> (<a class="el" href="classarm__compute_1_1_i_c_l_h_o_g.xhtml">ICLHOG</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:a5fa39e889172d1997da4d8369d7eff2d inherit pub_methods_classarm__compute_1_1_i_c_l_h_o_g"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be moved.  <a href="classarm__compute_1_1_i_c_l_h_o_g.xhtml#a5fa39e889172d1997da4d8369d7eff2d">More...</a><br /></td></tr>
<tr class="separator:a5fa39e889172d1997da4d8369d7eff2d inherit pub_methods_classarm__compute_1_1_i_c_l_h_o_g"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd0d52706236fd66484a6736d059c91c inherit pub_methods_classarm__compute_1_1_i_c_l_h_o_g"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_i_c_l_h_o_g.xhtml">ICLHOG</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_h_o_g.xhtml#acd0d52706236fd66484a6736d059c91c">operator=</a> (<a class="el" href="classarm__compute_1_1_i_c_l_h_o_g.xhtml">ICLHOG</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:acd0d52706236fd66484a6736d059c91c inherit pub_methods_classarm__compute_1_1_i_c_l_h_o_g"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be moved.  <a href="classarm__compute_1_1_i_c_l_h_o_g.xhtml#acd0d52706236fd66484a6736d059c91c">More...</a><br /></td></tr>
<tr class="separator:acd0d52706236fd66484a6736d059c91c inherit pub_methods_classarm__compute_1_1_i_c_l_h_o_g"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4f666198e882c54ee00dd2d7c5407df2 inherit pub_methods_classarm__compute_1_1_i_c_l_h_o_g"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_h_o_g.xhtml#a4f666198e882c54ee00dd2d7c5407df2">~ICLHOG</a> ()=default</td></tr>
<tr class="memdesc:a4f666198e882c54ee00dd2d7c5407df2 inherit pub_methods_classarm__compute_1_1_i_c_l_h_o_g"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default destructor.  <a href="classarm__compute_1_1_i_c_l_h_o_g.xhtml#a4f666198e882c54ee00dd2d7c5407df2">More...</a><br /></td></tr>
<tr class="separator:a4f666198e882c54ee00dd2d7c5407df2 inherit pub_methods_classarm__compute_1_1_i_c_l_h_o_g"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac0abc7a5c0d172947f0e6a0c0dde3df0 inherit pub_methods_classarm__compute_1_1_i_c_l_h_o_g"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_h_o_g.xhtml#ac0abc7a5c0d172947f0e6a0c0dde3df0">map</a> (cl::CommandQueue &amp;q, bool blocking=true)</td></tr>
<tr class="memdesc:ac0abc7a5c0d172947f0e6a0c0dde3df0 inherit pub_methods_classarm__compute_1_1_i_c_l_h_o_g"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enqueue a map operation of the allocated buffer on the given queue.  <a href="classarm__compute_1_1_i_c_l_h_o_g.xhtml#ac0abc7a5c0d172947f0e6a0c0dde3df0">More...</a><br /></td></tr>
<tr class="separator:ac0abc7a5c0d172947f0e6a0c0dde3df0 inherit pub_methods_classarm__compute_1_1_i_c_l_h_o_g"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af974a2360069c2ef8df4496d00e4f6cc inherit pub_methods_classarm__compute_1_1_i_c_l_h_o_g"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_h_o_g.xhtml#af974a2360069c2ef8df4496d00e4f6cc">unmap</a> (cl::CommandQueue &amp;q)</td></tr>
<tr class="memdesc:af974a2360069c2ef8df4496d00e4f6cc inherit pub_methods_classarm__compute_1_1_i_c_l_h_o_g"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enqueue an unmap operation of the allocated and mapped buffer on the given queue.  <a href="classarm__compute_1_1_i_c_l_h_o_g.xhtml#af974a2360069c2ef8df4496d00e4f6cc">More...</a><br /></td></tr>
<tr class="separator:af974a2360069c2ef8df4496d00e4f6cc inherit pub_methods_classarm__compute_1_1_i_c_l_h_o_g"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a27295b82a57124dd502fbe8cebe8f9ca inherit pub_methods_classarm__compute_1_1_i_c_l_h_o_g"><td class="memItemLeft" align="right" valign="top">float *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_h_o_g.xhtml#a27295b82a57124dd502fbe8cebe8f9ca">descriptor</a> () const override</td></tr>
<tr class="memdesc:a27295b82a57124dd502fbe8cebe8f9ca inherit pub_methods_classarm__compute_1_1_i_c_l_h_o_g"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pointer to the first element of the array which stores the linear SVM coefficients of <a class="el" href="classarm__compute_1_1_h_o_g.xhtml" title="CPU implementation of HOG data-object.">HOG</a> descriptor.  <a href="classarm__compute_1_1_i_c_l_h_o_g.xhtml#a27295b82a57124dd502fbe8cebe8f9ca">More...</a><br /></td></tr>
<tr class="separator:a27295b82a57124dd502fbe8cebe8f9ca inherit pub_methods_classarm__compute_1_1_i_c_l_h_o_g"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1_i_h_o_g"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1_i_h_o_g')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1_i_h_o_g.xhtml">IHOG</a></td></tr>
<tr class="memitem:a758ea1a393875c05d2c869ddeefd0dd6 inherit pub_methods_classarm__compute_1_1_i_h_o_g"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_h_o_g.xhtml#a758ea1a393875c05d2c869ddeefd0dd6">~IHOG</a> ()=default</td></tr>
<tr class="memdesc:a758ea1a393875c05d2c869ddeefd0dd6 inherit pub_methods_classarm__compute_1_1_i_h_o_g"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default virtual destructor.  <a href="classarm__compute_1_1_i_h_o_g.xhtml#a758ea1a393875c05d2c869ddeefd0dd6">More...</a><br /></td></tr>
<tr class="separator:a758ea1a393875c05d2c869ddeefd0dd6 inherit pub_methods_classarm__compute_1_1_i_h_o_g"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>OpenCL implementation of <a class="el" href="classarm__compute_1_1_h_o_g.xhtml" title="CPU implementation of HOG data-object.">HOG</a> data-object. </p>

<p class="definition">Definition at line <a class="el" href="_c_l_h_o_g_8h_source.xhtml#l00037">37</a> of file <a class="el" href="_c_l_h_o_g_8h_source.xhtml">CLHOG.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a4de824d64d1e21c5cee52e8d05cd0e58"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4de824d64d1e21c5cee52e8d05cd0e58">&#9670;&nbsp;</a></span>CLHOG()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_l_h_o_g.xhtml">CLHOG</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Default constructor. </p>

<p class="definition">Definition at line <a class="el" href="_c_l_h_o_g_8cpp_source.xhtml#l00033">33</a> of file <a class="el" href="_c_l_h_o_g_8cpp_source.xhtml">CLHOG.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    : _info(), _buffer()</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;{</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a53c338c0d76f41c472cdbf66fafdfe91"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a53c338c0d76f41c472cdbf66fafdfe91">&#9670;&nbsp;</a></span>cl_buffer()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const cl::Buffer &amp; cl_buffer </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Interface to be implemented by the child class to return a reference to the OpenCL buffer containing the hog's descriptor. </p>
<dl class="section return"><dt>Returns</dt><dd>A reference to an OpenCL buffer containing the hog's descriptor </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_c_l_h_o_g.xhtml#a1fb4c50755a0ef424652246838ed91a6">ICLHOG</a>.</p>

<p class="definition">Definition at line <a class="el" href="_c_l_h_o_g_8cpp_source.xhtml#l00057">57</a> of file <a class="el" href="_c_l_h_o_g_8cpp_source.xhtml">CLHOG.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;{</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <span class="keywordflow">return</span> _buffer;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a1468b0adb6ec3f9d38aa7d60b8a91974"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1468b0adb6ec3f9d38aa7d60b8a91974">&#9670;&nbsp;</a></span>free()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void free </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Interface to be implemented by the child class to free the allocated cl buffer. </p>
<dl class="section warning"><dt>Warning</dt><dd>The buffer must have been allocated previously. Otherwise calling the function will fail. </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_c_l_h_o_g.xhtml#a1781eecaabd2bc97d074437d01b2c683">ICLHOG</a>.</p>

<p class="definition">Definition at line <a class="el" href="_c_l_h_o_g_8cpp_source.xhtml#l00045">45</a> of file <a class="el" href="_c_l_h_o_g_8cpp_source.xhtml">CLHOG.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;{</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(_buffer.get() == <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    _buffer = cl::Buffer();</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;}</div><div class="ttc" id="_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00466">Error.h:466</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00466">ARM_COMPUTE_ERROR_ON</a>.</p>

</div>
</div>
<a id="a6a590275107811799e9bd0ee7bac11a2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6a590275107811799e9bd0ee7bac11a2">&#9670;&nbsp;</a></span>info()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml">HOGInfo</a> * info </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Interface to be implemented by the child class to return the <a class="el" href="classarm__compute_1_1_h_o_g.xhtml" title="CPU implementation of HOG data-object.">HOG</a>'s metadata. </p>
<dl class="section return"><dt>Returns</dt><dd>A pointer to the <a class="el" href="classarm__compute_1_1_h_o_g.xhtml" title="CPU implementation of HOG data-object.">HOG</a>'s metadata. </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_h_o_g.xhtml#a4e9b5d4ab15fd9009b463861c1a19dbd">IHOG</a>.</p>

<p class="definition">Definition at line <a class="el" href="_c_l_h_o_g_8cpp_source.xhtml#l00052">52</a> of file <a class="el" href="_c_l_h_o_g_8cpp_source.xhtml">CLHOG.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;{</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <span class="keywordflow">return</span> &amp;_info;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;}</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_c_l_h_o_g_8cpp_source.xhtml#l00038">CLHOG::init()</a>.</p>

</div>
</div>
<a id="a055b5bd45e91f842b49def638c017b5b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a055b5bd45e91f842b49def638c017b5b">&#9670;&nbsp;</a></span>init()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void init </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_h_o_g_info.xhtml">HOGInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>input</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Allocate the <a class="el" href="classarm__compute_1_1_h_o_g.xhtml" title="CPU implementation of HOG data-object.">HOG</a> descriptor using the given <a class="el" href="classarm__compute_1_1_h_o_g.xhtml" title="CPU implementation of HOG data-object.">HOG</a>'s metadata. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">input</td><td><a class="el" href="classarm__compute_1_1_h_o_g.xhtml" title="CPU implementation of HOG data-object.">HOG</a>'s metadata used to allocate the <a class="el" href="classarm__compute_1_1_h_o_g.xhtml" title="CPU implementation of HOG data-object.">HOG</a> descriptor </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_c_l_h_o_g_8cpp_source.xhtml#l00038">38</a> of file <a class="el" href="_c_l_h_o_g_8cpp_source.xhtml">CLHOG.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;{</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(_buffer.get() != <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    _info   = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    _buffer = cl::Buffer(<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().context(), CL_MEM_ALLOC_HOST_PTR | CL_MEM_READ_WRITE, <a class="code" href="classarm__compute_1_1_c_l_h_o_g.xhtml#a6a590275107811799e9bd0ee7bac11a2">info</a>()-&gt;descriptor_size() * <span class="keyword">sizeof</span>(<span class="keywordtype">float</span>));</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;}</div><div class="ttc" id="classarm__compute_1_1_c_l_scheduler_xhtml_a9b58d0eb9a2af8e6d7908695e1557d6c"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">arm_compute::CLScheduler::get</a></div><div class="ttdeci">static CLScheduler &amp; get()</div><div class="ttdoc">Access the scheduler singleton.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00099">CLScheduler.cpp:99</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00466">Error.h:466</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a8fcf2ddd9a1d58b1b280f5c0aed71845"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">arm_compute::test::validation::input</a></div><div class="ttdeci">auto input</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00487">LSTMLayerQuantized.cpp:487</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_h_o_g_xhtml_a6a590275107811799e9bd0ee7bac11a2"><div class="ttname"><a href="classarm__compute_1_1_c_l_h_o_g.xhtml#a6a590275107811799e9bd0ee7bac11a2">arm_compute::CLHOG::info</a></div><div class="ttdeci">const HOGInfo * info() const override</div><div class="ttdoc">Interface to be implemented by the child class to return the HOG's metadata.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_h_o_g_8cpp_source.xhtml#l00052">CLHOG.cpp:52</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00466">ARM_COMPUTE_ERROR_ON</a>, <a class="el" href="_c_l_scheduler_8cpp_source.xhtml#l00099">CLScheduler::get()</a>, <a class="el" href="_c_l_h_o_g_8cpp_source.xhtml#l00052">CLHOG::info()</a>, and <a class="el" href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00487">arm_compute::test::validation::input</a>.</p>

</div>
</div>
<a id="a14c53d2d17be6fa8a2c9861527c7b002"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a14c53d2d17be6fa8a2c9861527c7b002">&#9670;&nbsp;</a></span>map() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void map </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>blocking</em> = <code>true</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Enqueue a map operation of the allocated buffer. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">blocking</td><td>If true, then the mapping will be ready to use by the time this method returns, else it is the caller's responsibility to flush the queue and wait for the mapping operation to have completed. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_c_l_h_o_g_8cpp_source.xhtml#l00062">62</a> of file <a class="el" href="_c_l_h_o_g_8cpp_source.xhtml">CLHOG.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;{</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(<a class="code" href="classarm__compute_1_1_i_c_l_h_o_g.xhtml#a27295b82a57124dd502fbe8cebe8f9ca">descriptor</a>() != <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <a class="code" href="classarm__compute_1_1_i_c_l_h_o_g.xhtml#ac0abc7a5c0d172947f0e6a0c0dde3df0">ICLHOG::map</a>(<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().queue(), blocking);</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;}</div><div class="ttc" id="classarm__compute_1_1_c_l_scheduler_xhtml_a9b58d0eb9a2af8e6d7908695e1557d6c"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">arm_compute::CLScheduler::get</a></div><div class="ttdeci">static CLScheduler &amp; get()</div><div class="ttdoc">Access the scheduler singleton.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00099">CLScheduler.cpp:99</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00466">Error.h:466</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_c_l_h_o_g_xhtml_ac0abc7a5c0d172947f0e6a0c0dde3df0"><div class="ttname"><a href="classarm__compute_1_1_i_c_l_h_o_g.xhtml#ac0abc7a5c0d172947f0e6a0c0dde3df0">arm_compute::ICLHOG::map</a></div><div class="ttdeci">void map(cl::CommandQueue &amp;q, bool blocking=true)</div><div class="ttdoc">Enqueue a map operation of the allocated buffer on the given queue.</div><div class="ttdef"><b>Definition:</b> <a href="_i_c_l_h_o_g_8cpp_source.xhtml#l00033">ICLHOG.cpp:33</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_c_l_h_o_g_xhtml_a27295b82a57124dd502fbe8cebe8f9ca"><div class="ttname"><a href="classarm__compute_1_1_i_c_l_h_o_g.xhtml#a27295b82a57124dd502fbe8cebe8f9ca">arm_compute::ICLHOG::descriptor</a></div><div class="ttdeci">float * descriptor() const override</div><div class="ttdoc">Pointer to the first element of the array which stores the linear SVM coefficients of HOG descriptor.</div><div class="ttdef"><b>Definition:</b> <a href="_i_c_l_h_o_g_8cpp_source.xhtml#l00044">ICLHOG.cpp:44</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00466">ARM_COMPUTE_ERROR_ON</a>, <a class="el" href="_i_c_l_h_o_g_8cpp_source.xhtml#l00044">ICLHOG::descriptor()</a>, <a class="el" href="_c_l_scheduler_8cpp_source.xhtml#l00099">CLScheduler::get()</a>, and <a class="el" href="_i_c_l_h_o_g_8cpp_source.xhtml#l00033">ICLHOG::map()</a>.</p>

</div>
</div>
<a id="ac0abc7a5c0d172947f0e6a0c0dde3df0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac0abc7a5c0d172947f0e6a0c0dde3df0">&#9670;&nbsp;</a></span>map() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void map</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Enqueue a map operation of the allocated buffer on the given queue. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">q</td><td>The CL command queue to use for the mapping operation. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blocking</td><td>If true, then the mapping will be ready to use by the time this method returns, else it is the caller's responsibility to flush the queue and wait for the mapping operation to have completed before using the returned mapping pointer.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The mapping address. </dd></dl>

<p class="definition">Definition at line <a class="el" href="_i_c_l_h_o_g_8cpp_source.xhtml#l00033">33</a> of file <a class="el" href="_i_c_l_h_o_g_8cpp_source.xhtml">ICLHOG.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;{</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    _mapping = do_map(q, blocking);</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a1ffeb3b5abb3d61f62b58a391816201c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1ffeb3b5abb3d61f62b58a391816201c">&#9670;&nbsp;</a></span>unmap() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void unmap </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Enqueue an unmap operation of the allocated and mapped buffer. </p>
<dl class="section note"><dt>Note</dt><dd>This method simply enqueues the unmap operation, it is the caller's responsibility to flush the queue and make sure the unmap is finished before the memory is accessed by the device. </dd></dl>

<p class="definition">Definition at line <a class="el" href="_c_l_h_o_g_8cpp_source.xhtml#l00068">68</a> of file <a class="el" href="_c_l_h_o_g_8cpp_source.xhtml">CLHOG.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;{</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(<a class="code" href="classarm__compute_1_1_i_c_l_h_o_g.xhtml#a27295b82a57124dd502fbe8cebe8f9ca">descriptor</a>() == <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <a class="code" href="classarm__compute_1_1_i_c_l_h_o_g.xhtml#af974a2360069c2ef8df4496d00e4f6cc">ICLHOG::unmap</a>(<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().queue());</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;}</div><div class="ttc" id="classarm__compute_1_1_c_l_scheduler_xhtml_a9b58d0eb9a2af8e6d7908695e1557d6c"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">arm_compute::CLScheduler::get</a></div><div class="ttdeci">static CLScheduler &amp; get()</div><div class="ttdoc">Access the scheduler singleton.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00099">CLScheduler.cpp:99</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00466">Error.h:466</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_c_l_h_o_g_xhtml_a27295b82a57124dd502fbe8cebe8f9ca"><div class="ttname"><a href="classarm__compute_1_1_i_c_l_h_o_g.xhtml#a27295b82a57124dd502fbe8cebe8f9ca">arm_compute::ICLHOG::descriptor</a></div><div class="ttdeci">float * descriptor() const override</div><div class="ttdoc">Pointer to the first element of the array which stores the linear SVM coefficients of HOG descriptor.</div><div class="ttdef"><b>Definition:</b> <a href="_i_c_l_h_o_g_8cpp_source.xhtml#l00044">ICLHOG.cpp:44</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_c_l_h_o_g_xhtml_af974a2360069c2ef8df4496d00e4f6cc"><div class="ttname"><a href="classarm__compute_1_1_i_c_l_h_o_g.xhtml#af974a2360069c2ef8df4496d00e4f6cc">arm_compute::ICLHOG::unmap</a></div><div class="ttdeci">void unmap(cl::CommandQueue &amp;q)</div><div class="ttdoc">Enqueue an unmap operation of the allocated and mapped buffer on the given queue.</div><div class="ttdef"><b>Definition:</b> <a href="_i_c_l_h_o_g_8cpp_source.xhtml#l00038">ICLHOG.cpp:38</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00466">ARM_COMPUTE_ERROR_ON</a>, <a class="el" href="_i_c_l_h_o_g_8cpp_source.xhtml#l00044">ICLHOG::descriptor()</a>, <a class="el" href="_c_l_scheduler_8cpp_source.xhtml#l00099">CLScheduler::get()</a>, and <a class="el" href="_i_c_l_h_o_g_8cpp_source.xhtml#l00038">ICLHOG::unmap()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_c_l_h_o_g_accessor_8h_source.xhtml#l00046">CLHOGAccessor::~CLHOGAccessor()</a>.</p>

</div>
</div>
<a id="af974a2360069c2ef8df4496d00e4f6cc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af974a2360069c2ef8df4496d00e4f6cc">&#9670;&nbsp;</a></span>unmap() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void unmap</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Enqueue an unmap operation of the allocated and mapped buffer on the given queue. </p>
<dl class="section note"><dt>Note</dt><dd>This method simply enqueues the unmap operation, it is the caller's responsibility to flush the queue and make sure the unmap is finished before the memory is accessed by the device.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">q</td><td>The CL command queue to use for the mapping operation. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_i_c_l_h_o_g_8cpp_source.xhtml#l00038">38</a> of file <a class="el" href="_i_c_l_h_o_g_8cpp_source.xhtml">ICLHOG.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;{</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    do_unmap(q);</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    _mapping = <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>arm_compute/runtime/CL/<a class="el" href="_c_l_h_o_g_8h_source.xhtml">CLHOG.h</a></li>
<li>src/runtime/CL/<a class="el" href="_c_l_h_o_g_8cpp_source.xhtml">CLHOG.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1_c_l_h_o_g.xhtml">CLHOG</a></li>
    <li class="footer">Generated on Thu Mar 5 2020 16:07:11 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
