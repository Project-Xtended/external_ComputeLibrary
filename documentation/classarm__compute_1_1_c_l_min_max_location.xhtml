<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: CLMinMaxLocation Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classarm__compute_1_1_c_l_min_max_location.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">CLMinMaxLocation Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Basic function to execute min and max location.  
 <a href="classarm__compute_1_1_c_l_min_max_location.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_c_l_min_max_location_8h_source.xhtml">CLMinMaxLocation.h</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for CLMinMaxLocation:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classarm__compute_1_1_c_l_min_max_location__coll__graph.svg" width="151" height="112"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a9071fb1db3bb78426f8557bd22107c56"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_min_max_location.xhtml#a9071fb1db3bb78426f8557bd22107c56">CLMinMaxLocation</a> ()</td></tr>
<tr class="memdesc:a9071fb1db3bb78426f8557bd22107c56"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="#a9071fb1db3bb78426f8557bd22107c56">More...</a><br /></td></tr>
<tr class="separator:a9071fb1db3bb78426f8557bd22107c56"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6d994e3b951dcf164932421d6ae155c5"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_min_max_location.xhtml#a6d994e3b951dcf164932421d6ae155c5">CLMinMaxLocation</a> (const <a class="el" href="classarm__compute_1_1_c_l_min_max_location.xhtml">CLMinMaxLocation</a> &amp;)=delete</td></tr>
<tr class="memdesc:a6d994e3b951dcf164932421d6ae155c5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied (As this class contains pointers)  <a href="#a6d994e3b951dcf164932421d6ae155c5">More...</a><br /></td></tr>
<tr class="separator:a6d994e3b951dcf164932421d6ae155c5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5ec34a951324ad9bd8bf06d8620369ed"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_c_l_min_max_location.xhtml">CLMinMaxLocation</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_min_max_location.xhtml#a5ec34a951324ad9bd8bf06d8620369ed">operator=</a> (const <a class="el" href="classarm__compute_1_1_c_l_min_max_location.xhtml">CLMinMaxLocation</a> &amp;)=delete</td></tr>
<tr class="memdesc:a5ec34a951324ad9bd8bf06d8620369ed"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied (As this class contains pointers)  <a href="#a5ec34a951324ad9bd8bf06d8620369ed">More...</a><br /></td></tr>
<tr class="separator:a5ec34a951324ad9bd8bf06d8620369ed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5ef3e0081a18bd7c09723477f1625ab0"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_min_max_location.xhtml#a5ef3e0081a18bd7c09723477f1625ab0">CLMinMaxLocation</a> (<a class="el" href="classarm__compute_1_1_c_l_min_max_location.xhtml">CLMinMaxLocation</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:a5ef3e0081a18bd7c09723477f1625ab0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be moved.  <a href="#a5ef3e0081a18bd7c09723477f1625ab0">More...</a><br /></td></tr>
<tr class="separator:a5ef3e0081a18bd7c09723477f1625ab0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a54669d0a20e3df491886372d4cffef69"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_c_l_min_max_location.xhtml">CLMinMaxLocation</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_min_max_location.xhtml#a54669d0a20e3df491886372d4cffef69">operator=</a> (<a class="el" href="classarm__compute_1_1_c_l_min_max_location.xhtml">CLMinMaxLocation</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:a54669d0a20e3df491886372d4cffef69"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be moved.  <a href="#a54669d0a20e3df491886372d4cffef69">More...</a><br /></td></tr>
<tr class="separator:a54669d0a20e3df491886372d4cffef69"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8ddb1ad6ae46202fbdc5fb1034b1abd3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_min_max_location.xhtml#a8ddb1ad6ae46202fbdc5fb1034b1abd3">configure</a> (const <a class="el" href="namespacearm__compute.xhtml#aa80145f30ddae0c2ccbcaa910e3e71dd">ICLImage</a> *input, void *min, void *max, <a class="el" href="namespacearm__compute.xhtml#a0fd5f0310a26faad00b905bac3792726">CLCoordinates2DArray</a> *min_loc=nullptr, <a class="el" href="namespacearm__compute.xhtml#a0fd5f0310a26faad00b905bac3792726">CLCoordinates2DArray</a> *max_loc=nullptr, uint32_t *min_count=nullptr, uint32_t *max_count=nullptr)</td></tr>
<tr class="memdesc:a8ddb1ad6ae46202fbdc5fb1034b1abd3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialise the kernel's inputs and outputs.  <a href="#a8ddb1ad6ae46202fbdc5fb1034b1abd3">More...</a><br /></td></tr>
<tr class="separator:a8ddb1ad6ae46202fbdc5fb1034b1abd3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad1717410afd0be936c6213a63c8005fb"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_min_max_location.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a> () override</td></tr>
<tr class="memdesc:ad1717410afd0be936c6213a63c8005fb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Run the kernels contained in the function.  <a href="#ad1717410afd0be936c6213a63c8005fb">More...</a><br /></td></tr>
<tr class="separator:ad1717410afd0be936c6213a63c8005fb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1_i_function"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1_i_function')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1_i_function.xhtml">IFunction</a></td></tr>
<tr class="memitem:ab921ecc3f3f6ae2b4bd61f3e1998d8c4 inherit pub_methods_classarm__compute_1_1_i_function"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_function.xhtml#ab921ecc3f3f6ae2b4bd61f3e1998d8c4">~IFunction</a> ()=default</td></tr>
<tr class="memdesc:ab921ecc3f3f6ae2b4bd61f3e1998d8c4 inherit pub_methods_classarm__compute_1_1_i_function"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor.  <a href="classarm__compute_1_1_i_function.xhtml#ab921ecc3f3f6ae2b4bd61f3e1998d8c4">More...</a><br /></td></tr>
<tr class="separator:ab921ecc3f3f6ae2b4bd61f3e1998d8c4 inherit pub_methods_classarm__compute_1_1_i_function"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a820f7291c24155a2980512fae45aac26 inherit pub_methods_classarm__compute_1_1_i_function"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_function.xhtml#a820f7291c24155a2980512fae45aac26">prepare</a> ()</td></tr>
<tr class="memdesc:a820f7291c24155a2980512fae45aac26 inherit pub_methods_classarm__compute_1_1_i_function"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prepare the function for executing.  <a href="classarm__compute_1_1_i_function.xhtml#a820f7291c24155a2980512fae45aac26">More...</a><br /></td></tr>
<tr class="separator:a820f7291c24155a2980512fae45aac26 inherit pub_methods_classarm__compute_1_1_i_function"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Basic function to execute min and max location. </p>
<p>This function calls the following OpenCL kernels:</p>
<ol type="1">
<li><a class="el" href="classarm__compute_1_1_c_l_min_max_kernel.xhtml">CLMinMaxKernel</a></li>
<li><a class="el" href="classarm__compute_1_1_c_l_min_max_location_kernel.xhtml">CLMinMaxLocationKernel</a> </li>
</ol>

<p class="definition">Definition at line <a class="el" href="_c_l_min_max_location_8h_source.xhtml#l00041">41</a> of file <a class="el" href="_c_l_min_max_location_8h_source.xhtml">CLMinMaxLocation.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a9071fb1db3bb78426f8557bd22107c56"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9071fb1db3bb78426f8557bd22107c56">&#9670;&nbsp;</a></span>CLMinMaxLocation() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_l_min_max_location.xhtml">CLMinMaxLocation</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constructor. </p>

<p class="definition">Definition at line <a class="el" href="_c_l_min_max_location_8cpp_source.xhtml#l00030">30</a> of file <a class="el" href="_c_l_min_max_location_8cpp_source.xhtml">CLMinMaxLocation.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;    : _min_max_kernel(),</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;      _min_max_loc_kernel(),</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;      _min_max_vals(),</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;      _min_max_count_vals(),</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;      _min(<span class="keyword">nullptr</span>),</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;      _max(<span class="keyword">nullptr</span>),</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;      _min_count(<span class="keyword">nullptr</span>),</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;      _max_count(<span class="keyword">nullptr</span>),</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;      _min_loc(<span class="keyword">nullptr</span>),</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;      _max_loc(<span class="keyword">nullptr</span>)</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;{</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a6d994e3b951dcf164932421d6ae155c5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6d994e3b951dcf164932421d6ae155c5">&#9670;&nbsp;</a></span>CLMinMaxLocation() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_l_min_max_location.xhtml">CLMinMaxLocation</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_c_l_min_max_location.xhtml">CLMinMaxLocation</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prevent instances of this class from being copied (As this class contains pointers) </p>

</div>
</div>
<a id="a5ef3e0081a18bd7c09723477f1625ab0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5ef3e0081a18bd7c09723477f1625ab0">&#9670;&nbsp;</a></span>CLMinMaxLocation() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_l_min_max_location.xhtml">CLMinMaxLocation</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_c_l_min_max_location.xhtml">CLMinMaxLocation</a> &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Allow instances of this class to be moved. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a8ddb1ad6ae46202fbdc5fb1034b1abd3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8ddb1ad6ae46202fbdc5fb1034b1abd3">&#9670;&nbsp;</a></span>configure()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void configure </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespacearm__compute.xhtml#aa80145f30ddae0c2ccbcaa910e3e71dd">ICLImage</a> *&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>min</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>max</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearm__compute.xhtml#a0fd5f0310a26faad00b905bac3792726">CLCoordinates2DArray</a> *&#160;</td>
          <td class="paramname"><em>min_loc</em> = <code>nullptr</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearm__compute.xhtml#a0fd5f0310a26faad00b905bac3792726">CLCoordinates2DArray</a> *&#160;</td>
          <td class="paramname"><em>max_loc</em> = <code>nullptr</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t *&#160;</td>
          <td class="paramname"><em>min_count</em> = <code>nullptr</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t *&#160;</td>
          <td class="paramname"><em>max_count</em> = <code>nullptr</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initialise the kernel's inputs and outputs. </p>
<dl class="section note"><dt>Note</dt><dd>When locations of min and max occurrences are requested, the reported number of locations is limited to the given array size.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">input</td><td>Input image. Data types supported: U8/S16/F32. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">min</td><td>Minimum value of image. Data types supported: S32 if input type is U8/S16, F32 if input type is F32. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">max</td><td>Maximum value of image. Data types supported: S32 if input type is U8/S16, F32 if input type is F32. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">min_loc</td><td>(Optional) <a class="el" href="classarm__compute_1_1_array.xhtml" title="Basic implementation of the IArray interface which allocates a static number of T values.">Array</a> of <a class="el" href="structarm__compute_1_1_coordinates2_d.xhtml" title="Coordinate type.">Coordinates2D</a> used to store minimum value locations. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">max_loc</td><td>(Optional) <a class="el" href="classarm__compute_1_1_array.xhtml" title="Basic implementation of the IArray interface which allocates a static number of T values.">Array</a> of <a class="el" href="structarm__compute_1_1_coordinates2_d.xhtml" title="Coordinate type.">Coordinates2D</a> used to store maximum value locations. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">min_count</td><td>(Optional) Number of minimum value encounters. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">max_count</td><td>(Optional) Number of maximum value encounters. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_c_l_min_max_location_8cpp_source.xhtml#l00044">44</a> of file <a class="el" href="_c_l_min_max_location_8cpp_source.xhtml">CLMinMaxLocation.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;{</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(<span class="keyword">nullptr</span> == min);</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(<span class="keyword">nullptr</span> == max);</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    _min_max_vals       = cl::Buffer(<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().context(), CL_MEM_ALLOC_HOST_PTR | CL_MEM_READ_WRITE, 2 * <span class="keyword">sizeof</span>(int32_t));</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    _min_max_count_vals = cl::Buffer(<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().context(), CL_MEM_ALLOC_HOST_PTR | CL_MEM_READ_WRITE, 2 * <span class="keyword">sizeof</span>(uint32_t));</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    _min                = min;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    _max                = max;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    _min_count          = min_count;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    _max_count          = max_count;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    _min_loc            = min_loc;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    _max_loc            = max_loc;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    _min_max_kernel.<a class="code" href="classarm__compute_1_1_c_l_min_max_kernel.xhtml#abc0a058391c8944b83257ec47b0211b9">configure</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, &amp;_min_max_vals);</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    _min_max_loc_kernel.<a class="code" href="classarm__compute_1_1_c_l_min_max_location_kernel.xhtml#aaac9d68119e223b67847deb43021630f">configure</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, &amp;_min_max_vals, &amp;_min_max_count_vals, _min_loc, _max_loc);</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;}</div><div class="ttc" id="classarm__compute_1_1_c_l_scheduler_xhtml_a9b58d0eb9a2af8e6d7908695e1557d6c"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">arm_compute::CLScheduler::get</a></div><div class="ttdeci">static CLScheduler &amp; get()</div><div class="ttdoc">Access the scheduler singleton.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00099">CLScheduler.cpp:99</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00466">Error.h:466</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a8fcf2ddd9a1d58b1b280f5c0aed71845"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">arm_compute::test::validation::input</a></div><div class="ttdeci">auto input</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00487">LSTMLayerQuantized.cpp:487</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_min_max_kernel_xhtml_abc0a058391c8944b83257ec47b0211b9"><div class="ttname"><a href="classarm__compute_1_1_c_l_min_max_kernel.xhtml#abc0a058391c8944b83257ec47b0211b9">arm_compute::CLMinMaxKernel::configure</a></div><div class="ttdeci">void configure(const ICLImage *input, cl::Buffer *min_max)</div><div class="ttdoc">Initialise the kernel's input and output.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_min_max_location_kernel_8cpp_source.xhtml#l00062">CLMinMaxLocationKernel.cpp:62</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_min_max_location_kernel_xhtml_aaac9d68119e223b67847deb43021630f"><div class="ttname"><a href="classarm__compute_1_1_c_l_min_max_location_kernel.xhtml#aaac9d68119e223b67847deb43021630f">arm_compute::CLMinMaxLocationKernel::configure</a></div><div class="ttdeci">void configure(const ICLImage *input, cl::Buffer *min_max, cl::Buffer *min_max_count, ICLCoordinates2DArray *min_loc=nullptr, ICLCoordinates2DArray *max_loc=nullptr)</div><div class="ttdoc">Initialise the kernel's input and outputs.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_min_max_location_kernel_8cpp_source.xhtml#l00169">CLMinMaxLocationKernel.cpp:169</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00466">ARM_COMPUTE_ERROR_ON</a>, <a class="el" href="_c_l_min_max_location_kernel_8cpp_source.xhtml#l00062">CLMinMaxKernel::configure()</a>, <a class="el" href="_c_l_min_max_location_kernel_8cpp_source.xhtml#l00169">CLMinMaxLocationKernel::configure()</a>, <a class="el" href="_c_l_scheduler_8cpp_source.xhtml#l00099">CLScheduler::get()</a>, and <a class="el" href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00487">arm_compute::test::validation::input</a>.</p>

<p class="reference">Referenced by <a class="el" href="_c_l_2_min_max_location_8cpp_source.xhtml#l00045">arm_compute::test::validation::validate_configuration()</a>.</p>

</div>
</div>
<a id="a5ec34a951324ad9bd8bf06d8620369ed"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5ec34a951324ad9bd8bf06d8620369ed">&#9670;&nbsp;</a></span>operator=() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_l_min_max_location.xhtml">CLMinMaxLocation</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_c_l_min_max_location.xhtml">CLMinMaxLocation</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prevent instances of this class from being copied (As this class contains pointers) </p>

</div>
</div>
<a id="a54669d0a20e3df491886372d4cffef69"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a54669d0a20e3df491886372d4cffef69">&#9670;&nbsp;</a></span>operator=() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_l_min_max_location.xhtml">CLMinMaxLocation</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_c_l_min_max_location.xhtml">CLMinMaxLocation</a> &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Allow instances of this class to be moved. </p>

</div>
</div>
<a id="ad1717410afd0be936c6213a63c8005fb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad1717410afd0be936c6213a63c8005fb">&#9670;&nbsp;</a></span>run()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void run </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Run the kernels contained in the function. </p>
<p>For NEON kernels:</p><ul>
<li>Multi-threading is used for the kernels which are parallelisable.</li>
<li>By default std::thread::hardware_concurrency() threads are used.</li>
</ul>
<dl class="section note"><dt>Note</dt><dd><a class="el" href="classarm__compute_1_1_c_p_p_scheduler.xhtml#ae64eebaa07f4d2da6cc2ba538c3cb095">CPPScheduler::set_num_threads()</a> can be used to manually set the number of threads</dd></dl>
<p>For OpenCL kernels:</p><ul>
<li>All the kernels are enqueued on the queue associated with <a class="el" href="classarm__compute_1_1_c_l_scheduler.xhtml" title="Provides global access to a CL context and command queue.">CLScheduler</a>.</li>
<li>The queue is then flushed.</li>
</ul>
<dl class="section note"><dt>Note</dt><dd>The function will not block until the kernels are executed. It is the user's responsibility to wait. </dd>
<dd>
Will call <a class="el" href="classarm__compute_1_1_i_function.xhtml#a820f7291c24155a2980512fae45aac26" title="Prepare the function for executing.">prepare()</a> on first run if hasn't been done </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_function.xhtml#a18954417d3124a8095783ea13dc6d00b">IFunction</a>.</p>

<p class="definition">Definition at line <a class="el" href="_c_l_min_max_location_8cpp_source.xhtml#l00062">62</a> of file <a class="el" href="_c_l_min_max_location_8cpp_source.xhtml">CLMinMaxLocation.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;{</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    cl::CommandQueue q = <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a398a2582c746d28fc125487a44c9ed74">queue</a>();</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#ae1a643e517f50bf0392fb6516dd7cf67">enqueue</a>(_min_max_kernel, <span class="keyword">false</span>);</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#ae1a643e517f50bf0392fb6516dd7cf67">enqueue</a>(_min_max_loc_kernel, <span class="keyword">false</span>);</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <span class="comment">// Update min and max</span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    q.enqueueReadBuffer(_min_max_vals, CL_FALSE, 0 * <span class="keyword">sizeof</span>(int32_t), <span class="keyword">sizeof</span>(int32_t), static_cast&lt;int32_t *&gt;(_min));</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    q.enqueueReadBuffer(_min_max_vals, CL_FALSE, 1 * <span class="keyword">sizeof</span>(int32_t), <span class="keyword">sizeof</span>(int32_t), static_cast&lt;int32_t *&gt;(_max));</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <span class="comment">// Update min and max count</span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <span class="keywordflow">if</span>(_min_count != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    {</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        q.enqueueReadBuffer(_min_max_count_vals, CL_FALSE, 0 * <span class="keyword">sizeof</span>(uint32_t), <span class="keyword">sizeof</span>(uint32_t), _min_count);</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    }</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <span class="keywordflow">if</span>(_max_count != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    {</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        q.enqueueReadBuffer(_min_max_count_vals, CL_FALSE, 1 * <span class="keyword">sizeof</span>(uint32_t), <span class="keyword">sizeof</span>(uint32_t), _max_count);</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    }</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <span class="comment">// Update min/max point arrays (Makes the kernel blocking)</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <span class="keywordflow">if</span>(_min_loc != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    {</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> min_count = 0;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;        q.enqueueReadBuffer(_min_max_count_vals, CL_TRUE, 0 * <span class="keyword">sizeof</span>(uint32_t), <span class="keyword">sizeof</span>(uint32_t), &amp;min_count);</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;        <span class="keywordtype">size_t</span> min_corner_size = std::min(static_cast&lt;size_t&gt;(min_count), _min_loc-&gt;<a class="code" href="classarm__compute_1_1_i_array.xhtml#ad4d0d4b95cde1aa24a381859d3b80a5e">max_num_values</a>());</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;        _min_loc-&gt;<a class="code" href="classarm__compute_1_1_i_array.xhtml#ae21b0e95ded2dcfb5e62848ea0193828">resize</a>(min_corner_size);</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    }</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <span class="keywordflow">if</span>(_max_loc != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    {</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> max_count = 0;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        q.enqueueReadBuffer(_min_max_count_vals, CL_TRUE, 1 * <span class="keyword">sizeof</span>(uint32_t), <span class="keyword">sizeof</span>(uint32_t), &amp;max_count);</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        <span class="keywordtype">size_t</span> max_corner_size = std::min(static_cast&lt;size_t&gt;(max_count), _max_loc-&gt;<a class="code" href="classarm__compute_1_1_i_array.xhtml#ad4d0d4b95cde1aa24a381859d3b80a5e">max_num_values</a>());</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        _max_loc-&gt;<a class="code" href="classarm__compute_1_1_i_array.xhtml#ae21b0e95ded2dcfb5e62848ea0193828">resize</a>(max_corner_size);</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    }</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;}</div><div class="ttc" id="classarm__compute_1_1_c_l_scheduler_xhtml_a9b58d0eb9a2af8e6d7908695e1557d6c"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">arm_compute::CLScheduler::get</a></div><div class="ttdeci">static CLScheduler &amp; get()</div><div class="ttdoc">Access the scheduler singleton.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00099">CLScheduler.cpp:99</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_array_xhtml_ae21b0e95ded2dcfb5e62848ea0193828"><div class="ttname"><a href="classarm__compute_1_1_i_array.xhtml#ae21b0e95ded2dcfb5e62848ea0193828">arm_compute::IArray::resize</a></div><div class="ttdeci">void resize(size_t num)</div><div class="ttdoc">Resizes the array to contain &quot;num&quot; elements.</div><div class="ttdef"><b>Definition:</b> <a href="_i_array_8h_source.xhtml#l00128">IArray.h:128</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_scheduler_xhtml_a398a2582c746d28fc125487a44c9ed74"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#a398a2582c746d28fc125487a44c9ed74">arm_compute::CLScheduler::queue</a></div><div class="ttdeci">cl::CommandQueue &amp; queue()</div><div class="ttdoc">Accessor for the associated CL command queue.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00041">CLScheduler.cpp:41</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_scheduler_xhtml_ae1a643e517f50bf0392fb6516dd7cf67"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#ae1a643e517f50bf0392fb6516dd7cf67">arm_compute::CLScheduler::enqueue</a></div><div class="ttdeci">void enqueue(ICLKernel &amp;kernel, bool flush=true)</div><div class="ttdoc">Schedule the execution of the passed kernel if possible.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00154">CLScheduler.cpp:154</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_array_xhtml_ad4d0d4b95cde1aa24a381859d3b80a5e"><div class="ttname"><a href="classarm__compute_1_1_i_array.xhtml#ad4d0d4b95cde1aa24a381859d3b80a5e">arm_compute::IArray::max_num_values</a></div><div class="ttdeci">size_t max_num_values() const</div><div class="ttdoc">Maximum number of values which can be stored in this array.</div><div class="ttdef"><b>Definition:</b> <a href="_i_array_8h_source.xhtml#l00058">IArray.h:58</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_c_l_scheduler_8cpp_source.xhtml#l00154">CLScheduler::enqueue()</a>, <a class="el" href="_c_l_scheduler_8cpp_source.xhtml#l00099">CLScheduler::get()</a>, <a class="el" href="_i_array_8h_source.xhtml#l00058">IArray&lt; T &gt;::max_num_values()</a>, <a class="el" href="_c_l_scheduler_8cpp_source.xhtml#l00041">CLScheduler::queue()</a>, and <a class="el" href="_i_array_8h_source.xhtml#l00128">IArray&lt; T &gt;::resize()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>arm_compute/runtime/CL/functions/<a class="el" href="_c_l_min_max_location_8h_source.xhtml">CLMinMaxLocation.h</a></li>
<li>src/runtime/CL/functions/<a class="el" href="_c_l_min_max_location_8cpp_source.xhtml">CLMinMaxLocation.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1_c_l_min_max_location.xhtml">CLMinMaxLocation</a></li>
    <li class="footer">Generated on Fri Feb 21 2020 11:10:26 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
