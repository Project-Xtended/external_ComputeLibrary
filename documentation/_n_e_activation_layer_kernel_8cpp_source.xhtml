<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/core/NEON/kernels/NEActivationLayerKernel.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_n_e_activation_layer_kernel_8cpp_source.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">NEActivationLayerKernel.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_n_e_activation_layer_kernel_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2017-2019 ARM Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_n_e_activation_layer_kernel_8h.xhtml">arm_compute/core/NEON/kernels/NEActivationLayerKernel.h</a>&quot;</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_c_p_p_2_validate_8h.xhtml">arm_compute/core/CPP/Validate.h</a>&quot;</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2core_2_helpers_8h.xhtml">arm_compute/core/Helpers.h</a>&quot;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_i_tensor_8h.xhtml">arm_compute/core/ITensor.h</a>&quot;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_n_e_asymm_8h.xhtml">arm_compute/core/NEON/NEAsymm.h</a>&quot;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_n_e_fixed_point_8h.xhtml">arm_compute/core/NEON/NEFixedPoint.h</a>&quot;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_n_e_math_8h.xhtml">arm_compute/core/NEON/NEMath.h</a>&quot;</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_n_e_symm_8h.xhtml">arm_compute/core/NEON/NESymm.h</a>&quot;</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="wrapper_8h.xhtml">arm_compute/core/NEON/wrapper/wrapper.h</a>&quot;</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_tensor_info_8h.xhtml">arm_compute/core/TensorInfo.h</a>&quot;</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2core_2_utils_8h.xhtml">arm_compute/core/Utils.h</a>&quot;</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_validate_8h.xhtml">arm_compute/core/Validate.h</a>&quot;</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_window_8h.xhtml">arm_compute/core/Window.h</a>&quot;</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="preprocessor">#include &lt;arm_neon.h&gt;</span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="preprocessor">#include &lt;array&gt;</span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="preprocessor">#include &lt;cmath&gt;</span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="preprocessor">#include &lt;map&gt;</span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="preprocessor">#include &lt;set&gt;</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="keyword">using namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a>;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="keyword">namespace</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;{</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> validate_arguments(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *output, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a> &amp;activation_info)</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;{</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <a class="code" href="_c_p_p_2_validate_8h.xhtml#ad2633f3560322e1f8d926949dec1b730">ARM_COMPUTE_RETURN_ERROR_ON_CPU_F16_UNSUPPORTED</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>);</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <a class="code" href="_validate_8h.xhtml#ae7eed178dac535c6e727061b1f5bc6eb">ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, 1, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a6669348b484e3008dca2bfa8e85e40b5">DataType::U8</a>, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a329f5d0c4b0c80e3474951d2c4435dd9">DataType::QASYMM8_SIGNED</a>, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">DataType::QASYMM8</a>, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a3ca8a4ea8f992df3b462bc7b24d097c6">DataType::QSYMM16</a>, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a56d8353718e6fdc78b8d69078a2cdb94">DataType::F16</a>, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>);</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <span class="keyword">static</span> std::set&lt;ActivationLayerInfo::ActivationFunction&gt; qasymm8_supported_activations =</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    {</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;        <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaad346bb4679d29be241279f15d7795c1c">ActivationLayerInfo::ActivationFunction::RELU</a>,</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaaab1d4411a9e7f5e82002512cddfdc33a">ActivationLayerInfo::ActivationFunction::LU_BOUNDED_RELU</a>,</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;        <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaacc516ab03b98f1c908ddf6ed4a7c45e9">ActivationLayerInfo::ActivationFunction::BOUNDED_RELU</a>,</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;        <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa72ee60fba0509af07cbbd91398d8db9d">ActivationLayerInfo::ActivationFunction::LOGISTIC</a>,</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa143c8c6f51b9bb893ce71e38702e3cc1">ActivationLayerInfo::ActivationFunction::TANH</a></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    };</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <span class="keyword">static</span> std::set&lt;ActivationLayerInfo::ActivationFunction&gt; qsymm16_supported_activations =</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    {</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa72ee60fba0509af07cbbd91398d8db9d">ActivationLayerInfo::ActivationFunction::LOGISTIC</a>,</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa143c8c6f51b9bb893ce71e38702e3cc1">ActivationLayerInfo::ActivationFunction::TANH</a></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    };</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <span class="keyword">const</span> <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</a>                                <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a> = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;data_type();</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>                       &amp;oq_info   = (output != <span class="keyword">nullptr</span>) ? output-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a3f3e1a3200223e6a304a533b1016e749">quantization_info</a>() : <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;quantization_info();</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9ea">ActivationLayerInfo::ActivationFunction</a> f_act     = activation_info.<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a9e0fb1d1462557f28966ae19988532c2">activation</a>();</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <a class="code" href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>(<a class="code" href="namespacearm__compute.xhtml#a14f46283f316e7f0fad301d5c1507e9f">is_data_type_quantized_asymmetric</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>) &amp;&amp; (qasymm8_supported_activations.count(f_act) == 0),</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;                                    <span class="stringliteral">&quot;For QASYMM8 only tanh, logistic, relu and lower/upper bounded relu are supported&quot;</span>);</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <a class="code" href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>(<a class="code" href="namespacearm__compute.xhtml#a922cd85c475c0d725fc030116ea57979">is_data_type_quantized_symmetric</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>) &amp;&amp; (qsymm16_supported_activations.count(f_act) == 0),</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;                                    <span class="stringliteral">&quot;For QSYMM16 only tanh and logistic are supported&quot;</span>);</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>((<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a> == <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">DataType::QASYMM8</a> || <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a> == <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a3b989c6b5398b3b9538ad103a324205e">DataType::QASYMM16</a>) &amp;&amp; (f_act == <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa143c8c6f51b9bb893ce71e38702e3cc1">ActivationLayerInfo::ActivationFunction::TANH</a>)</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;                                &amp;&amp; (oq_info != <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(1.f / 128.f, 128)));</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>((<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a> == <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">DataType::QASYMM8</a> || <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a> == <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a3b989c6b5398b3b9538ad103a324205e">DataType::QASYMM16</a>) &amp;&amp; (f_act == <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa72ee60fba0509af07cbbd91398d8db9d">ActivationLayerInfo::ActivationFunction::LOGISTIC</a>)</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;                                &amp;&amp; (oq_info != <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(1.f / 256.f, 0)));</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a> == <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a329f5d0c4b0c80e3474951d2c4435dd9">DataType::QASYMM8_SIGNED</a> &amp;&amp; (f_act == <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa143c8c6f51b9bb893ce71e38702e3cc1">ActivationLayerInfo::ActivationFunction::TANH</a>) &amp;&amp; (oq_info != <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(1.f / 128.f, 0)));</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a> == <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a329f5d0c4b0c80e3474951d2c4435dd9">DataType::QASYMM8_SIGNED</a> &amp;&amp; (f_act == <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa72ee60fba0509af07cbbd91398d8db9d">ActivationLayerInfo::ActivationFunction::LOGISTIC</a>) &amp;&amp; (oq_info != <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(1.f / 256.f, -128)));</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(<a class="code" href="namespacearm__compute.xhtml#a922cd85c475c0d725fc030116ea57979">is_data_type_quantized_symmetric</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>) &amp;&amp; (f_act == <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa143c8c6f51b9bb893ce71e38702e3cc1">ActivationLayerInfo::ActivationFunction::TANH</a>) &amp;&amp; (oq_info != <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(1.f / 32768.f, 0)));</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(<a class="code" href="namespacearm__compute.xhtml#a922cd85c475c0d725fc030116ea57979">is_data_type_quantized_symmetric</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>) &amp;&amp; (f_act == <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa72ee60fba0509af07cbbd91398d8db9d">ActivationLayerInfo::ActivationFunction::LOGISTIC</a>) &amp;&amp; (oq_info != <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(1.f / 32768.f, 0)));</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <span class="comment">// Checks performed when output is configured</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <span class="keywordflow">if</span>((output != <span class="keyword">nullptr</span>) &amp;&amp; (output-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a18064e0011c3869d884653e9e7c47b66">total_size</a>() != 0))</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    {</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;        <a class="code" href="_validate_8h.xhtml#a27e4638546c88b8916f967e6e54480a9">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_SHAPES</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, output);</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;        <a class="code" href="_validate_8h.xhtml#a8f3ff7da485ff7e75dab07baadf5b4bd">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, output);</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    }</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_status.xhtml">Status</a>{};</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;}</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;std::pair&lt;Status, Window&gt; validate_and_configure_window(<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *output)</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;{</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    <span class="comment">// Configure kernel window</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> win = <a class="code" href="namespacearm__compute.xhtml#ab7980fa5ee693e3282a76da047a1c3b5">calculate_max_window</a>(*<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, <a class="code" href="classarm__compute_1_1_steps.xhtml">Steps</a>());</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    <span class="keywordflow">if</span>(output != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    {</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        <span class="comment">// Output auto inizialitation if not yet initialized</span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        <a class="code" href="namespacearm__compute.xhtml#a47be6fa38308d0003c25b60b7dbc45ce">auto_init_if_empty</a>(*output, *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;clone());</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        <span class="comment">// NEActivationLayerKernel doesn&#39;t need padding so update_window_and_padding() can be skipped</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        <a class="code" href="classarm__compute_1_1_coordinates.xhtml">Coordinates</a> coord;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        coord.<a class="code" href="classarm__compute_1_1_dimensions.xhtml#a810a78f0b7cc0270f38d4136e023ea3b">set_num_dimensions</a>(output-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a1f4e725b8e1ea36b30e09dc08ae6961d">num_dimensions</a>());</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        output-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a9586081a29fceb532ab270bd843abee6">set_valid_region</a>(<a class="code" href="structarm__compute_1_1_valid_region.xhtml">ValidRegion</a>(coord, output-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7c66505457d00ece3aa4b34cab80757d">tensor_shape</a>()));</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    }</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    <span class="keywordflow">return</span> std::make_pair(<a class="code" href="classarm__compute_1_1_status.xhtml">Status</a>{}, win);</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;}</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;} <span class="comment">// namespace</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;</div><div class="line"><a name="l00116"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_activation_layer_kernel.xhtml#af5c940969e40e1ae12411bb025a117f2">  116</a></span>&#160;<a class="code" href="classarm__compute_1_1_n_e_activation_layer_kernel.xhtml#af5c940969e40e1ae12411bb025a117f2">NEActivationLayerKernel::NEActivationLayerKernel</a>()</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    : _input(nullptr), _output(nullptr), _func(nullptr), _act_info()</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;{</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;}</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div><div class="line"><a name="l00121"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_activation_layer_kernel.xhtml#adfb5ef37594fc9371c4a2b95e3d5e31b">  121</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_n_e_activation_layer_kernel.xhtml#adfb5ef37594fc9371c4a2b95e3d5e31b">NEActivationLayerKernel::configure</a>(<a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *output, <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a> activation_info)</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;{</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    <a class="code" href="_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>);</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    _input    = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    _act_info = activation_info;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    _output   = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    <span class="comment">// Out-of-place calculation</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    <span class="keywordflow">if</span>(output != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    {</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        _output = output;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    }</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    <span class="comment">// Disabled activation, thus no operation needed</span></div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    <span class="keywordflow">if</span>(!activation_info.<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#af5a8385102f8f8dd6c5957eac08b04c2">enabled</a>())</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    {</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;        _func = <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    }</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    <a class="code" href="_error_8h.xhtml#a938dcd406ce611ef5345ad2531cdb948">ARM_COMPUTE_ERROR_THROW_ON</a>(validate_arguments(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;info(), (output != <span class="keyword">nullptr</span>) ? output-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>() : <span class="keyword">nullptr</span>, activation_info));</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    <span class="comment">// Activation functions : FP32</span></div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    <span class="keyword">static</span> std::map&lt;ActivationFunction, ActivationFunctionExecutorPtr&gt; act_map_f32 =</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    {</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;        { <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa7d8a220d2262f9d6c658d549ee12cf2c">ActivationFunction::ABS</a>, &amp;NEActivationLayerKernel::activation&lt;ActivationFunction::ABS, float&gt; },</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;        { <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaaaac544aacc3615aada24897a215f5046">ActivationFunction::LINEAR</a>, &amp;NEActivationLayerKernel::activation&lt;ActivationFunction::LINEAR, float&gt; },</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;        { <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa72ee60fba0509af07cbbd91398d8db9d">ActivationFunction::LOGISTIC</a>, &amp;NEActivationLayerKernel::activation&lt;ActivationFunction::LOGISTIC, float&gt; },</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;        { <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaad346bb4679d29be241279f15d7795c1c">ActivationFunction::RELU</a>, &amp;NEActivationLayerKernel::activation&lt;ActivationFunction::RELU, float&gt; },</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;        { <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaacc516ab03b98f1c908ddf6ed4a7c45e9">ActivationFunction::BOUNDED_RELU</a>, &amp;NEActivationLayerKernel::activation&lt;ActivationFunction::BOUNDED_RELU, float&gt; },</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;        { <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaaab1d4411a9e7f5e82002512cddfdc33a">ActivationFunction::LU_BOUNDED_RELU</a>, &amp;NEActivationLayerKernel::activation&lt;ActivationFunction::LU_BOUNDED_RELU, float&gt; },</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;        { <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaac7e80a3de04936f4e423e1b564fdca10">ActivationFunction::LEAKY_RELU</a>, &amp;NEActivationLayerKernel::activation&lt;ActivationFunction::LEAKY_RELU, float&gt; },</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;        { <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaadcc44a50c791a591c74e00ecdda7c58d">ActivationFunction::SOFT_RELU</a>, &amp;NEActivationLayerKernel::activation&lt;ActivationFunction::SOFT_RELU, float&gt; },</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;        { <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa5b44c930bf0ddeef48b50ef11e5ddd58">ActivationFunction::ELU</a>, &amp;NEActivationLayerKernel::activation&lt;ActivationFunction::ELU, float&gt; },</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;        { <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa36875f2500a09ee35d0bb7eb8c0b91b0">ActivationFunction::SQRT</a>, &amp;NEActivationLayerKernel::activation&lt;ActivationFunction::SQRT, float&gt; },</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;        { <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa12dec4e1f7ec620651b2b95c440ffac0">ActivationFunction::SQUARE</a>, &amp;NEActivationLayerKernel::activation&lt;ActivationFunction::SQUARE, float&gt; },</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;        { <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa143c8c6f51b9bb893ce71e38702e3cc1">ActivationFunction::TANH</a>, &amp;NEActivationLayerKernel::activation&lt;ActivationFunction::TANH, float&gt; },</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;        { <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaad8156d3c6735d75d8a1b8dedd0e79c8b">ActivationFunction::IDENTITY</a>, &amp;NEActivationLayerKernel::activation&lt;ActivationFunction::IDENTITY, float&gt; },</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    };</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;<span class="preprocessor">#ifdef __ARM_FEATURE_FP16_VECTOR_ARITHMETIC</span></div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    <span class="comment">// Activation functions : FP16</span></div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    <span class="keyword">static</span> std::map&lt;ActivationFunction, ActivationFunctionExecutorPtr&gt; act_map_f16 =</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    {</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;        { <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa7d8a220d2262f9d6c658d549ee12cf2c">ActivationFunction::ABS</a>, &amp;NEActivationLayerKernel::activation&lt;ActivationFunction::ABS, float16_t&gt; },</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;        { <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaaaac544aacc3615aada24897a215f5046">ActivationFunction::LINEAR</a>, &amp;NEActivationLayerKernel::activation&lt;ActivationFunction::LINEAR, float16_t&gt; },</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;        { <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa72ee60fba0509af07cbbd91398d8db9d">ActivationFunction::LOGISTIC</a>, &amp;NEActivationLayerKernel::activation&lt;ActivationFunction::LOGISTIC, float16_t&gt; },</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;        { <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaad346bb4679d29be241279f15d7795c1c">ActivationFunction::RELU</a>, &amp;NEActivationLayerKernel::activation&lt;ActivationFunction::RELU, float16_t&gt; },</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;        { <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaacc516ab03b98f1c908ddf6ed4a7c45e9">ActivationFunction::BOUNDED_RELU</a>, &amp;NEActivationLayerKernel::activation&lt;ActivationFunction::BOUNDED_RELU, float16_t&gt; },</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;        { <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaaab1d4411a9e7f5e82002512cddfdc33a">ActivationFunction::LU_BOUNDED_RELU</a>, &amp;NEActivationLayerKernel::activation&lt;ActivationFunction::LU_BOUNDED_RELU, float16_t&gt; },</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;        { <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaac7e80a3de04936f4e423e1b564fdca10">ActivationFunction::LEAKY_RELU</a>, &amp;NEActivationLayerKernel::activation&lt;ActivationFunction::LEAKY_RELU, float16_t&gt; },</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;        { <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaadcc44a50c791a591c74e00ecdda7c58d">ActivationFunction::SOFT_RELU</a>, &amp;NEActivationLayerKernel::activation&lt;ActivationFunction::SOFT_RELU, float16_t&gt; },</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;        { <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa5b44c930bf0ddeef48b50ef11e5ddd58">ActivationFunction::ELU</a>, &amp;NEActivationLayerKernel::activation&lt;ActivationFunction::ELU, float16_t&gt; },</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;        { <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa36875f2500a09ee35d0bb7eb8c0b91b0">ActivationFunction::SQRT</a>, &amp;NEActivationLayerKernel::activation&lt;ActivationFunction::SQRT, float16_t&gt; },</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;        { <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa12dec4e1f7ec620651b2b95c440ffac0">ActivationFunction::SQUARE</a>, &amp;NEActivationLayerKernel::activation&lt;ActivationFunction::SQUARE, float16_t&gt; },</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;        { <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa143c8c6f51b9bb893ce71e38702e3cc1">ActivationFunction::TANH</a>, &amp;NEActivationLayerKernel::activation&lt;ActivationFunction::TANH, float16_t&gt; },</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;        { <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaad8156d3c6735d75d8a1b8dedd0e79c8b">ActivationFunction::IDENTITY</a>, &amp;NEActivationLayerKernel::activation&lt;ActivationFunction::IDENTITY, float16_t&gt; },</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    };</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* __ARM_FEATURE_FP16_VECTOR_ARITHMETIC*/</span><span class="preprocessor"></span></div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    <span class="comment">// Activation functions : QASYMM8_SIGNED</span></div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    <span class="keyword">static</span> std::map&lt;ActivationFunction, ActivationFunctionExecutorPtr&gt; act_map_qasymm8_signed =</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    {</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;        { <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa72ee60fba0509af07cbbd91398d8db9d">ActivationFunction::LOGISTIC</a>, &amp;NEActivationLayerKernel::activation&lt;ActivationFunction::LOGISTIC, qasymm8_signed_t&gt; },</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;        { <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaacc516ab03b98f1c908ddf6ed4a7c45e9">ActivationFunction::BOUNDED_RELU</a>, &amp;NEActivationLayerKernel::activation&lt;ActivationFunction::BOUNDED_RELU, qasymm8_signed_t&gt; },</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;        { <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaaab1d4411a9e7f5e82002512cddfdc33a">ActivationFunction::LU_BOUNDED_RELU</a>, &amp;NEActivationLayerKernel::activation&lt;ActivationFunction::LU_BOUNDED_RELU, qasymm8_signed_t&gt; },</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;        { <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaad346bb4679d29be241279f15d7795c1c">ActivationFunction::RELU</a>, &amp;NEActivationLayerKernel::activation&lt;ActivationFunction::RELU, qasymm8_signed_t&gt; },</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;        { <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa143c8c6f51b9bb893ce71e38702e3cc1">ActivationFunction::TANH</a>, &amp;NEActivationLayerKernel::activation&lt;ActivationFunction::TANH, qasymm8_signed_t&gt; },</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;        { <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaad8156d3c6735d75d8a1b8dedd0e79c8b">ActivationFunction::IDENTITY</a>, &amp;NEActivationLayerKernel::activation&lt;ActivationFunction::IDENTITY, qasymm8_signed_t&gt; },</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    };</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    <span class="comment">// Activation functions : QASYMM8</span></div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    <span class="keyword">static</span> std::map&lt;ActivationFunction, ActivationFunctionExecutorPtr&gt; act_map_qasymm8 =</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    {</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;        { <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa72ee60fba0509af07cbbd91398d8db9d">ActivationFunction::LOGISTIC</a>, &amp;NEActivationLayerKernel::activation&lt;ActivationFunction::LOGISTIC, qasymm8_t&gt; },</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;        { <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaacc516ab03b98f1c908ddf6ed4a7c45e9">ActivationFunction::BOUNDED_RELU</a>, &amp;NEActivationLayerKernel::activation&lt;ActivationFunction::BOUNDED_RELU, qasymm8_t&gt; },</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;        { <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaaab1d4411a9e7f5e82002512cddfdc33a">ActivationFunction::LU_BOUNDED_RELU</a>, &amp;NEActivationLayerKernel::activation&lt;ActivationFunction::LU_BOUNDED_RELU, qasymm8_t&gt; },</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;        { <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaad346bb4679d29be241279f15d7795c1c">ActivationFunction::RELU</a>, &amp;NEActivationLayerKernel::activation&lt;ActivationFunction::RELU, qasymm8_t&gt; },</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;        { <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa143c8c6f51b9bb893ce71e38702e3cc1">ActivationFunction::TANH</a>, &amp;NEActivationLayerKernel::activation&lt;ActivationFunction::TANH, qasymm8_t&gt; },</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;        { <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaad8156d3c6735d75d8a1b8dedd0e79c8b">ActivationFunction::IDENTITY</a>, &amp;NEActivationLayerKernel::activation&lt;ActivationFunction::IDENTITY, qasymm8_t&gt; },</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    };</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    <span class="comment">// Activation functions : QSYMM16</span></div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    <span class="keyword">static</span> std::map&lt;ActivationFunction, ActivationFunctionExecutorPtr&gt; act_map_qsymm16 =</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    {</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;        { <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa72ee60fba0509af07cbbd91398d8db9d">ActivationFunction::LOGISTIC</a>, &amp;NEActivationLayerKernel::activation&lt;ActivationFunction::LOGISTIC, qsymm16_t&gt; },</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;        { <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa143c8c6f51b9bb893ce71e38702e3cc1">ActivationFunction::TANH</a>, &amp;NEActivationLayerKernel::activation&lt;ActivationFunction::TANH, qsymm16_t&gt; },</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;    };</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    <span class="keywordflow">switch</span>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;info()-&gt;data_type())</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    {</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a329f5d0c4b0c80e3474951d2c4435dd9">DataType::QASYMM8_SIGNED</a>:</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;            _func = act_map_qasymm8_signed[activation_info.<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a9e0fb1d1462557f28966ae19988532c2">activation</a>()];</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">DataType::QASYMM8</a>:</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;            _func = act_map_qasymm8[activation_info.<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a9e0fb1d1462557f28966ae19988532c2">activation</a>()];</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a3ca8a4ea8f992df3b462bc7b24d097c6">DataType::QSYMM16</a>:</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;            _func = act_map_qsymm16[activation_info.<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a9e0fb1d1462557f28966ae19988532c2">activation</a>()];</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>:</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;            _func = act_map_f32[activation_info.<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a9e0fb1d1462557f28966ae19988532c2">activation</a>()];</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;<span class="preprocessor">#ifdef __ARM_FEATURE_FP16_VECTOR_ARITHMETIC</span></div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a56d8353718e6fdc78b8d69078a2cdb94">DataType::F16</a>:</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;            _func = act_map_f16[activation_info.<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a9e0fb1d1462557f28966ae19988532c2">activation</a>()];</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* __ARM_FEATURE_FP16_VECTOR_ARITHMETIC */</span><span class="preprocessor"></span></div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;        <span class="keywordflow">default</span>:</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;            <a class="code" href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;Unsupported data type.&quot;</span>);</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    }</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    <span class="comment">// Configure kernel window</span></div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;    <span class="keyword">auto</span> win_config = validate_and_configure_window(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;info(), (output != <span class="keyword">nullptr</span>) ? output-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>() : <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;    <a class="code" href="_error_8h.xhtml#a938dcd406ce611ef5345ad2531cdb948">ARM_COMPUTE_ERROR_THROW_ON</a>(win_config.first);</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;    ICPPKernel::configure(win_config.second);</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;}</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;<span class="keyword">template</span> &lt;ActivationLayerInfo::ActivationFunction F, <span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;<span class="keyword">typename</span> std::enable_if&lt;arm_compute::utils::traits::is_floating_point&lt;T&gt;::value, <span class="keywordtype">void</span>&gt;<a class="code" href="namespace_gemm_tuner.xhtml#a7aead736a07eaf25623ad7bfa1f0ee2d">::type</a></div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;NEActivationLayerKernel::activation(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;window)</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;{<span class="comment"></span></div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;<span class="comment">    /** NEON vector tag type. */</span></div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;    <span class="keyword">using</span> ExactTagType = <span class="keyword">typename</span> <a class="code" href="namespacearm__compute_1_1wrapper_1_1traits.xhtml#acf6b3be295be8dbd7897536bcd7561a3">wrapper::traits::neon_bitvector_tag_t&lt;T, wrapper::traits::BitWidth::W128&gt;</a>;</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span>                window_step_x  = 16 / <span class="keyword">sizeof</span>(T);</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span>               window_start_x = static_cast&lt;int&gt;(<a class="code" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>.<a class="code" href="classarm__compute_1_1_window.xhtml#a273fd2ecdd45169b2f702f01a7e5e382">x</a>().<a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#ab24e31d1a4830bf79564ee902ec6c060">start</a>());</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span>               window_end_x   = static_cast&lt;int&gt;(<a class="code" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>.<a class="code" href="classarm__compute_1_1_window.xhtml#a273fd2ecdd45169b2f702f01a7e5e382">x</a>().<a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#a0f590bfcf19110f44efc502e7b5c1d9e">end</a>());</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;    <span class="keyword">const</span> ActivationFunction act            = F;</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;    <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> win_collapsed = <a class="code" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>.<a class="code" href="classarm__compute_1_1_window.xhtml#a663ce71e1992366180fcb85b0a874e2f">collapse_if_possible</a>(<a class="code" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>, <a class="code" href="classarm__compute_1_1_window.xhtml#a893d17b56b9abc4423ce26e9a24ac5dc">Window::DimZ</a>);</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;    win_collapsed.<a class="code" href="classarm__compute_1_1_window.xhtml#acd3d2bba51cb84d34dd7656ad2375a6e">set</a>(<a class="code" href="classarm__compute_1_1_window.xhtml#aa96e81276ee4f87ab386cd05a5539a7d">Window::DimX</a>, <a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml">Window::Dimension</a>(0, 1, 1));</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;    <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>(_input, win_collapsed);</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> output(_output, win_collapsed);</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> <a class="code" href="namespacearm__compute_1_1quantization.xhtml#a552dc3787d7ea1675f3e4e8993501d58">epsilon</a> = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a39e87435be178fba49b76f49426ef873">wrapper::vdup_n</a>(static_cast&lt;T&gt;(1e-24), ExactTagType{});</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> const_1 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a39e87435be178fba49b76f49426ef873">wrapper::vdup_n</a>(static_cast&lt;T&gt;(1.f), ExactTagType{});</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> const_0 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a39e87435be178fba49b76f49426ef873">wrapper::vdup_n</a>(static_cast&lt;T&gt;(0.f), ExactTagType{});</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> va      = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a39e87435be178fba49b76f49426ef873">wrapper::vdup_n</a>(static_cast&lt;T&gt;(_act_info.<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#aec65e090c2276e8c8f8dffb6e3edd178">a</a>()), ExactTagType{});</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> vb      = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a39e87435be178fba49b76f49426ef873">wrapper::vdup_n</a>(static_cast&lt;T&gt;(_act_info.<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a02a00a5d20986f3a7ab72b9c86be3a54">b</a>()), ExactTagType{});</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> a       = static_cast&lt;T&gt;(_act_info.<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#aec65e090c2276e8c8f8dffb6e3edd178">a</a>());</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>       = static_cast&lt;T&gt;(_act_info.<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a02a00a5d20986f3a7ab72b9c86be3a54">b</a>());</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a5002bf7ec46d52971f9526e94172cfee">execute_window_loop</a>(win_collapsed, [&amp;](<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_coordinates.xhtml">Coordinates</a> &amp;)</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;    {</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> input_ptr  = reinterpret_cast&lt;const T *&gt;(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>.ptr());</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> output_ptr = reinterpret_cast&lt;T *&gt;(output.ptr());</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;        <a class="code" href="namespacearm__compute_1_1wrapper_1_1traits.xhtml#ad302081ac4baa4f94e7628d84421052c">wrapper::traits::neon_bitvector_t&lt;T, wrapper::traits::BitWidth::W128&gt;</a> tmp;</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;        <span class="comment">// Compute S elements per iteration</span></div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;        <span class="keywordtype">int</span> x = window_start_x;</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;        <span class="keywordflow">for</span>(; x &lt;= (window_end_x - window_step_x); x += window_step_x)</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;        {</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;            <span class="keyword">const</span> <span class="keyword">auto</span> vin = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a77f54eded7fef436d3a4f21ad5a00da6">wrapper::vloadq</a>(input_ptr + x);</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;            <span class="keywordflow">switch</span>(act)</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;            {</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa7d8a220d2262f9d6c658d549ee12cf2c">ActivationFunction::ABS</a>:</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;                    tmp = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a4c1fe3150ad2ca29262dc6403605e65c">wrapper::vabs</a>(vin);</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaaaac544aacc3615aada24897a215f5046">ActivationFunction::LINEAR</a>:</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;                    tmp = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a4287931a2912ecb6cece71219ca5478c">wrapper::vmla</a>(vb, va, vin);</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa72ee60fba0509af07cbbd91398d8db9d">ActivationFunction::LOGISTIC</a>:</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;                    tmp = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a5ac8135a2c0a60f10448be0057543ed7">wrapper::vinv</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a1894e825a225f3b2013f594cbffdae73">wrapper::vadd</a>(const_1, <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a3d35fe714076b40450ba6ba870fae322">wrapper::vexpq</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#aa24da6d1c1ce97217bab0291ce404fa7">wrapper::vneg</a>(vin))));</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaad346bb4679d29be241279f15d7795c1c">ActivationFunction::RELU</a>:</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;                    tmp = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8d1d14000c959f1146a8a64e1dafae5f">wrapper::vmax</a>(const_0, vin);</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaacc516ab03b98f1c908ddf6ed4a7c45e9">ActivationFunction::BOUNDED_RELU</a>:</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;                    tmp = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ab026a1aeec48074092f548c130c323f4">wrapper::vmin</a>(va, <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8d1d14000c959f1146a8a64e1dafae5f">wrapper::vmax</a>(const_0, vin));</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaaab1d4411a9e7f5e82002512cddfdc33a">ActivationFunction::LU_BOUNDED_RELU</a>:</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;                    tmp = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ab026a1aeec48074092f548c130c323f4">wrapper::vmin</a>(va, <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8d1d14000c959f1146a8a64e1dafae5f">wrapper::vmax</a>(vb, vin));</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaac7e80a3de04936f4e423e1b564fdca10">ActivationFunction::LEAKY_RELU</a>:</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;                    tmp = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8e5924674eee0f441d54eb75d656700f">wrapper::vbsl</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a7eedba29396b0db728bffdf5f202d85c">wrapper::vcgt</a>(vin, const_0), vin, <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(va, vin));</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaadcc44a50c791a591c74e00ecdda7c58d">ActivationFunction::SOFT_RELU</a>:</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;                    tmp = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a23cc34c6476b7df556284c718c44e65c">wrapper::vlog</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a1894e825a225f3b2013f594cbffdae73">wrapper::vadd</a>(const_1, <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a3d35fe714076b40450ba6ba870fae322">wrapper::vexpq</a>(vin)));</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa5b44c930bf0ddeef48b50ef11e5ddd58">ActivationFunction::ELU</a>:</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;                    tmp = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8e5924674eee0f441d54eb75d656700f">wrapper::vbsl</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a1f777df8db31568a3436995df958714c">wrapper::vcge</a>(vin, const_0), vin, <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(va, <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#acae4ec59246f93845fa78120d83d7c1e">wrapper::vsub</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a3d35fe714076b40450ba6ba870fae322">wrapper::vexpq</a>(vin), const_1)));</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa36875f2500a09ee35d0bb7eb8c0b91b0">ActivationFunction::SQRT</a>:</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;                    tmp = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a5ac8135a2c0a60f10448be0057543ed7">wrapper::vinv</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a569988c8e1a2619532b8f4d0394d5d79">wrapper::vinvsqrt</a>(vin + <a class="code" href="namespacearm__compute_1_1quantization.xhtml#a552dc3787d7ea1675f3e4e8993501d58">epsilon</a>));</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa12dec4e1f7ec620651b2b95c440ffac0">ActivationFunction::SQUARE</a>:</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;                    tmp = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(vin, vin);</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa143c8c6f51b9bb893ce71e38702e3cc1">ActivationFunction::TANH</a>:</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;                    tmp = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(va, <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#acbccd6a89f4cdd679773ce30f7959db0">wrapper::vtanh</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(vb, vin)));</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaad8156d3c6735d75d8a1b8dedd0e79c8b">ActivationFunction::IDENTITY</a>:</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;                    tmp = vin;</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;                <span class="keywordflow">default</span>:</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;                    <a class="code" href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;Unsupported activation function&quot;</span>);</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;            }</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;            <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ae7943ea9c1f74dc72c62d4cc3966a459">wrapper::vstore</a>(output_ptr + x, tmp);</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;        }</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;        <span class="comment">// Compute left-over elements</span></div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;        <span class="keywordflow">for</span>(; x &lt; window_end_x; ++x)</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;        {</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;            <span class="keyword">const</span> T in = *(reinterpret_cast&lt;const T *&gt;(input_ptr + x));</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;            T       tmp;</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;            <span class="keywordflow">switch</span>(act)</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;            {</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa7d8a220d2262f9d6c658d549ee12cf2c">ActivationFunction::ABS</a>:</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;                    tmp = std::abs(in);</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaaaac544aacc3615aada24897a215f5046">ActivationFunction::LINEAR</a>:</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;                    tmp = a * in + <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>;</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa72ee60fba0509af07cbbd91398d8db9d">ActivationFunction::LOGISTIC</a>:</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;                    tmp = static_cast&lt;T&gt;(1) / (static_cast&lt;T&gt;(1) + std::exp(-in));</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaad346bb4679d29be241279f15d7795c1c">ActivationFunction::RELU</a>:</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;                    tmp = std::max&lt;T&gt;(static_cast&lt;T&gt;(0), in);</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaacc516ab03b98f1c908ddf6ed4a7c45e9">ActivationFunction::BOUNDED_RELU</a>:</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;                    tmp = std::min&lt;T&gt;(a, std::max(static_cast&lt;T&gt;(0), in));</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaaab1d4411a9e7f5e82002512cddfdc33a">ActivationFunction::LU_BOUNDED_RELU</a>:</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;                    tmp = std::min&lt;T&gt;(a, std::max&lt;T&gt;(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>, in));</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaac7e80a3de04936f4e423e1b564fdca10">ActivationFunction::LEAKY_RELU</a>:</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;                    tmp = (in &gt; 0) ? in : a * in;</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaadcc44a50c791a591c74e00ecdda7c58d">ActivationFunction::SOFT_RELU</a>:</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;                    tmp = std::log(static_cast&lt;T&gt;(1) + std::exp(in));</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa5b44c930bf0ddeef48b50ef11e5ddd58">ActivationFunction::ELU</a>:</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;                    tmp = (in &gt;= 0) ? in : a * (std::exp(in) - 1);</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa36875f2500a09ee35d0bb7eb8c0b91b0">ActivationFunction::SQRT</a>:</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;                    tmp = std::sqrt(in);</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa12dec4e1f7ec620651b2b95c440ffac0">ActivationFunction::SQUARE</a>:</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;                    tmp = in * in;</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa143c8c6f51b9bb893ce71e38702e3cc1">ActivationFunction::TANH</a>:</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;                    tmp = a * std::tanh(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a> * in);</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaad8156d3c6735d75d8a1b8dedd0e79c8b">ActivationFunction::IDENTITY</a>:</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;                    tmp = in;</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;                <span class="keywordflow">default</span>:</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;                    <a class="code" href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;Unsupported activation function&quot;</span>);</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;            }</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;            *(output_ptr + x) = tmp;</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;        }</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;    },</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, output);</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;}</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;<span class="keyword">template</span> &lt;ActivationLayerInfo::ActivationFunction F, <span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;<span class="keyword">typename</span> std::enable_if&lt;std::is_same&lt;T, qasymm8_t&gt;::value, <span class="keywordtype">void</span>&gt;<a class="code" href="namespace_gemm_tuner.xhtml#a7aead736a07eaf25623ad7bfa1f0ee2d">::type</a> NEActivationLayerKernel::activation(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;window)</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;{</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span>                window_step_x  = 16 / <span class="keyword">sizeof</span>(T);</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span>               window_start_x = static_cast&lt;int&gt;(<a class="code" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>.<a class="code" href="classarm__compute_1_1_window.xhtml#a273fd2ecdd45169b2f702f01a7e5e382">x</a>().<a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#ab24e31d1a4830bf79564ee902ec6c060">start</a>());</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span>               window_end_x   = static_cast&lt;int&gt;(<a class="code" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>.<a class="code" href="classarm__compute_1_1_window.xhtml#a273fd2ecdd45169b2f702f01a7e5e382">x</a>().<a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#a0f590bfcf19110f44efc502e7b5c1d9e">end</a>());</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;    <span class="keyword">const</span> ActivationFunction act            = F;</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;    <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> win_collapsed = <a class="code" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>.<a class="code" href="classarm__compute_1_1_window.xhtml#a663ce71e1992366180fcb85b0a874e2f">collapse_if_possible</a>(<a class="code" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>, <a class="code" href="classarm__compute_1_1_window.xhtml#a893d17b56b9abc4423ce26e9a24ac5dc">Window::DimZ</a>);</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;    win_collapsed.<a class="code" href="classarm__compute_1_1_window.xhtml#acd3d2bba51cb84d34dd7656ad2375a6e">set</a>(<a class="code" href="classarm__compute_1_1_window.xhtml#aa96e81276ee4f87ab386cd05a5539a7d">Window::DimX</a>, <a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml">Window::Dimension</a>(0, 1, 1));</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;    <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>(_input, win_collapsed);</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;    <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> output(_output, win_collapsed);</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;    <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml">UniformQuantizationInfo</a> qi_in    = _input-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a3f3e1a3200223e6a304a533b1016e749">quantization_info</a>().<a class="code" href="classarm__compute_1_1_quantization_info.xhtml#a706fc156bcd4c45441bcaad05884b57d">uniform</a>();</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;    <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml">UniformQuantizationInfo</a> qi_out   = _output-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a3f3e1a3200223e6a304a533b1016e749">quantization_info</a>().<a class="code" href="classarm__compute_1_1_quantization_info.xhtml#a706fc156bcd4c45441bcaad05884b57d">uniform</a>();</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;    <span class="keyword">const</span> <a class="code" href="namespacearm__compute.xhtml#ac7e1832b8c58f07a98fc8d390b16ac27">qasymm8x16_t</a>            va       = vdupq_n_u8(<a class="code" href="namespacearm__compute.xhtml#ab8cef8b31b552b532a14ab8815e06285">quantize_qasymm8</a>(_act_info.<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#aec65e090c2276e8c8f8dffb6e3edd178">a</a>(), qi_in));</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;    <span class="keyword">const</span> <a class="code" href="namespacearm__compute.xhtml#ac7e1832b8c58f07a98fc8d390b16ac27">qasymm8x16_t</a>            vb       = vdupq_n_u8(<a class="code" href="namespacearm__compute.xhtml#ab8cef8b31b552b532a14ab8815e06285">quantize_qasymm8</a>(_act_info.<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a02a00a5d20986f3a7ab72b9c86be3a54">b</a>(), qi_in));</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;    <span class="keyword">const</span> <a class="code" href="namespacearm__compute.xhtml#ab8938bcb3ec0f5f8d93285eb3a28b701">qasymm8_t</a>               a        = <a class="code" href="namespacearm__compute.xhtml#ab8cef8b31b552b532a14ab8815e06285">quantize_qasymm8</a>(_act_info.<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#aec65e090c2276e8c8f8dffb6e3edd178">a</a>(), qi_in);</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;    <span class="keyword">const</span> <a class="code" href="namespacearm__compute.xhtml#ab8938bcb3ec0f5f8d93285eb3a28b701">qasymm8_t</a>               <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>        = <a class="code" href="namespacearm__compute.xhtml#ab8cef8b31b552b532a14ab8815e06285">quantize_qasymm8</a>(_act_info.<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a02a00a5d20986f3a7ab72b9c86be3a54">b</a>(), qi_in);</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;    <span class="keyword">const</span> <a class="code" href="namespacearm__compute.xhtml#ab8938bcb3ec0f5f8d93285eb3a28b701">qasymm8_t</a>               const_0  = <a class="code" href="namespacearm__compute.xhtml#ab8cef8b31b552b532a14ab8815e06285">quantize_qasymm8</a>(0.f, qi_in);</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;    <span class="keyword">const</span> <a class="code" href="namespacearm__compute.xhtml#ac7e1832b8c58f07a98fc8d390b16ac27">qasymm8x16_t</a>            vconst_0 = vdupq_n_u8(const_0);</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span>                    vconst_1 = vdupq_n_f32(1.f);</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;    <span class="keyword">const</span> float32x4_t             va_f32   = vdupq_n_f32(_act_info.<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#aec65e090c2276e8c8f8dffb6e3edd178">a</a>());</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;    <span class="keyword">const</span> float32x4_t             vb_f32   = vdupq_n_f32(_act_info.<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a02a00a5d20986f3a7ab72b9c86be3a54">b</a>());</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">float</span>                   a_f32    = _act_info.<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#aec65e090c2276e8c8f8dffb6e3edd178">a</a>();</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">float</span>                   b_f32    = _act_info.<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a02a00a5d20986f3a7ab72b9c86be3a54">b</a>();</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;    <span class="comment">// Initialise scale/offset for re-quantization</span></div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;    <span class="keywordtype">float</span>       s  = qi_in.<a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml#a1d28dec57cce925ad92342891bd71e7c">scale</a> / qi_out.<a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml#a1d28dec57cce925ad92342891bd71e7c">scale</a>;</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;    <span class="keywordtype">float</span>       o  = -qi_in.<a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml#a97bd6c077f3c7769f575b82988b9b668">offset</a> * s + qi_out.<a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml#a97bd6c077f3c7769f575b82988b9b668">offset</a>;</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;    float32x4_t vs = vdupq_n_f32(s);</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;    float32x4_t vo = vdupq_n_f32(o);</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a5002bf7ec46d52971f9526e94172cfee">execute_window_loop</a>(win_collapsed, [&amp;](<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_coordinates.xhtml">Coordinates</a> &amp;)</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;    {</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> input_ptr  = reinterpret_cast&lt;const T *&gt;(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>.ptr());</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> output_ptr = reinterpret_cast&lt;T *&gt;(output.ptr());</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;        <a class="code" href="namespacearm__compute_1_1wrapper_1_1traits.xhtml#ad302081ac4baa4f94e7628d84421052c">wrapper::traits::neon_bitvector_t&lt;T, wrapper::traits::BitWidth::W128&gt;</a> tmp;</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;        <span class="comment">// Compute S elements per iteration</span></div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;        <span class="keywordtype">int</span> x = window_start_x;</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;        <span class="keywordflow">for</span>(; x &lt;= (window_end_x - window_step_x); x += window_step_x)</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;        {</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;            <span class="keyword">const</span> <span class="keyword">auto</span> vin = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a77f54eded7fef436d3a4f21ad5a00da6">wrapper::vloadq</a>(input_ptr + x);</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;            <span class="keywordflow">if</span>(act == <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaad346bb4679d29be241279f15d7795c1c">ActivationFunction::RELU</a>)</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;            {</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;                <span class="comment">// Perform activation</span></div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;                tmp = vmaxq_u8(vconst_0, vin);</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;                <span class="comment">// Re-quantize to new output space</span></div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;                tmp = <a class="code" href="namespacearm__compute.xhtml#aba8de9eaa10a7cb45c5aa603585d0e4c">vmlaq_qasymm8</a>(tmp, vs, vo);</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;            }</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">if</span>(act == <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaacc516ab03b98f1c908ddf6ed4a7c45e9">ActivationFunction::BOUNDED_RELU</a>)</div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;            {</div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;                <span class="comment">// Perform activation</span></div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;                tmp = vminq_u8(va, vmaxq_u8(vconst_0, vin));</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;                <span class="comment">// Re-quantize to new output space</span></div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;                tmp = <a class="code" href="namespacearm__compute.xhtml#aba8de9eaa10a7cb45c5aa603585d0e4c">vmlaq_qasymm8</a>(tmp, vs, vo);</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;            }</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">if</span>(act == <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaaab1d4411a9e7f5e82002512cddfdc33a">ActivationFunction::LU_BOUNDED_RELU</a>)</div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;            {</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;                <span class="comment">// Perform activation</span></div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;                tmp = vminq_u8(va, vmaxq_u8(vb, vin));</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;                <span class="comment">// Re-quantize to new output space</span></div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;                tmp = <a class="code" href="namespacearm__compute.xhtml#aba8de9eaa10a7cb45c5aa603585d0e4c">vmlaq_qasymm8</a>(tmp, vs, vo);</div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;            }</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">if</span>(act == <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa72ee60fba0509af07cbbd91398d8db9d">ActivationFunction::LOGISTIC</a>)</div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;            {</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;                <span class="comment">// De-quantize</span></div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;                <span class="keyword">const</span> <span class="keyword">auto</span> vin_deq = <a class="code" href="namespacearm__compute.xhtml#a485ae62f3ade6c8d33c5c2e85b29c3a7">vdequantize</a>(vin, qi_in);</div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;                <span class="comment">// Perform activation</span></div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;                <span class="keyword">const</span> float32x4x4_t tmp_dep =</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;                {</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;                    {</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;                        <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a533635332a3a17c16d8f21c77e15e907">wrapper::vdiv</a>(vconst_1, <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a1894e825a225f3b2013f594cbffdae73">wrapper::vadd</a>(vconst_1, <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a3d35fe714076b40450ba6ba870fae322">wrapper::vexpq</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#aa24da6d1c1ce97217bab0291ce404fa7">wrapper::vneg</a>(vin_deq.val[0])))),</div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;                        <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a533635332a3a17c16d8f21c77e15e907">wrapper::vdiv</a>(vconst_1, <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a1894e825a225f3b2013f594cbffdae73">wrapper::vadd</a>(vconst_1, <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a3d35fe714076b40450ba6ba870fae322">wrapper::vexpq</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#aa24da6d1c1ce97217bab0291ce404fa7">wrapper::vneg</a>(vin_deq.val[1])))),</div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;                        <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a533635332a3a17c16d8f21c77e15e907">wrapper::vdiv</a>(vconst_1, <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a1894e825a225f3b2013f594cbffdae73">wrapper::vadd</a>(vconst_1, <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a3d35fe714076b40450ba6ba870fae322">wrapper::vexpq</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#aa24da6d1c1ce97217bab0291ce404fa7">wrapper::vneg</a>(vin_deq.val[2])))),</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;                        <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a533635332a3a17c16d8f21c77e15e907">wrapper::vdiv</a>(vconst_1, <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a1894e825a225f3b2013f594cbffdae73">wrapper::vadd</a>(vconst_1, <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a3d35fe714076b40450ba6ba870fae322">wrapper::vexpq</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#aa24da6d1c1ce97217bab0291ce404fa7">wrapper::vneg</a>(vin_deq.val[3])))),</div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;                    }</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;                };</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;                <span class="comment">// Re-quantize to new output space</span></div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;                tmp = <a class="code" href="namespacearm__compute.xhtml#a4ff1249e423ae9bfab075f5317c4d004">vquantize</a>(tmp_dep, qi_out);</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;            }</div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">if</span>(act == <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa143c8c6f51b9bb893ce71e38702e3cc1">ActivationFunction::TANH</a>)</div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;            {</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;                <span class="comment">// De-quantize</span></div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;                <span class="keyword">const</span> <span class="keyword">auto</span> vin_deq = <a class="code" href="namespacearm__compute.xhtml#a485ae62f3ade6c8d33c5c2e85b29c3a7">vdequantize</a>(vin, qi_in);</div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;                <span class="comment">// Perform activation</span></div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;                <span class="keyword">const</span> float32x4x4_t tmp_dep =</div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;                {</div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;                    {</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;                        <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(va_f32, <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#acbccd6a89f4cdd679773ce30f7959db0">wrapper::vtanh</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(vin_deq.val[0], vb_f32))),</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;                        <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(va_f32, <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#acbccd6a89f4cdd679773ce30f7959db0">wrapper::vtanh</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(vin_deq.val[1], vb_f32))),</div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;                        <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(va_f32, <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#acbccd6a89f4cdd679773ce30f7959db0">wrapper::vtanh</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(vin_deq.val[2], vb_f32))),</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;                        <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(va_f32, <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#acbccd6a89f4cdd679773ce30f7959db0">wrapper::vtanh</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(vin_deq.val[3], vb_f32))),</div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;                    }</div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;                };</div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;                <span class="comment">// Re-quantize to new output space</span></div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;                tmp = <a class="code" href="namespacearm__compute.xhtml#a4ff1249e423ae9bfab075f5317c4d004">vquantize</a>(tmp_dep, qi_out);</div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;            }</div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;            <span class="keywordflow">else</span></div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;            {</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;                <a class="code" href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;Unsupported activation function&quot;</span>);</div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;            }</div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;            <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ae7943ea9c1f74dc72c62d4cc3966a459">wrapper::vstore</a>(output_ptr + x, tmp);</div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;        }</div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;</div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;        <span class="comment">// Compute left-over elements</span></div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;        <span class="keywordflow">for</span>(; x &lt; window_end_x; ++x)</div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;        {</div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;            T in = *(reinterpret_cast&lt;const T *&gt;(input_ptr + x));</div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;            T tmp;</div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;            <span class="keywordflow">if</span>(act == <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaad346bb4679d29be241279f15d7795c1c">ActivationFunction::RELU</a>)</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;            {</div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;                tmp = std::max(const_0, in);</div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;                tmp = std::max&lt;int32_t&gt;(0, std::min&lt;int32_t&gt;(tmp * s + o, 255));</div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;            }</div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">if</span>(act == <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaacc516ab03b98f1c908ddf6ed4a7c45e9">ActivationFunction::BOUNDED_RELU</a>)</div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;            {</div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;                tmp = std::min(a, std::max(const_0, in));</div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;                tmp = std::max&lt;int32_t&gt;(0, std::min&lt;int32_t&gt;(tmp * s + o, 255));</div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;            }</div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">if</span>(act == <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaaab1d4411a9e7f5e82002512cddfdc33a">ActivationFunction::LU_BOUNDED_RELU</a>)</div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;            {</div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;                tmp = std::min(a, std::max(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>, in));</div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;                tmp = std::max&lt;int32_t&gt;(0, std::min&lt;int32_t&gt;(tmp * s + o, 255));</div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;            }</div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">if</span>(act == <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa72ee60fba0509af07cbbd91398d8db9d">ActivationFunction::LOGISTIC</a>)</div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;            {</div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;                <span class="keywordtype">float</span> tmp_f = <a class="code" href="namespacearm__compute.xhtml#ac1d8253f8b422e143ab989ad2a4d29dd">dequantize_qasymm8</a>(in, qi_in);</div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;                tmp_f       = 1.f / (1.f + std::exp(-tmp_f));</div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;                tmp         = <a class="code" href="namespacearm__compute.xhtml#ab8cef8b31b552b532a14ab8815e06285">quantize_qasymm8</a>(tmp_f, qi_out);</div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;            }</div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">if</span>(act == <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa143c8c6f51b9bb893ce71e38702e3cc1">ActivationFunction::TANH</a>)</div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;            {</div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;                <span class="keywordtype">float</span> tmp_f = <a class="code" href="namespacearm__compute.xhtml#ac1d8253f8b422e143ab989ad2a4d29dd">dequantize_qasymm8</a>(in, qi_in);</div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;                tmp_f       = a_f32 * std::tanh(b_f32 * tmp_f);</div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;                tmp         = <a class="code" href="namespacearm__compute.xhtml#ab8cef8b31b552b532a14ab8815e06285">quantize_qasymm8</a>(tmp_f, qi_out);</div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;            }</div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;            <span class="keywordflow">else</span></div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;            {</div><div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;                <a class="code" href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;Unsupported activation function&quot;</span>);</div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;            }</div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;            *(output_ptr + x) = tmp;</div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;        }</div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;    },</div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, output);</div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;}</div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;</div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;<span class="keyword">template</span> &lt;ActivationLayerInfo::ActivationFunction F, <span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;<span class="keyword">typename</span> std::enable_if&lt;std::is_same&lt;T, qasymm8_signed_t&gt;::value, <span class="keywordtype">void</span>&gt;<a class="code" href="namespace_gemm_tuner.xhtml#a7aead736a07eaf25623ad7bfa1f0ee2d">::type</a> NEActivationLayerKernel::activation(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;window)</div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;{</div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span>                window_step_x  = 16 / <span class="keyword">sizeof</span>(T);</div><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span>               window_start_x = static_cast&lt;int&gt;(<a class="code" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>.<a class="code" href="classarm__compute_1_1_window.xhtml#a273fd2ecdd45169b2f702f01a7e5e382">x</a>().<a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#ab24e31d1a4830bf79564ee902ec6c060">start</a>());</div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span>               window_end_x   = static_cast&lt;int&gt;(<a class="code" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>.<a class="code" href="classarm__compute_1_1_window.xhtml#a273fd2ecdd45169b2f702f01a7e5e382">x</a>().<a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#a0f590bfcf19110f44efc502e7b5c1d9e">end</a>());</div><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;    <span class="keyword">const</span> ActivationFunction act            = F;</div><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;</div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;    <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> win_collapsed = <a class="code" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>.<a class="code" href="classarm__compute_1_1_window.xhtml#a663ce71e1992366180fcb85b0a874e2f">collapse_if_possible</a>(<a class="code" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>, <a class="code" href="classarm__compute_1_1_window.xhtml#a893d17b56b9abc4423ce26e9a24ac5dc">Window::DimZ</a>);</div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;    win_collapsed.<a class="code" href="classarm__compute_1_1_window.xhtml#acd3d2bba51cb84d34dd7656ad2375a6e">set</a>(<a class="code" href="classarm__compute_1_1_window.xhtml#aa96e81276ee4f87ab386cd05a5539a7d">Window::DimX</a>, <a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml">Window::Dimension</a>(0, 1, 1));</div><div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;</div><div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;    <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>(_input, win_collapsed);</div><div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;    <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> output(_output, win_collapsed);</div><div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;</div><div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;    <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml">UniformQuantizationInfo</a> qi_in    = _input-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a3f3e1a3200223e6a304a533b1016e749">quantization_info</a>().<a class="code" href="classarm__compute_1_1_quantization_info.xhtml#a706fc156bcd4c45441bcaad05884b57d">uniform</a>();</div><div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;    <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml">UniformQuantizationInfo</a> qi_out   = _output-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a3f3e1a3200223e6a304a533b1016e749">quantization_info</a>().<a class="code" href="classarm__compute_1_1_quantization_info.xhtml#a706fc156bcd4c45441bcaad05884b57d">uniform</a>();</div><div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;    <span class="keyword">const</span> <a class="code" href="namespacearm__compute.xhtml#adc8234d074c193f521029e81cda80bb2">qasymm8x16_signed_t</a>     va       = vdupq_n_s8(<a class="code" href="namespacearm__compute.xhtml#a464ea9027ae01e64014040d69302800f">quantize_qasymm8_signed</a>(_act_info.<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#aec65e090c2276e8c8f8dffb6e3edd178">a</a>(), qi_in));</div><div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;    <span class="keyword">const</span> <a class="code" href="namespacearm__compute.xhtml#adc8234d074c193f521029e81cda80bb2">qasymm8x16_signed_t</a>     vb       = vdupq_n_s8(<a class="code" href="namespacearm__compute.xhtml#a464ea9027ae01e64014040d69302800f">quantize_qasymm8_signed</a>(_act_info.<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a02a00a5d20986f3a7ab72b9c86be3a54">b</a>(), qi_in));</div><div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;    <span class="keyword">const</span> <a class="code" href="namespacearm__compute.xhtml#af486d5eb4935eb5601d9c5fcc42be220">qasymm8_signed_t</a>        a        = <a class="code" href="namespacearm__compute.xhtml#a464ea9027ae01e64014040d69302800f">quantize_qasymm8_signed</a>(_act_info.<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#aec65e090c2276e8c8f8dffb6e3edd178">a</a>(), qi_in);</div><div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;    <span class="keyword">const</span> <a class="code" href="namespacearm__compute.xhtml#af486d5eb4935eb5601d9c5fcc42be220">qasymm8_signed_t</a>        <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>        = <a class="code" href="namespacearm__compute.xhtml#a464ea9027ae01e64014040d69302800f">quantize_qasymm8_signed</a>(_act_info.<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a02a00a5d20986f3a7ab72b9c86be3a54">b</a>(), qi_in);</div><div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;    <span class="keyword">const</span> <a class="code" href="namespacearm__compute.xhtml#af486d5eb4935eb5601d9c5fcc42be220">qasymm8_signed_t</a>        const_0  = <a class="code" href="namespacearm__compute.xhtml#a464ea9027ae01e64014040d69302800f">quantize_qasymm8_signed</a>(0.f, qi_in);</div><div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;    <span class="keyword">const</span> <a class="code" href="namespacearm__compute.xhtml#adc8234d074c193f521029e81cda80bb2">qasymm8x16_signed_t</a>     vconst_0 = vdupq_n_s8(const_0);</div><div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span>                    vconst_1 = vdupq_n_f32(1.f);</div><div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;    <span class="keyword">const</span> float32x4_t             va_f32   = vdupq_n_f32(_act_info.<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#aec65e090c2276e8c8f8dffb6e3edd178">a</a>());</div><div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;    <span class="keyword">const</span> float32x4_t             vb_f32   = vdupq_n_f32(_act_info.<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a02a00a5d20986f3a7ab72b9c86be3a54">b</a>());</div><div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">float</span>                   a_f32    = _act_info.<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#aec65e090c2276e8c8f8dffb6e3edd178">a</a>();</div><div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">float</span>                   b_f32    = _act_info.<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a02a00a5d20986f3a7ab72b9c86be3a54">b</a>();</div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;</div><div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;    <span class="comment">// Initialise scale/offset for re-quantization</span></div><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;    <span class="keywordtype">float</span>       s  = qi_in.<a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml#a1d28dec57cce925ad92342891bd71e7c">scale</a> / qi_out.<a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml#a1d28dec57cce925ad92342891bd71e7c">scale</a>;</div><div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;    <span class="keywordtype">float</span>       o  = -qi_in.<a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml#a97bd6c077f3c7769f575b82988b9b668">offset</a> * s + qi_out.<a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml#a97bd6c077f3c7769f575b82988b9b668">offset</a>;</div><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;    float32x4_t vs = vdupq_n_f32(s);</div><div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;    float32x4_t vo = vdupq_n_f32(o);</div><div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;</div><div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a5002bf7ec46d52971f9526e94172cfee">execute_window_loop</a>(win_collapsed, [&amp;](<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_coordinates.xhtml">Coordinates</a> &amp;)</div><div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;    {</div><div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> input_ptr  = reinterpret_cast&lt;const T *&gt;(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>.ptr());</div><div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> output_ptr = reinterpret_cast&lt;T *&gt;(output.ptr());</div><div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;</div><div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;        <a class="code" href="namespacearm__compute_1_1wrapper_1_1traits.xhtml#ad302081ac4baa4f94e7628d84421052c">wrapper::traits::neon_bitvector_t&lt;T, wrapper::traits::BitWidth::W128&gt;</a> tmp;</div><div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;</div><div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;        <span class="comment">// Compute S elements per iteration</span></div><div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;        <span class="keywordtype">int</span> x = window_start_x;</div><div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;        <span class="keywordflow">for</span>(; x &lt;= (window_end_x - window_step_x); x += window_step_x)</div><div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;        {</div><div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;            <span class="keyword">const</span> <span class="keyword">auto</span> vin = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a77f54eded7fef436d3a4f21ad5a00da6">wrapper::vloadq</a>(input_ptr + x);</div><div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;            <span class="keywordflow">if</span>(act == <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaad346bb4679d29be241279f15d7795c1c">ActivationFunction::RELU</a>)</div><div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;            {</div><div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;                <span class="comment">// Perform activation</span></div><div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;                tmp = vmaxq_s8(vconst_0, vin);</div><div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;                <span class="comment">// Re-quantize to new output space</span></div><div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;                tmp = <a class="code" href="namespacearm__compute.xhtml#a54c0b3b26b7e2588af93ac27f7724279">vmlaq_qasymm8_signed</a>(tmp, vs, vo);</div><div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;            }</div><div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">if</span>(act == <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaacc516ab03b98f1c908ddf6ed4a7c45e9">ActivationFunction::BOUNDED_RELU</a>)</div><div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;            {</div><div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;                <span class="comment">// Perform activation</span></div><div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;                tmp = vminq_s8(va, vmaxq_s8(vconst_0, vin));</div><div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;                <span class="comment">// Re-quantize to new output space</span></div><div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;                tmp = <a class="code" href="namespacearm__compute.xhtml#a54c0b3b26b7e2588af93ac27f7724279">vmlaq_qasymm8_signed</a>(tmp, vs, vo);</div><div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;            }</div><div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">if</span>(act == <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaaab1d4411a9e7f5e82002512cddfdc33a">ActivationFunction::LU_BOUNDED_RELU</a>)</div><div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;            {</div><div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;                <span class="comment">// Perform activation</span></div><div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;                tmp = vminq_s8(va, vmaxq_s8(vb, vin));</div><div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;                <span class="comment">// Re-quantize to new output space</span></div><div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;                tmp = <a class="code" href="namespacearm__compute.xhtml#a54c0b3b26b7e2588af93ac27f7724279">vmlaq_qasymm8_signed</a>(tmp, vs, vo);</div><div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;            }</div><div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">if</span>(act == <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa72ee60fba0509af07cbbd91398d8db9d">ActivationFunction::LOGISTIC</a>)</div><div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;            {</div><div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;                <span class="comment">// De-quantize</span></div><div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;                <span class="keyword">const</span> <span class="keyword">auto</span> vin_deq = <a class="code" href="namespacearm__compute.xhtml#a485ae62f3ade6c8d33c5c2e85b29c3a7">vdequantize</a>(vin, qi_in);</div><div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;                <span class="comment">// Perform activation</span></div><div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;                <span class="keyword">const</span> float32x4x4_t tmp_dep =</div><div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;                {</div><div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;                    {</div><div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;                        <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a533635332a3a17c16d8f21c77e15e907">wrapper::vdiv</a>(vconst_1, <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a1894e825a225f3b2013f594cbffdae73">wrapper::vadd</a>(vconst_1, <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a3d35fe714076b40450ba6ba870fae322">wrapper::vexpq</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#aa24da6d1c1ce97217bab0291ce404fa7">wrapper::vneg</a>(vin_deq.val[0])))),</div><div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;                        <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a533635332a3a17c16d8f21c77e15e907">wrapper::vdiv</a>(vconst_1, <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a1894e825a225f3b2013f594cbffdae73">wrapper::vadd</a>(vconst_1, <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a3d35fe714076b40450ba6ba870fae322">wrapper::vexpq</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#aa24da6d1c1ce97217bab0291ce404fa7">wrapper::vneg</a>(vin_deq.val[1])))),</div><div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;                        <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a533635332a3a17c16d8f21c77e15e907">wrapper::vdiv</a>(vconst_1, <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a1894e825a225f3b2013f594cbffdae73">wrapper::vadd</a>(vconst_1, <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a3d35fe714076b40450ba6ba870fae322">wrapper::vexpq</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#aa24da6d1c1ce97217bab0291ce404fa7">wrapper::vneg</a>(vin_deq.val[2])))),</div><div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;                        <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a533635332a3a17c16d8f21c77e15e907">wrapper::vdiv</a>(vconst_1, <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a1894e825a225f3b2013f594cbffdae73">wrapper::vadd</a>(vconst_1, <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a3d35fe714076b40450ba6ba870fae322">wrapper::vexpq</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#aa24da6d1c1ce97217bab0291ce404fa7">wrapper::vneg</a>(vin_deq.val[3])))),</div><div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;                    }</div><div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;                };</div><div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;                <span class="comment">// Re-quantize to new output space</span></div><div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;                tmp = <a class="code" href="namespacearm__compute.xhtml#a76f394ac7b594f233f6fd13ad8bd99d5">vquantize_signed</a>(tmp_dep, qi_out);</div><div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;            }</div><div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">if</span>(act == <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa143c8c6f51b9bb893ce71e38702e3cc1">ActivationFunction::TANH</a>)</div><div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;            {</div><div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;                <span class="comment">// De-quantize</span></div><div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;                <span class="keyword">const</span> <span class="keyword">auto</span> vin_deq = <a class="code" href="namespacearm__compute.xhtml#a485ae62f3ade6c8d33c5c2e85b29c3a7">vdequantize</a>(vin, qi_in);</div><div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;                <span class="comment">// Perform activation</span></div><div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;                <span class="keyword">const</span> float32x4x4_t tmp_dep =</div><div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;                {</div><div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;                    {</div><div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;                        <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(va_f32, <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#acbccd6a89f4cdd679773ce30f7959db0">wrapper::vtanh</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(vin_deq.val[0], vb_f32))),</div><div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;                        <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(va_f32, <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#acbccd6a89f4cdd679773ce30f7959db0">wrapper::vtanh</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(vin_deq.val[1], vb_f32))),</div><div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;                        <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(va_f32, <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#acbccd6a89f4cdd679773ce30f7959db0">wrapper::vtanh</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(vin_deq.val[2], vb_f32))),</div><div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;                        <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(va_f32, <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#acbccd6a89f4cdd679773ce30f7959db0">wrapper::vtanh</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(vin_deq.val[3], vb_f32))),</div><div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;                    }</div><div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;                };</div><div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;                <span class="comment">// Re-quantize to new output space</span></div><div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;                tmp = <a class="code" href="namespacearm__compute.xhtml#a76f394ac7b594f233f6fd13ad8bd99d5">vquantize_signed</a>(tmp_dep, qi_out);</div><div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;            }</div><div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;            <span class="keywordflow">else</span></div><div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;            {</div><div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;                <a class="code" href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;Unsupported activation function&quot;</span>);</div><div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;            }</div><div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;            <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ae7943ea9c1f74dc72c62d4cc3966a459">wrapper::vstore</a>(output_ptr + x, tmp);</div><div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;        }</div><div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;</div><div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;        <span class="comment">// Compute left-over elements</span></div><div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;        <span class="keywordflow">for</span>(; x &lt; window_end_x; ++x)</div><div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;        {</div><div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;            T in = *(reinterpret_cast&lt;const T *&gt;(input_ptr + x));</div><div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;            T tmp;</div><div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;            <span class="keywordflow">if</span>(act == <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaad346bb4679d29be241279f15d7795c1c">ActivationFunction::RELU</a>)</div><div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;            {</div><div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;                tmp = std::max(const_0, in);</div><div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;                tmp = std::max&lt;int32_t&gt;(0, std::min&lt;int32_t&gt;(tmp * s + o, 255));</div><div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;            }</div><div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">if</span>(act == <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaacc516ab03b98f1c908ddf6ed4a7c45e9">ActivationFunction::BOUNDED_RELU</a>)</div><div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;            {</div><div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;                tmp = std::min(a, std::max(const_0, in));</div><div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;                tmp = std::max&lt;int32_t&gt;(0, std::min&lt;int32_t&gt;(tmp * s + o, 255));</div><div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;            }</div><div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">if</span>(act == <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaaab1d4411a9e7f5e82002512cddfdc33a">ActivationFunction::LU_BOUNDED_RELU</a>)</div><div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;            {</div><div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;                tmp = std::min(a, std::max(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>, in));</div><div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;                tmp = std::max&lt;int32_t&gt;(0, std::min&lt;int32_t&gt;(tmp * s + o, 255));</div><div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;            }</div><div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">if</span>(act == <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa72ee60fba0509af07cbbd91398d8db9d">ActivationFunction::LOGISTIC</a>)</div><div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;            {</div><div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;                <span class="keywordtype">float</span> tmp_f = <a class="code" href="namespacearm__compute.xhtml#afe6fcf1a0c6f6c2d2cb10a8c14fa9131">dequantize_qasymm8_signed</a>(in, qi_in);</div><div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;                tmp_f       = 1.f / (1.f + std::exp(-tmp_f));</div><div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;                tmp         = <a class="code" href="namespacearm__compute.xhtml#a464ea9027ae01e64014040d69302800f">quantize_qasymm8_signed</a>(tmp_f, qi_out);</div><div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;            }</div><div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">if</span>(act == <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa143c8c6f51b9bb893ce71e38702e3cc1">ActivationFunction::TANH</a>)</div><div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;            {</div><div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;                <span class="keywordtype">float</span> tmp_f = <a class="code" href="namespacearm__compute.xhtml#afe6fcf1a0c6f6c2d2cb10a8c14fa9131">dequantize_qasymm8_signed</a>(in, qi_in);</div><div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;                tmp_f       = a_f32 * std::tanh(b_f32 * tmp_f);</div><div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;                tmp         = <a class="code" href="namespacearm__compute.xhtml#a464ea9027ae01e64014040d69302800f">quantize_qasymm8_signed</a>(tmp_f, qi_out);</div><div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;            }</div><div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;            <span class="keywordflow">else</span></div><div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;            {</div><div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;                <a class="code" href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;Unsupported activation function&quot;</span>);</div><div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;            }</div><div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;            *(output_ptr + x) = tmp;</div><div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;        }</div><div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;    },</div><div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, output);</div><div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;}</div><div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;</div><div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;<span class="keyword">template</span> &lt;ActivationLayerInfo::ActivationFunction F, <span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;<span class="keyword">typename</span> std::enable_if&lt;std::is_same&lt;T, qsymm16_t&gt;::value, <span class="keywordtype">void</span>&gt;<a class="code" href="namespace_gemm_tuner.xhtml#a7aead736a07eaf25623ad7bfa1f0ee2d">::type</a> NEActivationLayerKernel::activation(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;window)</div><div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;{</div><div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span>                window_step_x  = 16 / <span class="keyword">sizeof</span>(T);</div><div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span>               window_start_x = static_cast&lt;int&gt;(<a class="code" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>.<a class="code" href="classarm__compute_1_1_window.xhtml#a273fd2ecdd45169b2f702f01a7e5e382">x</a>().<a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#ab24e31d1a4830bf79564ee902ec6c060">start</a>());</div><div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span>               window_end_x   = static_cast&lt;int&gt;(<a class="code" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>.<a class="code" href="classarm__compute_1_1_window.xhtml#a273fd2ecdd45169b2f702f01a7e5e382">x</a>().<a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#a0f590bfcf19110f44efc502e7b5c1d9e">end</a>());</div><div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;    <span class="keyword">const</span> ActivationFunction act            = F;</div><div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;</div><div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;    <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> win_collapsed = <a class="code" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>.<a class="code" href="classarm__compute_1_1_window.xhtml#a663ce71e1992366180fcb85b0a874e2f">collapse_if_possible</a>(<a class="code" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>, <a class="code" href="classarm__compute_1_1_window.xhtml#a893d17b56b9abc4423ce26e9a24ac5dc">Window::DimZ</a>);</div><div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;    win_collapsed.<a class="code" href="classarm__compute_1_1_window.xhtml#acd3d2bba51cb84d34dd7656ad2375a6e">set</a>(<a class="code" href="classarm__compute_1_1_window.xhtml#aa96e81276ee4f87ab386cd05a5539a7d">Window::DimX</a>, <a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml">Window::Dimension</a>(0, 1, 1));</div><div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;</div><div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;    <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>(_input, win_collapsed);</div><div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;    <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> output(_output, win_collapsed);</div><div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;</div><div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;    <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml">UniformQuantizationInfo</a> qi_in    = _input-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a3f3e1a3200223e6a304a533b1016e749">quantization_info</a>().<a class="code" href="classarm__compute_1_1_quantization_info.xhtml#a706fc156bcd4c45441bcaad05884b57d">uniform</a>();</div><div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;    <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml">UniformQuantizationInfo</a> qi_out   = _output-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a3f3e1a3200223e6a304a533b1016e749">quantization_info</a>().<a class="code" href="classarm__compute_1_1_quantization_info.xhtml#a706fc156bcd4c45441bcaad05884b57d">uniform</a>();</div><div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span>                    vconst_1 = vdupq_n_f32(1.f);</div><div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;    <span class="keyword">const</span> float32x4_t             va_f32   = vdupq_n_f32(_act_info.<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#aec65e090c2276e8c8f8dffb6e3edd178">a</a>());</div><div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;    <span class="keyword">const</span> float32x4_t             vb_f32   = vdupq_n_f32(_act_info.<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a02a00a5d20986f3a7ab72b9c86be3a54">b</a>());</div><div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">float</span>                   a_f32    = _act_info.<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#aec65e090c2276e8c8f8dffb6e3edd178">a</a>();</div><div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">float</span>                   b_f32    = _act_info.<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a02a00a5d20986f3a7ab72b9c86be3a54">b</a>();</div><div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;</div><div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a5002bf7ec46d52971f9526e94172cfee">execute_window_loop</a>(win_collapsed, [&amp;](<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_coordinates.xhtml">Coordinates</a> &amp;)</div><div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;    {</div><div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> input_ptr  = reinterpret_cast&lt;const T *&gt;(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>.ptr());</div><div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> output_ptr = reinterpret_cast&lt;T *&gt;(output.ptr());</div><div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;</div><div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;        <a class="code" href="namespacearm__compute_1_1wrapper_1_1traits.xhtml#ad302081ac4baa4f94e7628d84421052c">wrapper::traits::neon_bitvector_t&lt;T, wrapper::traits::BitWidth::W128&gt;</a> tmp;</div><div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;        <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(tmp);</div><div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;</div><div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;        <span class="comment">// Compute S elements per iteration</span></div><div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;        <span class="keywordtype">int</span> x = window_start_x;</div><div class="line"><a name="l00711"></a><span class="lineno">  711</span>&#160;        <span class="keywordflow">for</span>(; x &lt;= (window_end_x - window_step_x); x += window_step_x)</div><div class="line"><a name="l00712"></a><span class="lineno">  712</span>&#160;        {</div><div class="line"><a name="l00713"></a><span class="lineno">  713</span>&#160;            <span class="keyword">const</span> <span class="keyword">auto</span> vin = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a77f54eded7fef436d3a4f21ad5a00da6">wrapper::vloadq</a>(input_ptr + x);</div><div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160;            <span class="keywordflow">if</span>(act == <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa72ee60fba0509af07cbbd91398d8db9d">ActivationFunction::LOGISTIC</a>)</div><div class="line"><a name="l00715"></a><span class="lineno">  715</span>&#160;            {</div><div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160;                <span class="comment">// De-quantize</span></div><div class="line"><a name="l00717"></a><span class="lineno">  717</span>&#160;                <span class="keyword">const</span> <span class="keyword">auto</span> vin_deq = <a class="code" href="namespacearm__compute.xhtml#aa9985607399e329fcb371a92c84a6acd">vdequantize_int16</a>(vin, qi_in.<a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml#a1d28dec57cce925ad92342891bd71e7c">scale</a>);</div><div class="line"><a name="l00718"></a><span class="lineno">  718</span>&#160;                <span class="comment">// Perform activation</span></div><div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;                <span class="keyword">const</span> float32x4x2_t tmp_dep =</div><div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;                {</div><div class="line"><a name="l00721"></a><span class="lineno">  721</span>&#160;                    {</div><div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;                        <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a533635332a3a17c16d8f21c77e15e907">wrapper::vdiv</a>(vconst_1, <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a1894e825a225f3b2013f594cbffdae73">wrapper::vadd</a>(vconst_1, <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a3d35fe714076b40450ba6ba870fae322">wrapper::vexpq</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#aa24da6d1c1ce97217bab0291ce404fa7">wrapper::vneg</a>(vin_deq.val[0])))),</div><div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160;                        <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a533635332a3a17c16d8f21c77e15e907">wrapper::vdiv</a>(vconst_1, <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a1894e825a225f3b2013f594cbffdae73">wrapper::vadd</a>(vconst_1, <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a3d35fe714076b40450ba6ba870fae322">wrapper::vexpq</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#aa24da6d1c1ce97217bab0291ce404fa7">wrapper::vneg</a>(vin_deq.val[1])))),</div><div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160;                    }</div><div class="line"><a name="l00725"></a><span class="lineno">  725</span>&#160;                };</div><div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;                <span class="comment">// Re-quantize to new output space</span></div><div class="line"><a name="l00727"></a><span class="lineno">  727</span>&#160;                tmp = <a class="code" href="namespacearm__compute.xhtml#ac5986edc0dbcd0c071107cafb98cbc39">vquantize_int16</a>(tmp_dep, qi_out.<a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml#a1d28dec57cce925ad92342891bd71e7c">scale</a>);</div><div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;            }</div><div class="line"><a name="l00729"></a><span class="lineno">  729</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">if</span>(act == <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa143c8c6f51b9bb893ce71e38702e3cc1">ActivationFunction::TANH</a>)</div><div class="line"><a name="l00730"></a><span class="lineno">  730</span>&#160;            {</div><div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160;                <span class="comment">// De-quantize</span></div><div class="line"><a name="l00732"></a><span class="lineno">  732</span>&#160;                <span class="keyword">const</span> <span class="keyword">auto</span> vin_deq = <a class="code" href="namespacearm__compute.xhtml#aa9985607399e329fcb371a92c84a6acd">vdequantize_int16</a>(vin, qi_in.<a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml#a1d28dec57cce925ad92342891bd71e7c">scale</a>);</div><div class="line"><a name="l00733"></a><span class="lineno">  733</span>&#160;                <span class="comment">// Perform activation</span></div><div class="line"><a name="l00734"></a><span class="lineno">  734</span>&#160;                <span class="keyword">const</span> float32x4x2_t tmp_dep =</div><div class="line"><a name="l00735"></a><span class="lineno">  735</span>&#160;                {</div><div class="line"><a name="l00736"></a><span class="lineno">  736</span>&#160;                    {</div><div class="line"><a name="l00737"></a><span class="lineno">  737</span>&#160;                        <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(va_f32, <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#acbccd6a89f4cdd679773ce30f7959db0">wrapper::vtanh</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(vin_deq.val[0], vb_f32))),</div><div class="line"><a name="l00738"></a><span class="lineno">  738</span>&#160;                        <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(va_f32, <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#acbccd6a89f4cdd679773ce30f7959db0">wrapper::vtanh</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(vin_deq.val[1], vb_f32))),</div><div class="line"><a name="l00739"></a><span class="lineno">  739</span>&#160;                    }</div><div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;                };</div><div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160;                <span class="comment">// Re-quantize to new output space</span></div><div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160;                tmp = <a class="code" href="namespacearm__compute.xhtml#ac5986edc0dbcd0c071107cafb98cbc39">vquantize_int16</a>(tmp_dep, qi_out.<a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml#a1d28dec57cce925ad92342891bd71e7c">scale</a>);</div><div class="line"><a name="l00743"></a><span class="lineno">  743</span>&#160;            }</div><div class="line"><a name="l00744"></a><span class="lineno">  744</span>&#160;            <span class="keywordflow">else</span></div><div class="line"><a name="l00745"></a><span class="lineno">  745</span>&#160;            {</div><div class="line"><a name="l00746"></a><span class="lineno">  746</span>&#160;                <a class="code" href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;Unsupported activation function&quot;</span>);</div><div class="line"><a name="l00747"></a><span class="lineno">  747</span>&#160;            }</div><div class="line"><a name="l00748"></a><span class="lineno">  748</span>&#160;            <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ae7943ea9c1f74dc72c62d4cc3966a459">wrapper::vstore</a>(output_ptr + x, tmp);</div><div class="line"><a name="l00749"></a><span class="lineno">  749</span>&#160;        }</div><div class="line"><a name="l00750"></a><span class="lineno">  750</span>&#160;</div><div class="line"><a name="l00751"></a><span class="lineno">  751</span>&#160;        <span class="comment">// Compute left-over elements</span></div><div class="line"><a name="l00752"></a><span class="lineno">  752</span>&#160;        <span class="keywordflow">for</span>(; x &lt; window_end_x; ++x)</div><div class="line"><a name="l00753"></a><span class="lineno">  753</span>&#160;        {</div><div class="line"><a name="l00754"></a><span class="lineno">  754</span>&#160;            T in = *(reinterpret_cast&lt;const T *&gt;(input_ptr + x));</div><div class="line"><a name="l00755"></a><span class="lineno">  755</span>&#160;            T tmp;</div><div class="line"><a name="l00756"></a><span class="lineno">  756</span>&#160;            <span class="keywordflow">if</span>(act == <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa72ee60fba0509af07cbbd91398d8db9d">ActivationFunction::LOGISTIC</a>)</div><div class="line"><a name="l00757"></a><span class="lineno">  757</span>&#160;            {</div><div class="line"><a name="l00758"></a><span class="lineno">  758</span>&#160;                <span class="keywordtype">float</span> tmp_f = <a class="code" href="namespacearm__compute.xhtml#aae8583b382eaea109164f2f3e16380b1">dequantize_qsymm16</a>(in, qi_in.<a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml#a1d28dec57cce925ad92342891bd71e7c">scale</a>);</div><div class="line"><a name="l00759"></a><span class="lineno">  759</span>&#160;                tmp_f       = 1.f / (1.f + std::exp(-tmp_f));</div><div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;                tmp         = <a class="code" href="namespacearm__compute.xhtml#abd9a9e4bfba3b2e6a35099618122d38e">quantize_qsymm16</a>(tmp_f, qi_out);</div><div class="line"><a name="l00761"></a><span class="lineno">  761</span>&#160;            }</div><div class="line"><a name="l00762"></a><span class="lineno">  762</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">if</span>(act == <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa143c8c6f51b9bb893ce71e38702e3cc1">ActivationFunction::TANH</a>)</div><div class="line"><a name="l00763"></a><span class="lineno">  763</span>&#160;            {</div><div class="line"><a name="l00764"></a><span class="lineno">  764</span>&#160;                <span class="keywordtype">float</span> tmp_f = <a class="code" href="namespacearm__compute.xhtml#aae8583b382eaea109164f2f3e16380b1">dequantize_qsymm16</a>(in, qi_in.<a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml#a1d28dec57cce925ad92342891bd71e7c">scale</a>);</div><div class="line"><a name="l00765"></a><span class="lineno">  765</span>&#160;                tmp_f       = a_f32 * std::tanh(b_f32 * tmp_f);</div><div class="line"><a name="l00766"></a><span class="lineno">  766</span>&#160;                tmp         = <a class="code" href="namespacearm__compute.xhtml#abd9a9e4bfba3b2e6a35099618122d38e">quantize_qsymm16</a>(tmp_f, qi_out);</div><div class="line"><a name="l00767"></a><span class="lineno">  767</span>&#160;            }</div><div class="line"><a name="l00768"></a><span class="lineno">  768</span>&#160;            <span class="keywordflow">else</span></div><div class="line"><a name="l00769"></a><span class="lineno">  769</span>&#160;            {</div><div class="line"><a name="l00770"></a><span class="lineno">  770</span>&#160;                <a class="code" href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;Unsupported activation function&quot;</span>);</div><div class="line"><a name="l00771"></a><span class="lineno">  771</span>&#160;            }</div><div class="line"><a name="l00772"></a><span class="lineno">  772</span>&#160;            *(output_ptr + x) = tmp;</div><div class="line"><a name="l00773"></a><span class="lineno">  773</span>&#160;        }</div><div class="line"><a name="l00774"></a><span class="lineno">  774</span>&#160;    },</div><div class="line"><a name="l00775"></a><span class="lineno">  775</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, output);</div><div class="line"><a name="l00776"></a><span class="lineno">  776</span>&#160;}</div><div class="line"><a name="l00777"></a><span class="lineno">  777</span>&#160;</div><div class="line"><a name="l00778"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_activation_layer_kernel.xhtml#aa37e2d0b4cd4f835bfa2a2df4a0bdd2c">  778</a></span>&#160;<a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> <a class="code" href="classarm__compute_1_1_n_e_activation_layer_kernel.xhtml#aa37e2d0b4cd4f835bfa2a2df4a0bdd2c">NEActivationLayerKernel::validate</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *output, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1f8aca235c095df227e7444f6b237eb1">act_info</a>)</div><div class="line"><a name="l00779"></a><span class="lineno">  779</span>&#160;{</div><div class="line"><a name="l00780"></a><span class="lineno">  780</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1f8aca235c095df227e7444f6b237eb1">act_info</a>);</div><div class="line"><a name="l00781"></a><span class="lineno">  781</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(validate_arguments(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, output, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1f8aca235c095df227e7444f6b237eb1">act_info</a>));</div><div class="line"><a name="l00782"></a><span class="lineno">  782</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(validate_and_configure_window(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;clone().get(), (output != <span class="keyword">nullptr</span>) ? output-&gt;<a class="code" href="classarm__compute_1_1misc_1_1_i_cloneable.xhtml#a4d10e5012a872e7f78f2b539b673049d">clone</a>().get() : <span class="keyword">nullptr</span>).first);</div><div class="line"><a name="l00783"></a><span class="lineno">  783</span>&#160;</div><div class="line"><a name="l00784"></a><span class="lineno">  784</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_status.xhtml">Status</a>{};</div><div class="line"><a name="l00785"></a><span class="lineno">  785</span>&#160;}</div><div class="line"><a name="l00786"></a><span class="lineno">  786</span>&#160;</div><div class="line"><a name="l00787"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_activation_layer_kernel.xhtml#a112b35dd205c62ea6ed1447ef226da82">  787</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_n_e_activation_layer_kernel.xhtml#a112b35dd205c62ea6ed1447ef226da82">NEActivationLayerKernel::run</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;window, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1_thread_info.xhtml">ThreadInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4f4125dba5283887b34f889b1c615c0c">info</a>)</div><div class="line"><a name="l00788"></a><span class="lineno">  788</span>&#160;{</div><div class="line"><a name="l00789"></a><span class="lineno">  789</span>&#160;    <span class="comment">// Early exit on disabled activation</span></div><div class="line"><a name="l00790"></a><span class="lineno">  790</span>&#160;    <span class="keywordflow">if</span>(!_act_info.<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#af5a8385102f8f8dd6c5957eac08b04c2">enabled</a>())</div><div class="line"><a name="l00791"></a><span class="lineno">  791</span>&#160;    {</div><div class="line"><a name="l00792"></a><span class="lineno">  792</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00793"></a><span class="lineno">  793</span>&#160;    }</div><div class="line"><a name="l00794"></a><span class="lineno">  794</span>&#160;</div><div class="line"><a name="l00795"></a><span class="lineno">  795</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4f4125dba5283887b34f889b1c615c0c">info</a>);</div><div class="line"><a name="l00796"></a><span class="lineno">  796</span>&#160;    <a class="code" href="_validate_8h.xhtml#a1b35b0d258183cf9ef36adf684d0b88c">ARM_COMPUTE_ERROR_ON_UNCONFIGURED_KERNEL</a>(<span class="keyword">this</span>);</div><div class="line"><a name="l00797"></a><span class="lineno">  797</span>&#160;    <a class="code" href="_validate_8h.xhtml#a6eb9ce82815fe429250189da7592ba75">ARM_COMPUTE_ERROR_ON_INVALID_SUBWINDOW</a>(<a class="code" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">IKernel::window</a>(), <a class="code" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>);</div><div class="line"><a name="l00798"></a><span class="lineno">  798</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(_func == <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00799"></a><span class="lineno">  799</span>&#160;</div><div class="line"><a name="l00800"></a><span class="lineno">  800</span>&#160;    (this-&gt;*_func)(<a class="code" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>);</div><div class="line"><a name="l00801"></a><span class="lineno">  801</span>&#160;}</div><div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_a1f4e725b8e1ea36b30e09dc08ae6961d"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a1f4e725b8e1ea36b30e09dc08ae6961d">arm_compute::ITensorInfo::num_dimensions</a></div><div class="ttdeci">virtual size_t num_dimensions() const =0</div><div class="ttdoc">The number of dimensions of the tensor (rank)</div></div>
<div class="ttc" id="namespacearm__compute_1_1wrapper_xhtml_a533635332a3a17c16d8f21c77e15e907"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#a533635332a3a17c16d8f21c77e15e907">arm_compute::wrapper::vdiv</a></div><div class="ttdeci">float32x2_t vdiv(const float32x2_t &amp;a, const float32x2_t &amp;b)</div><div class="ttdef"><b>Definition:</b> <a href="div_8h_source.xhtml#l00058">div.h:58</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_kernel_xhtml_ad34a46f53686c12a5c5e717cc9617fb6"><div class="ttname"><a href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">arm_compute::IKernel::window</a></div><div class="ttdeci">const Window &amp; window() const</div><div class="ttdoc">The maximum window the kernel can be executed on.</div><div class="ttdef"><b>Definition:</b> <a href="_i_kernel_8cpp_source.xhtml#l00028">IKernel.cpp:28</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_abd9a9e4bfba3b2e6a35099618122d38e"><div class="ttname"><a href="namespacearm__compute.xhtml#abd9a9e4bfba3b2e6a35099618122d38e">arm_compute::quantize_qsymm16</a></div><div class="ttdeci">int16_t quantize_qsymm16(float value, const UniformQuantizationInfo &amp;qinfo, RoundingPolicy rounding_policy=RoundingPolicy::TO_NEAREST_UP)</div><div class="ttdoc">Quantize a value given a 16-bit symmetric quantization scheme.</div><div class="ttdef"><b>Definition:</b> <a href="_quantization_info_8h_source.xhtml#l00426">QuantizationInfo.h:426</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1wrapper_xhtml_a23cc34c6476b7df556284c718c44e65c"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#a23cc34c6476b7df556284c718c44e65c">arm_compute::wrapper::vlog</a></div><div class="ttdeci">float32x4_t vlog(const float32x4_t &amp;a)</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_o_n_2wrapper_2intrinsics_2_log_8h_source.xhtml#l00040">log.h:40</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1wrapper_xhtml_acbccd6a89f4cdd679773ce30f7959db0"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#acbccd6a89f4cdd679773ce30f7959db0">arm_compute::wrapper::vtanh</a></div><div class="ttdeci">float32x4_t vtanh(const float32x4_t &amp;a)</div><div class="ttdef"><b>Definition:</b> <a href="tanh_8h_source.xhtml#l00040">tanh.h:40</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a3ca8a4ea8f992df3b462bc7b24d097c6"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a3ca8a4ea8f992df3b462bc7b24d097c6">arm_compute::DataType::QSYMM16</a></div><div class="ttdoc">quantized, symmetric fixed-point 16-bit number</div></div>
<div class="ttc" id="_i_tensor_8h_xhtml"><div class="ttname"><a href="_i_tensor_8h.xhtml">ITensor.h</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ac1d8253f8b422e143ab989ad2a4d29dd"><div class="ttname"><a href="namespacearm__compute.xhtml#ac1d8253f8b422e143ab989ad2a4d29dd">arm_compute::dequantize_qasymm8</a></div><div class="ttdeci">float dequantize_qasymm8(uint8_t value, const INFO_TYPE &amp;qinfo)</div><div class="ttdoc">Dequantize a value given an unsigned 8-bit asymmetric quantization scheme.</div><div class="ttdef"><b>Definition:</b> <a href="_quantization_info_8h_source.xhtml#l00338">QuantizationInfo.h:338</a></div></div>
<div class="ttc" id="classarm__compute_1_1_activation_layer_info_xhtml_af5a8385102f8f8dd6c5957eac08b04c2"><div class="ttname"><a href="classarm__compute_1_1_activation_layer_info.xhtml#af5a8385102f8f8dd6c5957eac08b04c2">arm_compute::ActivationLayerInfo::enabled</a></div><div class="ttdeci">bool enabled() const</div><div class="ttdoc">Check if initialised.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01664">Types.h:1664</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a1f8aca235c095df227e7444f6b237eb1"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a1f8aca235c095df227e7444f6b237eb1">arm_compute::test::validation::act_info</a></div><div class="ttdeci">act_info</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_convolution_layer_8cpp_source.xhtml#l00183">ConvolutionLayer.cpp:183</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_aa76b4a6e74940dabc5b7fc6b2dab3545"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">arm_compute::test::validation::b</a></div><div class="ttdeci">SimpleTensor&lt; float &gt; b</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00157">DFT.cpp:157</a></div></div>
<div class="ttc" id="_validate_8h_xhtml_a8f3ff7da485ff7e75dab07baadf5b4bd"><div class="ttname"><a href="_validate_8h.xhtml#a8f3ff7da485ff7e75dab07baadf5b4bd">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES(...)</div><div class="ttdef"><b>Definition:</b> <a href="_validate_8h_source.xhtml#l00545">Validate.h:545</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab8cef8b31b552b532a14ab8815e06285"><div class="ttname"><a href="namespacearm__compute.xhtml#ab8cef8b31b552b532a14ab8815e06285">arm_compute::quantize_qasymm8</a></div><div class="ttdeci">uint8_t quantize_qasymm8(float value, const INFO_TYPE &amp;qinfo, RoundingPolicy rounding_policy=RoundingPolicy::TO_NEAREST_UP)</div><div class="ttdoc">Quantize a value given an unsigned 8-bit asymmetric quantization scheme.</div><div class="ttdef"><b>Definition:</b> <a href="_quantization_info_8h_source.xhtml#l00282">QuantizationInfo.h:282</a></div></div>
<div class="ttc" id="classarm__compute_1_1_activation_layer_info_xhtml_a56297e0f7b215eea46c818cb7528d9eaad346bb4679d29be241279f15d7795c1c"><div class="ttname"><a href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaad346bb4679d29be241279f15d7795c1c">arm_compute::ActivationLayerInfo::ActivationFunction::RELU</a></div><div class="ttdoc">Rectifier (  )</div></div>
<div class="ttc" id="_error_8h_xhtml_a7cf8d8b669b8f7b05680230be30d60f4"><div class="ttname"><a href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR(msg)</div><div class="ttdoc">Print the given message then throw an std::runtime_error.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00352">Error.h:352</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a485ae62f3ade6c8d33c5c2e85b29c3a7"><div class="ttname"><a href="namespacearm__compute.xhtml#a485ae62f3ade6c8d33c5c2e85b29c3a7">arm_compute::vdequantize</a></div><div class="ttdeci">float32x4x2_t vdequantize(const uint8x8_t &amp;qv, const UniformQuantizationInfo &amp;qi)</div><div class="ttdoc">Dequantize a neon vector holding 8 quantized values.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_asymm_8h_source.xhtml#l00421">NEAsymm.h:421</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58a6669348b484e3008dca2bfa8e85e40b5"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a6669348b484e3008dca2bfa8e85e40b5">arm_compute::Format::U8</a></div><div class="ttdoc">1 channel, 1 U8 per channel</div></div>
<div class="ttc" id="classarm__compute_1_1_activation_layer_info_xhtml_aec65e090c2276e8c8f8dffb6e3edd178"><div class="ttname"><a href="classarm__compute_1_1_activation_layer_info.xhtml#aec65e090c2276e8c8f8dffb6e3edd178">arm_compute::ActivationLayerInfo::a</a></div><div class="ttdeci">float a() const</div><div class="ttdoc">Get the alpha value.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01654">Types.h:1654</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1wrapper_xhtml_a569988c8e1a2619532b8f4d0394d5d79"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#a569988c8e1a2619532b8f4d0394d5d79">arm_compute::wrapper::vinvsqrt</a></div><div class="ttdeci">float32x2_t vinvsqrt(const float32x2_t &amp;a)</div><div class="ttdef"><b>Definition:</b> <a href="invsqrt_8h_source.xhtml#l00040">invsqrt.h:40</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1wrapper_xhtml_a77f54eded7fef436d3a4f21ad5a00da6"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#a77f54eded7fef436d3a4f21ad5a00da6">arm_compute::wrapper::vloadq</a></div><div class="ttdeci">uint8x16_t vloadq(const uint8_t *ptr)</div><div class="ttdef"><b>Definition:</b> <a href="load_8h_source.xhtml#l00058">load.h:58</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a8a1e1c105f0bdaf37db408c7cfcb77a4"><div class="ttname"><a href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ON_ERROR(status)</div><div class="ttdoc">Checks if a status contains an error and returns it.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00204">Error.h:204</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1wrapper_xhtml_a1894e825a225f3b2013f594cbffdae73"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#a1894e825a225f3b2013f594cbffdae73">arm_compute::wrapper::vadd</a></div><div class="ttdeci">uint8x8_t vadd(const uint8x8_t &amp;a, const uint8x8_t &amp;b)</div><div class="ttdef"><b>Definition:</b> <a href="intrinsics_2add_8h_source.xhtml#l00039">add.h:39</a></div></div>
<div class="ttc" id="_window_8h_xhtml"><div class="ttname"><a href="_window_8h.xhtml">Window.h</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_aa9985607399e329fcb371a92c84a6acd"><div class="ttname"><a href="namespacearm__compute.xhtml#aa9985607399e329fcb371a92c84a6acd">arm_compute::vdequantize_int16</a></div><div class="ttdeci">float32x4x2_t vdequantize_int16(const int16x8_t &amp;qv, float scale)</div><div class="ttdoc">Dequantize a neon vector holding 8 16-bit quantized values.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_symm_8h_source.xhtml#l00134">NESymm.h:134</a></div></div>
<div class="ttc" id="_validate_8h_xhtml_ae7eed178dac535c6e727061b1f5bc6eb"><div class="ttname"><a href="_validate_8h.xhtml#ae7eed178dac535c6e727061b1f5bc6eb">ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN(t, c,...)</div><div class="ttdef"><b>Definition:</b> <a href="_validate_8h_source.xhtml#l00792">Validate.h:792</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">arm_compute::Format::F32</a></div><div class="ttdoc">1 channel, 1 F32 per channel</div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_activation_layer_kernel_xhtml_adfb5ef37594fc9371c4a2b95e3d5e31b"><div class="ttname"><a href="classarm__compute_1_1_n_e_activation_layer_kernel.xhtml#adfb5ef37594fc9371c4a2b95e3d5e31b">arm_compute::NEActivationLayerKernel::configure</a></div><div class="ttdeci">void configure(ITensor *input, ITensor *output, ActivationLayerInfo activation_info)</div><div class="ttdoc">Set the input and output tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_activation_layer_kernel_8cpp_source.xhtml#l00121">NEActivationLayerKernel.cpp:121</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00466">Error.h:466</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml">arm_compute::ITensorInfo</a></div><div class="ttdoc">Store the tensor's metadata.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_info_8h_source.xhtml#l00040">ITensorInfo.h:40</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1wrapper_xhtml_a5ac8135a2c0a60f10448be0057543ed7"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#a5ac8135a2c0a60f10448be0057543ed7">arm_compute::wrapper::vinv</a></div><div class="ttdeci">float32x2_t vinv(const float32x2_t &amp;a)</div><div class="ttdef"><b>Definition:</b> <a href="inv_8h_source.xhtml#l00047">inv.h:47</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a938dcd406ce611ef5345ad2531cdb948"><div class="ttname"><a href="_error_8h.xhtml#a938dcd406ce611ef5345ad2531cdb948">ARM_COMPUTE_ERROR_THROW_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_THROW_ON(status)</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00455">Error.h:455</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1wrapper_xhtml_a4c1fe3150ad2ca29262dc6403605e65c"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#a4c1fe3150ad2ca29262dc6403605e65c">arm_compute::wrapper::vabs</a></div><div class="ttdeci">int8x8_t vabs(const int8x8_t &amp;a)</div><div class="ttdef"><b>Definition:</b> <a href="abs_8h_source.xhtml#l00046">abs.h:46</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1wrapper_xhtml_acae4ec59246f93845fa78120d83d7c1e"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#acae4ec59246f93845fa78120d83d7c1e">arm_compute::wrapper::vsub</a></div><div class="ttdeci">uint8x8_t vsub(const uint8x8_t &amp;a, const uint8x8_t &amp;b)</div><div class="ttdef"><b>Definition:</b> <a href="sub_8h_source.xhtml#l00039">sub.h:39</a></div></div>
<div class="ttc" id="structarm__compute_1_1_uniform_quantization_info_xhtml"><div class="ttname"><a href="structarm__compute_1_1_uniform_quantization_info.xhtml">arm_compute::UniformQuantizationInfo</a></div><div class="ttdoc">Quantization info when assuming per layer quantization.</div><div class="ttdef"><b>Definition:</b> <a href="_quantization_info_8h_source.xhtml#l00042">QuantizationInfo.h:42</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_1_1_dimension_xhtml"><div class="ttname"><a href="classarm__compute_1_1_window_1_1_dimension.xhtml">arm_compute::Window::Dimension</a></div><div class="ttdoc">Describe one of the image's dimensions with a start, end and step.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00075">Window.h:75</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a3b989c6b5398b3b9538ad103a324205e"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a3b989c6b5398b3b9538ad103a324205e">arm_compute::DataType::QASYMM16</a></div><div class="ttdoc">quantized, asymmetric fixed-point 16-bit number</div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ac5986edc0dbcd0c071107cafb98cbc39"><div class="ttname"><a href="namespacearm__compute.xhtml#ac5986edc0dbcd0c071107cafb98cbc39">arm_compute::vquantize_int16</a></div><div class="ttdeci">int16x8_t vquantize_int16(const float32x4x2_t &amp;qv, float scale)</div><div class="ttdoc">Quantize a neon vector holding 8 floating point values.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_symm_8h_source.xhtml#l00154">NESymm.h:154</a></div></div>
<div class="ttc" id="structarm__compute_1_1_uniform_quantization_info_xhtml_a1d28dec57cce925ad92342891bd71e7c"><div class="ttname"><a href="structarm__compute_1_1_uniform_quantization_info.xhtml#a1d28dec57cce925ad92342891bd71e7c">arm_compute::UniformQuantizationInfo::scale</a></div><div class="ttdeci">float scale</div><div class="ttdef"><b>Definition:</b> <a href="_quantization_info_8h_source.xhtml#l00064">QuantizationInfo.h:64</a></div></div>
<div class="ttc" id="classarm__compute_1_1_status_xhtml"><div class="ttname"><a href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a></div><div class="ttdoc">Status class.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00052">Error.h:52</a></div></div>
<div class="ttc" id="_tensor_info_8h_xhtml"><div class="ttname"><a href="_tensor_info_8h.xhtml">TensorInfo.h</a></div></div>
<div class="ttc" id="_n_e_asymm_8h_xhtml"><div class="ttname"><a href="_n_e_asymm_8h.xhtml">NEAsymm.h</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a922cd85c475c0d725fc030116ea57979"><div class="ttname"><a href="namespacearm__compute.xhtml#a922cd85c475c0d725fc030116ea57979">arm_compute::is_data_type_quantized_symmetric</a></div><div class="ttdeci">bool is_data_type_quantized_symmetric(DataType dt)</div><div class="ttdoc">Check if a given data type is of symmetric quantized type.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_utils_8h_source.xhtml#l01175">Utils.h:1175</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a206d6e247e0957ac3dee45d27756fc25"><div class="ttname"><a href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true, an error is returned.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00296">Error.h:296</a></div></div>
<div class="ttc" id="classarm__compute_1_1_activation_layer_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_activation_layer_info.xhtml">arm_compute::ActivationLayerInfo</a></div><div class="ttdoc">Activation Layer Information class.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01615">Types.h:1615</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor.xhtml">arm_compute::ITensor</a></div><div class="ttdoc">Interface for NEON tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_8h_source.xhtml#l00036">ITensor.h:36</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab7980fa5ee693e3282a76da047a1c3b5"><div class="ttname"><a href="namespacearm__compute.xhtml#ab7980fa5ee693e3282a76da047a1c3b5">arm_compute::calculate_max_window</a></div><div class="ttdeci">Window calculate_max_window(const ValidRegion &amp;valid_region, const Steps &amp;steps=Steps(), bool skip_border=false, BorderSize border_size=BorderSize())</div><div class="ttdoc">Calculate the maximum window for a given tensor shape and border setting.</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_helpers_8cpp_source.xhtml#l00028">Helpers.cpp:28</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_activation_layer_kernel_xhtml_a112b35dd205c62ea6ed1447ef226da82"><div class="ttname"><a href="classarm__compute_1_1_n_e_activation_layer_kernel.xhtml#a112b35dd205c62ea6ed1447ef226da82">arm_compute::NEActivationLayerKernel::run</a></div><div class="ttdeci">void run(const Window &amp;window, const ThreadInfo &amp;info) override</div><div class="ttdoc">Execute the kernel on the passed window.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_activation_layer_kernel_8cpp_source.xhtml#l00787">NEActivationLayerKernel.cpp:787</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2020 ARM Limited.</div><div class="ttdef"><b>Definition:</b> <a href="00__introduction_8dox_source.xhtml#l00024">00_introduction.dox:24</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_a9586081a29fceb532ab270bd843abee6"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a9586081a29fceb532ab270bd843abee6">arm_compute::ITensorInfo::set_valid_region</a></div><div class="ttdeci">virtual void set_valid_region(const ValidRegion &amp;valid_region)=0</div><div class="ttdoc">Set the valid region of the tensor.</div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a47be6fa38308d0003c25b60b7dbc45ce"><div class="ttname"><a href="namespacearm__compute.xhtml#a47be6fa38308d0003c25b60b7dbc45ce">arm_compute::auto_init_if_empty</a></div><div class="ttdeci">bool auto_init_if_empty(ITensorInfo &amp;info, const TensorShape &amp;shape, int num_channels, DataType data_type, QuantizationInfo quantization_info=QuantizationInfo())</div><div class="ttdoc">Auto initialize the tensor info (shape, number of channels and data type) if the current assignment i...</div><div class="ttdef"><b>Definition:</b> <a href="_helpers_8inl_source.xhtml#l00202">Helpers.inl:202</a></div></div>
<div class="ttc" id="classarm__compute_1_1_activation_layer_info_xhtml_a56297e0f7b215eea46c818cb7528d9eaa7d8a220d2262f9d6c658d549ee12cf2c"><div class="ttname"><a href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa7d8a220d2262f9d6c658d549ee12cf2c">arm_compute::ActivationLayerInfo::ActivationFunction::ABS</a></div><div class="ttdoc">Absolute (  )</div></div>
<div class="ttc" id="classarm__compute_1_1_activation_layer_info_xhtml_a56297e0f7b215eea46c818cb7528d9ea"><div class="ttname"><a href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9ea">arm_compute::ActivationLayerInfo::ActivationFunction</a></div><div class="ttdeci">ActivationFunction</div><div class="ttdoc">Available activation functions.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01619">Types.h:1619</a></div></div>
<div class="ttc" id="_c_p_p_2_validate_8h_xhtml_ad2633f3560322e1f8d926949dec1b730"><div class="ttname"><a href="_c_p_p_2_validate_8h.xhtml#ad2633f3560322e1f8d926949dec1b730">ARM_COMPUTE_RETURN_ERROR_ON_CPU_F16_UNSUPPORTED</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_CPU_F16_UNSUPPORTED(tensor)</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_validate_8h_source.xhtml#l00071">Validate.h:71</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58a56d8353718e6fdc78b8d69078a2cdb94"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a56d8353718e6fdc78b8d69078a2cdb94">arm_compute::Format::F16</a></div><div class="ttdoc">1 channel, 1 F16 per channel</div></div>
<div class="ttc" id="namespacearm__compute_1_1wrapper_1_1traits_xhtml_acf6b3be295be8dbd7897536bcd7561a3"><div class="ttname"><a href="namespacearm__compute_1_1wrapper_1_1traits.xhtml#acf6b3be295be8dbd7897536bcd7561a3">arm_compute::wrapper::traits::neon_bitvector_tag_t</a></div><div class="ttdeci">typename neon_bitvector&lt; T, BW &gt;::tag_type neon_bitvector_tag_t</div><div class="ttdoc">Helper type template to get the tag type of a neon vector.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_o_n_2wrapper_2traits_8h_source.xhtml#l00118">traits.h:118</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a8fcf2ddd9a1d58b1b280f5c0aed71845"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">arm_compute::test::validation::input</a></div><div class="ttdeci">auto input</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00487">LSTMLayerQuantized.cpp:487</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_aba8de9eaa10a7cb45c5aa603585d0e4c"><div class="ttname"><a href="namespacearm__compute.xhtml#aba8de9eaa10a7cb45c5aa603585d0e4c">arm_compute::vmlaq_qasymm8</a></div><div class="ttdeci">uint8x16_t vmlaq_qasymm8(qasymm8x16_t vd, float32x4_t vs, float32x4_t vo)</div><div class="ttdoc">Perform a multiply-accumulate on all 16 components of a QASYMM8 vector.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_asymm_8inl_source.xhtml#l00026">NEAsymm.inl:26</a></div></div>
<div class="ttc" id="arm__compute_2core_2_utils_8h_xhtml"><div class="ttname"><a href="arm__compute_2core_2_utils_8h.xhtml">Utils.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_activation_layer_info_xhtml_a56297e0f7b215eea46c818cb7528d9eaa36875f2500a09ee35d0bb7eb8c0b91b0"><div class="ttname"><a href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa36875f2500a09ee35d0bb7eb8c0b91b0">arm_compute::ActivationLayerInfo::ActivationFunction::SQRT</a></div><div class="ttdoc">Square root (  )</div></div>
<div class="ttc" id="classarm__compute_1_1_quantization_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_quantization_info.xhtml">arm_compute::QuantizationInfo</a></div><div class="ttdoc">Quantization information.</div><div class="ttdef"><b>Definition:</b> <a href="_quantization_info_8h_source.xhtml#l00069">QuantizationInfo.h:69</a></div></div>
<div class="ttc" id="classarm__compute_1_1_activation_layer_info_xhtml_a56297e0f7b215eea46c818cb7528d9eaa5b44c930bf0ddeef48b50ef11e5ddd58"><div class="ttname"><a href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa5b44c930bf0ddeef48b50ef11e5ddd58">arm_compute::ActivationLayerInfo::ActivationFunction::ELU</a></div><div class="ttdoc">Exponential Linear Unit (  )</div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_aa96e81276ee4f87ab386cd05a5539a7d"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#aa96e81276ee4f87ab386cd05a5539a7d">arm_compute::Window::DimX</a></div><div class="ttdeci">static constexpr size_t DimX</div><div class="ttdoc">Alias for dimension 0 also known as X dimension.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00043">Window.h:43</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a6dc630a6ae9cc063b3924bcea8dee9d6"><div class="ttname"><a href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a></div><div class="ttdeci">#define ARM_COMPUTE_UNUSED(...)</div><div class="ttdoc">To avoid unused variables warnings.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00152">Error.h:152</a></div></div>
<div class="ttc" id="_c_p_p_2_validate_8h_xhtml"><div class="ttname"><a href="_c_p_p_2_validate_8h.xhtml">Validate.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_a663ce71e1992366180fcb85b0a874e2f"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#a663ce71e1992366180fcb85b0a874e2f">arm_compute::Window::collapse_if_possible</a></div><div class="ttdeci">Window collapse_if_possible(const Window &amp;full_window, size_t first, size_t last, bool *has_collapsed=nullptr) const</div><div class="ttdoc">Collapse the dimensions between first and last if possible.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8inl_source.xhtml#l00068">Window.inl:68</a></div></div>
<div class="ttc" id="_validate_8h_xhtml_a27e4638546c88b8916f967e6e54480a9"><div class="ttname"><a href="_validate_8h.xhtml#a27e4638546c88b8916f967e6e54480a9">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_SHAPES</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_SHAPES(...)</div><div class="ttdef"><b>Definition:</b> <a href="_validate_8h_source.xhtml#l00443">Validate.h:443</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_a7c66505457d00ece3aa4b34cab80757d"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a7c66505457d00ece3aa4b34cab80757d">arm_compute::ITensorInfo::tensor_shape</a></div><div class="ttdeci">virtual const TensorShape &amp; tensor_shape() const =0</div><div class="ttdoc">Size for each dimension of the tensor.</div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a464ea9027ae01e64014040d69302800f"><div class="ttname"><a href="namespacearm__compute.xhtml#a464ea9027ae01e64014040d69302800f">arm_compute::quantize_qasymm8_signed</a></div><div class="ttdeci">int8_t quantize_qasymm8_signed(float value, const INFO_TYPE &amp;qinfo, RoundingPolicy rounding_policy=RoundingPolicy::TO_NEAREST_UP)</div><div class="ttdoc">Quantize a value given a signed 8-bit asymmetric quantization scheme.</div><div class="ttdef"><b>Definition:</b> <a href="_quantization_info_8h_source.xhtml#l00296">QuantizationInfo.h:296</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_aae8583b382eaea109164f2f3e16380b1"><div class="ttname"><a href="namespacearm__compute.xhtml#aae8583b382eaea109164f2f3e16380b1">arm_compute::dequantize_qsymm16</a></div><div class="ttdeci">float dequantize_qsymm16(int16_t value, const UniformQuantizationInfo &amp;qinfo)</div><div class="ttdoc">Dequantize a value given a 16-bit symmetric quantization scheme.</div><div class="ttdef"><b>Definition:</b> <a href="_quantization_info_8h_source.xhtml#l00440">QuantizationInfo.h:440</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">arm_compute::DataType::QASYMM8</a></div><div class="ttdoc">quantized, asymmetric fixed-point 8-bit number unsigned</div></div>
<div class="ttc" id="classarm__compute_1_1_steps_xhtml"><div class="ttname"><a href="classarm__compute_1_1_steps.xhtml">arm_compute::Steps</a></div><div class="ttdoc">Class to describe a number of elements in each dimension.</div><div class="ttdef"><b>Definition:</b> <a href="_steps_8h_source.xhtml#l00040">Steps.h:40</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1wrapper_xhtml_ab026a1aeec48074092f548c130c323f4"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#ab026a1aeec48074092f548c130c323f4">arm_compute::wrapper::vmin</a></div><div class="ttdeci">uint8x8_t vmin(const uint8x8_t &amp;a, const uint8x8_t &amp;b)</div><div class="ttdef"><b>Definition:</b> <a href="min_8h_source.xhtml#l00039">min.h:39</a></div></div>
<div class="ttc" id="classarm__compute_1_1_coordinates_xhtml"><div class="ttname"><a href="classarm__compute_1_1_coordinates.xhtml">arm_compute::Coordinates</a></div><div class="ttdoc">Coordinates of an item.</div><div class="ttdef"><b>Definition:</b> <a href="_coordinates_8h_source.xhtml#l00037">Coordinates.h:37</a></div></div>
<div class="ttc" id="classarm__compute_1_1_quantization_info_xhtml_a706fc156bcd4c45441bcaad05884b57d"><div class="ttname"><a href="classarm__compute_1_1_quantization_info.xhtml#a706fc156bcd4c45441bcaad05884b57d">arm_compute::QuantizationInfo::uniform</a></div><div class="ttdeci">UniformQuantizationInfo uniform() const</div><div class="ttdoc">Return per layer quantization info.</div><div class="ttdef"><b>Definition:</b> <a href="_quantization_info_8h_source.xhtml#l00148">QuantizationInfo.h:148</a></div></div>
<div class="ttc" id="classarm__compute_1_1misc_1_1_i_cloneable_xhtml_a4d10e5012a872e7f78f2b539b673049d"><div class="ttname"><a href="classarm__compute_1_1misc_1_1_i_cloneable.xhtml#a4d10e5012a872e7f78f2b539b673049d">arm_compute::misc::ICloneable::clone</a></div><div class="ttdeci">virtual std::unique_ptr&lt; T &gt; clone() const =0</div><div class="ttdoc">Provide a clone of the current object of class T.</div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_xhtml_a0e95dc1e53c361348314873b168ae237"><div class="ttname"><a href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">arm_compute::ITensor::info</a></div><div class="ttdeci">virtual ITensorInfo * info() const =0</div><div class="ttdoc">Interface to be implemented by the child class to return the tensor's metadata.</div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_acd3d2bba51cb84d34dd7656ad2375a6e"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#acd3d2bba51cb84d34dd7656ad2375a6e">arm_compute::Window::set</a></div><div class="ttdeci">void set(size_t dimension, const Dimension &amp;dim)</div><div class="ttdoc">Set the values of a given dimension.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8inl_source.xhtml#l00049">Window.inl:49</a></div></div>
<div class="ttc" id="classarm__compute_1_1_activation_layer_info_xhtml_a56297e0f7b215eea46c818cb7528d9eaa72ee60fba0509af07cbbd91398d8db9d"><div class="ttname"><a href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa72ee60fba0509af07cbbd91398d8db9d">arm_compute::ActivationLayerInfo::ActivationFunction::LOGISTIC</a></div><div class="ttdoc">Logistic (  )</div></div>
<div class="ttc" id="_n_e_activation_layer_kernel_8h_xhtml"><div class="ttname"><a href="_n_e_activation_layer_kernel_8h.xhtml">NEActivationLayerKernel.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_a3f3e1a3200223e6a304a533b1016e749"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a3f3e1a3200223e6a304a533b1016e749">arm_compute::ITensorInfo::quantization_info</a></div><div class="ttdeci">virtual QuantizationInfo quantization_info() const =0</div><div class="ttdoc">Get the quantization settings (scale and offset) of the tensor.</div></div>
<div class="ttc" id="namespacearm__compute_1_1wrapper_xhtml_aa24da6d1c1ce97217bab0291ce404fa7"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#aa24da6d1c1ce97217bab0291ce404fa7">arm_compute::wrapper::vneg</a></div><div class="ttdeci">int8x8_t vneg(const int8x8_t &amp;a)</div><div class="ttdef"><b>Definition:</b> <a href="neg_8h_source.xhtml#l00039">neg.h:39</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a14f46283f316e7f0fad301d5c1507e9f"><div class="ttname"><a href="namespacearm__compute.xhtml#a14f46283f316e7f0fad301d5c1507e9f">arm_compute::is_data_type_quantized_asymmetric</a></div><div class="ttdeci">bool is_data_type_quantized_asymmetric(DataType dt)</div><div class="ttdoc">Check if a given data type is of asymmetric quantized type.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_utils_8h_source.xhtml#l01139">Utils.h:1139</a></div></div>
<div class="ttc" id="classarm__compute_1_1_activation_layer_info_xhtml_a56297e0f7b215eea46c818cb7528d9eaa12dec4e1f7ec620651b2b95c440ffac0"><div class="ttname"><a href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa12dec4e1f7ec620651b2b95c440ffac0">arm_compute::ActivationLayerInfo::ActivationFunction::SQUARE</a></div><div class="ttdoc">Square (  )</div></div>
<div class="ttc" id="classarm__compute_1_1_activation_layer_info_xhtml_a56297e0f7b215eea46c818cb7528d9eaaab1d4411a9e7f5e82002512cddfdc33a"><div class="ttname"><a href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaaab1d4411a9e7f5e82002512cddfdc33a">arm_compute::ActivationLayerInfo::ActivationFunction::LU_BOUNDED_RELU</a></div><div class="ttdoc">Lower and Upper Bounded Rectifier (  )</div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_activation_layer_kernel_xhtml_aa37e2d0b4cd4f835bfa2a2df4a0bdd2c"><div class="ttname"><a href="classarm__compute_1_1_n_e_activation_layer_kernel.xhtml#aa37e2d0b4cd4f835bfa2a2df4a0bdd2c">arm_compute::NEActivationLayerKernel::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *input, const ITensorInfo *output, const ActivationLayerInfo &amp;act_info)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration of NEActivationLayerKernel.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_activation_layer_kernel_8cpp_source.xhtml#l00778">NEActivationLayerKernel.cpp:778</a></div></div>
<div class="ttc" id="_validate_8h_xhtml_a921b705e9e3e0fe928928447869e62a5"><div class="ttname"><a href="_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_NULLPTR(...)</div><div class="ttdef"><b>Definition:</b> <a href="_validate_8h_source.xhtml#l00161">Validate.h:161</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a54c0b3b26b7e2588af93ac27f7724279"><div class="ttname"><a href="namespacearm__compute.xhtml#a54c0b3b26b7e2588af93ac27f7724279">arm_compute::vmlaq_qasymm8_signed</a></div><div class="ttdeci">int8x16_t vmlaq_qasymm8_signed(qasymm8x16_signed_t vd, float32x4_t vs, float32x4_t vo)</div><div class="ttdoc">Perform a multiply-accumulate on all 16 components of a QASYMM8_SIGNED vector.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_asymm_8inl_source.xhtml#l00059">NEAsymm.inl:59</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1wrapper_xhtml_a7eedba29396b0db728bffdf5f202d85c"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#a7eedba29396b0db728bffdf5f202d85c">arm_compute::wrapper::vcgt</a></div><div class="ttdeci">uint8x8_t vcgt(const uint8x8_t &amp;a, const uint8x8_t &amp;b)</div><div class="ttdef"><b>Definition:</b> <a href="cgt_8h_source.xhtml#l00039">cgt.h:39</a></div></div>
<div class="ttc" id="classarm__compute_1_1_activation_layer_info_xhtml_a56297e0f7b215eea46c818cb7528d9eaad8156d3c6735d75d8a1b8dedd0e79c8b"><div class="ttname"><a href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaad8156d3c6735d75d8a1b8dedd0e79c8b">arm_compute::ActivationLayerInfo::ActivationFunction::IDENTITY</a></div><div class="ttdoc">Identity (  )</div></div>
<div class="ttc" id="namespacearm__compute_1_1wrapper_xhtml_a66c8dd218a4863a14fec363e3dd13dc4"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">arm_compute::wrapper::vmul</a></div><div class="ttdeci">uint8x8_t vmul(const uint8x8_t &amp;a, const uint8x8_t &amp;b)</div><div class="ttdef"><b>Definition:</b> <a href="mul_8h_source.xhtml#l00039">mul.h:39</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1wrapper_xhtml_a8e5924674eee0f441d54eb75d656700f"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#a8e5924674eee0f441d54eb75d656700f">arm_compute::wrapper::vbsl</a></div><div class="ttdeci">uint8x8_t vbsl(const uint8x8_t &amp;a, const uint8x8_t &amp;b, const uint8x8_t &amp;c)</div><div class="ttdef"><b>Definition:</b> <a href="bsl_8h_source.xhtml#l00039">bsl.h:39</a></div></div>
<div class="ttc" id="classarm__compute_1_1_activation_layer_info_xhtml_a56297e0f7b215eea46c818cb7528d9eaacc516ab03b98f1c908ddf6ed4a7c45e9"><div class="ttname"><a href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaacc516ab03b98f1c908ddf6ed4a7c45e9">arm_compute::ActivationLayerInfo::ActivationFunction::BOUNDED_RELU</a></div><div class="ttdoc">Upper Bounded Rectifier (  )</div></div>
<div class="ttc" id="structarm__compute_1_1_thread_info_xhtml"><div class="ttname"><a href="structarm__compute_1_1_thread_info.xhtml">arm_compute::ThreadInfo</a></div><div class="ttdoc">Information about executing thread and CPU.</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_types_8h_source.xhtml#l00225">CPPTypes.h:225</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_a18064e0011c3869d884653e9e7c47b66"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a18064e0011c3869d884653e9e7c47b66">arm_compute::ITensorInfo::total_size</a></div><div class="ttdeci">virtual size_t total_size() const =0</div><div class="ttdoc">Returns the total size of the tensor in bytes.</div></div>
<div class="ttc" id="classarm__compute_1_1_activation_layer_info_xhtml_a56297e0f7b215eea46c818cb7528d9eaac7e80a3de04936f4e423e1b564fdca10"><div class="ttname"><a href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaac7e80a3de04936f4e423e1b564fdca10">arm_compute::ActivationLayerInfo::ActivationFunction::LEAKY_RELU</a></div><div class="ttdoc">Leaky Rectifier (  )</div></div>
<div class="ttc" id="namespace_gemm_tuner_xhtml_a7aead736a07eaf25623ad7bfa1f0ee2d"><div class="ttname"><a href="namespace_gemm_tuner.xhtml#a7aead736a07eaf25623ad7bfa1f0ee2d">GemmTuner.type</a></div><div class="ttdeci">type</div><div class="ttdef"><b>Definition:</b> <a href="_gemm_tuner_8py_source.xhtml#l00527">GemmTuner.py:527</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_a893d17b56b9abc4423ce26e9a24ac5dc"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#a893d17b56b9abc4423ce26e9a24ac5dc">arm_compute::Window::DimZ</a></div><div class="ttdeci">static constexpr size_t DimZ</div><div class="ttdoc">Alias for dimension 2 also known as Z dimension.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00047">Window.h:47</a></div></div>
<div class="ttc" id="classarm__compute_1_1_activation_layer_info_xhtml_a56297e0f7b215eea46c818cb7528d9eaa143c8c6f51b9bb893ce71e38702e3cc1"><div class="ttname"><a href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa143c8c6f51b9bb893ce71e38702e3cc1">arm_compute::ActivationLayerInfo::ActivationFunction::TANH</a></div><div class="ttdoc">Hyperbolic tangent (  )</div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab8938bcb3ec0f5f8d93285eb3a28b701"><div class="ttname"><a href="namespacearm__compute.xhtml#ab8938bcb3ec0f5f8d93285eb3a28b701">arm_compute::qasymm8_t</a></div><div class="ttdeci">uint8_t qasymm8_t</div><div class="ttdoc">8 bit quantized asymmetric scalar value</div><div class="ttdef"><b>Definition:</b> <a href="_quantization_info_8h_source.xhtml#l00037">QuantizationInfo.h:37</a></div></div>
<div class="ttc" id="classarm__compute_1_1_activation_layer_info_xhtml_a56297e0f7b215eea46c818cb7528d9eaaaac544aacc3615aada24897a215f5046"><div class="ttname"><a href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaaaac544aacc3615aada24897a215f5046">arm_compute::ActivationLayerInfo::ActivationFunction::LINEAR</a></div><div class="ttdoc">Linear (  )</div></div>
<div class="ttc" id="structarm__compute_1_1_uniform_quantization_info_xhtml_a97bd6c077f3c7769f575b82988b9b668"><div class="ttname"><a href="structarm__compute_1_1_uniform_quantization_info.xhtml#a97bd6c077f3c7769f575b82988b9b668">arm_compute::UniformQuantizationInfo::offset</a></div><div class="ttdeci">int32_t offset</div><div class="ttdef"><b>Definition:</b> <a href="_quantization_info_8h_source.xhtml#l00065">QuantizationInfo.h:65</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_af486d5eb4935eb5601d9c5fcc42be220"><div class="ttname"><a href="namespacearm__compute.xhtml#af486d5eb4935eb5601d9c5fcc42be220">arm_compute::qasymm8_signed_t</a></div><div class="ttdeci">int8_t qasymm8_signed_t</div><div class="ttdoc">8 bit signed quantized asymmetric scalar value</div><div class="ttdef"><b>Definition:</b> <a href="_quantization_info_8h_source.xhtml#l00036">QuantizationInfo.h:36</a></div></div>
<div class="ttc" id="_n_e_math_8h_xhtml"><div class="ttname"><a href="_n_e_math_8h.xhtml">NEMath.h</a></div></div>
<div class="ttc" id="_n_e_symm_8h_xhtml"><div class="ttname"><a href="_n_e_symm_8h.xhtml">NESymm.h</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a4ff1249e423ae9bfab075f5317c4d004"><div class="ttname"><a href="namespacearm__compute.xhtml#a4ff1249e423ae9bfab075f5317c4d004">arm_compute::vquantize</a></div><div class="ttdeci">uint8x8_t vquantize(const float32x4x2_t &amp;qv, const UniformQuantizationInfo &amp;qi)</div><div class="ttdoc">Quantize a neon vector holding 8 floating point values.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_asymm_8h_source.xhtml#l00608">NEAsymm.h:608</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1wrapper_xhtml_ae7943ea9c1f74dc72c62d4cc3966a459"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#ae7943ea9c1f74dc72c62d4cc3966a459">arm_compute::wrapper::vstore</a></div><div class="ttdeci">void vstore(uint8_t *ptr, uint8x8_t val)</div><div class="ttdef"><b>Definition:</b> <a href="store_8h_source.xhtml#l00039">store.h:39</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_afe6fcf1a0c6f6c2d2cb10a8c14fa9131"><div class="ttname"><a href="namespacearm__compute.xhtml#afe6fcf1a0c6f6c2d2cb10a8c14fa9131">arm_compute::dequantize_qasymm8_signed</a></div><div class="ttdeci">float dequantize_qasymm8_signed(int8_t value, const INFO_TYPE &amp;qinfo)</div><div class="ttdoc">Dequantize a value given a signed 8-bit asymmetric quantization scheme.</div><div class="ttdef"><b>Definition:</b> <a href="_quantization_info_8h_source.xhtml#l00351">QuantizationInfo.h:351</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a1c69762a42ab8add645d0a949b6f4b1f"><div class="ttname"><a href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_MSG(cond, msg)</div><div class="ttdoc">If the condition is true, an error is returned.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00244">Error.h:244</a></div></div>
<div class="ttc" id="arm__compute_2core_2_helpers_8h_xhtml"><div class="ttname"><a href="arm__compute_2core_2_helpers_8h.xhtml">Helpers.h</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1wrapper_xhtml_a39e87435be178fba49b76f49426ef873"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#a39e87435be178fba49b76f49426ef873">arm_compute::wrapper::vdup_n</a></div><div class="ttdeci">uint8x8_t vdup_n(uint8_t value, traits::vector_64_tag)</div><div class="ttdef"><b>Definition:</b> <a href="dup__n_8h_source.xhtml#l00041">dup_n.h:41</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a5002bf7ec46d52971f9526e94172cfee"><div class="ttname"><a href="namespacearm__compute.xhtml#a5002bf7ec46d52971f9526e94172cfee">arm_compute::execute_window_loop</a></div><div class="ttdeci">void execute_window_loop(const Window &amp;w, L &amp;&amp;lambda_function, Ts &amp;&amp;... iterators)</div><div class="ttdoc">Iterate through the passed window, automatically adjusting the iterators and calling the lambda_funct...</div><div class="ttdef"><b>Definition:</b> <a href="_helpers_8inl_source.xhtml#l00123">Helpers.inl:123</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_activation_layer_kernel_xhtml_af5c940969e40e1ae12411bb025a117f2"><div class="ttname"><a href="classarm__compute_1_1_n_e_activation_layer_kernel.xhtml#af5c940969e40e1ae12411bb025a117f2">arm_compute::NEActivationLayerKernel::NEActivationLayerKernel</a></div><div class="ttdeci">NEActivationLayerKernel()</div><div class="ttdoc">Constructor.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_activation_layer_kernel_8cpp_source.xhtml#l00116">NEActivationLayerKernel.cpp:116</a></div></div>
<div class="ttc" id="classarm__compute_1_1_activation_layer_info_xhtml_a56297e0f7b215eea46c818cb7528d9eaadcc44a50c791a591c74e00ecdda7c58d"><div class="ttname"><a href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaadcc44a50c791a591c74e00ecdda7c58d">arm_compute::ActivationLayerInfo::ActivationFunction::SOFT_RELU</a></div><div class="ttdoc">Soft Rectifier (  )</div></div>
<div class="ttc" id="classarm__compute_1_1_dimensions_xhtml_a810a78f0b7cc0270f38d4136e023ea3b"><div class="ttname"><a href="classarm__compute_1_1_dimensions.xhtml#a810a78f0b7cc0270f38d4136e023ea3b">arm_compute::Dimensions::set_num_dimensions</a></div><div class="ttdeci">void set_num_dimensions(size_t num_dimensions)</div><div class="ttdoc">Set number of dimensions.</div><div class="ttdef"><b>Definition:</b> <a href="_dimensions_8h_source.xhtml#l00128">Dimensions.h:128</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1wrapper_1_1traits_xhtml_ad302081ac4baa4f94e7628d84421052c"><div class="ttname"><a href="namespacearm__compute_1_1wrapper_1_1traits.xhtml#ad302081ac4baa4f94e7628d84421052c">arm_compute::wrapper::traits::neon_bitvector_t</a></div><div class="ttdeci">typename neon_bitvector&lt; T, BW &gt;::type neon_bitvector_t</div><div class="ttdoc">Helper type template to get the type of a neon vector.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_o_n_2wrapper_2traits_8h_source.xhtml#l00116">traits.h:116</a></div></div>
<div class="ttc" id="classarm__compute_1_1_activation_layer_info_xhtml_a9e0fb1d1462557f28966ae19988532c2"><div class="ttname"><a href="classarm__compute_1_1_activation_layer_info.xhtml#a9e0fb1d1462557f28966ae19988532c2">arm_compute::ActivationLayerInfo::activation</a></div><div class="ttdeci">ActivationFunction activation() const</div><div class="ttdoc">Get the type of activation function.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01649">Types.h:1649</a></div></div>
<div class="ttc" id="classarm__compute_1_1_activation_layer_info_xhtml_a02a00a5d20986f3a7ab72b9c86be3a54"><div class="ttname"><a href="classarm__compute_1_1_activation_layer_info.xhtml#a02a00a5d20986f3a7ab72b9c86be3a54">arm_compute::ActivationLayerInfo::b</a></div><div class="ttdeci">float b() const</div><div class="ttdoc">Get the beta value.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01659">Types.h:1659</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a329f5d0c4b0c80e3474951d2c4435dd9"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a329f5d0c4b0c80e3474951d2c4435dd9">arm_compute::DataType::QASYMM8_SIGNED</a></div><div class="ttdoc">quantized, asymmetric fixed-point 8-bit number signed</div></div>
<div class="ttc" id="wrapper_8h_xhtml"><div class="ttname"><a href="wrapper_8h.xhtml">wrapper.h</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a76f394ac7b594f233f6fd13ad8bd99d5"><div class="ttname"><a href="namespacearm__compute.xhtml#a76f394ac7b594f233f6fd13ad8bd99d5">arm_compute::vquantize_signed</a></div><div class="ttdeci">int8x8_t vquantize_signed(const float32x4x2_t &amp;qv, const UniformQuantizationInfo &amp;qi)</div><div class="ttdoc">Quantize a neon vector holding 8 floating point values.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_asymm_8h_source.xhtml#l00636">NEAsymm.h:636</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1wrapper_xhtml_a4287931a2912ecb6cece71219ca5478c"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#a4287931a2912ecb6cece71219ca5478c">arm_compute::wrapper::vmla</a></div><div class="ttdeci">uint8x8_t vmla(const uint8x8_t &amp;a, const uint8x8_t &amp;b, const uint8x8_t &amp;c)</div><div class="ttdef"><b>Definition:</b> <a href="mla_8h_source.xhtml#l00046">mla.h:46</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a5f5b6c4337eac9e2e0046ca2304d80dc"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">arm_compute::test::validation::data_type</a></div><div class="ttdeci">data_type</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_arithmetic_addition_8cpp_source.xhtml#l00138">ArithmeticAddition.cpp:138</a></div></div>
<div class="ttc" id="structarm__compute_1_1_valid_region_xhtml"><div class="ttname"><a href="structarm__compute_1_1_valid_region.xhtml">arm_compute::ValidRegion</a></div><div class="ttdoc">Container for valid region of a window.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00184">Types.h:184</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_adc8234d074c193f521029e81cda80bb2"><div class="ttname"><a href="namespacearm__compute.xhtml#adc8234d074c193f521029e81cda80bb2">arm_compute::qasymm8x16_signed_t</a></div><div class="ttdeci">int8x16_t qasymm8x16_signed_t</div><div class="ttdoc">8 bit quantized signed asymmetric vector with 16 elements</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_asymm_8h_source.xhtml#l00042">NEAsymm.h:42</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a4f4125dba5283887b34f889b1c615c0c"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a4f4125dba5283887b34f889b1c615c0c">arm_compute::test::validation::info</a></div><div class="ttdeci">info</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_convolution_layer_8cpp_source.xhtml#l00182">ConvolutionLayer.cpp:182</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_1_1_dimension_xhtml_a0f590bfcf19110f44efc502e7b5c1d9e"><div class="ttname"><a href="classarm__compute_1_1_window_1_1_dimension.xhtml#a0f590bfcf19110f44efc502e7b5c1d9e">arm_compute::Window::Dimension::end</a></div><div class="ttdeci">constexpr int end() const</div><div class="ttdoc">Return the end of the dimension.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00097">Window.h:97</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1wrapper_xhtml_a1f777df8db31568a3436995df958714c"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#a1f777df8db31568a3436995df958714c">arm_compute::wrapper::vcge</a></div><div class="ttdeci">uint8x8_t vcge(const uint8x8_t &amp;a, const uint8x8_t &amp;b)</div><div class="ttdef"><b>Definition:</b> <a href="cge_8h_source.xhtml#l00039">cge.h:39</a></div></div>
<div class="ttc" id="classarm__compute_1_1_iterator_xhtml"><div class="ttname"><a href="classarm__compute_1_1_iterator.xhtml">arm_compute::Iterator</a></div><div class="ttdoc">Iterator updated by execute_window_loop for each window element.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_helpers_8h_source.xhtml#l00318">Helpers.h:318</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">arm_compute::DataType</a></div><div class="ttdeci">DataType</div><div class="ttdoc">Available data types.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00075">Types.h:75</a></div></div>
<div class="ttc" id="_validate_8h_xhtml_a6eb9ce82815fe429250189da7592ba75"><div class="ttname"><a href="_validate_8h.xhtml#a6eb9ce82815fe429250189da7592ba75">ARM_COMPUTE_ERROR_ON_INVALID_SUBWINDOW</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_INVALID_SUBWINDOW(f, s)</div><div class="ttdef"><b>Definition:</b> <a href="_validate_8h_source.xhtml#l00205">Validate.h:205</a></div></div>
<div class="ttc" id="_n_e_fixed_point_8h_xhtml"><div class="ttname"><a href="_n_e_fixed_point_8h.xhtml">NEFixedPoint.h</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1wrapper_xhtml_a8d1d14000c959f1146a8a64e1dafae5f"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#a8d1d14000c959f1146a8a64e1dafae5f">arm_compute::wrapper::vmax</a></div><div class="ttdeci">uint8x8_t vmax(const uint8x8_t &amp;a, const uint8x8_t &amp;b)</div><div class="ttdef"><b>Definition:</b> <a href="max_8h_source.xhtml#l00039">max.h:39</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_1_1_dimension_xhtml_ab24e31d1a4830bf79564ee902ec6c060"><div class="ttname"><a href="classarm__compute_1_1_window_1_1_dimension.xhtml#ab24e31d1a4830bf79564ee902ec6c060">arm_compute::Window::Dimension::start</a></div><div class="ttdeci">constexpr int start() const</div><div class="ttdoc">Return the start of the dimension.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00092">Window.h:92</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1wrapper_xhtml_a3d35fe714076b40450ba6ba870fae322"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#a3d35fe714076b40450ba6ba870fae322">arm_compute::wrapper::vexpq</a></div><div class="ttdeci">float32x4_t vexpq(const float32x4_t &amp;a)</div><div class="ttdef"><b>Definition:</b> <a href="exp_8h_source.xhtml#l00040">exp.h:40</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml">arm_compute::Window</a></div><div class="ttdoc">Describe a multidimensional execution window.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00039">Window.h:39</a></div></div>
<div class="ttc" id="_validate_8h_xhtml_a1b35b0d258183cf9ef36adf684d0b88c"><div class="ttname"><a href="_validate_8h.xhtml#a1b35b0d258183cf9ef36adf684d0b88c">ARM_COMPUTE_ERROR_ON_UNCONFIGURED_KERNEL</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_UNCONFIGURED_KERNEL(k)</div><div class="ttdef"><b>Definition:</b> <a href="_validate_8h_source.xhtml#l00941">Validate.h:941</a></div></div>
<div class="ttc" id="_validate_8h_xhtml"><div class="ttname"><a href="_validate_8h.xhtml">Validate.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_a273fd2ecdd45169b2f702f01a7e5e382"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#a273fd2ecdd45169b2f702f01a7e5e382">arm_compute::Window::x</a></div><div class="ttdeci">constexpr const Dimension &amp; x() const</div><div class="ttdoc">Alias to access the first dimension of the window.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00143">Window.h:143</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1quantization_xhtml_a552dc3787d7ea1675f3e4e8993501d58"><div class="ttname"><a href="namespacearm__compute_1_1quantization.xhtml#a552dc3787d7ea1675f3e4e8993501d58">arm_compute::quantization::epsilon</a></div><div class="ttdeci">constexpr float epsilon</div><div class="ttdef"><b>Definition:</b> <a href="_asymm_helpers_8cpp_source.xhtml#l00036">AsymmHelpers.cpp:36</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ac7e1832b8c58f07a98fc8d390b16ac27"><div class="ttname"><a href="namespacearm__compute.xhtml#ac7e1832b8c58f07a98fc8d390b16ac27">arm_compute::qasymm8x16_t</a></div><div class="ttdeci">uint8x16_t qasymm8x16_t</div><div class="ttdoc">8 bit quantized asymmetric vector with 16 elements</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_asymm_8h_source.xhtml#l00036">NEAsymm.h:36</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_aebb8dcc11953d78e620bbef0b9e2183.xhtml">core</a></li><li class="navelem"><a class="el" href="dir_d91e1966cc57df4f49d1e07be7697713.xhtml">NEON</a></li><li class="navelem"><a class="el" href="dir_1ce938f580a6f304b99685e2c1dd19db.xhtml">kernels</a></li><li class="navelem"><a class="el" href="_n_e_activation_layer_kernel_8cpp.xhtml">NEActivationLayerKernel.cpp</a></li>
    <li class="footer">Generated on Fri Feb 21 2020 11:10:14 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
