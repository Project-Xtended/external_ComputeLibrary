<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: IGCMemoryRegion Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classarm__compute_1_1_i_g_c_memory_region.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">IGCMemoryRegion Class Reference<span class="mlabels"><span class="mlabel">abstract</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p>GLES memory region interface.  
 <a href="classarm__compute_1_1_i_g_c_memory_region.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_g_c_memory_region_8h_source.xhtml">GCMemoryRegion.h</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for IGCMemoryRegion:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classarm__compute_1_1_i_g_c_memory_region__coll__graph.svg" width="150" height="112"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a1ea285b33671030e2a60eccd8dc60b55"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_g_c_memory_region.xhtml#a1ea285b33671030e2a60eccd8dc60b55">IGCMemoryRegion</a> (size_t <a class="el" href="classarm__compute_1_1_i_memory_region.xhtml#a259cb5a711406a8c3e5d937eb9350cca">size</a>)</td></tr>
<tr class="memdesc:a1ea285b33671030e2a60eccd8dc60b55"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="#a1ea285b33671030e2a60eccd8dc60b55">More...</a><br /></td></tr>
<tr class="separator:a1ea285b33671030e2a60eccd8dc60b55"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a44bf2849a57a0fced75e0f67f56847a9"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_g_c_memory_region.xhtml#a44bf2849a57a0fced75e0f67f56847a9">~IGCMemoryRegion</a> ()=default</td></tr>
<tr class="memdesc:a44bf2849a57a0fced75e0f67f56847a9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default Destructor.  <a href="#a44bf2849a57a0fced75e0f67f56847a9">More...</a><br /></td></tr>
<tr class="separator:a44bf2849a57a0fced75e0f67f56847a9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3fc929b7c49a15aabeda3efac4142383"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_g_c_memory_region.xhtml#a3fc929b7c49a15aabeda3efac4142383">IGCMemoryRegion</a> (const <a class="el" href="classarm__compute_1_1_i_g_c_memory_region.xhtml">IGCMemoryRegion</a> &amp;)=delete</td></tr>
<tr class="memdesc:a3fc929b7c49a15aabeda3efac4142383"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied (As this class contains pointers)  <a href="#a3fc929b7c49a15aabeda3efac4142383">More...</a><br /></td></tr>
<tr class="separator:a3fc929b7c49a15aabeda3efac4142383"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ade6f50df2c069ce94a72ab26062b5f7c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_g_c_memory_region.xhtml#ade6f50df2c069ce94a72ab26062b5f7c">IGCMemoryRegion</a> (<a class="el" href="classarm__compute_1_1_i_g_c_memory_region.xhtml">IGCMemoryRegion</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:ade6f50df2c069ce94a72ab26062b5f7c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default move constructor.  <a href="#ade6f50df2c069ce94a72ab26062b5f7c">More...</a><br /></td></tr>
<tr class="separator:ade6f50df2c069ce94a72ab26062b5f7c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9b586073abda157c8aa9cfc1d1a6baf7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_i_g_c_memory_region.xhtml">IGCMemoryRegion</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_g_c_memory_region.xhtml#a9b586073abda157c8aa9cfc1d1a6baf7">operator=</a> (const <a class="el" href="classarm__compute_1_1_i_g_c_memory_region.xhtml">IGCMemoryRegion</a> &amp;)=delete</td></tr>
<tr class="memdesc:a9b586073abda157c8aa9cfc1d1a6baf7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied (As this class contains pointers)  <a href="#a9b586073abda157c8aa9cfc1d1a6baf7">More...</a><br /></td></tr>
<tr class="separator:a9b586073abda157c8aa9cfc1d1a6baf7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa070a495e1556ae2dd1cbcbdc7731d01"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_i_g_c_memory_region.xhtml">IGCMemoryRegion</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_g_c_memory_region.xhtml#aa070a495e1556ae2dd1cbcbdc7731d01">operator=</a> (<a class="el" href="classarm__compute_1_1_i_g_c_memory_region.xhtml">IGCMemoryRegion</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:aa070a495e1556ae2dd1cbcbdc7731d01"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default move assignment operator.  <a href="#aa070a495e1556ae2dd1cbcbdc7731d01">More...</a><br /></td></tr>
<tr class="separator:aa070a495e1556ae2dd1cbcbdc7731d01"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8fb30f2d054c3ad3e11edf5f9d477f87"><td class="memItemLeft" align="right" valign="top">const GLuint &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_g_c_memory_region.xhtml#a8fb30f2d054c3ad3e11edf5f9d477f87">gc_ssbo_name</a> () const</td></tr>
<tr class="memdesc:a8fb30f2d054c3ad3e11edf5f9d477f87"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the underlying CL buffer.  <a href="#a8fb30f2d054c3ad3e11edf5f9d477f87">More...</a><br /></td></tr>
<tr class="separator:a8fb30f2d054c3ad3e11edf5f9d477f87"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab8777d03065e8c7146157148a5355dd1"><td class="memItemLeft" align="right" valign="top">virtual void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_g_c_memory_region.xhtml#ab8777d03065e8c7146157148a5355dd1">ptr</a> ()=0</td></tr>
<tr class="memdesc:ab8777d03065e8c7146157148a5355dd1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Host/SVM pointer accessor.  <a href="#ab8777d03065e8c7146157148a5355dd1">More...</a><br /></td></tr>
<tr class="separator:ab8777d03065e8c7146157148a5355dd1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5a589966a248f6e2a958f8dff2550418"><td class="memItemLeft" align="right" valign="top">virtual void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_g_c_memory_region.xhtml#a5a589966a248f6e2a958f8dff2550418">map</a> (bool blocking)=0</td></tr>
<tr class="memdesc:a5a589966a248f6e2a958f8dff2550418"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enqueue a map operation of the allocated buffer on the given queue.  <a href="#a5a589966a248f6e2a958f8dff2550418">More...</a><br /></td></tr>
<tr class="separator:a5a589966a248f6e2a958f8dff2550418"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a21164b8d700d97aa462e75e314048f46"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_g_c_memory_region.xhtml#a21164b8d700d97aa462e75e314048f46">unmap</a> ()=0</td></tr>
<tr class="memdesc:a21164b8d700d97aa462e75e314048f46"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enqueue an unmap operation of the allocated buffer on the given queue.  <a href="#a21164b8d700d97aa462e75e314048f46">More...</a><br /></td></tr>
<tr class="separator:a21164b8d700d97aa462e75e314048f46"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3d9d196240e9b0062c953c3abd534187"><td class="memItemLeft" align="right" valign="top">void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_g_c_memory_region.xhtml#a3d9d196240e9b0062c953c3abd534187">buffer</a> () override</td></tr>
<tr class="memdesc:a3d9d196240e9b0062c953c3abd534187"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the pointer to the allocated data.  <a href="#a3d9d196240e9b0062c953c3abd534187">More...</a><br /></td></tr>
<tr class="separator:a3d9d196240e9b0062c953c3abd534187"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad39124c7fd703b14af6f5bf5bc0762ec"><td class="memItemLeft" align="right" valign="top">const void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_g_c_memory_region.xhtml#ad39124c7fd703b14af6f5bf5bc0762ec">buffer</a> () const override</td></tr>
<tr class="memdesc:ad39124c7fd703b14af6f5bf5bc0762ec"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the pointer to the allocated data.  <a href="#ad39124c7fd703b14af6f5bf5bc0762ec">More...</a><br /></td></tr>
<tr class="separator:ad39124c7fd703b14af6f5bf5bc0762ec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1_i_memory_region"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1_i_memory_region')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1_i_memory_region.xhtml">IMemoryRegion</a></td></tr>
<tr class="memitem:a92ee6f66a47e8ba4bd3d01579ad4ef42 inherit pub_methods_classarm__compute_1_1_i_memory_region"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_memory_region.xhtml#a92ee6f66a47e8ba4bd3d01579ad4ef42">IMemoryRegion</a> (size_t <a class="el" href="classarm__compute_1_1_i_memory_region.xhtml#a259cb5a711406a8c3e5d937eb9350cca">size</a>)</td></tr>
<tr class="memdesc:a92ee6f66a47e8ba4bd3d01579ad4ef42 inherit pub_methods_classarm__compute_1_1_i_memory_region"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor.  <a href="classarm__compute_1_1_i_memory_region.xhtml#a92ee6f66a47e8ba4bd3d01579ad4ef42">More...</a><br /></td></tr>
<tr class="separator:a92ee6f66a47e8ba4bd3d01579ad4ef42 inherit pub_methods_classarm__compute_1_1_i_memory_region"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaa097212d2b66253335ff2dca6385b13 inherit pub_methods_classarm__compute_1_1_i_memory_region"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_memory_region.xhtml#aaa097212d2b66253335ff2dca6385b13">~IMemoryRegion</a> ()=default</td></tr>
<tr class="memdesc:aaa097212d2b66253335ff2dca6385b13 inherit pub_methods_classarm__compute_1_1_i_memory_region"><td class="mdescLeft">&#160;</td><td class="mdescRight">Virtual Destructor.  <a href="classarm__compute_1_1_i_memory_region.xhtml#aaa097212d2b66253335ff2dca6385b13">More...</a><br /></td></tr>
<tr class="separator:aaa097212d2b66253335ff2dca6385b13 inherit pub_methods_classarm__compute_1_1_i_memory_region"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae883a66f44b3d41635c4a75cab7dacfb inherit pub_methods_classarm__compute_1_1_i_memory_region"><td class="memItemLeft" align="right" valign="top">virtual std::unique_ptr&lt; <a class="el" href="classarm__compute_1_1_i_memory_region.xhtml">IMemoryRegion</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_memory_region.xhtml#ae883a66f44b3d41635c4a75cab7dacfb">extract_subregion</a> (size_t <a class="el" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>, size_t <a class="el" href="classarm__compute_1_1_i_memory_region.xhtml#a259cb5a711406a8c3e5d937eb9350cca">size</a>)=0</td></tr>
<tr class="memdesc:ae883a66f44b3d41635c4a75cab7dacfb inherit pub_methods_classarm__compute_1_1_i_memory_region"><td class="mdescLeft">&#160;</td><td class="mdescRight">Extract a sub-region from the memory.  <a href="classarm__compute_1_1_i_memory_region.xhtml#ae883a66f44b3d41635c4a75cab7dacfb">More...</a><br /></td></tr>
<tr class="separator:ae883a66f44b3d41635c4a75cab7dacfb inherit pub_methods_classarm__compute_1_1_i_memory_region"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a259cb5a711406a8c3e5d937eb9350cca inherit pub_methods_classarm__compute_1_1_i_memory_region"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_memory_region.xhtml#a259cb5a711406a8c3e5d937eb9350cca">size</a> () const</td></tr>
<tr class="memdesc:a259cb5a711406a8c3e5d937eb9350cca inherit pub_methods_classarm__compute_1_1_i_memory_region"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classarm__compute_1_1_memory.xhtml" title="CPU implementation of memory object.">Memory</a> region size accessor.  <a href="classarm__compute_1_1_i_memory_region.xhtml#a259cb5a711406a8c3e5d937eb9350cca">More...</a><br /></td></tr>
<tr class="separator:a259cb5a711406a8c3e5d937eb9350cca inherit pub_methods_classarm__compute_1_1_i_memory_region"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab5c159b7d0cdca9f543019f4f47ec288 inherit pub_methods_classarm__compute_1_1_i_memory_region"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_memory_region.xhtml#ab5c159b7d0cdca9f543019f4f47ec288">set_size</a> (size_t <a class="el" href="classarm__compute_1_1_i_memory_region.xhtml#a259cb5a711406a8c3e5d937eb9350cca">size</a>)</td></tr>
<tr class="memdesc:ab5c159b7d0cdca9f543019f4f47ec288 inherit pub_methods_classarm__compute_1_1_i_memory_region"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets size of region.  <a href="classarm__compute_1_1_i_memory_region.xhtml#ab5c159b7d0cdca9f543019f4f47ec288">More...</a><br /></td></tr>
<tr class="separator:ab5c159b7d0cdca9f543019f4f47ec288 inherit pub_methods_classarm__compute_1_1_i_memory_region"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>GLES memory region interface. </p>

<p class="definition">Definition at line <a class="el" href="_g_c_memory_region_8h_source.xhtml#l00035">35</a> of file <a class="el" href="_g_c_memory_region_8h_source.xhtml">GCMemoryRegion.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a1ea285b33671030e2a60eccd8dc60b55"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1ea285b33671030e2a60eccd8dc60b55">&#9670;&nbsp;</a></span>IGCMemoryRegion() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_i_g_c_memory_region.xhtml">IGCMemoryRegion</a> </td>
          <td>(</td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>size</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constructor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">size</td><td>Region size </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_g_c_memory_region_8cpp_source.xhtml#l00030">30</a> of file <a class="el" href="_g_c_memory_region_8cpp_source.xhtml">GCMemoryRegion.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;    : <a class="code" href="classarm__compute_1_1_i_memory_region.xhtml#a92ee6f66a47e8ba4bd3d01579ad4ef42">IMemoryRegion</a>(<a class="code" href="classarm__compute_1_1_i_memory_region.xhtml#a259cb5a711406a8c3e5d937eb9350cca">size</a>), _mapping(<span class="keyword">nullptr</span>), _ssbo_name(0)</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;{</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;}</div><div class="ttc" id="classarm__compute_1_1_i_memory_region_xhtml_a92ee6f66a47e8ba4bd3d01579ad4ef42"><div class="ttname"><a href="classarm__compute_1_1_i_memory_region.xhtml#a92ee6f66a47e8ba4bd3d01579ad4ef42">arm_compute::IMemoryRegion::IMemoryRegion</a></div><div class="ttdeci">IMemoryRegion(size_t size)</div><div class="ttdoc">Default constructor.</div><div class="ttdef"><b>Definition:</b> <a href="_i_memory_region_8h_source.xhtml#l00040">IMemoryRegion.h:40</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_memory_region_xhtml_a259cb5a711406a8c3e5d937eb9350cca"><div class="ttname"><a href="classarm__compute_1_1_i_memory_region.xhtml#a259cb5a711406a8c3e5d937eb9350cca">arm_compute::IMemoryRegion::size</a></div><div class="ttdeci">size_t size() const</div><div class="ttdoc">Memory region size accessor.</div><div class="ttdef"><b>Definition:</b> <a href="_i_memory_region_8h_source.xhtml#l00073">IMemoryRegion.h:73</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a44bf2849a57a0fced75e0f67f56847a9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a44bf2849a57a0fced75e0f67f56847a9">&#9670;&nbsp;</a></span>~IGCMemoryRegion()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual ~<a class="el" href="classarm__compute_1_1_i_g_c_memory_region.xhtml">IGCMemoryRegion</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Default Destructor. </p>

</div>
</div>
<a id="a3fc929b7c49a15aabeda3efac4142383"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3fc929b7c49a15aabeda3efac4142383">&#9670;&nbsp;</a></span>IGCMemoryRegion() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_i_g_c_memory_region.xhtml">IGCMemoryRegion</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_g_c_memory_region.xhtml">IGCMemoryRegion</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prevent instances of this class from being copied (As this class contains pointers) </p>

</div>
</div>
<a id="ade6f50df2c069ce94a72ab26062b5f7c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ade6f50df2c069ce94a72ab26062b5f7c">&#9670;&nbsp;</a></span>IGCMemoryRegion() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_i_g_c_memory_region.xhtml">IGCMemoryRegion</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_g_c_memory_region.xhtml">IGCMemoryRegion</a> &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Default move constructor. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a3d9d196240e9b0062c953c3abd534187"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3d9d196240e9b0062c953c3abd534187">&#9670;&nbsp;</a></span>buffer() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void * buffer </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the pointer to the allocated data. </p>
<dl class="section return"><dt>Returns</dt><dd>Pointer to the allocated data </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_memory_region.xhtml#af4cf95f81e1b269a31d2d9a7e0429a24">IMemoryRegion</a>.</p>

<p class="definition">Definition at line <a class="el" href="_g_c_memory_region_8cpp_source.xhtml#l00040">40</a> of file <a class="el" href="_g_c_memory_region_8cpp_source.xhtml">GCMemoryRegion.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;{</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    <span class="keywordflow">return</span> _mapping;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="ad39124c7fd703b14af6f5bf5bc0762ec"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad39124c7fd703b14af6f5bf5bc0762ec">&#9670;&nbsp;</a></span>buffer() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const void * buffer </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the pointer to the allocated data. </p>
<dl class="section return"><dt>Returns</dt><dd>Pointer to the allocated data </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_memory_region.xhtml#a19c5c30385ebe5a42755699ac1f90092">IMemoryRegion</a>.</p>

<p class="definition">Definition at line <a class="el" href="_g_c_memory_region_8cpp_source.xhtml#l00045">45</a> of file <a class="el" href="_g_c_memory_region_8cpp_source.xhtml">GCMemoryRegion.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;{</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <span class="keywordflow">return</span> _mapping;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a8fb30f2d054c3ad3e11edf5f9d477f87"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8fb30f2d054c3ad3e11edf5f9d477f87">&#9670;&nbsp;</a></span>gc_ssbo_name()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const GLuint &amp; gc_ssbo_name </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the underlying CL buffer. </p>
<dl class="section return"><dt>Returns</dt><dd>CL memory buffer object </dd></dl>

<p class="definition">Definition at line <a class="el" href="_g_c_memory_region_8cpp_source.xhtml#l00035">35</a> of file <a class="el" href="_g_c_memory_region_8cpp_source.xhtml">GCMemoryRegion.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;{</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    <span class="keywordflow">return</span> _ssbo_name;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;}</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_g_c_tensor_allocator_8cpp_source.xhtml#l00084">GCTensorAllocator::get_gl_ssbo_name()</a>, and <a class="el" href="_g_c_tensor_allocator_8cpp_source.xhtml#l00065">GCTensorAllocator::set_associated_memory_group()</a>.</p>

</div>
</div>
<a id="a5a589966a248f6e2a958f8dff2550418"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5a589966a248f6e2a958f8dff2550418">&#9670;&nbsp;</a></span>map()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void* map </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>blocking</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Enqueue a map operation of the allocated buffer on the given queue. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">blocking</td><td>If true, then the mapping will be ready to use by the time this method returns, else it is the caller's responsibility to flush the queue and wait for the mapping operation to have completed before using the returned mapping pointer.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The mapping address. </dd></dl>

<p>Implemented in <a class="el" href="classarm__compute_1_1_g_c_buffer_memory_region.xhtml#a00ece8dea7f4aa930272fda661da87ea">GCBufferMemoryRegion</a>.</p>

<p class="reference">Referenced by <a class="el" href="_g_c_tensor_allocator_8cpp_source.xhtml#l00089">GCTensorAllocator::map()</a>.</p>

</div>
</div>
<a id="a9b586073abda157c8aa9cfc1d1a6baf7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9b586073abda157c8aa9cfc1d1a6baf7">&#9670;&nbsp;</a></span>operator=() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_i_g_c_memory_region.xhtml">IGCMemoryRegion</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_g_c_memory_region.xhtml">IGCMemoryRegion</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prevent instances of this class from being copied (As this class contains pointers) </p>

</div>
</div>
<a id="aa070a495e1556ae2dd1cbcbdc7731d01"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa070a495e1556ae2dd1cbcbdc7731d01">&#9670;&nbsp;</a></span>operator=() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_i_g_c_memory_region.xhtml">IGCMemoryRegion</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_g_c_memory_region.xhtml">IGCMemoryRegion</a> &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Default move assignment operator. </p>

</div>
</div>
<a id="ab8777d03065e8c7146157148a5355dd1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab8777d03065e8c7146157148a5355dd1">&#9670;&nbsp;</a></span>ptr()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void* ptr </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Host/SVM pointer accessor. </p>
<dl class="section return"><dt>Returns</dt><dd>Host/SVM pointer base </dd></dl>

<p>Implemented in <a class="el" href="classarm__compute_1_1_g_c_buffer_memory_region.xhtml#a567fad71aedc47306dbf7b0c020257d8">GCBufferMemoryRegion</a>.</p>

</div>
</div>
<a id="a21164b8d700d97aa462e75e314048f46"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a21164b8d700d97aa462e75e314048f46">&#9670;&nbsp;</a></span>unmap()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void unmap </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Enqueue an unmap operation of the allocated buffer on the given queue. </p>
<dl class="section note"><dt>Note</dt><dd>This method simply enqueue the unmap operation, it is the caller's responsibility to flush the queue and make sure the unmap is finished before the memory is accessed by the device. </dd></dl>

<p>Implemented in <a class="el" href="classarm__compute_1_1_g_c_buffer_memory_region.xhtml#a8f2f7a8fe42dbff289d4ff43c6a2414b">GCBufferMemoryRegion</a>.</p>

<p class="reference">Referenced by <a class="el" href="_g_c_tensor_allocator_8cpp_source.xhtml#l00098">GCTensorAllocator::unmap()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>arm_compute/runtime/GLES_COMPUTE/<a class="el" href="_g_c_memory_region_8h_source.xhtml">GCMemoryRegion.h</a></li>
<li>src/runtime/GLES_COMPUTE/<a class="el" href="_g_c_memory_region_8cpp_source.xhtml">GCMemoryRegion.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1_i_g_c_memory_region.xhtml">IGCMemoryRegion</a></li>
    <li class="footer">Generated on Fri Feb 21 2020 11:10:28 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
