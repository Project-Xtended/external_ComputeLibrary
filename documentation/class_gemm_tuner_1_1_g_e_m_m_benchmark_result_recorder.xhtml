<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: GEMMBenchmarkResultRecorder Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.02.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('class_gemm_tuner_1_1_g_e_m_m_benchmark_result_recorder.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-attribs">Static Public Attributes</a>  </div>
  <div class="headertitle">
<div class="title">GEMMBenchmarkResultRecorder Class Reference</div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ae625b46930454abeb72e1526955462b6"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gemm_tuner_1_1_g_e_m_m_benchmark_result_recorder.xhtml#ae625b46930454abeb72e1526955462b6">__init__</a> (self, tol=0.01)</td></tr>
<tr class="separator:ae625b46930454abeb72e1526955462b6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af9db75613721e5fa69e3af9697ca8dc5"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gemm_tuner_1_1_g_e_m_m_benchmark_result_recorder.xhtml#af9db75613721e5fa69e3af9697ca8dc5">add</a> (self, <a class="el" href="class_gemm_tuner_1_1_benchmark_result.xhtml">BenchmarkResult</a> benchmark_result)</td></tr>
<tr class="separator:af9db75613721e5fa69e3af9697ca8dc5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a64d43ff72eaa8e6ba4fe9831c6294af4"><td class="memItemLeft" align="right" valign="top">Generator[<a class="el" href="class_gemm_tuner_1_1_benchmark_result.xhtml">BenchmarkResult</a>, None, None]&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gemm_tuner_1_1_g_e_m_m_benchmark_result_recorder.xhtml#a64d43ff72eaa8e6ba4fe9831c6294af4">get_record</a> (self)</td></tr>
<tr class="separator:a64d43ff72eaa8e6ba4fe9831c6294af4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a84ff0c9fbd56a0f9308d138de4f99354"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gemm_tuner_1_1_g_e_m_m_benchmark_result_recorder.xhtml#a84ff0c9fbd56a0f9308d138de4f99354">get_best_gemm_configs</a> (self)</td></tr>
<tr class="separator:a84ff0c9fbd56a0f9308d138de4f99354"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8c938fde12c1d2d34553c608c776ba77"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gemm_tuner_1_1_g_e_m_m_benchmark_result_recorder.xhtml#a8c938fde12c1d2d34553c608c776ba77">get_best_gemm_configs_as_sequence</a> (self)</td></tr>
<tr class="separator:a8c938fde12c1d2d34553c608c776ba77"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0ea49ac2ac7d7a33761dc5905cab3711"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gemm_tuner_1_1_g_e_m_m_benchmark_result_recorder.xhtml#a0ea49ac2ac7d7a33761dc5905cab3711">get_config_distributions</a> (self)</td></tr>
<tr class="separator:a0ea49ac2ac7d7a33761dc5905cab3711"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7f8d2c4e2f70c295ad80e22fed16a5ef"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gemm_tuner_1_1_g_e_m_m_benchmark_result_recorder.xhtml#a7f8d2c4e2f70c295ad80e22fed16a5ef">save_to_csvs</a> (self, out_dir, only_best_config=True)</td></tr>
<tr class="separator:a7f8d2c4e2f70c295ad80e22fed16a5ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adc0ecf20ebe230b07f49bed19a7fb0f5"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gemm_tuner_1_1_g_e_m_m_benchmark_result_recorder.xhtml#adc0ecf20ebe230b07f49bed19a7fb0f5">summary</a> (self, sum_level=SummaryLevel.Short)</td></tr>
<tr class="separator:adc0ecf20ebe230b07f49bed19a7fb0f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-attribs"></a>
Static Public Attributes</h2></td></tr>
<tr class="memitem:a1d13ba4c90b1f13f78abc54d6c18bde4"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gemm_tuner_1_1_g_e_m_m_benchmark_result_recorder.xhtml#a1d13ba4c90b1f13f78abc54d6c18bde4">SummaryLevel</a> = Enum(&quot;SummaryLevel&quot;, [&quot;Short&quot;, &quot;Detailed&quot;])</td></tr>
<tr class="separator:a1d13ba4c90b1f13f78abc54d6c18bde4"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><pre class="fragment">A recorder that records and organises GEMM Benchmark results, and produces various reports on the record.
</pre> 
<p class="definition">Definition at line <a class="el" href="_gemm_tuner_8py_source.xhtml#l00175">175</a> of file <a class="el" href="_gemm_tuner_8py_source.xhtml">GemmTuner.py</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="ae625b46930454abeb72e1526955462b6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae625b46930454abeb72e1526955462b6">&#9670;&nbsp;</a></span>__init__()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def __init__ </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>tol</em> = <code>0.01</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<pre class="fragment">Initializer
</pre> 
<p class="definition">Definition at line <a class="el" href="_gemm_tuner_8py_source.xhtml#l00181">181</a> of file <a class="el" href="_gemm_tuner_8py_source.xhtml">GemmTuner.py</a>.</p>
<div class="fragment"><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    <span class="keyword">def </span>__init__(self, tol=0.01):</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;        <span class="stringliteral">&quot;&quot;&quot; Initializer</span></div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;        self._benchmark_result_record: List[BenchmarkResult] = []</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;        <span class="comment"># Strategies recorded</span></div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;        self._strategies = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1ec8dd7ea96aec0e4068497f0b5e17b2">set</a>()</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;        self._tol = tol</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;</div><div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a1ec8dd7ea96aec0e4068497f0b5e17b2"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a1ec8dd7ea96aec0e4068497f0b5e17b2">arm_compute::test::validation::set</a></div><div class="ttdeci">dst_shape set(0, output_wh.first)</div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_gemm_tuner_8py_source.xhtml#l00186">GEMMBenchmarkResultRecorder._strategies</a>, <a class="el" href="_gemm_tuner_8py_source.xhtml#l00187">GEMMBenchmarkResultRecorder._tol</a>, and <a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1ec8dd7ea96aec0e4068497f0b5e17b2">arm_compute::test::validation.set()</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="af9db75613721e5fa69e3af9697ca8dc5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af9db75613721e5fa69e3af9697ca8dc5">&#9670;&nbsp;</a></span>add()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def add </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_gemm_tuner_1_1_benchmark_result.xhtml">BenchmarkResult</a>&#160;</td>
          <td class="paramname"><em>benchmark_result</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<pre class="fragment">Add a benchmark result to the record.
</pre> 
<p class="definition">Definition at line <a class="el" href="_gemm_tuner_8py_source.xhtml#l00189">189</a> of file <a class="el" href="_gemm_tuner_8py_source.xhtml">GemmTuner.py</a>.</p>
<div class="fragment"><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    <span class="keyword">def </span><a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acb58b6d1d2220b217478eb206de180c8">add</a>(self, benchmark_result: BenchmarkResult):</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;        <span class="stringliteral">&quot;&quot;&quot; Add a benchmark result to the record.</span></div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;        gemm_param, strategy, gemm_config, measurement = benchmark_result</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;        <span class="comment"># Update strategies encoutnered</span></div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;        self._strategies.<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acb58b6d1d2220b217478eb206de180c8">add</a>(strategy)</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;        self._benchmark_result_record.append(benchmark_result)</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;</div><div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_acb58b6d1d2220b217478eb206de180c8"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#acb58b6d1d2220b217478eb206de180c8">arm_compute::test::validation::add</a></div><div class="ttdeci">CLArithmeticAddition add</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_arithmetic_addition_8cpp_source.xhtml#l00146">ArithmeticAddition.cpp:146</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_gemm_tuner_8py_source.xhtml#l00186">GEMMBenchmarkResultRecorder._strategies</a>.</p>

<p class="reference">Referenced by <a class="el" href="_gemm_tuner_8py_source.xhtml#l00235">GEMMBenchmarkResultRecorder.get_config_distributions()</a>.</p>

</div>
</div>
<a id="a84ff0c9fbd56a0f9308d138de4f99354"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a84ff0c9fbd56a0f9308d138de4f99354">&#9670;&nbsp;</a></span>get_best_gemm_configs()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def get_best_gemm_configs </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<pre class="fragment">Get the best GEMMConfig set per GEMMParam per Strategy
</pre> 
<p class="definition">Definition at line <a class="el" href="_gemm_tuner_8py_source.xhtml#l00203">203</a> of file <a class="el" href="_gemm_tuner_8py_source.xhtml">GemmTuner.py</a>.</p>
<div class="fragment"><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    <span class="keyword">def </span>get_best_gemm_configs(self):</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;        <span class="stringliteral">&quot;&quot;&quot; Get the best GEMMConfig set per GEMMParam per Strategy</span></div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;        best_gc_sets: Dict[</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;            Tuple[GEMMParam, Strategy], List[Tuple[GEMMConfig, Measurement]]</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;        ] = defaultdict(list)</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;        <span class="keywordflow">for</span> gemm_param, strategy, gemm_config, measurement <span class="keywordflow">in</span> self.get_record():</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;            best_gc_set = best_gc_sets.setdefault((gemm_param, strategy), [])</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;            best_gc_set.append((gemm_config, measurement))</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;            <span class="comment"># Sort the best config set (list)</span></div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;            best_gc_set = sorted(best_gc_set, key=<span class="keyword">lambda</span> gc_and_m: gc_and_m[1])</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;            <span class="comment"># Filter out configs that are beyond tolerance to the best GEMMConfig&#39;s measurement</span></div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;            best_gc, best_m = best_gc_set[0]</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;            best_gc_set_new = [</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;                (gemm_config, measurement)</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;                <span class="keywordflow">for</span> gemm_config, measurement <span class="keywordflow">in</span> best_gc_set[1:]</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;                <span class="keywordflow">if</span> measurement.is_close_to(best_m, self._tol)</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;            ]</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;            <span class="comment"># Add back the best config</span></div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;            best_gc_set_new.insert(0, (best_gc, best_m))</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;            best_gc_sets[(gemm_param, strategy)] = best_gc_set_new</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;        <span class="keywordflow">return</span> best_gc_sets</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;</div></div><!-- fragment -->
<p class="reference">References <a class="el" href="_gemm_tuner_8py_source.xhtml#l00187">GEMMBenchmarkResultRecorder._tol</a>, and <a class="el" href="_gemm_tuner_8py_source.xhtml#l00198">GEMMBenchmarkResultRecorder.get_record()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_gemm_tuner_8py_source.xhtml#l00227">GEMMBenchmarkResultRecorder.get_best_gemm_configs_as_sequence()</a>, and <a class="el" href="_gemm_tuner_8py_source.xhtml#l00280">GEMMBenchmarkResultRecorder.summary()</a>.</p>

</div>
</div>
<a id="a8c938fde12c1d2d34553c608c776ba77"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8c938fde12c1d2d34553c608c776ba77">&#9670;&nbsp;</a></span>get_best_gemm_configs_as_sequence()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def get_best_gemm_configs_as_sequence </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<pre class="fragment">Get the best GEMMConfig set per GEMMParam per Strategy, and flatten the result into a sequence
of BenchmarkResults
</pre> 
<p class="definition">Definition at line <a class="el" href="_gemm_tuner_8py_source.xhtml#l00227">227</a> of file <a class="el" href="_gemm_tuner_8py_source.xhtml">GemmTuner.py</a>.</p>
<div class="fragment"><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;    <span class="keyword">def </span>get_best_gemm_configs_as_sequence(self):</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;        <span class="stringliteral">&quot;&quot;&quot; Get the best GEMMConfig set per GEMMParam per Strategy, and flatten the result into a sequence</span></div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;<span class="stringliteral">        of BenchmarkResults</span></div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;        <span class="keywordflow">for</span> (gemm_param, strategy), best_gc_sets <span class="keywordflow">in</span> self.get_best_gemm_configs().items():</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;            <span class="keywordflow">for</span> best_gemm_config, best_measurement <span class="keywordflow">in</span> best_gc_sets:</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;                <span class="keywordflow">yield</span> BenchmarkResult(gemm_param, strategy, best_gemm_config, best_measurement)</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;</div></div><!-- fragment -->
<p class="reference">References <a class="el" href="_gemm_tuner_8py_source.xhtml#l00203">GEMMBenchmarkResultRecorder.get_best_gemm_configs()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_gemm_tuner_8py_source.xhtml#l00235">GEMMBenchmarkResultRecorder.get_config_distributions()</a>, and <a class="el" href="_gemm_tuner_8py_source.xhtml#l00247">GEMMBenchmarkResultRecorder.save_to_csvs()</a>.</p>

</div>
</div>
<a id="a0ea49ac2ac7d7a33761dc5905cab3711"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0ea49ac2ac7d7a33761dc5905cab3711">&#9670;&nbsp;</a></span>get_config_distributions()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def get_config_distributions </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<pre class="fragment">Return GEMMConfigDistribution for each strategy
</pre> 
<p class="definition">Definition at line <a class="el" href="_gemm_tuner_8py_source.xhtml#l00235">235</a> of file <a class="el" href="_gemm_tuner_8py_source.xhtml">GemmTuner.py</a>.</p>
<div class="fragment"><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;    <span class="keyword">def </span>get_config_distributions(self):</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;        <span class="stringliteral">&quot;&quot;&quot; Return GEMMConfigDistribution for each strategy</span></div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;        gemm_config_distributions: Dict[Strategy, GEMMConfigDistribution] = defaultdict(</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;            GEMMConfigDistribution</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;        )</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;        <span class="keywordflow">for</span> benchmark_result <span class="keywordflow">in</span> self.get_best_gemm_configs_as_sequence():</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;            _, strategy, _, _ = benchmark_result</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;            gemm_config_distributions[strategy].<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acb58b6d1d2220b217478eb206de180c8">add</a>(benchmark_result)</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;        <span class="keywordflow">return</span> gemm_config_distributions</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;</div><div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_acb58b6d1d2220b217478eb206de180c8"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#acb58b6d1d2220b217478eb206de180c8">arm_compute::test::validation::add</a></div><div class="ttdeci">CLArithmeticAddition add</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_arithmetic_addition_8cpp_source.xhtml#l00146">ArithmeticAddition.cpp:146</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_gemm_tuner_8py_source.xhtml#l00189">GEMMBenchmarkResultRecorder.add()</a>, and <a class="el" href="_gemm_tuner_8py_source.xhtml#l00227">GEMMBenchmarkResultRecorder.get_best_gemm_configs_as_sequence()</a>.</p>

</div>
</div>
<a id="a64d43ff72eaa8e6ba4fe9831c6294af4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a64d43ff72eaa8e6ba4fe9831c6294af4">&#9670;&nbsp;</a></span>get_record()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"> Generator[<a class="el" href="class_gemm_tuner_1_1_benchmark_result.xhtml">BenchmarkResult</a>, None, None] get_record </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<pre class="fragment">Return an iterator that iterates over the record.
</pre> 
<p class="definition">Definition at line <a class="el" href="_gemm_tuner_8py_source.xhtml#l00198">198</a> of file <a class="el" href="_gemm_tuner_8py_source.xhtml">GemmTuner.py</a>.</p>
<div class="fragment"><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    <span class="keyword">def </span>get_record(self) -&gt; Generator[BenchmarkResult, None, None]:</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;        <span class="stringliteral">&quot;&quot;&quot; Return an iterator that iterates over the record.</span></div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;        <span class="keywordflow">yield</span> <span class="keyword">from</span> self._benchmark_result_record</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_gemm_tuner_8py_source.xhtml#l00203">GEMMBenchmarkResultRecorder.get_best_gemm_configs()</a>, <a class="el" href="_gemm_tuner_8py_source.xhtml#l00247">GEMMBenchmarkResultRecorder.save_to_csvs()</a>, and <a class="el" href="_gemm_tuner_8py_source.xhtml#l00280">GEMMBenchmarkResultRecorder.summary()</a>.</p>

</div>
</div>
<a id="a7f8d2c4e2f70c295ad80e22fed16a5ef"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7f8d2c4e2f70c295ad80e22fed16a5ef">&#9670;&nbsp;</a></span>save_to_csvs()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def save_to_csvs </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>out_dir</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>only_best_config</em> = <code>True</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<pre class="fragment">Save records to an output directory of csv files.
The directory is organized such that each strategy gets its own CSV file.
</pre> 
<p class="definition">Definition at line <a class="el" href="_gemm_tuner_8py_source.xhtml#l00247">247</a> of file <a class="el" href="_gemm_tuner_8py_source.xhtml">GemmTuner.py</a>.</p>
<div class="fragment"><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;    <span class="keyword">def </span>save_to_csvs(self, out_dir, only_best_config=True):</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;        <span class="stringliteral">&quot;&quot;&quot; Save records to an output directory of csv files.</span></div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;<span class="stringliteral">        The directory is organized such that each strategy gets its own CSV file.</span></div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;        <span class="keywordflow">if</span> <span class="keywordflow">not</span> os.path.exists(out_dir):</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;            logging.info(<span class="stringliteral">&quot;Output directory {} does not exist. Creating...&quot;</span>.format(out_dir))</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;            os.mkdir(out_dir)</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;        <span class="keywordflow">for</span> strategy <span class="keywordflow">in</span> self._strategies:</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;            out_csv_path = os.path.join(out_dir, strategy.name)</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;            <span class="keywordflow">if</span> os.path.exists(out_csv_path):</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;                overwrite = (</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;                    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>(</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;                        <span class="stringliteral">&quot;Output CSV {} already exists. Overwrite? [Y/N]: &quot;</span>.format(out_csv_path)</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;                    ).lower()</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;                    == <span class="stringliteral">&quot;y&quot;</span></div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;                )</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;                <span class="keywordflow">if</span> <span class="keywordflow">not</span> overwrite:</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;                    logging.info(<span class="stringliteral">&quot;Skipping {}&quot;</span>.format(out_csv_path))</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;                    <span class="keywordflow">continue</span></div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;            logging.info(<span class="stringliteral">&quot;Saving csv file to {}&quot;</span>.format(out_csv_path))</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;            record = (</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;                self.get_best_gemm_configs_as_sequence() <span class="keywordflow">if</span> only_best_config <span class="keywordflow">else</span> self.get_record()</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;            )</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;            <span class="keyword">with</span> open(out_csv_path, <span class="stringliteral">&quot;w&quot;</span>) <span class="keyword">as</span> f:</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;                csv_writer = csv.DictWriter(f, fieldnames=BenchmarkResultCSVRow._fields)</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;                csv_writer.writeheader()</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;                csv_writer.writerows(</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;                    <a class="code" href="namespace_gemm_tuner.xhtml#a38da4cefc89939b02e38ec9027a110b2">benchmark_result_2_csv_row</a>(res)._asdict()</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;                    <span class="keywordflow">for</span> res <span class="keywordflow">in</span> record</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;                    <span class="keywordflow">if</span> res.strategy == strategy</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;                )</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;            logging.info(<span class="stringliteral">&quot;Saved&quot;</span>)</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;</div><div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a8fcf2ddd9a1d58b1b280f5c0aed71845"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">arm_compute::test::validation::input</a></div><div class="ttdeci">auto input</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00487">LSTMLayerQuantized.cpp:487</a></div></div>
<div class="ttc" id="namespace_gemm_tuner_xhtml_a38da4cefc89939b02e38ec9027a110b2"><div class="ttname"><a href="namespace_gemm_tuner.xhtml#a38da4cefc89939b02e38ec9027a110b2">GemmTuner.benchmark_result_2_csv_row</a></div><div class="ttdeci">BenchmarkResultCSVRow benchmark_result_2_csv_row(BenchmarkResult result)</div><div class="ttdef"><b>Definition:</b> <a href="_gemm_tuner_8py_source.xhtml#l00168">GemmTuner.py:168</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_gemm_tuner_8py_source.xhtml#l00186">GEMMBenchmarkResultRecorder._strategies</a>, <a class="el" href="_gemm_tuner_8py_source.xhtml#l00168">GemmTuner.benchmark_result_2_csv_row()</a>, <a class="el" href="_gemm_tuner_8py_source.xhtml#l00227">GEMMBenchmarkResultRecorder.get_best_gemm_configs_as_sequence()</a>, <a class="el" href="_gemm_tuner_8py_source.xhtml#l00198">GEMMBenchmarkResultRecorder.get_record()</a>, and <a class="el" href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00487">arm_compute::test::validation.input</a>.</p>

</div>
</div>
<a id="adc0ecf20ebe230b07f49bed19a7fb0f5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adc0ecf20ebe230b07f49bed19a7fb0f5">&#9670;&nbsp;</a></span>summary()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def summary </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>sum_level</em> = <code>SummaryLevel.Short</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<pre class="fragment">Return the summary string of the record
</pre> 
<p class="definition">Definition at line <a class="el" href="_gemm_tuner_8py_source.xhtml#l00280">280</a> of file <a class="el" href="_gemm_tuner_8py_source.xhtml">GemmTuner.py</a>.</p>
<div class="fragment"><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;    <span class="keyword">def </span>summary(self, sum_level=SummaryLevel.Short):</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;        <span class="stringliteral">&quot;&quot;&quot; Return the summary string of the record</span></div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;        num_raw_records = <a class="code" href="reduction__operation_8cl.xhtml#ab0df00f5333da51860deb93deb44a782">sum</a>(1 <span class="keywordflow">for</span> _ <span class="keywordflow">in</span> self.get_record())</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;        gemm_params_per_strategy = defaultdict(list)</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;        <span class="keywordflow">for</span> gemm_param, strategy <span class="keywordflow">in</span> self.get_best_gemm_configs().keys():</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;            gemm_params_per_strategy[strategy].append(gemm_param)</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;        global_summary = f<span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;<span class="stringliteral">=== {self.__class__.__name__} Summary ===</span></div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;<span class="stringliteral">[Global]</span></div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;<span class="stringliteral">Strategies recorded: {&quot;, &quot;.join(map(lambda s: s.name, self._strategies))}</span></div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;<span class="stringliteral">Total number of results recorded: {num_raw_records}</span></div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;<span class="stringliteral">[Per strategy]</span></div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;        strategy_summaries = []</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;        <span class="keywordflow">for</span> strategy <span class="keywordflow">in</span> gemm_params_per_strategy:</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;            summary = f<span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;<span class="stringliteral">Strategy {strategy.name}:</span></div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;<span class="stringliteral">GEMM parameters:</span></div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;<span class="stringliteral">    Number of: {len(gemm_params_per_strategy[strategy])}</span></div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;<span class="stringliteral">            &quot;&quot;&quot;</span></div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;            <span class="keywordflow">if</span> sum_level == self.__class__.SummaryLevel.Detailed:</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;                summary += f<span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;<span class="stringliteral">    Content: {gemm_params_per_strategy[strategy]}</span></div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;<span class="stringliteral">                &quot;&quot;&quot;</span></div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;            strategy_summaries.append(summary)</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;        <span class="keywordflow">return</span> global_summary + <span class="stringliteral">&quot;&quot;</span>.<a class="code" href="namespacearm__compute_1_1test.xhtml#aa18932675cbb5eb9c9dbf8ff4d7106c7">join</a>(strategy_summaries)</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;</div><div class="ttc" id="namespacearm__compute_1_1test_xhtml_aa18932675cbb5eb9c9dbf8ff4d7106c7"><div class="ttname"><a href="namespacearm__compute_1_1test.xhtml#aa18932675cbb5eb9c9dbf8ff4d7106c7">arm_compute::test::join</a></div><div class="ttdeci">std::string join(T first, T last, const std::string &amp;separator)</div><div class="ttdoc">Helper function to concatenate multiple strings.</div><div class="ttdef"><b>Definition:</b> <a href="tests_2framework_2_utils_8h_source.xhtml#l00093">Utils.h:93</a></div></div>
<div class="ttc" id="reduction__operation_8cl_xhtml_ab0df00f5333da51860deb93deb44a782"><div class="ttname"><a href="reduction__operation_8cl.xhtml#ab0df00f5333da51860deb93deb44a782">sum</a></div><div class="ttdeci">DATA_TYPE sum(__global const DATA_TYPE *input)</div><div class="ttdoc">Calculate sum of a vector.</div><div class="ttdef"><b>Definition:</b> <a href="reduction__operation_8cl_source.xhtml#l00066">reduction_operation.cl:66</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_gemm_tuner_8py_source.xhtml#l00203">GEMMBenchmarkResultRecorder.get_best_gemm_configs()</a>, <a class="el" href="_gemm_tuner_8py_source.xhtml#l00198">GEMMBenchmarkResultRecorder.get_record()</a>, <a class="el" href="tests_2framework_2_utils_8h_source.xhtml#l00093">arm_compute::test.join()</a>, and <a class="el" href="reduction__operation_8cl_source.xhtml#l00066">sum()</a>.</p>

</div>
</div>
<h2 class="groupheader">Field Documentation</h2>
<a id="a1d13ba4c90b1f13f78abc54d6c18bde4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1d13ba4c90b1f13f78abc54d6c18bde4">&#9670;&nbsp;</a></span>SummaryLevel</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">SummaryLevel = Enum(&quot;SummaryLevel&quot;, [&quot;Short&quot;, &quot;Detailed&quot;])</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_gemm_tuner_8py_source.xhtml#l00179">179</a> of file <a class="el" href="_gemm_tuner_8py_source.xhtml">GemmTuner.py</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>examples/gemm_tuner/<a class="el" href="_gemm_tuner_8py_source.xhtml">GemmTuner.py</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespace_gemm_tuner.xhtml">GemmTuner</a></li><li class="navelem"><a class="el" href="class_gemm_tuner_1_1_g_e_m_m_benchmark_result_recorder.xhtml">GEMMBenchmarkResultRecorder</a></li>
    <li class="footer">Generated on Thu Mar 5 2020 16:07:20 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
