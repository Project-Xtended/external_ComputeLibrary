<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: PadStrideInfo Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.02.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classarm__compute_1_1_pad_stride_info.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">PadStrideInfo Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Padding and stride information class.  
 <a href="classarm__compute_1_1_pad_stride_info.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:aebf88ce57c0ad3d796ca66edb8a43e1a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_pad_stride_info.xhtml#aebf88ce57c0ad3d796ca66edb8a43e1a">PadStrideInfo</a> (unsigned int stride_x=1, unsigned int stride_y=1, unsigned int pad_x=0, unsigned int pad_y=0, <a class="el" href="namespacearm__compute.xhtml#a1fece1bd804e64f39f602d1c3969849a">DimensionRoundingType</a> <a class="el" href="classarm__compute_1_1_pad_stride_info.xhtml#a711b72c2817604dfbb9d20d142882bab">round</a>=<a class="el" href="namespacearm__compute.xhtml#a1fece1bd804e64f39f602d1c3969849aa56c1e354d36beb85b0d881c5b2e24cbe">DimensionRoundingType::FLOOR</a>)</td></tr>
<tr class="memdesc:aebf88ce57c0ad3d796ca66edb8a43e1a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="#aebf88ce57c0ad3d796ca66edb8a43e1a">More...</a><br /></td></tr>
<tr class="separator:aebf88ce57c0ad3d796ca66edb8a43e1a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad71c061b948d43c30e489e15fee6dc8b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_pad_stride_info.xhtml#ad71c061b948d43c30e489e15fee6dc8b">PadStrideInfo</a> (unsigned int stride_x, unsigned int stride_y, unsigned int <a class="el" href="classarm__compute_1_1_pad_stride_info.xhtml#a7144874ab401f5c4e249a1115dfb5166">pad_left</a>, unsigned int <a class="el" href="classarm__compute_1_1_pad_stride_info.xhtml#a3860caeeaa259d59ccf69c3aea23f549">pad_right</a>, unsigned int <a class="el" href="classarm__compute_1_1_pad_stride_info.xhtml#a3fea0ce4e6eeee7bf3a511c31b51d44f">pad_top</a>, unsigned int <a class="el" href="classarm__compute_1_1_pad_stride_info.xhtml#ac49df0924d183da42cffc04cf9aba1f8">pad_bottom</a>, <a class="el" href="namespacearm__compute.xhtml#a1fece1bd804e64f39f602d1c3969849a">DimensionRoundingType</a> <a class="el" href="classarm__compute_1_1_pad_stride_info.xhtml#a711b72c2817604dfbb9d20d142882bab">round</a>)</td></tr>
<tr class="memdesc:ad71c061b948d43c30e489e15fee6dc8b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="#ad71c061b948d43c30e489e15fee6dc8b">More...</a><br /></td></tr>
<tr class="separator:ad71c061b948d43c30e489e15fee6dc8b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6e324c1bd1111876469ea247da156147"><td class="memItemLeft" align="right" valign="top">std::pair&lt; unsigned int, unsigned int &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_pad_stride_info.xhtml#a6e324c1bd1111876469ea247da156147">stride</a> () const</td></tr>
<tr class="memdesc:a6e324c1bd1111876469ea247da156147"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the stride.  <a href="#a6e324c1bd1111876469ea247da156147">More...</a><br /></td></tr>
<tr class="separator:a6e324c1bd1111876469ea247da156147"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab4f112d61c643fe54d616201a9414267"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_pad_stride_info.xhtml#ab4f112d61c643fe54d616201a9414267">padding_is_symmetric</a> () const</td></tr>
<tr class="memdesc:ab4f112d61c643fe54d616201a9414267"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check whether the padding is symmetric.  <a href="#ab4f112d61c643fe54d616201a9414267">More...</a><br /></td></tr>
<tr class="separator:ab4f112d61c643fe54d616201a9414267"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae33ab50602da54038611e30d5013c040"><td class="memItemLeft" align="right" valign="top">std::pair&lt; unsigned int, unsigned int &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_pad_stride_info.xhtml#ae33ab50602da54038611e30d5013c040">pad</a> () const</td></tr>
<tr class="memdesc:ae33ab50602da54038611e30d5013c040"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the padding.  <a href="#ae33ab50602da54038611e30d5013c040">More...</a><br /></td></tr>
<tr class="separator:ae33ab50602da54038611e30d5013c040"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7144874ab401f5c4e249a1115dfb5166"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_pad_stride_info.xhtml#a7144874ab401f5c4e249a1115dfb5166">pad_left</a> () const</td></tr>
<tr class="memdesc:a7144874ab401f5c4e249a1115dfb5166"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the left padding.  <a href="#a7144874ab401f5c4e249a1115dfb5166">More...</a><br /></td></tr>
<tr class="separator:a7144874ab401f5c4e249a1115dfb5166"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3860caeeaa259d59ccf69c3aea23f549"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_pad_stride_info.xhtml#a3860caeeaa259d59ccf69c3aea23f549">pad_right</a> () const</td></tr>
<tr class="memdesc:a3860caeeaa259d59ccf69c3aea23f549"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the right padding.  <a href="#a3860caeeaa259d59ccf69c3aea23f549">More...</a><br /></td></tr>
<tr class="separator:a3860caeeaa259d59ccf69c3aea23f549"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3fea0ce4e6eeee7bf3a511c31b51d44f"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_pad_stride_info.xhtml#a3fea0ce4e6eeee7bf3a511c31b51d44f">pad_top</a> () const</td></tr>
<tr class="memdesc:a3fea0ce4e6eeee7bf3a511c31b51d44f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the top padding.  <a href="#a3fea0ce4e6eeee7bf3a511c31b51d44f">More...</a><br /></td></tr>
<tr class="separator:a3fea0ce4e6eeee7bf3a511c31b51d44f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac49df0924d183da42cffc04cf9aba1f8"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_pad_stride_info.xhtml#ac49df0924d183da42cffc04cf9aba1f8">pad_bottom</a> () const</td></tr>
<tr class="memdesc:ac49df0924d183da42cffc04cf9aba1f8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the bottom padding.  <a href="#ac49df0924d183da42cffc04cf9aba1f8">More...</a><br /></td></tr>
<tr class="separator:ac49df0924d183da42cffc04cf9aba1f8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a711b72c2817604dfbb9d20d142882bab"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearm__compute.xhtml#a1fece1bd804e64f39f602d1c3969849a">DimensionRoundingType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_pad_stride_info.xhtml#a711b72c2817604dfbb9d20d142882bab">round</a> () const</td></tr>
<tr class="memdesc:a711b72c2817604dfbb9d20d142882bab"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the rounding type.  <a href="#a711b72c2817604dfbb9d20d142882bab">More...</a><br /></td></tr>
<tr class="separator:a711b72c2817604dfbb9d20d142882bab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:add9dd56c183d91e148b0a7b390159fda"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_pad_stride_info.xhtml#add9dd56c183d91e148b0a7b390159fda">has_padding</a> () const</td></tr>
<tr class="memdesc:add9dd56c183d91e148b0a7b390159fda"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check whether this has any padding.  <a href="#add9dd56c183d91e148b0a7b390159fda">More...</a><br /></td></tr>
<tr class="separator:add9dd56c183d91e148b0a7b390159fda"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Padding and stride information class. </p>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l00686">686</a> of file <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="aebf88ce57c0ad3d796ca66edb8a43e1a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aebf88ce57c0ad3d796ca66edb8a43e1a">&#9670;&nbsp;</a></span>PadStrideInfo() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a> </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>stride_x</em> = <code>1</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>stride_y</em> = <code>1</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>pad_x</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>pad_y</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearm__compute.xhtml#a1fece1bd804e64f39f602d1c3969849a">DimensionRoundingType</a>&#160;</td>
          <td class="paramname"><em>round</em> = <code><a class="el" href="namespacearm__compute.xhtml#a1fece1bd804e64f39f602d1c3969849aa56c1e354d36beb85b0d881c5b2e24cbe">DimensionRoundingType::FLOOR</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Constructor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">stride_x</td><td>(Optional) Stride, in elements, across x. Defaults to 1. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">stride_y</td><td>(Optional) Stride, in elements, across y. Defaults to 1. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pad_x</td><td>(Optional) Padding, in elements, across x. Defaults to 0. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pad_y</td><td>(Optional) Padding, in elements, across y. Defaults to 0. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">round</td><td>(Optional) <a class="el" href="classarm__compute_1_1_dimensions.xhtml" title="Dimensions with dimensionality.">Dimensions</a> rounding. Defaults to <a class="el" href="namespacearm__compute.xhtml#a1fece1bd804e64f39f602d1c3969849aa56c1e354d36beb85b0d881c5b2e24cbe">FLOOR</a>. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l00697">697</a> of file <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;        : _stride(std::make_pair(stride_x, stride_y)),</div><div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;          _pad_left(pad_x),</div><div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;          _pad_top(pad_y),</div><div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;          _pad_right(pad_x),</div><div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;          _pad_bottom(pad_y),</div><div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;          _round_type(<a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml#a711b72c2817604dfbb9d20d142882bab">round</a>)</div><div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;    {</div><div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;    }</div><div class="ttc" id="classarm__compute_1_1_pad_stride_info_xhtml_a711b72c2817604dfbb9d20d142882bab"><div class="ttname"><a href="classarm__compute_1_1_pad_stride_info.xhtml#a711b72c2817604dfbb9d20d142882bab">arm_compute::PadStrideInfo::round</a></div><div class="ttdeci">DimensionRoundingType round() const</div><div class="ttdoc">Get the rounding type.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00781">Types.h:781</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ad71c061b948d43c30e489e15fee6dc8b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad71c061b948d43c30e489e15fee6dc8b">&#9670;&nbsp;</a></span>PadStrideInfo() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a> </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>stride_x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>stride_y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>pad_left</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>pad_right</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>pad_top</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>pad_bottom</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearm__compute.xhtml#a1fece1bd804e64f39f602d1c3969849a">DimensionRoundingType</a>&#160;</td>
          <td class="paramname"><em>round</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Constructor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">stride_x</td><td>Stride, in elements, across x. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">stride_y</td><td>Stride, in elements, across y. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pad_left</td><td>Padding across x on the left, in elements. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pad_top</td><td>Padding across y on the top, in elements. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pad_right</td><td>Padding across x on the right, in elements. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pad_bottom</td><td>Padding across y on the bottom, in elements. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">round</td><td><a class="el" href="classarm__compute_1_1_dimensions.xhtml" title="Dimensions with dimensionality.">Dimensions</a> rounding. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l00718">718</a> of file <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;        : _stride(std::make_pair(stride_x, stride_y)),</div><div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160;          _pad_left(<a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml#a7144874ab401f5c4e249a1115dfb5166">pad_left</a>),</div><div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160;          _pad_top(<a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml#a3fea0ce4e6eeee7bf3a511c31b51d44f">pad_top</a>),</div><div class="line"><a name="l00725"></a><span class="lineno">  725</span>&#160;          _pad_right(<a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml#a3860caeeaa259d59ccf69c3aea23f549">pad_right</a>),</div><div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;          _pad_bottom(<a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml#ac49df0924d183da42cffc04cf9aba1f8">pad_bottom</a>),</div><div class="line"><a name="l00727"></a><span class="lineno">  727</span>&#160;          _round_type(<a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml#a711b72c2817604dfbb9d20d142882bab">round</a>)</div><div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;    {</div><div class="line"><a name="l00729"></a><span class="lineno">  729</span>&#160;    }</div><div class="ttc" id="classarm__compute_1_1_pad_stride_info_xhtml_a711b72c2817604dfbb9d20d142882bab"><div class="ttname"><a href="classarm__compute_1_1_pad_stride_info.xhtml#a711b72c2817604dfbb9d20d142882bab">arm_compute::PadStrideInfo::round</a></div><div class="ttdeci">DimensionRoundingType round() const</div><div class="ttdoc">Get the rounding type.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00781">Types.h:781</a></div></div>
<div class="ttc" id="classarm__compute_1_1_pad_stride_info_xhtml_a3fea0ce4e6eeee7bf3a511c31b51d44f"><div class="ttname"><a href="classarm__compute_1_1_pad_stride_info.xhtml#a3fea0ce4e6eeee7bf3a511c31b51d44f">arm_compute::PadStrideInfo::pad_top</a></div><div class="ttdeci">unsigned int pad_top() const</div><div class="ttdoc">Get the top padding.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00770">Types.h:770</a></div></div>
<div class="ttc" id="classarm__compute_1_1_pad_stride_info_xhtml_a3860caeeaa259d59ccf69c3aea23f549"><div class="ttname"><a href="classarm__compute_1_1_pad_stride_info.xhtml#a3860caeeaa259d59ccf69c3aea23f549">arm_compute::PadStrideInfo::pad_right</a></div><div class="ttdeci">unsigned int pad_right() const</div><div class="ttdoc">Get the right padding.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00765">Types.h:765</a></div></div>
<div class="ttc" id="classarm__compute_1_1_pad_stride_info_xhtml_ac49df0924d183da42cffc04cf9aba1f8"><div class="ttname"><a href="classarm__compute_1_1_pad_stride_info.xhtml#ac49df0924d183da42cffc04cf9aba1f8">arm_compute::PadStrideInfo::pad_bottom</a></div><div class="ttdeci">unsigned int pad_bottom() const</div><div class="ttdoc">Get the bottom padding.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00775">Types.h:775</a></div></div>
<div class="ttc" id="classarm__compute_1_1_pad_stride_info_xhtml_a7144874ab401f5c4e249a1115dfb5166"><div class="ttname"><a href="classarm__compute_1_1_pad_stride_info.xhtml#a7144874ab401f5c4e249a1115dfb5166">arm_compute::PadStrideInfo::pad_left</a></div><div class="ttdeci">unsigned int pad_left() const</div><div class="ttdoc">Get the left padding.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00760">Types.h:760</a></div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="add9dd56c183d91e148b0a7b390159fda"></a>
<h2 class="memtitle"><span class="permalink"><a href="#add9dd56c183d91e148b0a7b390159fda">&#9670;&nbsp;</a></span>has_padding()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool has_padding </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Check whether this has any padding. </p>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l00787">787</a> of file <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00788"></a><span class="lineno">  788</span>&#160;    {</div><div class="line"><a name="l00789"></a><span class="lineno">  789</span>&#160;        <span class="keywordflow">return</span> (_pad_left != 0 || _pad_top != 0 || _pad_right != 0 || _pad_bottom != 0);</div><div class="line"><a name="l00790"></a><span class="lineno">  790</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="ae33ab50602da54038611e30d5013c040"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae33ab50602da54038611e30d5013c040">&#9670;&nbsp;</a></span>pad()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::pair&lt;unsigned int, unsigned int&gt; pad </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the padding. </p>
<dl class="section note"><dt>Note</dt><dd>This should only be used when the padding is symmetric.</dd></dl>
<dl class="section return"><dt>Returns</dt><dd>a pair: padding left/right, padding top/bottom </dd></dl>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l00752">752</a> of file <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00753"></a><span class="lineno">  753</span>&#160;    {</div><div class="line"><a name="l00754"></a><span class="lineno">  754</span>&#160;        <span class="comment">//this accessor should be used only when padding is symmetric</span></div><div class="line"><a name="l00755"></a><span class="lineno">  755</span>&#160;        <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(!<a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml#ab4f112d61c643fe54d616201a9414267">padding_is_symmetric</a>());</div><div class="line"><a name="l00756"></a><span class="lineno">  756</span>&#160;        <span class="keywordflow">return</span> std::make_pair(_pad_left, _pad_top);</div><div class="line"><a name="l00757"></a><span class="lineno">  757</span>&#160;    }</div><div class="ttc" id="_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00466">Error.h:466</a></div></div>
<div class="ttc" id="classarm__compute_1_1_pad_stride_info_xhtml_ab4f112d61c643fe54d616201a9414267"><div class="ttname"><a href="classarm__compute_1_1_pad_stride_info.xhtml#ab4f112d61c643fe54d616201a9414267">arm_compute::PadStrideInfo::padding_is_symmetric</a></div><div class="ttdeci">bool padding_is_symmetric() const</div><div class="ttdoc">Check whether the padding is symmetric.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00742">Types.h:742</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00466">ARM_COMPUTE_ERROR_ON</a>, and <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l00742">PadStrideInfo::padding_is_symmetric()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_g_c_pooling_layer_kernel_8cpp_source.xhtml#l00226">GCPoolingLayerKernel::configure()</a>, and <a class="el" href="_g_c_pooling_layer_kernel_8cpp_source.xhtml#l00331">GCPoolingLayerKernel::run()</a>.</p>

</div>
</div>
<a id="ac49df0924d183da42cffc04cf9aba1f8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac49df0924d183da42cffc04cf9aba1f8">&#9670;&nbsp;</a></span>pad_bottom()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int pad_bottom </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the bottom padding. </p>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l00775">775</a> of file <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00776"></a><span class="lineno">  776</span>&#160;    {</div><div class="line"><a name="l00777"></a><span class="lineno">  777</span>&#160;        <span class="keywordflow">return</span> _pad_bottom;</div><div class="line"><a name="l00778"></a><span class="lineno">  778</span>&#160;    }</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_n_e_depthwise_convolution_layer3x3_kernel_8cpp_source.xhtml#l00253">NEDepthwiseConvolutionLayer3x3Kernel::configure()</a>, <a class="el" href="_c_l_g_e_m_m_deconvolution_layer_8cpp_source.xhtml#l00195">CLGEMMDeconvolutionLayer::configure()</a>, <a class="el" href="src_2core_2_utils_8cpp_source.xhtml#l00382">arm_compute::deconvolution_output_dimensions()</a>, <a class="el" href="_n_e_depthwise_convolution_assembly_dispatch_8cpp_source.xhtml#l00453">NEDepthwiseConvolutionAssemblyDispatch::is_optimized_supported()</a>, <a class="el" href="utils_2_type_printer_8h_source.xhtml#l01254">arm_compute::operator&lt;&lt;()</a>, <a class="el" href="_c_p_p_upsample_kernel_8cpp_source.xhtml#l00068">CPPUpsampleKernel::run()</a>, <a class="el" href="_c_l_deconvolution_layer_upsample_kernel_8cpp_source.xhtml#l00098">CLDeconvolutionLayerUpsampleKernel::run()</a>, <a class="el" href="src_2core_2_utils_8cpp_source.xhtml#l00402">arm_compute::scaled_dimensions()</a>, and <a class="el" href="_c_l_g_e_m_m_deconvolution_layer_8cpp_source.xhtml#l00093">CLGEMMDeconvolutionLayer::validate()</a>.</p>

</div>
</div>
<a id="a7144874ab401f5c4e249a1115dfb5166"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7144874ab401f5c4e249a1115dfb5166">&#9670;&nbsp;</a></span>pad_left()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int pad_left </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the left padding. </p>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l00760">760</a> of file <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00761"></a><span class="lineno">  761</span>&#160;    {</div><div class="line"><a name="l00762"></a><span class="lineno">  762</span>&#160;        <span class="keywordflow">return</span> _pad_left;</div><div class="line"><a name="l00763"></a><span class="lineno">  763</span>&#160;    }</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_c_l_pooling_layer_kernel_8cpp_source.xhtml#l00177">CLPoolingLayerKernel::configure()</a>, <a class="el" href="_n_e_depthwise_convolution_layer3x3_kernel_8cpp_source.xhtml#l00253">NEDepthwiseConvolutionLayer3x3Kernel::configure()</a>, <a class="el" href="_n_e_depthwise_convolution_layer_native_kernel_8cpp_source.xhtml#l00508">NEDepthwiseConvolutionLayerNativeKernel::configure()</a>, <a class="el" href="_c_l_g_e_m_m_deconvolution_layer_8cpp_source.xhtml#l00195">CLGEMMDeconvolutionLayer::configure()</a>, <a class="el" href="src_2core_2_utils_8cpp_source.xhtml#l00382">arm_compute::deconvolution_output_dimensions()</a>, <a class="el" href="_n_e_depthwise_convolution_assembly_dispatch_8cpp_source.xhtml#l00453">NEDepthwiseConvolutionAssemblyDispatch::is_optimized_supported()</a>, <a class="el" href="utils_2_type_printer_8h_source.xhtml#l01254">arm_compute::operator&lt;&lt;()</a>, <a class="el" href="_c_p_p_upsample_kernel_8cpp_source.xhtml#l00068">CPPUpsampleKernel::run()</a>, <a class="el" href="_c_l_deconvolution_layer_upsample_kernel_8cpp_source.xhtml#l00098">CLDeconvolutionLayerUpsampleKernel::run()</a>, <a class="el" href="_c_l_pooling_layer_kernel_8cpp_source.xhtml#l00341">CLPoolingLayerKernel::run()</a>, <a class="el" href="src_2core_2_utils_8cpp_source.xhtml#l00402">arm_compute::scaled_dimensions()</a>, and <a class="el" href="_c_l_g_e_m_m_deconvolution_layer_8cpp_source.xhtml#l00093">CLGEMMDeconvolutionLayer::validate()</a>.</p>

</div>
</div>
<a id="a3860caeeaa259d59ccf69c3aea23f549"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3860caeeaa259d59ccf69c3aea23f549">&#9670;&nbsp;</a></span>pad_right()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int pad_right </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the right padding. </p>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l00765">765</a> of file <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00766"></a><span class="lineno">  766</span>&#160;    {</div><div class="line"><a name="l00767"></a><span class="lineno">  767</span>&#160;        <span class="keywordflow">return</span> _pad_right;</div><div class="line"><a name="l00768"></a><span class="lineno">  768</span>&#160;    }</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_n_e_depthwise_convolution_layer3x3_kernel_8cpp_source.xhtml#l00253">NEDepthwiseConvolutionLayer3x3Kernel::configure()</a>, <a class="el" href="_c_l_g_e_m_m_deconvolution_layer_8cpp_source.xhtml#l00195">CLGEMMDeconvolutionLayer::configure()</a>, <a class="el" href="src_2core_2_utils_8cpp_source.xhtml#l00382">arm_compute::deconvolution_output_dimensions()</a>, <a class="el" href="_n_e_depthwise_convolution_assembly_dispatch_8cpp_source.xhtml#l00453">NEDepthwiseConvolutionAssemblyDispatch::is_optimized_supported()</a>, <a class="el" href="utils_2_type_printer_8h_source.xhtml#l01254">arm_compute::operator&lt;&lt;()</a>, <a class="el" href="_c_p_p_upsample_kernel_8cpp_source.xhtml#l00068">CPPUpsampleKernel::run()</a>, <a class="el" href="_c_l_deconvolution_layer_upsample_kernel_8cpp_source.xhtml#l00098">CLDeconvolutionLayerUpsampleKernel::run()</a>, <a class="el" href="src_2core_2_utils_8cpp_source.xhtml#l00402">arm_compute::scaled_dimensions()</a>, and <a class="el" href="_c_l_g_e_m_m_deconvolution_layer_8cpp_source.xhtml#l00093">CLGEMMDeconvolutionLayer::validate()</a>.</p>

</div>
</div>
<a id="a3fea0ce4e6eeee7bf3a511c31b51d44f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3fea0ce4e6eeee7bf3a511c31b51d44f">&#9670;&nbsp;</a></span>pad_top()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int pad_top </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the top padding. </p>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l00770">770</a> of file <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00771"></a><span class="lineno">  771</span>&#160;    {</div><div class="line"><a name="l00772"></a><span class="lineno">  772</span>&#160;        <span class="keywordflow">return</span> _pad_top;</div><div class="line"><a name="l00773"></a><span class="lineno">  773</span>&#160;    }</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_c_l_pooling_layer_kernel_8cpp_source.xhtml#l00177">CLPoolingLayerKernel::configure()</a>, <a class="el" href="_n_e_depthwise_convolution_layer3x3_kernel_8cpp_source.xhtml#l00253">NEDepthwiseConvolutionLayer3x3Kernel::configure()</a>, <a class="el" href="_c_l_g_e_m_m_deconvolution_layer_8cpp_source.xhtml#l00195">CLGEMMDeconvolutionLayer::configure()</a>, <a class="el" href="src_2core_2_utils_8cpp_source.xhtml#l00382">arm_compute::deconvolution_output_dimensions()</a>, <a class="el" href="_n_e_depthwise_convolution_assembly_dispatch_8cpp_source.xhtml#l00453">NEDepthwiseConvolutionAssemblyDispatch::is_optimized_supported()</a>, <a class="el" href="utils_2_type_printer_8h_source.xhtml#l01254">arm_compute::operator&lt;&lt;()</a>, <a class="el" href="_c_p_p_upsample_kernel_8cpp_source.xhtml#l00068">CPPUpsampleKernel::run()</a>, <a class="el" href="_c_l_deconvolution_layer_upsample_kernel_8cpp_source.xhtml#l00098">CLDeconvolutionLayerUpsampleKernel::run()</a>, <a class="el" href="_c_l_pooling_layer_kernel_8cpp_source.xhtml#l00341">CLPoolingLayerKernel::run()</a>, <a class="el" href="src_2core_2_utils_8cpp_source.xhtml#l00402">arm_compute::scaled_dimensions()</a>, and <a class="el" href="_c_l_g_e_m_m_deconvolution_layer_8cpp_source.xhtml#l00093">CLGEMMDeconvolutionLayer::validate()</a>.</p>

</div>
</div>
<a id="ab4f112d61c643fe54d616201a9414267"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab4f112d61c643fe54d616201a9414267">&#9670;&nbsp;</a></span>padding_is_symmetric()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool padding_is_symmetric </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Check whether the padding is symmetric. </p>
<dl class="section return"><dt>Returns</dt><dd>True if the padding is symmetric. </dd></dl>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l00742">742</a> of file <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00743"></a><span class="lineno">  743</span>&#160;    {</div><div class="line"><a name="l00744"></a><span class="lineno">  744</span>&#160;        <span class="keywordflow">return</span> (_pad_left == _pad_right) &amp;&amp; (_pad_top == _pad_bottom);</div><div class="line"><a name="l00745"></a><span class="lineno">  745</span>&#160;    }</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l00752">PadStrideInfo::pad()</a>.</p>

</div>
</div>
<a id="a711b72c2817604dfbb9d20d142882bab"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a711b72c2817604dfbb9d20d142882bab">&#9670;&nbsp;</a></span>round()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearm__compute.xhtml#a1fece1bd804e64f39f602d1c3969849a">DimensionRoundingType</a> round </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the rounding type. </p>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l00781">781</a> of file <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00782"></a><span class="lineno">  782</span>&#160;    {</div><div class="line"><a name="l00783"></a><span class="lineno">  783</span>&#160;        <span class="keywordflow">return</span> _round_type;</div><div class="line"><a name="l00784"></a><span class="lineno">  784</span>&#160;    }</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="src_2core_2_utils_8cpp_source.xhtml#l00402">arm_compute::scaled_dimensions()</a>.</p>

</div>
</div>
<a id="a6e324c1bd1111876469ea247da156147"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6e324c1bd1111876469ea247da156147">&#9670;&nbsp;</a></span>stride()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::pair&lt;unsigned int, unsigned int&gt; stride </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the stride. </p>
<dl class="section return"><dt>Returns</dt><dd>a pair: stride x, stride y. </dd></dl>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l00734">734</a> of file <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00735"></a><span class="lineno">  735</span>&#160;    {</div><div class="line"><a name="l00736"></a><span class="lineno">  736</span>&#160;        <span class="keywordflow">return</span> _stride;</div><div class="line"><a name="l00737"></a><span class="lineno">  737</span>&#160;    }</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_g_c_pooling_layer_kernel_8cpp_source.xhtml#l00226">GCPoolingLayerKernel::configure()</a>, <a class="el" href="_c_l_pooling_layer_kernel_8cpp_source.xhtml#l00177">CLPoolingLayerKernel::configure()</a>, <a class="el" href="_n_e_pooling_layer_kernel_8cpp_source.xhtml#l00450">NEPoolingLayerKernel::configure()</a>, <a class="el" href="_n_e_depthwise_convolution_layer3x3_kernel_8cpp_source.xhtml#l00253">NEDepthwiseConvolutionLayer3x3Kernel::configure()</a>, <a class="el" href="src_2core_2_utils_8cpp_source.xhtml#l00382">arm_compute::deconvolution_output_dimensions()</a>, <a class="el" href="_c_l_deconvolution_layer_8cpp_source.xhtml#l00097">CLDeconvolutionLayer::get_deconvolution_method()</a>, <a class="el" href="utils_2_type_printer_8h_source.xhtml#l01254">arm_compute::operator&lt;&lt;()</a>, <a class="el" href="_c_p_p_upsample_kernel_8cpp_source.xhtml#l00068">CPPUpsampleKernel::run()</a>, <a class="el" href="_c_l_deconvolution_layer_upsample_kernel_8cpp_source.xhtml#l00098">CLDeconvolutionLayerUpsampleKernel::run()</a>, <a class="el" href="_c_l_pooling_layer_kernel_8cpp_source.xhtml#l00341">CLPoolingLayerKernel::run()</a>, <a class="el" href="_g_c_pooling_layer_kernel_8cpp_source.xhtml#l00331">GCPoolingLayerKernel::run()</a>, <a class="el" href="_n_e_pooling_layer_kernel_8cpp_source.xhtml#l02043">NEPoolingLayerKernel::run()</a>, <a class="el" href="_n_e_direct_convolution_layer_kernel_8cpp_source.xhtml#l01518">NEDirectConvolutionLayerKernel::run()</a>, <a class="el" href="src_2core_2_utils_8cpp_source.xhtml#l00402">arm_compute::scaled_dimensions()</a>, and <a class="el" href="_c_l_g_e_m_m_deconvolution_layer_8cpp_source.xhtml#l00093">CLGEMMDeconvolutionLayer::validate()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>arm_compute/core/<a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a></li>
    <li class="footer">Generated on Thu Mar 5 2020 16:07:17 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
