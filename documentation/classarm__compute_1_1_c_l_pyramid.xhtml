<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: CLPyramid Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.02.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classarm__compute_1_1_c_l_pyramid.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">CLPyramid Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Basic implementation of the OpenCL pyramid interface.  
 <a href="classarm__compute_1_1_c_l_pyramid.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_c_l_pyramid_8h_source.xhtml">CLPyramid.h</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for CLPyramid:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classarm__compute_1_1_c_l_pyramid__coll__graph.svg" width="102" height="112"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a24edddb8cac90e092ecbd4a2d2a1ce59"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_pyramid.xhtml#a24edddb8cac90e092ecbd4a2d2a1ce59">CLPyramid</a> ()</td></tr>
<tr class="memdesc:a24edddb8cac90e092ecbd4a2d2a1ce59"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor.  <a href="#a24edddb8cac90e092ecbd4a2d2a1ce59">More...</a><br /></td></tr>
<tr class="separator:a24edddb8cac90e092ecbd4a2d2a1ce59"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae4e11cca76492d63009564d1ea466dff"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_pyramid.xhtml#ae4e11cca76492d63009564d1ea466dff">init</a> (const <a class="el" href="classarm__compute_1_1_pyramid_info.xhtml">PyramidInfo</a> &amp;<a class="el" href="classarm__compute_1_1_c_l_pyramid.xhtml#a7e9f724340af5b795b21a00d35eeb28e">info</a>)</td></tr>
<tr class="memdesc:ae4e11cca76492d63009564d1ea466dff"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialize pyramid data-object using the given <a class="el" href="classarm__compute_1_1_pyramid.xhtml" title="Basic implementation of the pyramid interface.">Pyramid</a>'s metadata.  <a href="#ae4e11cca76492d63009564d1ea466dff">More...</a><br /></td></tr>
<tr class="separator:ae4e11cca76492d63009564d1ea466dff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0dd473fd109df68b4747ebf0f586a115"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_pyramid.xhtml#a0dd473fd109df68b4747ebf0f586a115">init_auto_padding</a> (const <a class="el" href="classarm__compute_1_1_pyramid_info.xhtml">PyramidInfo</a> &amp;<a class="el" href="classarm__compute_1_1_c_l_pyramid.xhtml#a7e9f724340af5b795b21a00d35eeb28e">info</a>)</td></tr>
<tr class="memdesc:a0dd473fd109df68b4747ebf0f586a115"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialize pyramid data-object using the given <a class="el" href="classarm__compute_1_1_pyramid.xhtml" title="Basic implementation of the pyramid interface.">Pyramid</a>'s metadata.  <a href="#a0dd473fd109df68b4747ebf0f586a115">More...</a><br /></td></tr>
<tr class="separator:a0dd473fd109df68b4747ebf0f586a115"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acaefe811b78a2fdc4a0dba0c4029c3ef"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_pyramid.xhtml#acaefe811b78a2fdc4a0dba0c4029c3ef">allocate</a> ()</td></tr>
<tr class="memdesc:acaefe811b78a2fdc4a0dba0c4029c3ef"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allocate the planes in the pyramid.  <a href="#acaefe811b78a2fdc4a0dba0c4029c3ef">More...</a><br /></td></tr>
<tr class="separator:acaefe811b78a2fdc4a0dba0c4029c3ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7e9f724340af5b795b21a00d35eeb28e"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarm__compute_1_1_pyramid_info.xhtml">PyramidInfo</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_pyramid.xhtml#a7e9f724340af5b795b21a00d35eeb28e">info</a> () const override</td></tr>
<tr class="memdesc:a7e9f724340af5b795b21a00d35eeb28e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Interface to be implemented by the child class to return the <a class="el" href="classarm__compute_1_1_pyramid.xhtml" title="Basic implementation of the pyramid interface.">Pyramid</a>'s metadata.  <a href="#a7e9f724340af5b795b21a00d35eeb28e">More...</a><br /></td></tr>
<tr class="separator:a7e9f724340af5b795b21a00d35eeb28e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6f6fce8ca90f3e9a62e2cb48a07047f4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_pyramid.xhtml#a6f6fce8ca90f3e9a62e2cb48a07047f4">get_pyramid_level</a> (size_t index) const override</td></tr>
<tr class="memdesc:a6f6fce8ca90f3e9a62e2cb48a07047f4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Retrieves a level of the pyramid as a <a class="el" href="classarm__compute_1_1_i_tensor.xhtml" title="Interface for NEON tensor.">ITensor</a> pointer.  <a href="#a6f6fce8ca90f3e9a62e2cb48a07047f4">More...</a><br /></td></tr>
<tr class="separator:a6f6fce8ca90f3e9a62e2cb48a07047f4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1_i_pyramid"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1_i_pyramid')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1_i_pyramid.xhtml">IPyramid</a></td></tr>
<tr class="memitem:a2925d59af502d059fcb2326a6ada7867 inherit pub_methods_classarm__compute_1_1_i_pyramid"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_pyramid.xhtml#a2925d59af502d059fcb2326a6ada7867">~IPyramid</a> ()=default</td></tr>
<tr class="memdesc:a2925d59af502d059fcb2326a6ada7867 inherit pub_methods_classarm__compute_1_1_i_pyramid"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default virtual destructor.  <a href="classarm__compute_1_1_i_pyramid.xhtml#a2925d59af502d059fcb2326a6ada7867">More...</a><br /></td></tr>
<tr class="separator:a2925d59af502d059fcb2326a6ada7867 inherit pub_methods_classarm__compute_1_1_i_pyramid"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Basic implementation of the OpenCL pyramid interface. </p>

<p class="definition">Definition at line <a class="el" href="_c_l_pyramid_8h_source.xhtml#l00040">40</a> of file <a class="el" href="_c_l_pyramid_8h_source.xhtml">CLPyramid.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a24edddb8cac90e092ecbd4a2d2a1ce59"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a24edddb8cac90e092ecbd4a2d2a1ce59">&#9670;&nbsp;</a></span>CLPyramid()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_l_pyramid.xhtml">CLPyramid</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Default constructor. </p>

<p class="definition">Definition at line <a class="el" href="_c_l_pyramid_8cpp_source.xhtml#l00037">37</a> of file <a class="el" href="_c_l_pyramid_8cpp_source.xhtml">CLPyramid.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    : _info(), _pyramid()</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;{</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="acaefe811b78a2fdc4a0dba0c4029c3ef"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acaefe811b78a2fdc4a0dba0c4029c3ef">&#9670;&nbsp;</a></span>allocate()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void allocate </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Allocate the planes in the pyramid. </p>
<dl class="section note"><dt>Note</dt><dd>The pyramid must not already be allocated when calling this function. </dd></dl>

<p class="definition">Definition at line <a class="el" href="_c_l_pyramid_8cpp_source.xhtml#l00110">110</a> of file <a class="el" href="_c_l_pyramid_8cpp_source.xhtml">CLPyramid.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;{</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    <span class="keywordflow">for</span>(<span class="keywordtype">size_t</span> i = 0; i &lt; _info.<a class="code" href="classarm__compute_1_1_pyramid_info.xhtml#aa2fea6640d2bd5de24d0e0c2433faab6">num_levels</a>(); ++i)</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    {</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        _pyramid[i].allocator()-&gt;allocate();</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    }</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;}</div><div class="ttc" id="classarm__compute_1_1_pyramid_info_xhtml_aa2fea6640d2bd5de24d0e0c2433faab6"><div class="ttname"><a href="classarm__compute_1_1_pyramid_info.xhtml#aa2fea6640d2bd5de24d0e0c2433faab6">arm_compute::PyramidInfo::num_levels</a></div><div class="ttdeci">size_t num_levels() const</div><div class="ttdoc">Return the number of the pyramid levels.</div><div class="ttdef"><b>Definition:</b> <a href="_pyramid_info_8cpp_source.xhtml#l00077">PyramidInfo.cpp:77</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_pyramid_info_8cpp_source.xhtml#l00077">PyramidInfo::num_levels()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_c_l_laplacian_pyramid_8cpp_source.xhtml#l00050">CLLaplacianPyramid::configure()</a>, and <a class="el" href="_c_l_laplacian_reconstruct_8cpp_source.xhtml#l00045">CLLaplacianReconstruct::configure()</a>.</p>

</div>
</div>
<a id="a6f6fce8ca90f3e9a62e2cb48a07047f4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6f6fce8ca90f3e9a62e2cb48a07047f4">&#9670;&nbsp;</a></span>get_pyramid_level()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a> * get_pyramid_level </td>
          <td>(</td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Retrieves a level of the pyramid as a <a class="el" href="classarm__compute_1_1_i_tensor.xhtml" title="Interface for NEON tensor.">ITensor</a> pointer. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">index</td><td>The index of the level, such that index is less than levels.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>An <a class="el" href="classarm__compute_1_1_i_tensor.xhtml" title="Interface for NEON tensor.">ITensor</a> pointer </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_pyramid.xhtml#a11ab83492962adab883cb1d0fbdd7af6">IPyramid</a>.</p>

<p class="definition">Definition at line <a class="el" href="_c_l_pyramid_8cpp_source.xhtml#l00123">123</a> of file <a class="el" href="_c_l_pyramid_8cpp_source.xhtml">CLPyramid.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;{</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(index &gt;= _info.<a class="code" href="classarm__compute_1_1_pyramid_info.xhtml#aa2fea6640d2bd5de24d0e0c2433faab6">num_levels</a>());</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    <span class="keywordflow">return</span> &amp;_pyramid[index];</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;}</div><div class="ttc" id="_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00466">Error.h:466</a></div></div>
<div class="ttc" id="classarm__compute_1_1_pyramid_info_xhtml_aa2fea6640d2bd5de24d0e0c2433faab6"><div class="ttname"><a href="classarm__compute_1_1_pyramid_info.xhtml#aa2fea6640d2bd5de24d0e0c2433faab6">arm_compute::PyramidInfo::num_levels</a></div><div class="ttdeci">size_t num_levels() const</div><div class="ttdoc">Return the number of the pyramid levels.</div><div class="ttdef"><b>Definition:</b> <a href="_pyramid_info_8cpp_source.xhtml#l00077">PyramidInfo.cpp:77</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00466">ARM_COMPUTE_ERROR_ON</a>, and <a class="el" href="_pyramid_info_8cpp_source.xhtml#l00077">PyramidInfo::num_levels()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_c_l_laplacian_pyramid_8cpp_source.xhtml#l00050">CLLaplacianPyramid::configure()</a>, <a class="el" href="_c_l_laplacian_reconstruct_8cpp_source.xhtml#l00045">CLLaplacianReconstruct::configure()</a>, <a class="el" href="_c_l_gaussian_pyramid_8cpp_source.xhtml#l00059">CLGaussianPyramidHalf::configure()</a>, <a class="el" href="_c_l_optical_flow_8cpp_source.xhtml#l00060">CLOpticalFlow::configure()</a>, and <a class="el" href="_c_l_gaussian_pyramid_8cpp_source.xhtml#l00139">CLGaussianPyramidOrb::configure()</a>.</p>

</div>
</div>
<a id="a7e9f724340af5b795b21a00d35eeb28e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7e9f724340af5b795b21a00d35eeb28e">&#9670;&nbsp;</a></span>info()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classarm__compute_1_1_pyramid_info.xhtml">PyramidInfo</a> * info </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Interface to be implemented by the child class to return the <a class="el" href="classarm__compute_1_1_pyramid.xhtml" title="Basic implementation of the pyramid interface.">Pyramid</a>'s metadata. </p>
<dl class="section return"><dt>Returns</dt><dd>A pointer to the <a class="el" href="classarm__compute_1_1_pyramid.xhtml" title="Basic implementation of the pyramid interface.">Pyramid</a>'s metadata. </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_pyramid.xhtml#a7114241d28b1d2ebb7b9dba9f1ab0c8b">IPyramid</a>.</p>

<p class="definition">Definition at line <a class="el" href="_c_l_pyramid_8cpp_source.xhtml#l00118">118</a> of file <a class="el" href="_c_l_pyramid_8cpp_source.xhtml">CLPyramid.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;{</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <span class="keywordflow">return</span> &amp;_info;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;}</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_c_l_laplacian_pyramid_8cpp_source.xhtml#l00050">CLLaplacianPyramid::configure()</a>, <a class="el" href="_c_l_laplacian_reconstruct_8cpp_source.xhtml#l00045">CLLaplacianReconstruct::configure()</a>, <a class="el" href="_c_l_gaussian_pyramid_8cpp_source.xhtml#l00059">CLGaussianPyramidHalf::configure()</a>, <a class="el" href="_c_l_optical_flow_8cpp_source.xhtml#l00060">CLOpticalFlow::configure()</a>, <a class="el" href="_c_l_gaussian_pyramid_8cpp_source.xhtml#l00139">CLGaussianPyramidOrb::configure()</a>, <a class="el" href="_c_l_pyramid_8cpp_source.xhtml#l00042">CLPyramid::init()</a>, <a class="el" href="_c_l_pyramid_8cpp_source.xhtml#l00047">CLPyramid::init_auto_padding()</a>, and <a class="el" href="_c_l_laplacian_reconstruct_8cpp_source.xhtml#l00086">CLLaplacianReconstruct::run()</a>.</p>

</div>
</div>
<a id="ae4e11cca76492d63009564d1ea466dff"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae4e11cca76492d63009564d1ea466dff">&#9670;&nbsp;</a></span>init()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void init </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_pyramid_info.xhtml">PyramidInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>info</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initialize pyramid data-object using the given <a class="el" href="classarm__compute_1_1_pyramid.xhtml" title="Basic implementation of the pyramid interface.">Pyramid</a>'s metadata. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">info</td><td><a class="el" href="classarm__compute_1_1_pyramid.xhtml" title="Basic implementation of the pyramid interface.">Pyramid</a>'s metadata </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_c_l_pyramid_8cpp_source.xhtml#l00042">42</a> of file <a class="el" href="_c_l_pyramid_8cpp_source.xhtml">CLPyramid.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;{</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    internal_init(<a class="code" href="classarm__compute_1_1_c_l_pyramid.xhtml#a7e9f724340af5b795b21a00d35eeb28e">info</a>, <span class="keyword">false</span>);</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;}</div><div class="ttc" id="classarm__compute_1_1_c_l_pyramid_xhtml_a7e9f724340af5b795b21a00d35eeb28e"><div class="ttname"><a href="classarm__compute_1_1_c_l_pyramid.xhtml#a7e9f724340af5b795b21a00d35eeb28e">arm_compute::CLPyramid::info</a></div><div class="ttdeci">const PyramidInfo * info() const override</div><div class="ttdoc">Interface to be implemented by the child class to return the Pyramid's metadata.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_pyramid_8cpp_source.xhtml#l00118">CLPyramid.cpp:118</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_c_l_pyramid_8cpp_source.xhtml#l00118">CLPyramid::info()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_c_l_laplacian_pyramid_8cpp_source.xhtml#l00050">CLLaplacianPyramid::configure()</a>, <a class="el" href="_c_l_laplacian_reconstruct_8cpp_source.xhtml#l00045">CLLaplacianReconstruct::configure()</a>, and <a class="el" href="_c_l_2_laplacian_pyramid_8cpp_source.xhtml#l00081">arm_compute::test::validation::DATA_TEST_CASE()</a>.</p>

</div>
</div>
<a id="a0dd473fd109df68b4747ebf0f586a115"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0dd473fd109df68b4747ebf0f586a115">&#9670;&nbsp;</a></span>init_auto_padding()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void init_auto_padding </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_pyramid_info.xhtml">PyramidInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>info</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initialize pyramid data-object using the given <a class="el" href="classarm__compute_1_1_pyramid.xhtml" title="Basic implementation of the pyramid interface.">Pyramid</a>'s metadata. </p>
<dl class="section note"><dt>Note</dt><dd>Uses conservative padding strategy which fits all kernels.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">info</td><td><a class="el" href="classarm__compute_1_1_pyramid.xhtml" title="Basic implementation of the pyramid interface.">Pyramid</a>'s metadata </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_c_l_pyramid_8cpp_source.xhtml#l00047">47</a> of file <a class="el" href="_c_l_pyramid_8cpp_source.xhtml">CLPyramid.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;{</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    internal_init(<a class="code" href="classarm__compute_1_1_c_l_pyramid.xhtml#a7e9f724340af5b795b21a00d35eeb28e">info</a>, <span class="keyword">true</span>);</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;}</div><div class="ttc" id="classarm__compute_1_1_c_l_pyramid_xhtml_a7e9f724340af5b795b21a00d35eeb28e"><div class="ttname"><a href="classarm__compute_1_1_c_l_pyramid.xhtml#a7e9f724340af5b795b21a00d35eeb28e">arm_compute::CLPyramid::info</a></div><div class="ttdeci">const PyramidInfo * info() const override</div><div class="ttdoc">Interface to be implemented by the child class to return the Pyramid's metadata.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_pyramid_8cpp_source.xhtml#l00118">CLPyramid.cpp:118</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_c_l_pyramid_8cpp_source.xhtml#l00118">CLPyramid::info()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>arm_compute/runtime/CL/<a class="el" href="_c_l_pyramid_8h_source.xhtml">CLPyramid.h</a></li>
<li>src/runtime/CL/<a class="el" href="_c_l_pyramid_8cpp_source.xhtml">CLPyramid.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1_c_l_pyramid.xhtml">CLPyramid</a></li>
    <li class="footer">Generated on Thu Mar 5 2020 16:07:12 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
