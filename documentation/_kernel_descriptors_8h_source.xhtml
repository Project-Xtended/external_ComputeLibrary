<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: arm_compute/core/KernelDescriptors.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.02.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_kernel_descriptors_8h_source.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">KernelDescriptors.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_kernel_descriptors_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2019-2020 ARM Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#ifndef ARM_COMPUTE_CORE_KERNEL_DESCRIPTORS_H</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#define ARM_COMPUTE_CORE_KERNEL_DESCRIPTORS_H</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2core_2_types_8h.xhtml">arm_compute/core/Types.h</a>&quot;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;{<span class="comment"></span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="comment">/** Descriptor for FFT scale kernels */</span></div><div class="line"><a name="l00032"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_f_f_t_scale_kernel_info.xhtml">   32</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarm__compute_1_1_f_f_t_scale_kernel_info.xhtml">FFTScaleKernelInfo</a></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;{</div><div class="line"><a name="l00034"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_f_f_t_scale_kernel_info.xhtml#a1d28dec57cce925ad92342891bd71e7c">   34</a></span>&#160;    <span class="keywordtype">float</span> <a class="code" href="structarm__compute_1_1_f_f_t_scale_kernel_info.xhtml#a1d28dec57cce925ad92342891bd71e7c">scale</a>{ 0.f };      <span class="comment">/**&lt; Axis to perform the kernel on. */</span></div><div class="line"><a name="l00035"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_f_f_t_scale_kernel_info.xhtml#a3eedaeae28218786bf093b225accbfe0">   35</a></span>&#160;    <span class="keywordtype">bool</span>  <a class="code" href="structarm__compute_1_1_f_f_t_scale_kernel_info.xhtml#a3eedaeae28218786bf093b225accbfe0">conjugate</a>{ <span class="keyword">true</span> }; <span class="comment">/**&lt; Flag to conjugate the output/ */</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;};</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="comment">/** Descriptor for FFT digit reverse kernels */</span></div><div class="line"><a name="l00039"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_f_f_t_digit_reverse_kernel_info.xhtml">   39</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarm__compute_1_1_f_f_t_digit_reverse_kernel_info.xhtml">FFTDigitReverseKernelInfo</a></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;{</div><div class="line"><a name="l00041"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_f_f_t_digit_reverse_kernel_info.xhtml#a6f637817d19a0cca1f1d984f26958c79">   41</a></span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="structarm__compute_1_1_f_f_t_digit_reverse_kernel_info.xhtml#a6f637817d19a0cca1f1d984f26958c79">axis</a>{ 0 };          <span class="comment">/**&lt; Axis to perform the kernel on. */</span></div><div class="line"><a name="l00042"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_f_f_t_digit_reverse_kernel_info.xhtml#a3eedaeae28218786bf093b225accbfe0">   42</a></span>&#160;    <span class="keywordtype">bool</span>         <a class="code" href="structarm__compute_1_1_f_f_t_digit_reverse_kernel_info.xhtml#a3eedaeae28218786bf093b225accbfe0">conjugate</a>{ <span class="keyword">false</span> }; <span class="comment">/**&lt; Flag to conjugate the output/ */</span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;};</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="comment">/** Descriptor used by the FFT core kernels */</span></div><div class="line"><a name="l00046"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_f_f_t_radix_stage_kernel_info.xhtml">   46</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarm__compute_1_1_f_f_t_radix_stage_kernel_info.xhtml">FFTRadixStageKernelInfo</a></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;{</div><div class="line"><a name="l00048"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_f_f_t_radix_stage_kernel_info.xhtml#a6f637817d19a0cca1f1d984f26958c79">   48</a></span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="structarm__compute_1_1_f_f_t_radix_stage_kernel_info.xhtml#a6f637817d19a0cca1f1d984f26958c79">axis</a>{ 0 };               <span class="comment">/**&lt; Axis to run the kernel on. */</span></div><div class="line"><a name="l00049"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_f_f_t_radix_stage_kernel_info.xhtml#a4cab2bef555152e8653f38257e9fcb5e">   49</a></span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="structarm__compute_1_1_f_f_t_radix_stage_kernel_info.xhtml#a4cab2bef555152e8653f38257e9fcb5e">radix</a>{ 0 };              <span class="comment">/**&lt; Radix to use. */</span></div><div class="line"><a name="l00050"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_f_f_t_radix_stage_kernel_info.xhtml#a42dd423975e5b0e0d9564e5566c9917a">   50</a></span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="structarm__compute_1_1_f_f_t_radix_stage_kernel_info.xhtml#a42dd423975e5b0e0d9564e5566c9917a">Nx</a>{ 0 };                 <span class="comment">/**&lt; Nx coefficient. */</span></div><div class="line"><a name="l00051"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_f_f_t_radix_stage_kernel_info.xhtml#a3f305b6a19c882fc747c346aa7636bb2">   51</a></span>&#160;    <span class="keywordtype">bool</span>         <a class="code" href="structarm__compute_1_1_f_f_t_radix_stage_kernel_info.xhtml#a3f305b6a19c882fc747c346aa7636bb2">is_first_stage</a>{ <span class="keyword">false</span> }; <span class="comment">/**&lt; Flags if the FFT kernels is the first stage of a decomposed FFT. */</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;};</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="comment">/** Descriptor used by the GEMM kernels */</span></div><div class="line"><a name="l00055"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_g_e_m_m_kernel_info.xhtml">   55</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarm__compute_1_1_g_e_m_m_kernel_info.xhtml">GEMMKernelInfo</a></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;{</div><div class="line"><a name="l00057"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_g_e_m_m_kernel_info.xhtml#a4033037df26775dd60840e66d38a08ba">   57</a></span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>        <a class="code" href="structarm__compute_1_1_g_e_m_m_kernel_info.xhtml#a4033037df26775dd60840e66d38a08ba">m</a>{ 0 };                           <span class="comment">/**&lt; Number of LHS rows*/</span></div><div class="line"><a name="l00058"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_g_e_m_m_kernel_info.xhtml#a7d46b74409bd32b539089ef4721ea544">   58</a></span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>        <a class="code" href="structarm__compute_1_1_g_e_m_m_kernel_info.xhtml#a7d46b74409bd32b539089ef4721ea544">n</a>{ 0 };                           <span class="comment">/**&lt; Number of RHS columns*/</span></div><div class="line"><a name="l00059"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_g_e_m_m_kernel_info.xhtml#a90e096a39cfc6da042e02d27a346f2d3">   59</a></span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>        <a class="code" href="structarm__compute_1_1_g_e_m_m_kernel_info.xhtml#a90e096a39cfc6da042e02d27a346f2d3">k</a>{ 0 };                           <span class="comment">/**&lt; Number of LHS columns or RHS rows */</span></div><div class="line"><a name="l00060"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_g_e_m_m_kernel_info.xhtml#a370d5ff7251d8d974c634c9ed0dde094">   60</a></span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>        <a class="code" href="structarm__compute_1_1_g_e_m_m_kernel_info.xhtml#a370d5ff7251d8d974c634c9ed0dde094">depth_output_gemm3d</a>{ 0 };         <span class="comment">/**&lt; Depth of the output tensor in case is reinterpreted as 3D */</span></div><div class="line"><a name="l00061"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_g_e_m_m_kernel_info.xhtml#aba258627772f6f76f644911b027cbab5">   61</a></span>&#160;    <span class="keywordtype">bool</span>                <a class="code" href="structarm__compute_1_1_g_e_m_m_kernel_info.xhtml#aba258627772f6f76f644911b027cbab5">reinterpret_input_as_3d</a>{ <span class="keyword">false</span> }; <span class="comment">/**&lt; Flag used to reinterpret the input as 3D */</span></div><div class="line"><a name="l00062"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_g_e_m_m_kernel_info.xhtml#aab96468aedb59e7a2a19c6eea2f4b055">   62</a></span>&#160;    <span class="keywordtype">bool</span>                <a class="code" href="structarm__compute_1_1_g_e_m_m_kernel_info.xhtml#aab96468aedb59e7a2a19c6eea2f4b055">broadcast_bias</a>{ <span class="keyword">false</span> };          <span class="comment">/**&lt; Flag used to broadcase the bias addition */</span></div><div class="line"><a name="l00063"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_g_e_m_m_kernel_info.xhtml#a31ff0f4153b53a0abfc96250b18b15f1">   63</a></span>&#160;    <span class="keywordtype">bool</span>                <a class="code" href="structarm__compute_1_1_g_e_m_m_kernel_info.xhtml#a31ff0f4153b53a0abfc96250b18b15f1">fp_mixed_precision</a>{ <span class="keyword">false</span> };      <span class="comment">/**&lt; Flag used to indicate wider accumulators (32 bit instead of 16 for FP16). */</span></div><div class="line"><a name="l00064"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_g_e_m_m_kernel_info.xhtml#ad5f55d98fbe268b4eb6225aca14a2403">   64</a></span>&#160;    <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a> <a class="code" href="structarm__compute_1_1_g_e_m_m_kernel_info.xhtml#ad5f55d98fbe268b4eb6225aca14a2403">activation_info</a>{};                <span class="comment">/**&lt; Activation function to perform after the matrix multiplication */</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;};</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="comment">/** Descriptor used by the depthwise convolution kernels */</span></div><div class="line"><a name="l00068"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_d_w_c_kernel_info.xhtml">   68</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarm__compute_1_1_d_w_c_kernel_info.xhtml">DWCKernelInfo</a></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;{</div><div class="line"><a name="l00070"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_d_w_c_kernel_info.xhtml#ad5f55d98fbe268b4eb6225aca14a2403">   70</a></span>&#160;    <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a> <a class="code" href="structarm__compute_1_1_d_w_c_kernel_info.xhtml#ad5f55d98fbe268b4eb6225aca14a2403">activation_info</a>{}; <span class="comment">/**&lt; Activation function to perform after the depthwise convolution */</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;};</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="comment">/** Descriptor used by the depthwise convolution kernels to retrieve the number of output elements processed by each thread */</span></div><div class="line"><a name="l00074"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_d_w_c_weights_kernel_info.xhtml">   74</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarm__compute_1_1_d_w_c_weights_kernel_info.xhtml">DWCWeightsKernelInfo</a></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;{</div><div class="line"><a name="l00076"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_d_w_c_weights_kernel_info.xhtml#ac0c87b58d0d04796c81d8138231dccda">   76</a></span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="structarm__compute_1_1_d_w_c_weights_kernel_info.xhtml#ac0c87b58d0d04796c81d8138231dccda">n0</a>{ 0 }; <span class="comment">/**&lt; Number of columns processed by each thread */</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;};</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="comment">/** Descriptor used by the softmax kernels */</span></div><div class="line"><a name="l00080"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_softmax_kernel_info.xhtml">   80</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarm__compute_1_1_softmax_kernel_info.xhtml">SoftmaxKernelInfo</a></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;{</div><div class="line"><a name="l00082"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_softmax_kernel_info.xhtml#aa773d9a6c0ccefaa0fc9ab66fec68ec1">   82</a></span>&#160;    <span class="keywordtype">float</span>    <a class="code" href="structarm__compute_1_1_softmax_kernel_info.xhtml#aa773d9a6c0ccefaa0fc9ab66fec68ec1">beta</a>{ 1.f };                          <span class="comment">/**&lt; A scaling factor for the exponent with default value 1.0 */</span></div><div class="line"><a name="l00083"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_softmax_kernel_info.xhtml#a5dc2a3a0b94fa51d8bccdd5bec7d6eb0">   83</a></span>&#160;    <span class="keywordtype">bool</span>     <a class="code" href="structarm__compute_1_1_softmax_kernel_info.xhtml#a5dc2a3a0b94fa51d8bccdd5bec7d6eb0">is_log</a>{ <span class="keyword">false</span> };                      <span class="comment">/**&lt; Flag used to perform Log Softmax operation */</span></div><div class="line"><a name="l00084"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_softmax_kernel_info.xhtml#abfa079f56a93e0152cfe85919506fb51">   84</a></span>&#160;    <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</a> <a class="code" href="structarm__compute_1_1_softmax_kernel_info.xhtml#abfa079f56a93e0152cfe85919506fb51">input_data_type</a>{ <a class="code" href="namespacearm__compute.xhtml#a3a440b3893fa10608d4428958be1c52ea696b031073e74bf2cb98e5ef201d4aa3">DataType::UNKNOWN</a> }; <span class="comment">/**&lt; Input tensor data type */</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;};</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="comment">/** Descriptor used by the direct convolution layer output stage kernels */</span></div><div class="line"><a name="l00088"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_direct_convolution_layer_output_stage_kernel_info.xhtml">   88</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarm__compute_1_1_direct_convolution_layer_output_stage_kernel_info.xhtml">DirectConvolutionLayerOutputStageKernelInfo</a></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;{</div><div class="line"><a name="l00090"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_direct_convolution_layer_output_stage_kernel_info.xhtml#ae4848c78e38e13820cc741ad352f15d5">   90</a></span>&#160;    int32_t  <a class="code" href="structarm__compute_1_1_direct_convolution_layer_output_stage_kernel_info.xhtml#ae4848c78e38e13820cc741ad352f15d5">result_fixedpoint_multiplier</a>{ 0 };     <span class="comment">/**&lt; Result output stage multiplier used for quantizing */</span></div><div class="line"><a name="l00091"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_direct_convolution_layer_output_stage_kernel_info.xhtml#a5b56137e993108875451ebf5a7930a3f">   91</a></span>&#160;    int32_t  <a class="code" href="structarm__compute_1_1_direct_convolution_layer_output_stage_kernel_info.xhtml#a5b56137e993108875451ebf5a7930a3f">result_shift</a>{ 0 };                     <span class="comment">/**&lt; Result output stage shift used for quantizing */</span></div><div class="line"><a name="l00092"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_direct_convolution_layer_output_stage_kernel_info.xhtml#aa3136196619ea94a6bbb98f377524e97">   92</a></span>&#160;    int32_t  <a class="code" href="structarm__compute_1_1_direct_convolution_layer_output_stage_kernel_info.xhtml#aa3136196619ea94a6bbb98f377524e97">result_offset_after_shift</a>{ 0 };        <span class="comment">/**&lt; Result offset used for quantizing */</span></div><div class="line"><a name="l00093"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_direct_convolution_layer_output_stage_kernel_info.xhtml#ab233758aca2751c6e71a2f79baf7b92a">   93</a></span>&#160;    <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</a> <a class="code" href="structarm__compute_1_1_direct_convolution_layer_output_stage_kernel_info.xhtml#ab233758aca2751c6e71a2f79baf7b92a">output_data_type</a>{ <a class="code" href="namespacearm__compute.xhtml#a3a440b3893fa10608d4428958be1c52ea696b031073e74bf2cb98e5ef201d4aa3">DataType::UNKNOWN</a> }; <span class="comment">/**&lt; Output tensor data type to use if the output is not initialized */</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;};</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div><div class="line"><a name="l00096"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_instance_normalization_layer_kernel_info.xhtml">   96</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarm__compute_1_1_instance_normalization_layer_kernel_info.xhtml">InstanceNormalizationLayerKernelInfo</a></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;{<span class="comment"></span></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="comment">    /** Default constructor */</span></div><div class="line"><a name="l00099"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_instance_normalization_layer_kernel_info.xhtml#ae1c1e277104fb058e2f764f6d8c1092a">   99</a></span>&#160;    <a class="code" href="structarm__compute_1_1_instance_normalization_layer_kernel_info.xhtml#ae1c1e277104fb058e2f764f6d8c1092a">InstanceNormalizationLayerKernelInfo</a>()</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        : <a class="code" href="structarm__compute_1_1_instance_normalization_layer_kernel_info.xhtml">InstanceNormalizationLayerKernelInfo</a>(1.f, 0.f, 1e-12, true)</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    {</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    }<span class="comment"></span></div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="comment">    /** Constructor</span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="comment">     * @param[in] gamma               The scale scalar value applied to the normalized tensor.</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="comment">     * @param[in] beta                The offset scalar value applied to the normalized tensor</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="comment">     * @param[in] epsilon             Lower bound value for the normalization.</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="comment">     * @param[in] use_mixed_precision Use mixed precision in case of FP16 execution.</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00110"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_instance_normalization_layer_kernel_info.xhtml#adcf8cb8444564ac6fbab2fcf80de5530">  110</a></span>&#160;    <a class="code" href="structarm__compute_1_1_instance_normalization_layer_kernel_info.xhtml#adcf8cb8444564ac6fbab2fcf80de5530">InstanceNormalizationLayerKernelInfo</a>(<span class="keywordtype">float</span> <a class="code" href="structarm__compute_1_1_instance_normalization_layer_kernel_info.xhtml#a44978e15ba7fdb6b664ea10411fbe69d">gamma</a>, <span class="keywordtype">float</span> <a class="code" href="structarm__compute_1_1_instance_normalization_layer_kernel_info.xhtml#aa773d9a6c0ccefaa0fc9ab66fec68ec1">beta</a>, <span class="keywordtype">float</span> <a class="code" href="structarm__compute_1_1_instance_normalization_layer_kernel_info.xhtml#a2dceb63003a97fa431d06d1d07edc449">epsilon</a>, <span class="keywordtype">bool</span> <a class="code" href="structarm__compute_1_1_instance_normalization_layer_kernel_info.xhtml#a4d1ff7c8b87ba9954122a8a09646c5cc">use_mixed_precision</a>)</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        : <a class="code" href="structarm__compute_1_1_instance_normalization_layer_kernel_info.xhtml#a44978e15ba7fdb6b664ea10411fbe69d">gamma</a>(<a class="code" href="structarm__compute_1_1_instance_normalization_layer_kernel_info.xhtml#a44978e15ba7fdb6b664ea10411fbe69d">gamma</a>), <a class="code" href="structarm__compute_1_1_instance_normalization_layer_kernel_info.xhtml#aa773d9a6c0ccefaa0fc9ab66fec68ec1">beta</a>(<a class="code" href="structarm__compute_1_1_instance_normalization_layer_kernel_info.xhtml#aa773d9a6c0ccefaa0fc9ab66fec68ec1">beta</a>), <a class="code" href="structarm__compute_1_1_instance_normalization_layer_kernel_info.xhtml#a2dceb63003a97fa431d06d1d07edc449">epsilon</a>(<a class="code" href="structarm__compute_1_1_instance_normalization_layer_kernel_info.xhtml#a2dceb63003a97fa431d06d1d07edc449">epsilon</a>), <a class="code" href="structarm__compute_1_1_instance_normalization_layer_kernel_info.xhtml#a4d1ff7c8b87ba9954122a8a09646c5cc">use_mixed_precision</a>(<a class="code" href="structarm__compute_1_1_instance_normalization_layer_kernel_info.xhtml#a4d1ff7c8b87ba9954122a8a09646c5cc">use_mixed_precision</a>)</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    {</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    }</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;</div><div class="line"><a name="l00115"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_instance_normalization_layer_kernel_info.xhtml#a44978e15ba7fdb6b664ea10411fbe69d">  115</a></span>&#160;    <span class="keywordtype">float</span> <a class="code" href="structarm__compute_1_1_instance_normalization_layer_kernel_info.xhtml#a44978e15ba7fdb6b664ea10411fbe69d">gamma</a>;               <span class="comment">/**&lt; The scale scalar value applied to the normalized tensor. Defaults to 1.0 */</span></div><div class="line"><a name="l00116"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_instance_normalization_layer_kernel_info.xhtml#aa773d9a6c0ccefaa0fc9ab66fec68ec1">  116</a></span>&#160;    <span class="keywordtype">float</span> <a class="code" href="structarm__compute_1_1_instance_normalization_layer_kernel_info.xhtml#aa773d9a6c0ccefaa0fc9ab66fec68ec1">beta</a>;                <span class="comment">/**&lt; The offset scalar value applied to the normalized tensor. Defaults to 0.0 */</span></div><div class="line"><a name="l00117"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_instance_normalization_layer_kernel_info.xhtml#a2dceb63003a97fa431d06d1d07edc449">  117</a></span>&#160;    <span class="keywordtype">float</span> <a class="code" href="structarm__compute_1_1_instance_normalization_layer_kernel_info.xhtml#a2dceb63003a97fa431d06d1d07edc449">epsilon</a>;             <span class="comment">/**&lt; Lower bound value for the normalization. Defaults to 1e-12 */</span></div><div class="line"><a name="l00118"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_instance_normalization_layer_kernel_info.xhtml#a4d1ff7c8b87ba9954122a8a09646c5cc">  118</a></span>&#160;    <span class="keywordtype">bool</span>  <a class="code" href="structarm__compute_1_1_instance_normalization_layer_kernel_info.xhtml#a4d1ff7c8b87ba9954122a8a09646c5cc">use_mixed_precision</a>; <span class="comment">/**&lt; Use mixed precision in case of FP16 execution. Defaults to true */</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;};</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;} <span class="comment">// namespace arm_compute</span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* ARM_COMPUTE_CORE_KERNEL_DESCRIPTORS_H */</span><span class="preprocessor"></span></div><div class="ttc" id="structarm__compute_1_1_direct_convolution_layer_output_stage_kernel_info_xhtml_ae4848c78e38e13820cc741ad352f15d5"><div class="ttname"><a href="structarm__compute_1_1_direct_convolution_layer_output_stage_kernel_info.xhtml#ae4848c78e38e13820cc741ad352f15d5">arm_compute::DirectConvolutionLayerOutputStageKernelInfo::result_fixedpoint_multiplier</a></div><div class="ttdeci">int32_t result_fixedpoint_multiplier</div><div class="ttdoc">Result output stage multiplier used for quantizing.</div><div class="ttdef"><b>Definition:</b> <a href="_kernel_descriptors_8h_source.xhtml#l00090">KernelDescriptors.h:90</a></div></div>
<div class="ttc" id="structarm__compute_1_1_g_e_m_m_kernel_info_xhtml_aab96468aedb59e7a2a19c6eea2f4b055"><div class="ttname"><a href="structarm__compute_1_1_g_e_m_m_kernel_info.xhtml#aab96468aedb59e7a2a19c6eea2f4b055">arm_compute::GEMMKernelInfo::broadcast_bias</a></div><div class="ttdeci">bool broadcast_bias</div><div class="ttdoc">Flag used to broadcase the bias addition.</div><div class="ttdef"><b>Definition:</b> <a href="_kernel_descriptors_8h_source.xhtml#l00062">KernelDescriptors.h:62</a></div></div>
<div class="ttc" id="structarm__compute_1_1_g_e_m_m_kernel_info_xhtml_a31ff0f4153b53a0abfc96250b18b15f1"><div class="ttname"><a href="structarm__compute_1_1_g_e_m_m_kernel_info.xhtml#a31ff0f4153b53a0abfc96250b18b15f1">arm_compute::GEMMKernelInfo::fp_mixed_precision</a></div><div class="ttdeci">bool fp_mixed_precision</div><div class="ttdoc">Flag used to indicate wider accumulators (32 bit instead of 16 for FP16).</div><div class="ttdef"><b>Definition:</b> <a href="_kernel_descriptors_8h_source.xhtml#l00063">KernelDescriptors.h:63</a></div></div>
<div class="ttc" id="structarm__compute_1_1_g_e_m_m_kernel_info_xhtml"><div class="ttname"><a href="structarm__compute_1_1_g_e_m_m_kernel_info.xhtml">arm_compute::GEMMKernelInfo</a></div><div class="ttdoc">Descriptor used by the GEMM kernels.</div><div class="ttdef"><b>Definition:</b> <a href="_kernel_descriptors_8h_source.xhtml#l00055">KernelDescriptors.h:55</a></div></div>
<div class="ttc" id="structarm__compute_1_1_instance_normalization_layer_kernel_info_xhtml_ae1c1e277104fb058e2f764f6d8c1092a"><div class="ttname"><a href="structarm__compute_1_1_instance_normalization_layer_kernel_info.xhtml#ae1c1e277104fb058e2f764f6d8c1092a">arm_compute::InstanceNormalizationLayerKernelInfo::InstanceNormalizationLayerKernelInfo</a></div><div class="ttdeci">InstanceNormalizationLayerKernelInfo()</div><div class="ttdoc">Default constructor.</div><div class="ttdef"><b>Definition:</b> <a href="_kernel_descriptors_8h_source.xhtml#l00099">KernelDescriptors.h:99</a></div></div>
<div class="ttc" id="structarm__compute_1_1_direct_convolution_layer_output_stage_kernel_info_xhtml_aa3136196619ea94a6bbb98f377524e97"><div class="ttname"><a href="structarm__compute_1_1_direct_convolution_layer_output_stage_kernel_info.xhtml#aa3136196619ea94a6bbb98f377524e97">arm_compute::DirectConvolutionLayerOutputStageKernelInfo::result_offset_after_shift</a></div><div class="ttdeci">int32_t result_offset_after_shift</div><div class="ttdoc">Result offset used for quantizing.</div><div class="ttdef"><b>Definition:</b> <a href="_kernel_descriptors_8h_source.xhtml#l00092">KernelDescriptors.h:92</a></div></div>
<div class="ttc" id="structarm__compute_1_1_d_w_c_weights_kernel_info_xhtml_ac0c87b58d0d04796c81d8138231dccda"><div class="ttname"><a href="structarm__compute_1_1_d_w_c_weights_kernel_info.xhtml#ac0c87b58d0d04796c81d8138231dccda">arm_compute::DWCWeightsKernelInfo::n0</a></div><div class="ttdeci">unsigned int n0</div><div class="ttdoc">Number of columns processed by each thread.</div><div class="ttdef"><b>Definition:</b> <a href="_kernel_descriptors_8h_source.xhtml#l00076">KernelDescriptors.h:76</a></div></div>
<div class="ttc" id="structarm__compute_1_1_softmax_kernel_info_xhtml_aa773d9a6c0ccefaa0fc9ab66fec68ec1"><div class="ttname"><a href="structarm__compute_1_1_softmax_kernel_info.xhtml#aa773d9a6c0ccefaa0fc9ab66fec68ec1">arm_compute::SoftmaxKernelInfo::beta</a></div><div class="ttdeci">float beta</div><div class="ttdoc">A scaling factor for the exponent with default value 1.0.</div><div class="ttdef"><b>Definition:</b> <a href="_kernel_descriptors_8h_source.xhtml#l00082">KernelDescriptors.h:82</a></div></div>
<div class="ttc" id="structarm__compute_1_1_g_e_m_m_kernel_info_xhtml_a370d5ff7251d8d974c634c9ed0dde094"><div class="ttname"><a href="structarm__compute_1_1_g_e_m_m_kernel_info.xhtml#a370d5ff7251d8d974c634c9ed0dde094">arm_compute::GEMMKernelInfo::depth_output_gemm3d</a></div><div class="ttdeci">unsigned int depth_output_gemm3d</div><div class="ttdoc">Depth of the output tensor in case is reinterpreted as 3D.</div><div class="ttdef"><b>Definition:</b> <a href="_kernel_descriptors_8h_source.xhtml#l00060">KernelDescriptors.h:60</a></div></div>
<div class="ttc" id="structarm__compute_1_1_instance_normalization_layer_kernel_info_xhtml_adcf8cb8444564ac6fbab2fcf80de5530"><div class="ttname"><a href="structarm__compute_1_1_instance_normalization_layer_kernel_info.xhtml#adcf8cb8444564ac6fbab2fcf80de5530">arm_compute::InstanceNormalizationLayerKernelInfo::InstanceNormalizationLayerKernelInfo</a></div><div class="ttdeci">InstanceNormalizationLayerKernelInfo(float gamma, float beta, float epsilon, bool use_mixed_precision)</div><div class="ttdoc">Constructor.</div><div class="ttdef"><b>Definition:</b> <a href="_kernel_descriptors_8h_source.xhtml#l00110">KernelDescriptors.h:110</a></div></div>
<div class="ttc" id="structarm__compute_1_1_d_w_c_kernel_info_xhtml_ad5f55d98fbe268b4eb6225aca14a2403"><div class="ttname"><a href="structarm__compute_1_1_d_w_c_kernel_info.xhtml#ad5f55d98fbe268b4eb6225aca14a2403">arm_compute::DWCKernelInfo::activation_info</a></div><div class="ttdeci">ActivationLayerInfo activation_info</div><div class="ttdoc">Activation function to perform after the depthwise convolution.</div><div class="ttdef"><b>Definition:</b> <a href="_kernel_descriptors_8h_source.xhtml#l00070">KernelDescriptors.h:70</a></div></div>
<div class="ttc" id="structarm__compute_1_1_f_f_t_radix_stage_kernel_info_xhtml_a6f637817d19a0cca1f1d984f26958c79"><div class="ttname"><a href="structarm__compute_1_1_f_f_t_radix_stage_kernel_info.xhtml#a6f637817d19a0cca1f1d984f26958c79">arm_compute::FFTRadixStageKernelInfo::axis</a></div><div class="ttdeci">unsigned int axis</div><div class="ttdoc">Axis to run the kernel on.</div><div class="ttdef"><b>Definition:</b> <a href="_kernel_descriptors_8h_source.xhtml#l00048">KernelDescriptors.h:48</a></div></div>
<div class="ttc" id="structarm__compute_1_1_g_e_m_m_kernel_info_xhtml_ad5f55d98fbe268b4eb6225aca14a2403"><div class="ttname"><a href="structarm__compute_1_1_g_e_m_m_kernel_info.xhtml#ad5f55d98fbe268b4eb6225aca14a2403">arm_compute::GEMMKernelInfo::activation_info</a></div><div class="ttdeci">ActivationLayerInfo activation_info</div><div class="ttdoc">Activation function to perform after the matrix multiplication.</div><div class="ttdef"><b>Definition:</b> <a href="_kernel_descriptors_8h_source.xhtml#l00064">KernelDescriptors.h:64</a></div></div>
<div class="ttc" id="classarm__compute_1_1_activation_layer_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_activation_layer_info.xhtml">arm_compute::ActivationLayerInfo</a></div><div class="ttdoc">Activation Layer Information class.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01615">Types.h:1615</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2020 ARM Limited.</div><div class="ttdef"><b>Definition:</b> <a href="00__introduction_8dox_source.xhtml#l00024">00_introduction.dox:24</a></div></div>
<div class="ttc" id="structarm__compute_1_1_instance_normalization_layer_kernel_info_xhtml_a4d1ff7c8b87ba9954122a8a09646c5cc"><div class="ttname"><a href="structarm__compute_1_1_instance_normalization_layer_kernel_info.xhtml#a4d1ff7c8b87ba9954122a8a09646c5cc">arm_compute::InstanceNormalizationLayerKernelInfo::use_mixed_precision</a></div><div class="ttdeci">bool use_mixed_precision</div><div class="ttdoc">Use mixed precision in case of FP16 execution.</div><div class="ttdef"><b>Definition:</b> <a href="_kernel_descriptors_8h_source.xhtml#l00118">KernelDescriptors.h:118</a></div></div>
<div class="ttc" id="structarm__compute_1_1_g_e_m_m_kernel_info_xhtml_a4033037df26775dd60840e66d38a08ba"><div class="ttname"><a href="structarm__compute_1_1_g_e_m_m_kernel_info.xhtml#a4033037df26775dd60840e66d38a08ba">arm_compute::GEMMKernelInfo::m</a></div><div class="ttdeci">unsigned int m</div><div class="ttdoc">Number of LHS rows.</div><div class="ttdef"><b>Definition:</b> <a href="_kernel_descriptors_8h_source.xhtml#l00057">KernelDescriptors.h:57</a></div></div>
<div class="ttc" id="structarm__compute_1_1_g_e_m_m_kernel_info_xhtml_a7d46b74409bd32b539089ef4721ea544"><div class="ttname"><a href="structarm__compute_1_1_g_e_m_m_kernel_info.xhtml#a7d46b74409bd32b539089ef4721ea544">arm_compute::GEMMKernelInfo::n</a></div><div class="ttdeci">unsigned int n</div><div class="ttdoc">Number of RHS columns.</div><div class="ttdef"><b>Definition:</b> <a href="_kernel_descriptors_8h_source.xhtml#l00058">KernelDescriptors.h:58</a></div></div>
<div class="ttc" id="structarm__compute_1_1_f_f_t_digit_reverse_kernel_info_xhtml_a3eedaeae28218786bf093b225accbfe0"><div class="ttname"><a href="structarm__compute_1_1_f_f_t_digit_reverse_kernel_info.xhtml#a3eedaeae28218786bf093b225accbfe0">arm_compute::FFTDigitReverseKernelInfo::conjugate</a></div><div class="ttdeci">bool conjugate</div><div class="ttdoc">Flag to conjugate the output/.</div><div class="ttdef"><b>Definition:</b> <a href="_kernel_descriptors_8h_source.xhtml#l00042">KernelDescriptors.h:42</a></div></div>
<div class="ttc" id="structarm__compute_1_1_softmax_kernel_info_xhtml_abfa079f56a93e0152cfe85919506fb51"><div class="ttname"><a href="structarm__compute_1_1_softmax_kernel_info.xhtml#abfa079f56a93e0152cfe85919506fb51">arm_compute::SoftmaxKernelInfo::input_data_type</a></div><div class="ttdeci">DataType input_data_type</div><div class="ttdoc">Input tensor data type.</div><div class="ttdef"><b>Definition:</b> <a href="_kernel_descriptors_8h_source.xhtml#l00084">KernelDescriptors.h:84</a></div></div>
<div class="ttc" id="structarm__compute_1_1_softmax_kernel_info_xhtml_a5dc2a3a0b94fa51d8bccdd5bec7d6eb0"><div class="ttname"><a href="structarm__compute_1_1_softmax_kernel_info.xhtml#a5dc2a3a0b94fa51d8bccdd5bec7d6eb0">arm_compute::SoftmaxKernelInfo::is_log</a></div><div class="ttdeci">bool is_log</div><div class="ttdoc">Flag used to perform Log Softmax operation.</div><div class="ttdef"><b>Definition:</b> <a href="_kernel_descriptors_8h_source.xhtml#l00083">KernelDescriptors.h:83</a></div></div>
<div class="ttc" id="structarm__compute_1_1_d_w_c_kernel_info_xhtml"><div class="ttname"><a href="structarm__compute_1_1_d_w_c_kernel_info.xhtml">arm_compute::DWCKernelInfo</a></div><div class="ttdoc">Descriptor used by the depthwise convolution kernels.</div><div class="ttdef"><b>Definition:</b> <a href="_kernel_descriptors_8h_source.xhtml#l00068">KernelDescriptors.h:68</a></div></div>
<div class="ttc" id="structarm__compute_1_1_f_f_t_radix_stage_kernel_info_xhtml"><div class="ttname"><a href="structarm__compute_1_1_f_f_t_radix_stage_kernel_info.xhtml">arm_compute::FFTRadixStageKernelInfo</a></div><div class="ttdoc">Descriptor used by the FFT core kernels.</div><div class="ttdef"><b>Definition:</b> <a href="_kernel_descriptors_8h_source.xhtml#l00046">KernelDescriptors.h:46</a></div></div>
<div class="ttc" id="structarm__compute_1_1_g_e_m_m_kernel_info_xhtml_aba258627772f6f76f644911b027cbab5"><div class="ttname"><a href="structarm__compute_1_1_g_e_m_m_kernel_info.xhtml#aba258627772f6f76f644911b027cbab5">arm_compute::GEMMKernelInfo::reinterpret_input_as_3d</a></div><div class="ttdeci">bool reinterpret_input_as_3d</div><div class="ttdoc">Flag used to reinterpret the input as 3D.</div><div class="ttdef"><b>Definition:</b> <a href="_kernel_descriptors_8h_source.xhtml#l00061">KernelDescriptors.h:61</a></div></div>
<div class="ttc" id="structarm__compute_1_1_f_f_t_scale_kernel_info_xhtml"><div class="ttname"><a href="structarm__compute_1_1_f_f_t_scale_kernel_info.xhtml">arm_compute::FFTScaleKernelInfo</a></div><div class="ttdoc">Descriptor for FFT scale kernels.</div><div class="ttdef"><b>Definition:</b> <a href="_kernel_descriptors_8h_source.xhtml#l00032">KernelDescriptors.h:32</a></div></div>
<div class="ttc" id="structarm__compute_1_1_d_w_c_weights_kernel_info_xhtml"><div class="ttname"><a href="structarm__compute_1_1_d_w_c_weights_kernel_info.xhtml">arm_compute::DWCWeightsKernelInfo</a></div><div class="ttdoc">Descriptor used by the depthwise convolution kernels to retrieve the number of output elements proces...</div><div class="ttdef"><b>Definition:</b> <a href="_kernel_descriptors_8h_source.xhtml#l00074">KernelDescriptors.h:74</a></div></div>
<div class="ttc" id="structarm__compute_1_1_instance_normalization_layer_kernel_info_xhtml"><div class="ttname"><a href="structarm__compute_1_1_instance_normalization_layer_kernel_info.xhtml">arm_compute::InstanceNormalizationLayerKernelInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_kernel_descriptors_8h_source.xhtml#l00096">KernelDescriptors.h:96</a></div></div>
<div class="ttc" id="structarm__compute_1_1_f_f_t_digit_reverse_kernel_info_xhtml_a6f637817d19a0cca1f1d984f26958c79"><div class="ttname"><a href="structarm__compute_1_1_f_f_t_digit_reverse_kernel_info.xhtml#a6f637817d19a0cca1f1d984f26958c79">arm_compute::FFTDigitReverseKernelInfo::axis</a></div><div class="ttdeci">unsigned int axis</div><div class="ttdoc">Axis to perform the kernel on.</div><div class="ttdef"><b>Definition:</b> <a href="_kernel_descriptors_8h_source.xhtml#l00041">KernelDescriptors.h:41</a></div></div>
<div class="ttc" id="structarm__compute_1_1_instance_normalization_layer_kernel_info_xhtml_a2dceb63003a97fa431d06d1d07edc449"><div class="ttname"><a href="structarm__compute_1_1_instance_normalization_layer_kernel_info.xhtml#a2dceb63003a97fa431d06d1d07edc449">arm_compute::InstanceNormalizationLayerKernelInfo::epsilon</a></div><div class="ttdeci">float epsilon</div><div class="ttdoc">Lower bound value for the normalization.</div><div class="ttdef"><b>Definition:</b> <a href="_kernel_descriptors_8h_source.xhtml#l00117">KernelDescriptors.h:117</a></div></div>
<div class="ttc" id="structarm__compute_1_1_f_f_t_radix_stage_kernel_info_xhtml_a4cab2bef555152e8653f38257e9fcb5e"><div class="ttname"><a href="structarm__compute_1_1_f_f_t_radix_stage_kernel_info.xhtml#a4cab2bef555152e8653f38257e9fcb5e">arm_compute::FFTRadixStageKernelInfo::radix</a></div><div class="ttdeci">unsigned int radix</div><div class="ttdoc">Radix to use.</div><div class="ttdef"><b>Definition:</b> <a href="_kernel_descriptors_8h_source.xhtml#l00049">KernelDescriptors.h:49</a></div></div>
<div class="ttc" id="structarm__compute_1_1_f_f_t_radix_stage_kernel_info_xhtml_a3f305b6a19c882fc747c346aa7636bb2"><div class="ttname"><a href="structarm__compute_1_1_f_f_t_radix_stage_kernel_info.xhtml#a3f305b6a19c882fc747c346aa7636bb2">arm_compute::FFTRadixStageKernelInfo::is_first_stage</a></div><div class="ttdeci">bool is_first_stage</div><div class="ttdoc">Flags if the FFT kernels is the first stage of a decomposed FFT.</div><div class="ttdef"><b>Definition:</b> <a href="_kernel_descriptors_8h_source.xhtml#l00051">KernelDescriptors.h:51</a></div></div>
<div class="ttc" id="structarm__compute_1_1_f_f_t_digit_reverse_kernel_info_xhtml"><div class="ttname"><a href="structarm__compute_1_1_f_f_t_digit_reverse_kernel_info.xhtml">arm_compute::FFTDigitReverseKernelInfo</a></div><div class="ttdoc">Descriptor for FFT digit reverse kernels.</div><div class="ttdef"><b>Definition:</b> <a href="_kernel_descriptors_8h_source.xhtml#l00039">KernelDescriptors.h:39</a></div></div>
<div class="ttc" id="structarm__compute_1_1_f_f_t_radix_stage_kernel_info_xhtml_a42dd423975e5b0e0d9564e5566c9917a"><div class="ttname"><a href="structarm__compute_1_1_f_f_t_radix_stage_kernel_info.xhtml#a42dd423975e5b0e0d9564e5566c9917a">arm_compute::FFTRadixStageKernelInfo::Nx</a></div><div class="ttdeci">unsigned int Nx</div><div class="ttdoc">Nx coefficient.</div><div class="ttdef"><b>Definition:</b> <a href="_kernel_descriptors_8h_source.xhtml#l00050">KernelDescriptors.h:50</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a3a440b3893fa10608d4428958be1c52ea696b031073e74bf2cb98e5ef201d4aa3"><div class="ttname"><a href="namespacearm__compute.xhtml#a3a440b3893fa10608d4428958be1c52ea696b031073e74bf2cb98e5ef201d4aa3">arm_compute::CLVersion::UNKNOWN</a></div></div>
<div class="ttc" id="structarm__compute_1_1_instance_normalization_layer_kernel_info_xhtml_a44978e15ba7fdb6b664ea10411fbe69d"><div class="ttname"><a href="structarm__compute_1_1_instance_normalization_layer_kernel_info.xhtml#a44978e15ba7fdb6b664ea10411fbe69d">arm_compute::InstanceNormalizationLayerKernelInfo::gamma</a></div><div class="ttdeci">float gamma</div><div class="ttdoc">The scale scalar value applied to the normalized tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_kernel_descriptors_8h_source.xhtml#l00115">KernelDescriptors.h:115</a></div></div>
<div class="ttc" id="structarm__compute_1_1_direct_convolution_layer_output_stage_kernel_info_xhtml_ab233758aca2751c6e71a2f79baf7b92a"><div class="ttname"><a href="structarm__compute_1_1_direct_convolution_layer_output_stage_kernel_info.xhtml#ab233758aca2751c6e71a2f79baf7b92a">arm_compute::DirectConvolutionLayerOutputStageKernelInfo::output_data_type</a></div><div class="ttdeci">DataType output_data_type</div><div class="ttdoc">Output tensor data type to use if the output is not initialized.</div><div class="ttdef"><b>Definition:</b> <a href="_kernel_descriptors_8h_source.xhtml#l00093">KernelDescriptors.h:93</a></div></div>
<div class="ttc" id="structarm__compute_1_1_g_e_m_m_kernel_info_xhtml_a90e096a39cfc6da042e02d27a346f2d3"><div class="ttname"><a href="structarm__compute_1_1_g_e_m_m_kernel_info.xhtml#a90e096a39cfc6da042e02d27a346f2d3">arm_compute::GEMMKernelInfo::k</a></div><div class="ttdeci">unsigned int k</div><div class="ttdoc">Number of LHS columns or RHS rows.</div><div class="ttdef"><b>Definition:</b> <a href="_kernel_descriptors_8h_source.xhtml#l00059">KernelDescriptors.h:59</a></div></div>
<div class="ttc" id="structarm__compute_1_1_f_f_t_scale_kernel_info_xhtml_a1d28dec57cce925ad92342891bd71e7c"><div class="ttname"><a href="structarm__compute_1_1_f_f_t_scale_kernel_info.xhtml#a1d28dec57cce925ad92342891bd71e7c">arm_compute::FFTScaleKernelInfo::scale</a></div><div class="ttdeci">float scale</div><div class="ttdoc">Axis to perform the kernel on.</div><div class="ttdef"><b>Definition:</b> <a href="_kernel_descriptors_8h_source.xhtml#l00034">KernelDescriptors.h:34</a></div></div>
<div class="ttc" id="structarm__compute_1_1_softmax_kernel_info_xhtml"><div class="ttname"><a href="structarm__compute_1_1_softmax_kernel_info.xhtml">arm_compute::SoftmaxKernelInfo</a></div><div class="ttdoc">Descriptor used by the softmax kernels.</div><div class="ttdef"><b>Definition:</b> <a href="_kernel_descriptors_8h_source.xhtml#l00080">KernelDescriptors.h:80</a></div></div>
<div class="ttc" id="arm__compute_2core_2_types_8h_xhtml"><div class="ttname"><a href="arm__compute_2core_2_types_8h.xhtml">Types.h</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">arm_compute::DataType</a></div><div class="ttdeci">DataType</div><div class="ttdoc">Available data types.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00075">Types.h:75</a></div></div>
<div class="ttc" id="structarm__compute_1_1_instance_normalization_layer_kernel_info_xhtml_aa773d9a6c0ccefaa0fc9ab66fec68ec1"><div class="ttname"><a href="structarm__compute_1_1_instance_normalization_layer_kernel_info.xhtml#aa773d9a6c0ccefaa0fc9ab66fec68ec1">arm_compute::InstanceNormalizationLayerKernelInfo::beta</a></div><div class="ttdeci">float beta</div><div class="ttdoc">The offset scalar value applied to the normalized tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_kernel_descriptors_8h_source.xhtml#l00116">KernelDescriptors.h:116</a></div></div>
<div class="ttc" id="structarm__compute_1_1_direct_convolution_layer_output_stage_kernel_info_xhtml"><div class="ttname"><a href="structarm__compute_1_1_direct_convolution_layer_output_stage_kernel_info.xhtml">arm_compute::DirectConvolutionLayerOutputStageKernelInfo</a></div><div class="ttdoc">Descriptor used by the direct convolution layer output stage kernels.</div><div class="ttdef"><b>Definition:</b> <a href="_kernel_descriptors_8h_source.xhtml#l00088">KernelDescriptors.h:88</a></div></div>
<div class="ttc" id="structarm__compute_1_1_f_f_t_scale_kernel_info_xhtml_a3eedaeae28218786bf093b225accbfe0"><div class="ttname"><a href="structarm__compute_1_1_f_f_t_scale_kernel_info.xhtml#a3eedaeae28218786bf093b225accbfe0">arm_compute::FFTScaleKernelInfo::conjugate</a></div><div class="ttdeci">bool conjugate</div><div class="ttdoc">Flag to conjugate the output/.</div><div class="ttdef"><b>Definition:</b> <a href="_kernel_descriptors_8h_source.xhtml#l00035">KernelDescriptors.h:35</a></div></div>
<div class="ttc" id="structarm__compute_1_1_direct_convolution_layer_output_stage_kernel_info_xhtml_a5b56137e993108875451ebf5a7930a3f"><div class="ttname"><a href="structarm__compute_1_1_direct_convolution_layer_output_stage_kernel_info.xhtml#a5b56137e993108875451ebf5a7930a3f">arm_compute::DirectConvolutionLayerOutputStageKernelInfo::result_shift</a></div><div class="ttdeci">int32_t result_shift</div><div class="ttdoc">Result output stage shift used for quantizing.</div><div class="ttdef"><b>Definition:</b> <a href="_kernel_descriptors_8h_source.xhtml#l00091">KernelDescriptors.h:91</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_214608ef36d61442cb2b0c1c4e9a7def.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="dir_1fb090f0c6070330bfaccc4236d3ca0d.xhtml">core</a></li><li class="navelem"><a class="el" href="_kernel_descriptors_8h.xhtml">KernelDescriptors.h</a></li>
    <li class="footer">Generated on Thu Mar 5 2020 16:06:54 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
