<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: arm_compute/runtime/GLES_COMPUTE/functions/GCGEMM.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_g_c_g_e_m_m_8h_source.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">GCGEMM.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_g_c_g_e_m_m_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2017-2019 ARM Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#ifndef ARM_COMPUTE_GCGEMM_H</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#define ARM_COMPUTE_GCGEMM_H</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_g_c_g_e_m_m_interleave4x4_kernel_8h.xhtml">arm_compute/core/GLES_COMPUTE/kernels/GCGEMMInterleave4x4Kernel.h</a>&quot;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_g_c_g_e_m_m_matrix_addition_kernel_8h.xhtml">arm_compute/core/GLES_COMPUTE/kernels/GCGEMMMatrixAdditionKernel.h</a>&quot;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_g_c_g_e_m_m_matrix_multiply_kernel_8h.xhtml">arm_compute/core/GLES_COMPUTE/kernels/GCGEMMMatrixMultiplyKernel.h</a>&quot;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_g_c_g_e_m_m_transpose1x_w_kernel_8h.xhtml">arm_compute/core/GLES_COMPUTE/kernels/GCGEMMTranspose1xWKernel.h</a>&quot;</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_g_c_tensor_8h.xhtml">arm_compute/runtime/GLES_COMPUTE/GCTensor.h</a>&quot;</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_i_function_8h.xhtml">arm_compute/runtime/IFunction.h</a>&quot;</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_memory_group_8h.xhtml">arm_compute/runtime/MemoryGroup.h</a>&quot;</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;{</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keyword">class </span>IGCTensor;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="comment">/** Basic function to execute GEMM on OpenGLES Compute. This function calls the following kernels:</span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="comment"> *  -# @ref GCGEMMInterleave4x4Kernel (if the output tensor is a matrix)</span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="comment"> *  -# @ref GCGEMMTranspose1xWKernel (if the output tensor is a matrix)</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="comment"> *  -# @ref GCGEMMMatrixMultiplyKernel</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="comment"> *  -# @ref GCGEMMMatrixAdditionKernel (if c != nullptr and beta != 0.0)</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00048"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_g_c_g_e_m_m.xhtml">   48</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1_g_c_g_e_m_m.xhtml">GCGEMM</a> : <span class="keyword">public</span> <a class="code" href="classarm__compute_1_1_i_function.xhtml">IFunction</a></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;{</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="keyword">public</span>:<span class="comment"></span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="comment">    /** Default constructor. */</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <a class="code" href="classarm__compute_1_1_g_c_g_e_m_m.xhtml#a0594de1f88abc329c5cc8df318cca6c4">GCGEMM</a>(std::shared_ptr&lt;IMemoryManager&gt; memory_manager = <span class="keyword">nullptr</span>);<span class="comment"></span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="comment">    /** Prevent instances of this class from being copied (As this class contains pointers) */</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <a class="code" href="classarm__compute_1_1_g_c_g_e_m_m.xhtml#a0594de1f88abc329c5cc8df318cca6c4">GCGEMM</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_g_c_g_e_m_m.xhtml">GCGEMM</a> &amp;) = <span class="keyword">delete</span>;<span class="comment"></span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="comment">    /** Default move constructor */</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    <a class="code" href="classarm__compute_1_1_g_c_g_e_m_m.xhtml#a0594de1f88abc329c5cc8df318cca6c4">GCGEMM</a>(<a class="code" href="classarm__compute_1_1_g_c_g_e_m_m.xhtml">GCGEMM</a> &amp;&amp;) = <span class="keywordflow">default</span>;<span class="comment"></span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="comment">    /** Prevent instances of this class from being copied (As this class contains pointers) */</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <a class="code" href="classarm__compute_1_1_g_c_g_e_m_m.xhtml">GCGEMM</a> &amp;<a class="code" href="classarm__compute_1_1_g_c_g_e_m_m.xhtml#a40c629523cd60defececec852c96bde9">operator=</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_g_c_g_e_m_m.xhtml">GCGEMM</a> &amp;) = <span class="keyword">delete</span>;<span class="comment"></span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="comment">    /** Default move assignment operator */</span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    <a class="code" href="classarm__compute_1_1_g_c_g_e_m_m.xhtml">GCGEMM</a> &amp;<a class="code" href="classarm__compute_1_1_g_c_g_e_m_m.xhtml#a40c629523cd60defececec852c96bde9">operator=</a>(<a class="code" href="classarm__compute_1_1_g_c_g_e_m_m.xhtml">GCGEMM</a> &amp;&amp;) = <span class="keywordflow">default</span>;<span class="comment"></span></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="comment">    /** Initialise the kernel&#39;s inputs and output</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="comment">     * @note GEMM: General Matrix Multiply - [alpha * A * B + beta * C].</span></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="comment">     * @note All tensors must have the same data type.</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="comment">     * @note Whilst the first input tensor can be a vector, the second input tensor must be at least a matrix</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="comment">     * @param[in]  a         First input tensor  (Matrix or Vector A). Data types supported: F32</span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="comment">     * @param[in]  b         Second input tensor (Matrix B). Data type supported: same as @p a.</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="comment">     * @param[in]  c         Third input tensor  (Matrix C). It can be a nullptr if just the multiplication between @p a and @p b is needed. Data type supported: same as @p a.</span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="comment">     * @param[out] output    Output tensor. Data type supported: same as @p a</span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="comment">     * @param[in]  alpha     Weight of the matrix product</span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="comment">     * @param[in]  beta      Weight of matrix C</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="comment">     * @param[in]  gemm_info (Optional) Specifies if the matrix A and/or matrix B have been reshaped and</span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="comment">     *                       if the reshape of matrix B should happen only for the first run</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_g_c_g_e_m_m.xhtml#a8184f9bf2e8f4fdc16cfe7812e229d95">configure</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_g_c_tensor.xhtml">IGCTensor</a> *a, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_g_c_tensor.xhtml">IGCTensor</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_g_c_tensor.xhtml">IGCTensor</a> *c, <a class="code" href="classarm__compute_1_1_i_g_c_tensor.xhtml">IGCTensor</a> *output, <span class="keywordtype">float</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3161c2c93c655dd30953372064ec627b">alpha</a>, <span class="keywordtype">float</span> beta, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_g_e_m_m_info.xhtml">GEMMInfo</a> &amp;gemm_info = <a class="code" href="classarm__compute_1_1_g_e_m_m_info.xhtml">GEMMInfo</a>());<span class="comment"></span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="comment">    /** Static function to check if given info will lead to a valid configuration of @ref GCGEMM.</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="comment">     * @param[in]  a         First input tensor  (Matrix or Vector A). Data types supported: F16/F32</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="comment">     * @param[in]  b         Second input tensor (Matrix B). Data type supported: same as @p a.</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="comment">     * @param[in]  c         Third input tensor  (Matrix C). It can be a nullptr if just the multiplication between @p a and @p b is needed. Data type supported: same as @p a.</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="comment">     * @param[out] output    Output tensor. Data type supported: same as @p a</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="comment">     * @param[in]  alpha     Weight of the matrix product</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="comment">     * @param[in]  beta      Weight of matrix C</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="comment">     * @param[in]  gemm_info (Optional) Specifies if the matrix A and/or matrix B have been reshaped and</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="comment">     *                       if the reshape of matrix B should happen only for the first run</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="comment">     * @return a status</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <span class="keyword">static</span> <a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> <a class="code" href="classarm__compute_1_1_g_c_g_e_m_m.xhtml#a79dcdcd8851f3c170ff581e993364fbd">validate</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *a, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_g_c_tensor.xhtml">IGCTensor</a> *c, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *output, <span class="keyword">const</span> <span class="keywordtype">float</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3161c2c93c655dd30953372064ec627b">alpha</a>, <span class="keyword">const</span> <span class="keywordtype">float</span> beta, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_g_e_m_m_info.xhtml">GEMMInfo</a> &amp;gemm_info = <a class="code" href="classarm__compute_1_1_g_e_m_m_info.xhtml">GEMMInfo</a>());</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <span class="comment">// Inherited methods overridden:</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_g_c_g_e_m_m.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>() <span class="keyword">override</span>;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_g_c_g_e_m_m.xhtml#aa9b93ef660fc3c5b4b19d3fc7b891b77">prepare</a>() <span class="keyword">override</span>;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <a class="code" href="classarm__compute_1_1_memory_group.xhtml">MemoryGroup</a>                _memory_group;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <a class="code" href="classarm__compute_1_1_g_c_g_e_m_m_interleave4x4_kernel.xhtml">GCGEMMInterleave4x4Kernel</a>  _interleave_kernel;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    <a class="code" href="classarm__compute_1_1_g_c_g_e_m_m_transpose1x_w_kernel.xhtml">GCGEMMTranspose1xWKernel</a>   _transpose_kernel;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <a class="code" href="classarm__compute_1_1_g_c_g_e_m_m_matrix_multiply_kernel.xhtml">GCGEMMMatrixMultiplyKernel</a> _mm_kernel;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    <a class="code" href="classarm__compute_1_1_g_c_g_e_m_m_matrix_addition_kernel.xhtml">GCGEMMMatrixAdditionKernel</a> _ma_kernel;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <a class="code" href="classarm__compute_1_1_g_c_tensor.xhtml">GCTensor</a>                   _tmp_a;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <a class="code" href="classarm__compute_1_1_g_c_tensor.xhtml">GCTensor</a>                   _tmp_b;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_g_c_tensor.xhtml">IGCTensor</a>           *_original_b;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <span class="keywordtype">bool</span>                       _is_interleaved_transposed;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <span class="keywordtype">bool</span>                       _run_addition;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    <span class="keywordtype">bool</span>                       _reshape_b_only_on_first_run;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    <span class="keywordtype">bool</span>                       _is_prepared;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;};</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;}</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* ARM_COMPUTE_GCGEMM_H */</span><span class="preprocessor"></span></div><div class="ttc" id="classarm__compute_1_1_memory_group_xhtml"><div class="ttname"><a href="classarm__compute_1_1_memory_group.xhtml">arm_compute::MemoryGroup</a></div><div class="ttdoc">Memory group.</div><div class="ttdef"><b>Definition:</b> <a href="_memory_group_8h_source.xhtml#l00043">MemoryGroup.h:43</a></div></div>
<div class="ttc" id="_g_c_g_e_m_m_matrix_addition_kernel_8h_xhtml"><div class="ttname"><a href="_g_c_g_e_m_m_matrix_addition_kernel_8h.xhtml">GCGEMMMatrixAdditionKernel.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_function_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_function.xhtml">arm_compute::IFunction</a></div><div class="ttdoc">Base class for all functions.</div><div class="ttdef"><b>Definition:</b> <a href="_i_function_8h_source.xhtml#l00030">IFunction.h:30</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_aa76b4a6e74940dabc5b7fc6b2dab3545"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">arm_compute::test::validation::b</a></div><div class="ttdeci">SimpleTensor&lt; float &gt; b</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00157">DFT.cpp:157</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_c_g_e_m_m_xhtml_ad1717410afd0be936c6213a63c8005fb"><div class="ttname"><a href="classarm__compute_1_1_g_c_g_e_m_m.xhtml#ad1717410afd0be936c6213a63c8005fb">arm_compute::GCGEMM::run</a></div><div class="ttdeci">void run() override</div><div class="ttdoc">Run the kernels contained in the function.</div><div class="ttdef"><b>Definition:</b> <a href="_g_c_g_e_m_m_8cpp_source.xhtml#l00161">GCGEMM.cpp:161</a></div></div>
<div class="ttc" id="_g_c_g_e_m_m_matrix_multiply_kernel_8h_xhtml"><div class="ttname"><a href="_g_c_g_e_m_m_matrix_multiply_kernel_8h.xhtml">GCGEMMMatrixMultiplyKernel.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml">arm_compute::ITensorInfo</a></div><div class="ttdoc">Store the tensor's metadata.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_info_8h_source.xhtml#l00040">ITensorInfo.h:40</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_g_c_tensor_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_g_c_tensor.xhtml">arm_compute::IGCTensor</a></div><div class="ttdoc">Interface for GLES Compute tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_i_g_c_tensor_8h_source.xhtml#l00035">IGCTensor.h:35</a></div></div>
<div class="ttc" id="classarm__compute_1_1_status_xhtml"><div class="ttname"><a href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a></div><div class="ttdoc">Status class.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00052">Error.h:52</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_c_g_e_m_m_matrix_addition_kernel_xhtml"><div class="ttname"><a href="classarm__compute_1_1_g_c_g_e_m_m_matrix_addition_kernel.xhtml">arm_compute::GCGEMMMatrixAdditionKernel</a></div><div class="ttdoc">OpenGL ES kernel to perform the in-place matrix addition between 2 matrices, taking into account that...</div><div class="ttdef"><b>Definition:</b> <a href="_g_c_g_e_m_m_matrix_addition_kernel_8h_source.xhtml#l00038">GCGEMMMatrixAdditionKernel.h:38</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_c_tensor_xhtml"><div class="ttname"><a href="classarm__compute_1_1_g_c_tensor.xhtml">arm_compute::GCTensor</a></div><div class="ttdoc">Interface for OpenGL ES tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_g_c_tensor_8h_source.xhtml#l00038">GCTensor.h:38</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2020 ARM Limited.</div><div class="ttdef"><b>Definition:</b> <a href="00__introduction_8dox_source.xhtml#l00024">00_introduction.dox:24</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_c_g_e_m_m_transpose1x_w_kernel_xhtml"><div class="ttname"><a href="classarm__compute_1_1_g_c_g_e_m_m_transpose1x_w_kernel.xhtml">arm_compute::GCGEMMTranspose1xWKernel</a></div><div class="ttdoc">OpenGLES kernel which transposes the elements of a matrix in chunks of 1xW, where W is equal to (16 /...</div><div class="ttdef"><b>Definition:</b> <a href="_g_c_g_e_m_m_transpose1x_w_kernel_8h_source.xhtml#l00053">GCGEMMTranspose1xWKernel.h:53</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_c_g_e_m_m_xhtml_a0594de1f88abc329c5cc8df318cca6c4"><div class="ttname"><a href="classarm__compute_1_1_g_c_g_e_m_m.xhtml#a0594de1f88abc329c5cc8df318cca6c4">arm_compute::GCGEMM::GCGEMM</a></div><div class="ttdeci">GCGEMM(std::shared_ptr&lt; IMemoryManager &gt; memory_manager=nullptr)</div><div class="ttdoc">Default constructor.</div><div class="ttdef"><b>Definition:</b> <a href="_g_c_g_e_m_m_8cpp_source.xhtml#l00075">GCGEMM.cpp:75</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_c_g_e_m_m_xhtml_a79dcdcd8851f3c170ff581e993364fbd"><div class="ttname"><a href="classarm__compute_1_1_g_c_g_e_m_m.xhtml#a79dcdcd8851f3c170ff581e993364fbd">arm_compute::GCGEMM::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *a, const ITensorInfo *b, const IGCTensor *c, const ITensorInfo *output, const float alpha, const float beta, const GEMMInfo &amp;gemm_info=GEMMInfo())</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration of GCGEMM.</div><div class="ttdef"><b>Definition:</b> <a href="_g_c_g_e_m_m_8cpp_source.xhtml#l00155">GCGEMM.cpp:155</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a3161c2c93c655dd30953372064ec627b"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a3161c2c93c655dd30953372064ec627b">arm_compute::test::validation::alpha</a></div><div class="ttdeci">const float alpha</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_o_n_2_accumulate_8cpp_source.xhtml#l00103">Accumulate.cpp:103</a></div></div>
<div class="ttc" id="_memory_group_8h_xhtml"><div class="ttname"><a href="_memory_group_8h.xhtml">MemoryGroup.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_c_g_e_m_m_xhtml_aa9b93ef660fc3c5b4b19d3fc7b891b77"><div class="ttname"><a href="classarm__compute_1_1_g_c_g_e_m_m.xhtml#aa9b93ef660fc3c5b4b19d3fc7b891b77">arm_compute::GCGEMM::prepare</a></div><div class="ttdeci">void prepare() override</div><div class="ttdoc">Prepare the function for executing.</div><div class="ttdef"><b>Definition:</b> <a href="_g_c_g_e_m_m_8cpp_source.xhtml#l00192">GCGEMM.cpp:192</a></div></div>
<div class="ttc" id="_g_c_g_e_m_m_interleave4x4_kernel_8h_xhtml"><div class="ttname"><a href="_g_c_g_e_m_m_interleave4x4_kernel_8h.xhtml">GCGEMMInterleave4x4Kernel.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_c_g_e_m_m_xhtml_a40c629523cd60defececec852c96bde9"><div class="ttname"><a href="classarm__compute_1_1_g_c_g_e_m_m.xhtml#a40c629523cd60defececec852c96bde9">arm_compute::GCGEMM::operator=</a></div><div class="ttdeci">GCGEMM &amp; operator=(const GCGEMM &amp;)=delete</div><div class="ttdoc">Prevent instances of this class from being copied (As this class contains pointers)</div></div>
<div class="ttc" id="_i_function_8h_xhtml"><div class="ttname"><a href="_i_function_8h.xhtml">IFunction.h</a></div></div>
<div class="ttc" id="_g_c_g_e_m_m_transpose1x_w_kernel_8h_xhtml"><div class="ttname"><a href="_g_c_g_e_m_m_transpose1x_w_kernel_8h.xhtml">GCGEMMTranspose1xWKernel.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_e_m_m_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_g_e_m_m_info.xhtml">arm_compute::GEMMInfo</a></div><div class="ttdoc">GEMM information class.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01983">Types.h:1983</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_c_g_e_m_m_xhtml"><div class="ttname"><a href="classarm__compute_1_1_g_c_g_e_m_m.xhtml">arm_compute::GCGEMM</a></div><div class="ttdoc">Basic function to execute GEMM on OpenGLES Compute.</div><div class="ttdef"><b>Definition:</b> <a href="_g_c_g_e_m_m_8h_source.xhtml#l00048">GCGEMM.h:48</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_c_g_e_m_m_xhtml_a8184f9bf2e8f4fdc16cfe7812e229d95"><div class="ttname"><a href="classarm__compute_1_1_g_c_g_e_m_m.xhtml#a8184f9bf2e8f4fdc16cfe7812e229d95">arm_compute::GCGEMM::configure</a></div><div class="ttdeci">void configure(const IGCTensor *a, const IGCTensor *b, const IGCTensor *c, IGCTensor *output, float alpha, float beta, const GEMMInfo &amp;gemm_info=GEMMInfo())</div><div class="ttdoc">Initialise the kernel's inputs and output.</div><div class="ttdef"><b>Definition:</b> <a href="_g_c_g_e_m_m_8cpp_source.xhtml#l00081">GCGEMM.cpp:81</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_c_g_e_m_m_interleave4x4_kernel_xhtml"><div class="ttname"><a href="classarm__compute_1_1_g_c_g_e_m_m_interleave4x4_kernel.xhtml">arm_compute::GCGEMMInterleave4x4Kernel</a></div><div class="ttdoc">OpenGL ES kernel which interleaves the elements of a matrix A in chunk of 4x4.</div><div class="ttdef"><b>Definition:</b> <a href="_g_c_g_e_m_m_interleave4x4_kernel_8h_source.xhtml#l00052">GCGEMMInterleave4x4Kernel.h:52</a></div></div>
<div class="ttc" id="_g_c_tensor_8h_xhtml"><div class="ttname"><a href="_g_c_tensor_8h.xhtml">GCTensor.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_c_g_e_m_m_matrix_multiply_kernel_xhtml"><div class="ttname"><a href="classarm__compute_1_1_g_c_g_e_m_m_matrix_multiply_kernel.xhtml">arm_compute::GCGEMMMatrixMultiplyKernel</a></div><div class="ttdoc">GLES Compute kernel to multiply two input matrices &quot;A&quot; and &quot;B&quot; or to multiply a vector &quot;A&quot; by a matri...</div><div class="ttdef"><b>Definition:</b> <a href="_g_c_g_e_m_m_matrix_multiply_kernel_8h_source.xhtml#l00039">GCGEMMMatrixMultiplyKernel.h:39</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_214608ef36d61442cb2b0c1c4e9a7def.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="dir_8bc26130589aa16388b5a02f17abf2c2.xhtml">runtime</a></li><li class="navelem"><a class="el" href="dir_e83fa7cb9796f3ad7be03e3d9fcd3249.xhtml">GLES_COMPUTE</a></li><li class="navelem"><a class="el" href="dir_b2d75812ef27339cb07aa08923a4a042.xhtml">functions</a></li><li class="navelem"><a class="el" href="_g_c_g_e_m_m_8h.xhtml">GCGEMM.h</a></li>
    <li class="footer">Generated on Fri Feb 21 2020 11:10:10 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
