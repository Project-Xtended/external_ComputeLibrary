<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: IGCSimple3DKernel Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classarm__compute_1_1_i_g_c_simple3_d_kernel.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">IGCSimple3DKernel Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Interface for simple GLES kernels having 1 tensor input and 1 tensor output.  
 <a href="classarm__compute_1_1_i_g_c_simple3_d_kernel.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_i_g_c_simple3_d_kernel_8h_source.xhtml">IGCSimple3DKernel.h</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for IGCSimple3DKernel:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classarm__compute_1_1_i_g_c_simple3_d_kernel__coll__graph.svg" width="156" height="336"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a8fd12b95bdde3f93db96bc9b1598db69"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_g_c_simple3_d_kernel.xhtml#a8fd12b95bdde3f93db96bc9b1598db69">run</a> (const <a class="el" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;<a class="el" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>) override</td></tr>
<tr class="memdesc:a8fd12b95bdde3f93db96bc9b1598db69"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enqueue the OpenGL ES shader to process the given window.  <a href="#a8fd12b95bdde3f93db96bc9b1598db69">More...</a><br /></td></tr>
<tr class="separator:a8fd12b95bdde3f93db96bc9b1598db69"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1_i_g_c_simple_kernel"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1_i_g_c_simple_kernel')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1_i_g_c_simple_kernel.xhtml">IGCSimpleKernel</a></td></tr>
<tr class="memitem:afaee4bdfd8fed3b2fdf42d15560e2d7a inherit pub_methods_classarm__compute_1_1_i_g_c_simple_kernel"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_g_c_simple_kernel.xhtml#afaee4bdfd8fed3b2fdf42d15560e2d7a">IGCSimpleKernel</a> ()</td></tr>
<tr class="memdesc:afaee4bdfd8fed3b2fdf42d15560e2d7a inherit pub_methods_classarm__compute_1_1_i_g_c_simple_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="classarm__compute_1_1_i_g_c_simple_kernel.xhtml#afaee4bdfd8fed3b2fdf42d15560e2d7a">More...</a><br /></td></tr>
<tr class="separator:afaee4bdfd8fed3b2fdf42d15560e2d7a inherit pub_methods_classarm__compute_1_1_i_g_c_simple_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a81af259374ad902ad2b9e735b3b380be inherit pub_methods_classarm__compute_1_1_i_g_c_simple_kernel"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_g_c_simple_kernel.xhtml#a81af259374ad902ad2b9e735b3b380be">IGCSimpleKernel</a> (const <a class="el" href="classarm__compute_1_1_i_g_c_simple_kernel.xhtml">IGCSimpleKernel</a> &amp;)=delete</td></tr>
<tr class="memdesc:a81af259374ad902ad2b9e735b3b380be inherit pub_methods_classarm__compute_1_1_i_g_c_simple_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied (As this class contains pointers)  <a href="classarm__compute_1_1_i_g_c_simple_kernel.xhtml#a81af259374ad902ad2b9e735b3b380be">More...</a><br /></td></tr>
<tr class="separator:a81af259374ad902ad2b9e735b3b380be inherit pub_methods_classarm__compute_1_1_i_g_c_simple_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a10d2c80e7afcb7ae1ad42ff9a649a915 inherit pub_methods_classarm__compute_1_1_i_g_c_simple_kernel"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_i_g_c_simple_kernel.xhtml">IGCSimpleKernel</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_g_c_simple_kernel.xhtml#a10d2c80e7afcb7ae1ad42ff9a649a915">operator=</a> (const <a class="el" href="classarm__compute_1_1_i_g_c_simple_kernel.xhtml">IGCSimpleKernel</a> &amp;)=delete</td></tr>
<tr class="memdesc:a10d2c80e7afcb7ae1ad42ff9a649a915 inherit pub_methods_classarm__compute_1_1_i_g_c_simple_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied (As this class contains pointers)  <a href="classarm__compute_1_1_i_g_c_simple_kernel.xhtml#a10d2c80e7afcb7ae1ad42ff9a649a915">More...</a><br /></td></tr>
<tr class="separator:a10d2c80e7afcb7ae1ad42ff9a649a915 inherit pub_methods_classarm__compute_1_1_i_g_c_simple_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a246ecc53bc0c77507ef68c03937efd9d inherit pub_methods_classarm__compute_1_1_i_g_c_simple_kernel"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_g_c_simple_kernel.xhtml#a246ecc53bc0c77507ef68c03937efd9d">IGCSimpleKernel</a> (<a class="el" href="classarm__compute_1_1_i_g_c_simple_kernel.xhtml">IGCSimpleKernel</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:a246ecc53bc0c77507ef68c03937efd9d inherit pub_methods_classarm__compute_1_1_i_g_c_simple_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be moved.  <a href="classarm__compute_1_1_i_g_c_simple_kernel.xhtml#a246ecc53bc0c77507ef68c03937efd9d">More...</a><br /></td></tr>
<tr class="separator:a246ecc53bc0c77507ef68c03937efd9d inherit pub_methods_classarm__compute_1_1_i_g_c_simple_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a90f6f44d1fbbe0d2261d81f4e9f1ff7e inherit pub_methods_classarm__compute_1_1_i_g_c_simple_kernel"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_i_g_c_simple_kernel.xhtml">IGCSimpleKernel</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_g_c_simple_kernel.xhtml#a90f6f44d1fbbe0d2261d81f4e9f1ff7e">operator=</a> (<a class="el" href="classarm__compute_1_1_i_g_c_simple_kernel.xhtml">IGCSimpleKernel</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:a90f6f44d1fbbe0d2261d81f4e9f1ff7e inherit pub_methods_classarm__compute_1_1_i_g_c_simple_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be moved.  <a href="classarm__compute_1_1_i_g_c_simple_kernel.xhtml#a90f6f44d1fbbe0d2261d81f4e9f1ff7e">More...</a><br /></td></tr>
<tr class="separator:a90f6f44d1fbbe0d2261d81f4e9f1ff7e inherit pub_methods_classarm__compute_1_1_i_g_c_simple_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a99b962384da15831b17aa35a1dcbc4d1 inherit pub_methods_classarm__compute_1_1_i_g_c_simple_kernel"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_g_c_simple_kernel.xhtml#a99b962384da15831b17aa35a1dcbc4d1">~IGCSimpleKernel</a> ()=default</td></tr>
<tr class="memdesc:a99b962384da15831b17aa35a1dcbc4d1 inherit pub_methods_classarm__compute_1_1_i_g_c_simple_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default destructor.  <a href="classarm__compute_1_1_i_g_c_simple_kernel.xhtml#a99b962384da15831b17aa35a1dcbc4d1">More...</a><br /></td></tr>
<tr class="separator:a99b962384da15831b17aa35a1dcbc4d1 inherit pub_methods_classarm__compute_1_1_i_g_c_simple_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a86c574f15dfe0d3176db14c5b61e93c8 inherit pub_methods_classarm__compute_1_1_i_g_c_simple_kernel"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_g_c_simple_kernel.xhtml#a86c574f15dfe0d3176db14c5b61e93c8">configure</a> (const <a class="el" href="classarm__compute_1_1_i_g_c_tensor.xhtml">IGCTensor</a> *input, <a class="el" href="classarm__compute_1_1_i_g_c_tensor.xhtml">IGCTensor</a> *output, unsigned int <a class="el" href="_c_l_im2_col_kernel_8cpp.xhtml#a4e45c1f5e4280813a78a77dda71d8799">num_elems_processed_per_iteration</a>, bool border_undefined=false, const <a class="el" href="structarm__compute_1_1_border_size.xhtml">BorderSize</a> &amp;<a class="el" href="classarm__compute_1_1_i_kernel.xhtml#a4b3a97ba5dded504a2f2261c078493dd">border_size</a>=<a class="el" href="structarm__compute_1_1_border_size.xhtml">BorderSize</a>())</td></tr>
<tr class="memdesc:a86c574f15dfe0d3176db14c5b61e93c8 inherit pub_methods_classarm__compute_1_1_i_g_c_simple_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">Configure the kernel.  <a href="classarm__compute_1_1_i_g_c_simple_kernel.xhtml#a86c574f15dfe0d3176db14c5b61e93c8">More...</a><br /></td></tr>
<tr class="separator:a86c574f15dfe0d3176db14c5b61e93c8 inherit pub_methods_classarm__compute_1_1_i_g_c_simple_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1_i_g_c_kernel"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1_i_g_c_kernel')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1_i_g_c_kernel.xhtml">IGCKernel</a></td></tr>
<tr class="memitem:abd51b7f007e5846ae05efdaca32e876c inherit pub_methods_classarm__compute_1_1_i_g_c_kernel"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_g_c_kernel.xhtml#abd51b7f007e5846ae05efdaca32e876c">IGCKernel</a> ()</td></tr>
<tr class="memdesc:abd51b7f007e5846ae05efdaca32e876c inherit pub_methods_classarm__compute_1_1_i_g_c_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="classarm__compute_1_1_i_g_c_kernel.xhtml#abd51b7f007e5846ae05efdaca32e876c">More...</a><br /></td></tr>
<tr class="separator:abd51b7f007e5846ae05efdaca32e876c inherit pub_methods_classarm__compute_1_1_i_g_c_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3b8f9d088e013cfbb039fd0ebbe42589 inherit pub_methods_classarm__compute_1_1_i_g_c_kernel"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_g_c_kernel.xhtml">GCKernel</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_g_c_kernel.xhtml#a3b8f9d088e013cfbb039fd0ebbe42589">kernel</a> ()</td></tr>
<tr class="memdesc:a3b8f9d088e013cfbb039fd0ebbe42589 inherit pub_methods_classarm__compute_1_1_i_g_c_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a reference to the GLES kernel of this object.  <a href="classarm__compute_1_1_i_g_c_kernel.xhtml#a3b8f9d088e013cfbb039fd0ebbe42589">More...</a><br /></td></tr>
<tr class="separator:a3b8f9d088e013cfbb039fd0ebbe42589 inherit pub_methods_classarm__compute_1_1_i_g_c_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae7a1e979b3442bd2f7732b5f51d5dded inherit pub_methods_classarm__compute_1_1_i_g_c_kernel"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_g_c_kernel.xhtml#ae7a1e979b3442bd2f7732b5f51d5dded">add_1D_tensor_argument</a> (unsigned int &amp;idx, const <a class="el" href="classarm__compute_1_1_i_g_c_tensor.xhtml">IGCTensor</a> *tensor, const unsigned int binding_point, const <a class="el" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;<a class="el" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>)</td></tr>
<tr class="memdesc:ae7a1e979b3442bd2f7732b5f51d5dded inherit pub_methods_classarm__compute_1_1_i_g_c_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">Add the passed 1D tensor's parameters to the object's kernel's arguments starting from the index idx.  <a href="classarm__compute_1_1_i_g_c_kernel.xhtml#ae7a1e979b3442bd2f7732b5f51d5dded">More...</a><br /></td></tr>
<tr class="separator:ae7a1e979b3442bd2f7732b5f51d5dded inherit pub_methods_classarm__compute_1_1_i_g_c_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a633d6a0cb573106e4d420b664cb29b66 inherit pub_methods_classarm__compute_1_1_i_g_c_kernel"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_g_c_kernel.xhtml#a633d6a0cb573106e4d420b664cb29b66">add_2D_tensor_argument</a> (unsigned int &amp;idx, const <a class="el" href="classarm__compute_1_1_i_g_c_tensor.xhtml">IGCTensor</a> *tensor, const unsigned int binding_point, const <a class="el" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;<a class="el" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>)</td></tr>
<tr class="memdesc:a633d6a0cb573106e4d420b664cb29b66 inherit pub_methods_classarm__compute_1_1_i_g_c_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">Add the passed 2D tensor's parameters to the object's kernel's arguments starting from the index idx.  <a href="classarm__compute_1_1_i_g_c_kernel.xhtml#a633d6a0cb573106e4d420b664cb29b66">More...</a><br /></td></tr>
<tr class="separator:a633d6a0cb573106e4d420b664cb29b66 inherit pub_methods_classarm__compute_1_1_i_g_c_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa9ed9d806fc3364df21027387b9e735a inherit pub_methods_classarm__compute_1_1_i_g_c_kernel"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_g_c_kernel.xhtml#aa9ed9d806fc3364df21027387b9e735a">add_3D_tensor_argument</a> (unsigned int &amp;idx, const <a class="el" href="classarm__compute_1_1_i_g_c_tensor.xhtml">IGCTensor</a> *tensor, const unsigned int binding_point, const <a class="el" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;<a class="el" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>)</td></tr>
<tr class="memdesc:aa9ed9d806fc3364df21027387b9e735a inherit pub_methods_classarm__compute_1_1_i_g_c_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">Add the passed 3D tensor's parameters to the object's kernel's arguments starting from the index idx.  <a href="classarm__compute_1_1_i_g_c_kernel.xhtml#aa9ed9d806fc3364df21027387b9e735a">More...</a><br /></td></tr>
<tr class="separator:aa9ed9d806fc3364df21027387b9e735a inherit pub_methods_classarm__compute_1_1_i_g_c_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a24938aee389d915b1cc481f11346b2f6 inherit pub_methods_classarm__compute_1_1_i_g_c_kernel"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_g_c_kernel.xhtml#a24938aee389d915b1cc481f11346b2f6">num_arguments_per_1D_tensor</a> () const</td></tr>
<tr class="memdesc:a24938aee389d915b1cc481f11346b2f6 inherit pub_methods_classarm__compute_1_1_i_g_c_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the number of arguments enqueued per 1D tensor object.  <a href="classarm__compute_1_1_i_g_c_kernel.xhtml#a24938aee389d915b1cc481f11346b2f6">More...</a><br /></td></tr>
<tr class="separator:a24938aee389d915b1cc481f11346b2f6 inherit pub_methods_classarm__compute_1_1_i_g_c_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1cdff9e90a54e4ea673d10b2dcd7ec9f inherit pub_methods_classarm__compute_1_1_i_g_c_kernel"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_g_c_kernel.xhtml#a1cdff9e90a54e4ea673d10b2dcd7ec9f">num_arguments_per_2D_tensor</a> () const</td></tr>
<tr class="memdesc:a1cdff9e90a54e4ea673d10b2dcd7ec9f inherit pub_methods_classarm__compute_1_1_i_g_c_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the number of arguments enqueued per 2D tensor object.  <a href="classarm__compute_1_1_i_g_c_kernel.xhtml#a1cdff9e90a54e4ea673d10b2dcd7ec9f">More...</a><br /></td></tr>
<tr class="separator:a1cdff9e90a54e4ea673d10b2dcd7ec9f inherit pub_methods_classarm__compute_1_1_i_g_c_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abb64cdefb07e7d0e4dc5722015cccc35 inherit pub_methods_classarm__compute_1_1_i_g_c_kernel"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_g_c_kernel.xhtml#abb64cdefb07e7d0e4dc5722015cccc35">num_arguments_per_3D_tensor</a> () const</td></tr>
<tr class="memdesc:abb64cdefb07e7d0e4dc5722015cccc35 inherit pub_methods_classarm__compute_1_1_i_g_c_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the number of arguments enqueued per 3D tensor object.  <a href="classarm__compute_1_1_i_g_c_kernel.xhtml#abb64cdefb07e7d0e4dc5722015cccc35">More...</a><br /></td></tr>
<tr class="separator:abb64cdefb07e7d0e4dc5722015cccc35 inherit pub_methods_classarm__compute_1_1_i_g_c_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3c6173aecfebc9030bf8a0bee0c0ced8 inherit pub_methods_classarm__compute_1_1_i_g_c_kernel"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_g_c_kernel.xhtml#a3c6173aecfebc9030bf8a0bee0c0ced8">set_lws_hint</a> (<a class="el" href="classarm__compute_1_1gles_1_1_n_d_range.xhtml">gles::NDRange</a> &amp;lws_hint)</td></tr>
<tr class="memdesc:a3c6173aecfebc9030bf8a0bee0c0ced8 inherit pub_methods_classarm__compute_1_1_i_g_c_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the Local-Workgroup-Size hint.  <a href="classarm__compute_1_1_i_g_c_kernel.xhtml#a3c6173aecfebc9030bf8a0bee0c0ced8">More...</a><br /></td></tr>
<tr class="separator:a3c6173aecfebc9030bf8a0bee0c0ced8 inherit pub_methods_classarm__compute_1_1_i_g_c_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad5ba9d34a3a855bf1dd2e36316ff550a inherit pub_methods_classarm__compute_1_1_i_g_c_kernel"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_g_c_kernel.xhtml#ad5ba9d34a3a855bf1dd2e36316ff550a">set_target</a> (<a class="el" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3">GPUTarget</a> target)</td></tr>
<tr class="memdesc:ad5ba9d34a3a855bf1dd2e36316ff550a inherit pub_methods_classarm__compute_1_1_i_g_c_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the targeted GPU architecture.  <a href="classarm__compute_1_1_i_g_c_kernel.xhtml#ad5ba9d34a3a855bf1dd2e36316ff550a">More...</a><br /></td></tr>
<tr class="separator:ad5ba9d34a3a855bf1dd2e36316ff550a inherit pub_methods_classarm__compute_1_1_i_g_c_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa550ff0352ff2388e02f7b0a41bf5fe7 inherit pub_methods_classarm__compute_1_1_i_g_c_kernel"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3">GPUTarget</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_g_c_kernel.xhtml#aa550ff0352ff2388e02f7b0a41bf5fe7">get_target</a> () const</td></tr>
<tr class="memdesc:aa550ff0352ff2388e02f7b0a41bf5fe7 inherit pub_methods_classarm__compute_1_1_i_g_c_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the targeted GPU architecture.  <a href="classarm__compute_1_1_i_g_c_kernel.xhtml#aa550ff0352ff2388e02f7b0a41bf5fe7">More...</a><br /></td></tr>
<tr class="separator:aa550ff0352ff2388e02f7b0a41bf5fe7 inherit pub_methods_classarm__compute_1_1_i_g_c_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1_i_kernel"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1_i_kernel')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1_i_kernel.xhtml">IKernel</a></td></tr>
<tr class="memitem:a7250cb8cbaa4104a93a2d77155085507 inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_kernel.xhtml#a7250cb8cbaa4104a93a2d77155085507">IKernel</a> ()</td></tr>
<tr class="memdesc:a7250cb8cbaa4104a93a2d77155085507 inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="classarm__compute_1_1_i_kernel.xhtml#a7250cb8cbaa4104a93a2d77155085507">More...</a><br /></td></tr>
<tr class="separator:a7250cb8cbaa4104a93a2d77155085507 inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a341b60d15a5e12a5b8f3825194dd3b12 inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_kernel.xhtml#a341b60d15a5e12a5b8f3825194dd3b12">~IKernel</a> ()=default</td></tr>
<tr class="memdesc:a341b60d15a5e12a5b8f3825194dd3b12 inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor.  <a href="classarm__compute_1_1_i_kernel.xhtml#a341b60d15a5e12a5b8f3825194dd3b12">More...</a><br /></td></tr>
<tr class="separator:a341b60d15a5e12a5b8f3825194dd3b12 inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0466ee6ce6552c87595f0e88e73eeb1b inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_kernel.xhtml#a0466ee6ce6552c87595f0e88e73eeb1b">is_parallelisable</a> () const</td></tr>
<tr class="memdesc:a0466ee6ce6552c87595f0e88e73eeb1b inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">Indicates whether or not the kernel is parallelisable.  <a href="classarm__compute_1_1_i_kernel.xhtml#a0466ee6ce6552c87595f0e88e73eeb1b">More...</a><br /></td></tr>
<tr class="separator:a0466ee6ce6552c87595f0e88e73eeb1b inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4b3a97ba5dded504a2f2261c078493dd inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="structarm__compute_1_1_border_size.xhtml">BorderSize</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_kernel.xhtml#a4b3a97ba5dded504a2f2261c078493dd">border_size</a> () const</td></tr>
<tr class="memdesc:a4b3a97ba5dded504a2f2261c078493dd inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">The size of the border for that kernel.  <a href="classarm__compute_1_1_i_kernel.xhtml#a4b3a97ba5dded504a2f2261c078493dd">More...</a><br /></td></tr>
<tr class="separator:a4b3a97ba5dded504a2f2261c078493dd inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad34a46f53686c12a5c5e717cc9617fb6 inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a> () const</td></tr>
<tr class="memdesc:ad34a46f53686c12a5c5e717cc9617fb6 inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">The maximum window the kernel can be executed on.  <a href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">More...</a><br /></td></tr>
<tr class="separator:ad34a46f53686c12a5c5e717cc9617fb6 inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Interface for simple GLES kernels having 1 tensor input and 1 tensor output. </p>
<p>Both input tensor and output tensor must have at least 3 dimensions. </p>

<p class="definition">Definition at line <a class="el" href="_i_g_c_simple3_d_kernel_8h_source.xhtml#l00036">36</a> of file <a class="el" href="_i_g_c_simple3_d_kernel_8h_source.xhtml">IGCSimple3DKernel.h</a>.</p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="a8fd12b95bdde3f93db96bc9b1598db69"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8fd12b95bdde3f93db96bc9b1598db69">&#9670;&nbsp;</a></span>run()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void run </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;&#160;</td>
          <td class="paramname"><em>window</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Enqueue the OpenGL ES shader to process the given window. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">window</td><td>Region on which to execute the kernel. (Must be a valid region of the window returned by <a class="el" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6" title="The maximum window the kernel can be executed on.">window()</a>). </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented from <a class="el" href="classarm__compute_1_1_i_g_c_simple2_d_kernel.xhtml#a8fd12b95bdde3f93db96bc9b1598db69">IGCSimple2DKernel</a>.</p>

<p>Reimplemented in <a class="el" href="classarm__compute_1_1_g_c_scale_kernel.xhtml#a8fd12b95bdde3f93db96bc9b1598db69">GCScaleKernel</a>.</p>

<p class="definition">Definition at line <a class="el" href="_i_g_c_simple3_d_kernel_8cpp_source.xhtml#l00033">33</a> of file <a class="el" href="_i_g_c_simple3_d_kernel_8cpp_source.xhtml">IGCSimple3DKernel.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;{</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    <a class="code" href="_validate_8h.xhtml#a1b35b0d258183cf9ef36adf684d0b88c">ARM_COMPUTE_ERROR_ON_UNCONFIGURED_KERNEL</a>(<span class="keyword">this</span>);</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    <a class="code" href="_validate_8h.xhtml#a6eb9ce82815fe429250189da7592ba75">ARM_COMPUTE_ERROR_ON_INVALID_SUBWINDOW</a>(<a class="code" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">IKernel::window</a>(), <a class="code" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>);</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a548131b3d37da47a2e9d32111c88dfe1">slice</a> = <a class="code" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>.<a class="code" href="classarm__compute_1_1_window.xhtml#a30ca5bdbb60ee281d7f1ab34f7a4ee40">first_slice_window_3D</a>();</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    _kernel.use();</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    <span class="keywordflow">do</span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    {</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;        <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> idx     = 0;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;        <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> binding = 1; <span class="comment">// SSBO binding starts from 1.</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;        <a class="code" href="classarm__compute_1_1_i_g_c_kernel.xhtml#aa9ed9d806fc3364df21027387b9e735a">add_3D_tensor_argument</a>(idx, _input, binding++, <a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a548131b3d37da47a2e9d32111c88dfe1">slice</a>);</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;        <a class="code" href="classarm__compute_1_1_i_g_c_kernel.xhtml#aa9ed9d806fc3364df21027387b9e735a">add_3D_tensor_argument</a>(idx, _output, binding++, <a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a548131b3d37da47a2e9d32111c88dfe1">slice</a>);</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;        _kernel.update_shader_params();</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;        <a class="code" href="namespacearm__compute.xhtml#a6e51ab3789678d3e0b0b72178dd6c4c6">enqueue</a>(*<span class="keyword">this</span>, <a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a548131b3d37da47a2e9d32111c88dfe1">slice</a>);</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    }</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <span class="keywordflow">while</span>(<a class="code" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>.<a class="code" href="classarm__compute_1_1_window.xhtml#aac792e3a11bc73bafafc4f4284c7f215">slide_window_slice_3D</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a548131b3d37da47a2e9d32111c88dfe1">slice</a>));</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;}</div><div class="ttc" id="classarm__compute_1_1_i_kernel_xhtml_ad34a46f53686c12a5c5e717cc9617fb6"><div class="ttname"><a href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">arm_compute::IKernel::window</a></div><div class="ttdeci">const Window &amp; window() const</div><div class="ttdoc">The maximum window the kernel can be executed on.</div><div class="ttdef"><b>Definition:</b> <a href="_i_kernel_8cpp_source.xhtml#l00028">IKernel.cpp:28</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_g_c_kernel_xhtml_aa9ed9d806fc3364df21027387b9e735a"><div class="ttname"><a href="classarm__compute_1_1_i_g_c_kernel.xhtml#aa9ed9d806fc3364df21027387b9e735a">arm_compute::IGCKernel::add_3D_tensor_argument</a></div><div class="ttdeci">void add_3D_tensor_argument(unsigned int &amp;idx, const IGCTensor *tensor, const unsigned int binding_point, const Window &amp;window)</div><div class="ttdoc">Add the passed 3D tensor's parameters to the object's kernel's arguments starting from the index idx.</div><div class="ttdef"><b>Definition:</b> <a href="_i_g_c_kernel_8cpp_source.xhtml#l00132">IGCKernel.cpp:132</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a6e51ab3789678d3e0b0b72178dd6c4c6"><div class="ttname"><a href="namespacearm__compute.xhtml#a6e51ab3789678d3e0b0b72178dd6c4c6">arm_compute::enqueue</a></div><div class="ttdeci">void enqueue(cl::CommandQueue &amp;queue, ICLKernel &amp;kernel, const Window &amp;window, const cl::NDRange &amp;lws_hint=CLKernelLibrary::get().default_ndrange(), bool use_dummy_work_items=false)</div><div class="ttdoc">Add the kernel to the command queue with the given window.</div><div class="ttdef"><b>Definition:</b> <a href="_i_c_l_kernel_8cpp_source.xhtml#l00039">ICLKernel.cpp:39</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_aac792e3a11bc73bafafc4f4284c7f215"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#aac792e3a11bc73bafafc4f4284c7f215">arm_compute::Window::slide_window_slice_3D</a></div><div class="ttdeci">bool slide_window_slice_3D(Window &amp;slice) const</div><div class="ttdoc">Slide the passed 3D window slice.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00333">Window.h:333</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_a30ca5bdbb60ee281d7f1ab34f7a4ee40"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#a30ca5bdbb60ee281d7f1ab34f7a4ee40">arm_compute::Window::first_slice_window_3D</a></div><div class="ttdeci">Window first_slice_window_3D() const</div><div class="ttdoc">First 3D slice of the window.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00289">Window.h:289</a></div></div>
<div class="ttc" id="_validate_8h_xhtml_a6eb9ce82815fe429250189da7592ba75"><div class="ttname"><a href="_validate_8h.xhtml#a6eb9ce82815fe429250189da7592ba75">ARM_COMPUTE_ERROR_ON_INVALID_SUBWINDOW</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_INVALID_SUBWINDOW(f, s)</div><div class="ttdef"><b>Definition:</b> <a href="_validate_8h_source.xhtml#l00205">Validate.h:205</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml">arm_compute::Window</a></div><div class="ttdoc">Describe a multidimensional execution window.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00039">Window.h:39</a></div></div>
<div class="ttc" id="_validate_8h_xhtml_a1b35b0d258183cf9ef36adf684d0b88c"><div class="ttname"><a href="_validate_8h.xhtml#a1b35b0d258183cf9ef36adf684d0b88c">ARM_COMPUTE_ERROR_ON_UNCONFIGURED_KERNEL</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_UNCONFIGURED_KERNEL(k)</div><div class="ttdef"><b>Definition:</b> <a href="_validate_8h_source.xhtml#l00941">Validate.h:941</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_1_1reference_xhtml_a548131b3d37da47a2e9d32111c88dfe1"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a548131b3d37da47a2e9d32111c88dfe1">arm_compute::test::validation::reference::slice</a></div><div class="ttdeci">SimpleTensor&lt; T &gt; slice(const SimpleTensor&lt; T &gt; &amp;src, Coordinates starts, Coordinates ends)</div><div class="ttdef"><b>Definition:</b> <a href="_slice_operations_8cpp_source.xhtml#l00038">SliceOperations.cpp:38</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_i_g_c_kernel_8cpp_source.xhtml#l00132">IGCKernel::add_3D_tensor_argument()</a>, <a class="el" href="_validate_8h_source.xhtml#l00205">ARM_COMPUTE_ERROR_ON_INVALID_SUBWINDOW</a>, <a class="el" href="_validate_8h_source.xhtml#l00941">ARM_COMPUTE_ERROR_ON_UNCONFIGURED_KERNEL</a>, <a class="el" href="_i_c_l_kernel_8cpp_source.xhtml#l00039">arm_compute::enqueue()</a>, <a class="el" href="_window_8h_source.xhtml#l00289">Window::first_slice_window_3D()</a>, <a class="el" href="_slice_operations_8cpp_source.xhtml#l00038">arm_compute::test::validation::reference::slice()</a>, <a class="el" href="_window_8h_source.xhtml#l00333">Window::slide_window_slice_3D()</a>, and <a class="el" href="_i_kernel_8cpp_source.xhtml#l00028">IKernel::window()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>arm_compute/core/GLES_COMPUTE/<a class="el" href="_i_g_c_simple3_d_kernel_8h_source.xhtml">IGCSimple3DKernel.h</a></li>
<li>src/core/GLES_COMPUTE/<a class="el" href="_i_g_c_simple3_d_kernel_8cpp_source.xhtml">IGCSimple3DKernel.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1_i_g_c_simple3_d_kernel.xhtml">IGCSimple3DKernel</a></li>
    <li class="footer">Generated on Fri Feb 21 2020 11:10:28 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
