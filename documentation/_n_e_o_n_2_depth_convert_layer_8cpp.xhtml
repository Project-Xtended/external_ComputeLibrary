<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: tests/validation/NEON/DepthConvertLayer.cpp File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.02.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_n_e_o_n_2_depth_convert_layer_8cpp.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#namespaces">Namespaces</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">DepthConvertLayer.cpp File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &quot;<a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">arm_compute/core/Types.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_n_e_depth_convert_layer_8h_source.xhtml">arm_compute/runtime/NEON/functions/NEDepthConvertLayer.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="runtime_2_tensor_8h_source.xhtml">arm_compute/runtime/Tensor.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_tensor_allocator_8h_source.xhtml">arm_compute/runtime/TensorAllocator.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_accessor_8h_source.xhtml">tests/NEON/Accessor.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_padding_calculator_8h_source.xhtml">tests/PaddingCalculator.h</a>&quot;</code><br />
<code>#include &quot;tests/datasets/ConvertPolicyDataset.h&quot;</code><br />
<code>#include &quot;tests/datasets/ShapeDatasets.h&quot;</code><br />
<code>#include &quot;<a class="el" href="_asserts_8h_source.xhtml">tests/framework/Asserts.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="tests_2framework_2_macros_8h_source.xhtml">tests/framework/Macros.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_datasets_8h_source.xhtml">tests/framework/datasets/Datasets.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_validation_8h_source.xhtml">tests/validation/Validation.h</a>&quot;</code><br />
<code>#include &quot;tests/validation/fixtures/DepthConvertLayerFixture.h&quot;</code><br />
</div>
<p><a href="_n_e_o_n_2_depth_convert_layer_8cpp_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"></a>
Namespaces</h2></td></tr>
<tr class="memitem:namespacearm__compute"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></td></tr>
<tr class="memdesc:namespacearm__compute"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copyright (c) 2017-2020 ARM Limited. <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespacearm__compute_1_1test"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test.xhtml">arm_compute::test</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespacearm__compute_1_1test_1_1validation"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml">arm_compute::test::validation</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:ab7bdd0e5c783a3f52e81684790167411"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:ab7bdd0e5c783a3f52e81684790167411"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ab7bdd0e5c783a3f52e81684790167411">NEDepthConvertLayerToU16Fixture</a> = DepthConvertLayerValidationFixture&lt; Tensor, Accessor, NEDepthConvertLayer, T, uint16_t &gt;</td></tr>
<tr class="separator:ab7bdd0e5c783a3f52e81684790167411"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adc0479e4b3b5d92ec9584c946ed7beac"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:adc0479e4b3b5d92ec9584c946ed7beac"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#adc0479e4b3b5d92ec9584c946ed7beac">NEDepthConvertLayerToS16Fixture</a> = DepthConvertLayerValidationFixture&lt; Tensor, Accessor, NEDepthConvertLayer, T, int16_t &gt;</td></tr>
<tr class="separator:adc0479e4b3b5d92ec9584c946ed7beac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aec2e7679decb05eca751a7ad3fe1c310"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:aec2e7679decb05eca751a7ad3fe1c310"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aec2e7679decb05eca751a7ad3fe1c310">NEDepthConvertLayerToS32Fixture</a> = DepthConvertLayerValidationFixture&lt; Tensor, Accessor, NEDepthConvertLayer, T, int32_t &gt;</td></tr>
<tr class="separator:aec2e7679decb05eca751a7ad3fe1c310"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5339d2cc4a80e318c9268a718e6afa3f"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a5339d2cc4a80e318c9268a718e6afa3f"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5339d2cc4a80e318c9268a718e6afa3f">NEDepthConvertLayerToU8Fixture</a> = DepthConvertLayerValidationFixture&lt; Tensor, Accessor, NEDepthConvertLayer, T, uint8_t &gt;</td></tr>
<tr class="separator:a5339d2cc4a80e318c9268a718e6afa3f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a225e3ef49159f5b7ab9eda78fd329e2d"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a225e3ef49159f5b7ab9eda78fd329e2d"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a225e3ef49159f5b7ab9eda78fd329e2d">NEDepthConvertLayerToU32Fixture</a> = DepthConvertLayerValidationFixture&lt; Tensor, Accessor, NEDepthConvertLayer, T, uint32_t &gt;</td></tr>
<tr class="separator:a225e3ef49159f5b7ab9eda78fd329e2d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9912c7aa7d6317c121432c965507fd83"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a9912c7aa7d6317c121432c965507fd83"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a9912c7aa7d6317c121432c965507fd83">NEDepthConvertLayerToF16Fixture</a> = DepthConvertLayerValidationFixture&lt; Tensor, Accessor, NEDepthConvertLayer, T, half &gt;</td></tr>
<tr class="separator:a9912c7aa7d6317c121432c965507fd83"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a12516d34a371038fdaf705939f07ca15"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a12516d34a371038fdaf705939f07ca15"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a12516d34a371038fdaf705939f07ca15">NEDepthConvertLayerToF32Fixture</a> = DepthConvertLayerValidationFixture&lt; Tensor, Accessor, NEDepthConvertLayer, T, float &gt;</td></tr>
<tr class="separator:a12516d34a371038fdaf705939f07ca15"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3ed17ec92926b05f647ae5dc75f18397"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a3ed17ec92926b05f647ae5dc75f18397"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3ed17ec92926b05f647ae5dc75f18397">NEDepthConvertLayerToQASYMM8Fixture</a> = DepthConvertLayerValidationQuantizedFixture&lt; Tensor, Accessor, NEDepthConvertLayer, T, uint8_t &gt;</td></tr>
<tr class="separator:a3ed17ec92926b05f647ae5dc75f18397"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa00a28e95c442493cb666d16f8637152"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:aa00a28e95c442493cb666d16f8637152"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa00a28e95c442493cb666d16f8637152">NEDepthConvertLayerQuantizedToF16Fixture</a> = DepthConvertLayerValidationQuantizedFixture&lt; Tensor, Accessor, NEDepthConvertLayer, T, half &gt;</td></tr>
<tr class="separator:aa00a28e95c442493cb666d16f8637152"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a83baad410b6bf781d1556dd63d23a267"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a83baad410b6bf781d1556dd63d23a267"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a83baad410b6bf781d1556dd63d23a267">NEDepthConvertLayerQuantizedToF32Fixture</a> = DepthConvertLayerValidationQuantizedFixture&lt; Tensor, Accessor, NEDepthConvertLayer, T, float &gt;</td></tr>
<tr class="separator:a83baad410b6bf781d1556dd63d23a267"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1332bf0d702dc9cf2ccbe250e00b54cd"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a1332bf0d702dc9cf2ccbe250e00b54cd"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1332bf0d702dc9cf2ccbe250e00b54cd">NEDepthConvertLayerQuantizedToS32Fixture</a> = DepthConvertLayerValidationQuantizedFixture&lt; Tensor, Accessor, NEDepthConvertLayer, T, int32_t &gt;</td></tr>
<tr class="separator:a1332bf0d702dc9cf2ccbe250e00b54cd"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a5c75c90dfaf4c3c6a8c246b7c898af50"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5c75c90dfaf4c3c6a8c246b7c898af50">DATA_TEST_CASE</a> (Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U16), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S16), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::U8), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::U8), })), framework::dataset::make(&quot;Policy&quot;,{ ConvertPolicy::WRAP, ConvertPolicy::WRAP, ConvertPolicy::WRAP, ConvertPolicy::WRAP, ConvertPolicy::WRAP, ConvertPolicy::WRAP, ConvertPolicy::WRAP, })), framework::dataset::make(&quot;Shift&quot;,{ 1, 1, 1, 1, 1, 1, 8, 1, })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, true})), input_info, output_info, policy, shift, expected)</td></tr>
<tr class="separator:a5c75c90dfaf4c3c6a8c246b7c898af50"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a542f3ac6e2b72fc1990b27519c9cf3f5"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a542f3ac6e2b72fc1990b27519c9cf3f5">DATA_TEST_CASE</a> (Configuration, framework::DatasetMode::ALL, combine(combine(datasets::SmallShapes(), framework::dataset::make(&quot;ConvertPolicy&quot;, { ConvertPolicy::SATURATE, ConvertPolicy::WRAP })), DepthConvertLayerZeroShiftDataset), shape, policy, shift)</td></tr>
<tr class="separator:a542f3ac6e2b72fc1990b27519c9cf3f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a40d20c55414f101f51f295e3a17346a6"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a40d20c55414f101f51f295e3a17346a6">FIXTURE_DATA_TEST_CASE</a> (RunSmall, NEDepthConvertLayerQuantizedToF32Fixture&lt; uint8_t &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(datasets::SmallShapes(), DepthConvertLayerQASYMM8toF32Dataset), framework::dataset::make(&quot;ConvertPolicy&quot;, { ConvertPolicy::SATURATE })), DepthConvertLayerZeroShiftDataset), framework::dataset::make(&quot;QuantizationInfo&quot;, { QuantizationInfo(0.5f, 10) })))</td></tr>
<tr class="separator:a40d20c55414f101f51f295e3a17346a6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af13a05bcf6a9ae1841c7fd6bd5fbc659"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#af13a05bcf6a9ae1841c7fd6bd5fbc659">FIXTURE_DATA_TEST_CASE</a> (RunLarge, NEDepthConvertLayerQuantizedToF32Fixture&lt; uint8_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(datasets::LargeShapes(), DepthConvertLayerQASYMM8toF32Dataset), framework::dataset::make(&quot;ConvertPolicy&quot;, { ConvertPolicy::SATURATE })), DepthConvertLayerZeroShiftDataset), framework::dataset::make(&quot;QuantizationInfo&quot;, { QuantizationInfo(0.5f, 10) })))</td></tr>
<tr class="separator:af13a05bcf6a9ae1841c7fd6bd5fbc659"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac2ed31007ae463a3cec24a581f3651f6"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac2ed31007ae463a3cec24a581f3651f6">TEST_SUITE_END</a> () const auto Int16QuantizedActivationFunctionsDataset = ActivationValidationQuantizedFixture&lt;CLTensor, CLAccessor, CLActivationLayer, T&gt;</td></tr>
<tr class="memdesc:ac2ed31007ae463a3cec24a581f3651f6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Input data sets.  <a href="namespacearm__compute_1_1test_1_1validation.xhtml#ac2ed31007ae463a3cec24a581f3651f6">More...</a><br /></td></tr>
<tr class="separator:ac2ed31007ae463a3cec24a581f3651f6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeefc2e3b3fc5eb1fbbd66b37ff7f1523"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aeefc2e3b3fc5eb1fbbd66b37ff7f1523">combine</a> (combine(datasets::SmallShapes(), framework::dataset::make(&quot;ConvertPolicy&quot;, { ConvertPolicy::SATURATE, ConvertPolicy::WRAP })), DepthConvertLayerZeroShiftDataset)</td></tr>
<tr class="separator:aeefc2e3b3fc5eb1fbbd66b37ff7f1523"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae02c6fc90d9c60c634bfa258049eb46b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae02c6fc90d9c60c634bfa258049eb46b">validate</a> (dst.info() -&gt;valid_region(), valid_region)</td></tr>
<tr class="separator:ae02c6fc90d9c60c634bfa258049eb46b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a15ef6f9076815a5d1d9da7defac11fe1"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a15ef6f9076815a5d1d9da7defac11fe1">validate</a> (src.info() -&gt;padding(), padding)</td></tr>
<tr class="separator:a15ef6f9076815a5d1d9da7defac11fe1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a091613692766d1e34ad31fe0f403a01b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a091613692766d1e34ad31fe0f403a01b">validate</a> (dst.info() -&gt;padding(), padding)</td></tr>
<tr class="separator:a091613692766d1e34ad31fe0f403a01b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4fea8481f44724a8e8bff7909d102a88"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4fea8481f44724a8e8bff7909d102a88">FIXTURE_DATA_TEST_CASE</a> (RunSmall, NEDepthConvertLayerQuantizedToS32Fixture&lt; uint8_t &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(datasets::SmallShapes(), DepthConvertLayerQASYMM8toS32Dataset), framework::dataset::make(&quot;ConvertPolicy&quot;, { ConvertPolicy::SATURATE })), DepthConvertLayerZeroShiftDataset), framework::dataset::make(&quot;QuantizationInfo&quot;, { QuantizationInfo(0.5f, 10) })))</td></tr>
<tr class="separator:a4fea8481f44724a8e8bff7909d102a88"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1a197db94514497353680c755f01ed64"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1a197db94514497353680c755f01ed64">FIXTURE_DATA_TEST_CASE</a> (RunLarge, NEDepthConvertLayerQuantizedToS32Fixture&lt; uint8_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(datasets::LargeShapes(), DepthConvertLayerQASYMM8toS32Dataset), framework::dataset::make(&quot;ConvertPolicy&quot;, { ConvertPolicy::SATURATE })), DepthConvertLayerZeroShiftDataset), framework::dataset::make(&quot;QuantizationInfo&quot;, { QuantizationInfo(0.5f, 10) })))</td></tr>
<tr class="separator:a1a197db94514497353680c755f01ed64"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abe3738f19ffb6b80ec70d654df1ca295"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#abe3738f19ffb6b80ec70d654df1ca295">combine</a> (combine(datasets::SmallShapes(), framework::dataset::make(&quot;ConvertPolicy&quot;, { ConvertPolicy::SATURATE, ConvertPolicy::WRAP })), DepthConvertLayerShiftDatasetNightly)</td></tr>
<tr class="separator:abe3738f19ffb6b80ec70d654df1ca295"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5fd6f5349d587332e95bd5a2b6a7e590"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5fd6f5349d587332e95bd5a2b6a7e590">FIXTURE_DATA_TEST_CASE</a> (RunSmall, NEDepthConvertLayerToU16Fixture&lt; uint8_t &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(datasets::SmallShapes(), DepthConvertLayerU8toU16Dataset), framework::dataset::make(&quot;ConvertPolicy&quot;, { ConvertPolicy::SATURATE, ConvertPolicy::WRAP })), DepthConvertLayerShiftDatasetPrecommit))</td></tr>
<tr class="separator:a5fd6f5349d587332e95bd5a2b6a7e590"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6cd61f46b301649d311e78770c2b92fc"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6cd61f46b301649d311e78770c2b92fc">FIXTURE_DATA_TEST_CASE</a> (RunLarge, NEDepthConvertLayerToU16Fixture&lt; uint8_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(datasets::LargeShapes(), DepthConvertLayerU8toU16Dataset), framework::dataset::make(&quot;ConvertPolicy&quot;, { ConvertPolicy::SATURATE, ConvertPolicy::WRAP })), DepthConvertLayerShiftDatasetNightly))</td></tr>
<tr class="separator:a6cd61f46b301649d311e78770c2b92fc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a70fea1138041dba48a52aecb42934ee6"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70fea1138041dba48a52aecb42934ee6">FIXTURE_DATA_TEST_CASE</a> (RunSmall, NEDepthConvertLayerToS16Fixture&lt; uint8_t &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(datasets::SmallShapes(), DepthConvertLayerU8toS16Dataset), framework::dataset::make(&quot;ConvertPolicy&quot;, { ConvertPolicy::SATURATE, ConvertPolicy::WRAP })), DepthConvertLayerShiftDatasetPrecommit))</td></tr>
<tr class="separator:a70fea1138041dba48a52aecb42934ee6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a47da6f70838d74c07313856701590369"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a47da6f70838d74c07313856701590369">FIXTURE_DATA_TEST_CASE</a> (RunLarge, NEDepthConvertLayerToS16Fixture&lt; uint8_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(datasets::LargeShapes(), DepthConvertLayerU8toS16Dataset), framework::dataset::make(&quot;ConvertPolicy&quot;, { ConvertPolicy::SATURATE, ConvertPolicy::WRAP })), DepthConvertLayerShiftDatasetNightly))</td></tr>
<tr class="separator:a47da6f70838d74c07313856701590369"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab9c2577204a8c1d367f78122cdcc5c7b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ab9c2577204a8c1d367f78122cdcc5c7b">FIXTURE_DATA_TEST_CASE</a> (RunSmall, NEDepthConvertLayerToS32Fixture&lt; uint8_t &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(datasets::SmallShapes(), DepthConvertLayerU8toS32Dataset), framework::dataset::make(&quot;ConvertPolicy&quot;, { ConvertPolicy::SATURATE, ConvertPolicy::WRAP })), DepthConvertLayerShiftDatasetPrecommit))</td></tr>
<tr class="separator:ab9c2577204a8c1d367f78122cdcc5c7b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd91ebe4cb07dd64c87e758c5c36942a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#acd91ebe4cb07dd64c87e758c5c36942a">FIXTURE_DATA_TEST_CASE</a> (RunLarge, NEDepthConvertLayerToS32Fixture&lt; uint8_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(datasets::LargeShapes(), DepthConvertLayerU8toS32Dataset), framework::dataset::make(&quot;ConvertPolicy&quot;, { ConvertPolicy::SATURATE, ConvertPolicy::WRAP })), DepthConvertLayerShiftDatasetNightly))</td></tr>
<tr class="separator:acd91ebe4cb07dd64c87e758c5c36942a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a53fe53dbaa08e732bbbb31338cd29e26"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a53fe53dbaa08e732bbbb31338cd29e26">FIXTURE_DATA_TEST_CASE</a> (RunSmall, NEDepthConvertLayerToF32Fixture&lt; uint8_t &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(datasets::SmallShapes(), DepthConvertLayerU8toF32Dataset), framework::dataset::make(&quot;ConvertPolicy&quot;, { ConvertPolicy::SATURATE, ConvertPolicy::WRAP })), DepthConvertLayerShiftDatasetPrecommit))</td></tr>
<tr class="separator:a53fe53dbaa08e732bbbb31338cd29e26"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa5f8fe3a6732211d85d10f15894b32e8"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa5f8fe3a6732211d85d10f15894b32e8">FIXTURE_DATA_TEST_CASE</a> (RunLarge, NEDepthConvertLayerToF32Fixture&lt; uint8_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(datasets::LargeShapes(), DepthConvertLayerU8toF32Dataset), framework::dataset::make(&quot;ConvertPolicy&quot;, { ConvertPolicy::SATURATE, ConvertPolicy::WRAP })), DepthConvertLayerShiftDatasetNightly))</td></tr>
<tr class="separator:aa5f8fe3a6732211d85d10f15894b32e8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa9a114da0c4cfedaff1c8752d8985ad6"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa9a114da0c4cfedaff1c8752d8985ad6">FIXTURE_DATA_TEST_CASE</a> (RunSmall, NEDepthConvertLayerToU8Fixture&lt; uint16_t &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(datasets::SmallShapes(), DepthConvertLayerU16toU8Dataset), framework::dataset::make(&quot;ConvertPolicy&quot;, { ConvertPolicy::SATURATE, ConvertPolicy::WRAP })), DepthConvertLayerShiftDatasetPrecommit))</td></tr>
<tr class="separator:aa9a114da0c4cfedaff1c8752d8985ad6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aecbc9f84d3d7a3fb02d5721294fb6c13"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aecbc9f84d3d7a3fb02d5721294fb6c13">FIXTURE_DATA_TEST_CASE</a> (RunLarge, NEDepthConvertLayerToU8Fixture&lt; uint16_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(datasets::LargeShapes(), DepthConvertLayerU16toU8Dataset), framework::dataset::make(&quot;ConvertPolicy&quot;, { ConvertPolicy::SATURATE, ConvertPolicy::WRAP })), DepthConvertLayerShiftDatasetNightly))</td></tr>
<tr class="separator:aecbc9f84d3d7a3fb02d5721294fb6c13"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a882f99ff44ec40f3e0fd424b08ec7685"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a882f99ff44ec40f3e0fd424b08ec7685">FIXTURE_DATA_TEST_CASE</a> (RunSmall, NEDepthConvertLayerToU32Fixture&lt; uint16_t &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(datasets::SmallShapes(), DepthConvertLayerU16toU32Dataset), framework::dataset::make(&quot;ConvertPolicy&quot;, { ConvertPolicy::SATURATE, ConvertPolicy::WRAP })), DepthConvertLayerShiftDatasetPrecommit))</td></tr>
<tr class="separator:a882f99ff44ec40f3e0fd424b08ec7685"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0162d6ec6327d51d5885cd589a5d2c0f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a0162d6ec6327d51d5885cd589a5d2c0f">FIXTURE_DATA_TEST_CASE</a> (RunLarge, NEDepthConvertLayerToU32Fixture&lt; uint16_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(datasets::LargeShapes(), DepthConvertLayerU16toU32Dataset), framework::dataset::make(&quot;ConvertPolicy&quot;, { ConvertPolicy::SATURATE, ConvertPolicy::WRAP })), DepthConvertLayerShiftDatasetNightly))</td></tr>
<tr class="separator:a0162d6ec6327d51d5885cd589a5d2c0f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab1bdc4a70ab7575a4101c4894dc25ac4"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ab1bdc4a70ab7575a4101c4894dc25ac4">FIXTURE_DATA_TEST_CASE</a> (RunSmall, NEDepthConvertLayerToU8Fixture&lt; int16_t &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(datasets::SmallShapes(), DepthConvertLayerS16toU8Dataset), framework::dataset::make(&quot;ConvertPolicy&quot;, { ConvertPolicy::SATURATE, ConvertPolicy::WRAP })), DepthConvertLayerShiftDatasetPrecommit))</td></tr>
<tr class="separator:ab1bdc4a70ab7575a4101c4894dc25ac4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6b16bdb8af5c8d25cb9ce55cf48f30b8"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6b16bdb8af5c8d25cb9ce55cf48f30b8">FIXTURE_DATA_TEST_CASE</a> (RunLarge, NEDepthConvertLayerToU8Fixture&lt; int16_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(datasets::LargeShapes(), DepthConvertLayerS16toU8Dataset), framework::dataset::make(&quot;ConvertPolicy&quot;, { ConvertPolicy::SATURATE, ConvertPolicy::WRAP })), DepthConvertLayerShiftDatasetNightly))</td></tr>
<tr class="separator:a6b16bdb8af5c8d25cb9ce55cf48f30b8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a16b15800359985e55e1dc30ca0e2c502"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a16b15800359985e55e1dc30ca0e2c502">FIXTURE_DATA_TEST_CASE</a> (RunSmall, NEDepthConvertLayerToS32Fixture&lt; int16_t &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(datasets::SmallShapes(), DepthConvertLayerS16toS32Dataset), framework::dataset::make(&quot;ConvertPolicy&quot;, { ConvertPolicy::SATURATE, ConvertPolicy::WRAP })), DepthConvertLayerShiftDatasetPrecommit))</td></tr>
<tr class="separator:a16b15800359985e55e1dc30ca0e2c502"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a638d1efdb7f5896b39e5e2f555ba083d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a638d1efdb7f5896b39e5e2f555ba083d">FIXTURE_DATA_TEST_CASE</a> (RunLarge, NEDepthConvertLayerToS32Fixture&lt; int16_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(datasets::LargeShapes(), DepthConvertLayerS16toS32Dataset), framework::dataset::make(&quot;ConvertPolicy&quot;, { ConvertPolicy::SATURATE, ConvertPolicy::WRAP })), DepthConvertLayerShiftDatasetNightly))</td></tr>
<tr class="separator:a638d1efdb7f5896b39e5e2f555ba083d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a663cf574076fa74aafceb64c2840d800"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a663cf574076fa74aafceb64c2840d800">FIXTURE_DATA_TEST_CASE</a> (RunSmall, NEDepthConvertLayerToS32Fixture&lt; float &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(datasets::SmallShapes(), DepthConvertLayerF32toS32Dataset), framework::dataset::make(&quot;ConvertPolicy&quot;, { ConvertPolicy::SATURATE, ConvertPolicy::WRAP })), DepthConvertLayerZeroShiftDataset))</td></tr>
<tr class="separator:a663cf574076fa74aafceb64c2840d800"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0126dfa35dbade1af4efd9507719d3b8"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a0126dfa35dbade1af4efd9507719d3b8">FIXTURE_DATA_TEST_CASE</a> (RunLarge, NEDepthConvertLayerToS32Fixture&lt; float &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(datasets::LargeShapes(), DepthConvertLayerF32toS32Dataset), framework::dataset::make(&quot;ConvertPolicy&quot;, { ConvertPolicy::SATURATE, ConvertPolicy::WRAP })), DepthConvertLayerZeroShiftDataset))</td></tr>
<tr class="separator:a0126dfa35dbade1af4efd9507719d3b8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acb077e6fad2155689200c74d2c29e72c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#acb077e6fad2155689200c74d2c29e72c">FIXTURE_DATA_TEST_CASE</a> (RunSmall, NEDepthConvertLayerToU8Fixture&lt; float &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(datasets::SmallShapes(), DepthConvertLayerF32toU8Dataset), framework::dataset::make(&quot;ConvertPolicy&quot;, { ConvertPolicy::SATURATE, ConvertPolicy::WRAP })), DepthConvertLayerZeroShiftDataset))</td></tr>
<tr class="separator:acb077e6fad2155689200c74d2c29e72c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3c8cfdb7b5c1bb8df8599b451466d984"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3c8cfdb7b5c1bb8df8599b451466d984">FIXTURE_DATA_TEST_CASE</a> (RunLarge, NEDepthConvertLayerToU8Fixture&lt; float &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(datasets::LargeShapes(), DepthConvertLayerF32toU8Dataset), framework::dataset::make(&quot;ConvertPolicy&quot;, { ConvertPolicy::SATURATE, ConvertPolicy::WRAP })), DepthConvertLayerZeroShiftDataset))</td></tr>
<tr class="separator:a3c8cfdb7b5c1bb8df8599b451466d984"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af24fb08f9369fc922a3b00b55ecdeae9"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#af24fb08f9369fc922a3b00b55ecdeae9">FIXTURE_DATA_TEST_CASE</a> (RunSmall, NEDepthConvertLayerToQASYMM8Fixture&lt; float &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(datasets::SmallShapes(), DepthConvertLayerF32toQASYMM8Dataset), framework::dataset::make(&quot;ConvertPolicy&quot;, { ConvertPolicy::SATURATE })), DepthConvertLayerZeroShiftDataset), framework::dataset::make(&quot;QuantizationInfo&quot;, { QuantizationInfo(0.5f, 10) })))</td></tr>
<tr class="separator:af24fb08f9369fc922a3b00b55ecdeae9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a231caed2436e869e9831e4bd164ae817"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a231caed2436e869e9831e4bd164ae817">FIXTURE_DATA_TEST_CASE</a> (RunLarge, NEDepthConvertLayerToQASYMM8Fixture&lt; float &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(datasets::LargeShapes(), DepthConvertLayerF32toQASYMM8Dataset), framework::dataset::make(&quot;ConvertPolicy&quot;, { ConvertPolicy::SATURATE })), DepthConvertLayerZeroShiftDataset), framework::dataset::make(&quot;QuantizationInfo&quot;, { QuantizationInfo(0.5f, 10) })))</td></tr>
<tr class="separator:a231caed2436e869e9831e4bd164ae817"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aad0f05aa7ab97bc4d3a98b82d4501ae7"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aad0f05aa7ab97bc4d3a98b82d4501ae7">FIXTURE_DATA_TEST_CASE</a> (RunSmall, NEDepthConvertLayerToF32Fixture&lt; int32_t &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(datasets::SmallShapes(), DepthConvertLayerS32toF32Dataset), framework::dataset::make(&quot;ConvertPolicy&quot;, { ConvertPolicy::SATURATE, ConvertPolicy::WRAP })), DepthConvertLayerZeroShiftDataset))</td></tr>
<tr class="separator:aad0f05aa7ab97bc4d3a98b82d4501ae7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4eb96234c03353ae9019ac3dc6cd4829"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4eb96234c03353ae9019ac3dc6cd4829">FIXTURE_DATA_TEST_CASE</a> (RunLarge, NEDepthConvertLayerToF32Fixture&lt; int32_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(datasets::LargeShapes(), DepthConvertLayerS32toF32Dataset), framework::dataset::make(&quot;ConvertPolicy&quot;, { ConvertPolicy::SATURATE, ConvertPolicy::WRAP })), DepthConvertLayerZeroShiftDataset))</td></tr>
<tr class="separator:a4eb96234c03353ae9019ac3dc6cd4829"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6c22387f86fdb0f17bd793f5ae029bea"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6c22387f86fdb0f17bd793f5ae029bea">FIXTURE_DATA_TEST_CASE</a> (RunSmall, NEDepthConvertLayerToQASYMM8Fixture&lt; int32_t &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(datasets::SmallShapes(), DepthConvertLayerS32toQASYMM8Dataset), framework::dataset::make(&quot;ConvertPolicy&quot;, { ConvertPolicy::SATURATE })), DepthConvertLayerZeroShiftDataset), framework::dataset::make(&quot;QuantizationInfo&quot;, { QuantizationInfo(0.5f, 10) })))</td></tr>
<tr class="separator:a6c22387f86fdb0f17bd793f5ae029bea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad926fbaeafa42699aba42093fc33e06c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad926fbaeafa42699aba42093fc33e06c">FIXTURE_DATA_TEST_CASE</a> (RunLarge, NEDepthConvertLayerToQASYMM8Fixture&lt; int32_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(datasets::LargeShapes(), DepthConvertLayerS32toQASYMM8Dataset), framework::dataset::make(&quot;ConvertPolicy&quot;, { ConvertPolicy::SATURATE })), DepthConvertLayerZeroShiftDataset), framework::dataset::make(&quot;QuantizationInfo&quot;, { QuantizationInfo(0.5f, 10) })))</td></tr>
<tr class="separator:ad926fbaeafa42699aba42093fc33e06c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8d6ac0e104d03f99644d8ef4f0a5746f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8d6ac0e104d03f99644d8ef4f0a5746f">FIXTURE_DATA_TEST_CASE</a> (RunSmall, NEDepthConvertLayerToU8Fixture&lt; int32_t &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(datasets::SmallShapes(), DepthConvertLayerS32toU8Dataset), framework::dataset::make(&quot;ConvertPolicy&quot;, { ConvertPolicy::SATURATE, ConvertPolicy::WRAP })), DepthConvertLayerZeroShiftDataset))</td></tr>
<tr class="separator:a8d6ac0e104d03f99644d8ef4f0a5746f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a165b06761adcfe813fcf39b76f644cf6"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a165b06761adcfe813fcf39b76f644cf6">FIXTURE_DATA_TEST_CASE</a> (RunLarge, NEDepthConvertLayerToU8Fixture&lt; int32_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(datasets::LargeShapes(), DepthConvertLayerS32toU8Dataset), framework::dataset::make(&quot;ConvertPolicy&quot;, { ConvertPolicy::SATURATE, ConvertPolicy::WRAP })), DepthConvertLayerZeroShiftDataset))</td></tr>
<tr class="separator:a165b06761adcfe813fcf39b76f644cf6"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_59425e443f801f1f2fd8bbe4959a3ccf.xhtml">tests</a></li><li class="navelem"><a class="el" href="dir_e7c7b16542faa38cb4655ff1750d3604.xhtml">validation</a></li><li class="navelem"><a class="el" href="dir_0538a82dae0483a21d0f1e9d7e0a45c6.xhtml">NEON</a></li><li class="navelem"><a class="el" href="_n_e_o_n_2_depth_convert_layer_8cpp.xhtml">DepthConvertLayer.cpp</a></li>
    <li class="footer">Generated on Thu Mar 5 2020 16:07:08 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
