<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/core/GLES_COMPUTE/OpenGLES.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_open_g_l_e_s_8cpp_source.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">OpenGLES.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_open_g_l_e_s_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2017-2018 ARM Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_open_g_l_e_s_8h.xhtml">arm_compute/core/GLES_COMPUTE/OpenGLES.h</a>&quot;</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &lt;dlfcn.h&gt;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &lt;iostream&gt;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div><div class="line"><a name="l00031"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#addae612338f2d0f234acaa34df861926">   31</a></span>&#160;<span class="keyword">using</span> <a class="code" href="_open_g_l_e_s_8cpp.xhtml#addae612338f2d0f234acaa34df861926">eglGetProcAddress_func</a>         = __eglMustCastToProperFunctionPointerType EGLAPIENTRY (*)(<span class="keyword">const</span> <span class="keywordtype">char</span> *procname);</div><div class="line"><a name="l00032"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#a39bb058fb4f13b0ceb51a30c2e7c13ba">   32</a></span>&#160;<span class="keyword">using</span> <a class="code" href="_open_g_l_e_s_8cpp.xhtml#a39bb058fb4f13b0ceb51a30c2e7c13ba">eglBindAPI_func</a>                = EGLBoolean EGLAPIENTRY (*)(EGLenum api);</div><div class="line"><a name="l00033"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#a45bcdc2fee472f58603654d00fac7fea">   33</a></span>&#160;<span class="keyword">using</span> <a class="code" href="_open_g_l_e_s_8cpp.xhtml#a45bcdc2fee472f58603654d00fac7fea">eglChooseConfig_func</a>           = EGLBoolean EGLAPIENTRY (*)(EGLDisplay dpy, <span class="keyword">const</span> EGLint *attrib_list, EGLConfig *configs, EGLint config_size, EGLint *num_config);</div><div class="line"><a name="l00034"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#ae40fe14e93e58a809bbf1f8bebcee62b">   34</a></span>&#160;<span class="keyword">using</span> <a class="code" href="_open_g_l_e_s_8cpp.xhtml#ae40fe14e93e58a809bbf1f8bebcee62b">eglCreateContext_func</a>          = EGLContext EGLAPIENTRY (*)(EGLDisplay dpy, EGLConfig config, EGLContext share_context, <span class="keyword">const</span> EGLint *attrib_list);</div><div class="line"><a name="l00035"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#ad9a1fc168717a342b9e39793605ada2b">   35</a></span>&#160;<span class="keyword">using</span> <a class="code" href="_open_g_l_e_s_8cpp.xhtml#ad9a1fc168717a342b9e39793605ada2b">eglDestroyContext_func</a>         = EGLBoolean EGLAPIENTRY (*)(EGLDisplay dpy, EGLContext ctx);</div><div class="line"><a name="l00036"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#a26e9fec0fd229ae63fd93edb24cb9f3a">   36</a></span>&#160;<span class="keyword">using</span> <a class="code" href="_open_g_l_e_s_8cpp.xhtml#a26e9fec0fd229ae63fd93edb24cb9f3a">eglGetDisplay_func</a>             = EGLDisplay EGLAPIENTRY (*)(EGLNativeDisplayType display_id);</div><div class="line"><a name="l00037"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#a73309e644fd9f860f55ca14d24119cdf">   37</a></span>&#160;<span class="keyword">using</span> <a class="code" href="_open_g_l_e_s_8cpp.xhtml#a73309e644fd9f860f55ca14d24119cdf">eglInitialize_func</a>             = EGLBoolean EGLAPIENTRY (*)(EGLDisplay dpy, EGLint *major, EGLint *minor);</div><div class="line"><a name="l00038"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#a3e001bb1fbd825f9e9553b5d17ffb9f1">   38</a></span>&#160;<span class="keyword">using</span> <a class="code" href="_open_g_l_e_s_8cpp.xhtml#a3e001bb1fbd825f9e9553b5d17ffb9f1">eglMakeCurrent_func</a>            = EGLBoolean EGLAPIENTRY (*)(EGLDisplay dpy, EGLSurface draw, EGLSurface read, EGLContext ctx);</div><div class="line"><a name="l00039"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#ab45761847d030754739c1b3b63cdbeab">   39</a></span>&#160;<span class="keyword">using</span> <a class="code" href="_open_g_l_e_s_8cpp.xhtml#ab45761847d030754739c1b3b63cdbeab">eglTerminate_func</a>              = EGLBoolean EGLAPIENTRY (*)(EGLDisplay dpy);</div><div class="line"><a name="l00040"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#a3645a2eb4da58ba0c3ed5c295913caf3">   40</a></span>&#160;<span class="keyword">using</span> <a class="code" href="_open_g_l_e_s_8cpp.xhtml#a3645a2eb4da58ba0c3ed5c295913caf3">eglGetError_func</a>               = EGLint         EGLAPIENTRY (*)();</div><div class="line"><a name="l00041"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#ac02a0be24c3d1f37e5983f057355b192">   41</a></span>&#160;<span class="keyword">using</span> <a class="code" href="_open_g_l_e_s_8cpp.xhtml#ac02a0be24c3d1f37e5983f057355b192">eglQueryString_func</a>            = <span class="keywordtype">char</span> <span class="keyword">const</span> * EGLAPIENTRY (*)(EGLDisplay dpy, EGLint name);</div><div class="line"><a name="l00042"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#a793509ad769774d6d2b2898a9307d745">   42</a></span>&#160;<span class="keyword">using</span> <a class="code" href="_open_g_l_e_s_8cpp.xhtml#a793509ad769774d6d2b2898a9307d745">glAttachShader_func</a>            = <span class="keywordtype">void</span> GL_APIENTRY (*)(GLuint program, GLuint shader);</div><div class="line"><a name="l00043"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#aeb78376a832e7aa3cb91e1ceef89666e">   43</a></span>&#160;<span class="keyword">using</span> <a class="code" href="_open_g_l_e_s_8cpp.xhtml#aeb78376a832e7aa3cb91e1ceef89666e">glCompileShader_func</a>           = <span class="keywordtype">void</span> GL_APIENTRY (*)(GLuint shader);</div><div class="line"><a name="l00044"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#a0dd4e24993409491077ee74922a404e1">   44</a></span>&#160;<span class="keyword">using</span> <a class="code" href="_open_g_l_e_s_8cpp.xhtml#a0dd4e24993409491077ee74922a404e1">glCreateProgram_func</a>           = GLuint GL_APIENTRY (*)();</div><div class="line"><a name="l00045"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#a58cb9a679676e373b4cc6d0a518131d5">   45</a></span>&#160;<span class="keyword">using</span> <a class="code" href="_open_g_l_e_s_8cpp.xhtml#a58cb9a679676e373b4cc6d0a518131d5">glCreateShader_func</a>            = GLuint GL_APIENTRY (*)(GLenum <a class="code" href="namespace_gemm_tuner.xhtml#a7aead736a07eaf25623ad7bfa1f0ee2d">type</a>);</div><div class="line"><a name="l00046"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#a7d313afe766055d773c95b359521fb22">   46</a></span>&#160;<span class="keyword">using</span> <a class="code" href="_open_g_l_e_s_8cpp.xhtml#a7d313afe766055d773c95b359521fb22">glDeleteProgram_func</a>           = <span class="keywordtype">void</span> GL_APIENTRY (*)(GLuint program);</div><div class="line"><a name="l00047"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#a0d49b3e64773db40479f7c4b1835ec1d">   47</a></span>&#160;<span class="keyword">using</span> <a class="code" href="_open_g_l_e_s_8cpp.xhtml#a0d49b3e64773db40479f7c4b1835ec1d">glDeleteShader_func</a>            = <span class="keywordtype">void</span> GL_APIENTRY (*)(GLuint shader);</div><div class="line"><a name="l00048"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#a8a88f545679d1909b29aabad8fbfe31e">   48</a></span>&#160;<span class="keyword">using</span> <a class="code" href="_open_g_l_e_s_8cpp.xhtml#a8a88f545679d1909b29aabad8fbfe31e">glDetachShader_func</a>            = <span class="keywordtype">void</span> GL_APIENTRY (*)(GLuint program, GLuint shader);</div><div class="line"><a name="l00049"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#ad5109705500d3ca577909a72388d2dba">   49</a></span>&#160;<span class="keyword">using</span> <a class="code" href="_open_g_l_e_s_8cpp.xhtml#ad5109705500d3ca577909a72388d2dba">glGetProgramInfoLog_func</a>       = <span class="keywordtype">void</span> GL_APIENTRY (*)(GLuint program, GLsizei bufsize, GLsizei *length, GLchar *infolog);</div><div class="line"><a name="l00050"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#a8f2e0943b90ed6e7ff51b3458fcbd6aa">   50</a></span>&#160;<span class="keyword">using</span> <a class="code" href="_open_g_l_e_s_8cpp.xhtml#a8f2e0943b90ed6e7ff51b3458fcbd6aa">glGetProgramiv_func</a>            = <span class="keywordtype">void</span> GL_APIENTRY (*)(GLuint program, GLenum pname, GLint *params);</div><div class="line"><a name="l00051"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#a64a4e181f49b72a4c50d8e8e5ad52076">   51</a></span>&#160;<span class="keyword">using</span> <a class="code" href="_open_g_l_e_s_8cpp.xhtml#a64a4e181f49b72a4c50d8e8e5ad52076">glGetShaderInfoLog_func</a>        = <span class="keywordtype">void</span> GL_APIENTRY (*)(GLuint shader, GLsizei bufsize, GLsizei *length, GLchar *infolog);</div><div class="line"><a name="l00052"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#a098aea49ac81aedbe84aa20873dbacac">   52</a></span>&#160;<span class="keyword">using</span> <a class="code" href="_open_g_l_e_s_8cpp.xhtml#a098aea49ac81aedbe84aa20873dbacac">glGetShaderiv_func</a>             = <span class="keywordtype">void</span> GL_APIENTRY (*)(GLuint shader, GLenum pname, GLint *params);</div><div class="line"><a name="l00053"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#aaba74f195d36a2db4f13739aae07424a">   53</a></span>&#160;<span class="keyword">using</span> <a class="code" href="_open_g_l_e_s_8cpp.xhtml#aaba74f195d36a2db4f13739aae07424a">glLinkProgram_func</a>             = <span class="keywordtype">void</span> GL_APIENTRY (*)(GLuint program);</div><div class="line"><a name="l00054"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#a8654fc903edd9eacfe22788cab9b83e7">   54</a></span>&#160;<span class="keyword">using</span> <a class="code" href="_open_g_l_e_s_8cpp.xhtml#a8654fc903edd9eacfe22788cab9b83e7">glShaderSource_func</a>            = <span class="keywordtype">void</span> GL_APIENTRY (*)(GLuint shader, GLsizei count, <span class="keyword">const</span> GLchar *<span class="keyword">const</span> *string, <span class="keyword">const</span> GLint *length);</div><div class="line"><a name="l00055"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#a8dbb590cdc005f7db2dae87085921ec1">   55</a></span>&#160;<span class="keyword">using</span> <a class="code" href="_open_g_l_e_s_8cpp.xhtml#a8dbb590cdc005f7db2dae87085921ec1">glUseProgram_func</a>              = <span class="keywordtype">void</span> GL_APIENTRY (*)(GLuint program);</div><div class="line"><a name="l00056"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#aca46e08b3624bcfc5540d0d36e577688">   56</a></span>&#160;<span class="keyword">using</span> <a class="code" href="_open_g_l_e_s_8cpp.xhtml#aca46e08b3624bcfc5540d0d36e577688">glBindBuffer_func</a>              = <span class="keywordtype">void</span> GL_APIENTRY (*)(GLenum target, GLuint buffer);</div><div class="line"><a name="l00057"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#a435a9ea180e443d4500084da695323b6">   57</a></span>&#160;<span class="keyword">using</span> <a class="code" href="_open_g_l_e_s_8cpp.xhtml#a435a9ea180e443d4500084da695323b6">glBindBufferBase_func</a>          = <span class="keywordtype">void</span> GL_APIENTRY (*)(GLenum target, GLuint index, GLuint buffer);</div><div class="line"><a name="l00058"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#a229121aaf2c5e610f5e3cab090cfab38">   58</a></span>&#160;<span class="keyword">using</span> <a class="code" href="_open_g_l_e_s_8cpp.xhtml#a229121aaf2c5e610f5e3cab090cfab38">glBufferData_func</a>              = <span class="keywordtype">void</span> GL_APIENTRY (*)(GLenum target, GLsizeiptr size, <span class="keyword">const</span> GLvoid *data, GLenum usage);</div><div class="line"><a name="l00059"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#a4e3efbc91e67ce6aa1659916556634ab">   59</a></span>&#160;<span class="keyword">using</span> <a class="code" href="_open_g_l_e_s_8cpp.xhtml#a4e3efbc91e67ce6aa1659916556634ab">glDeleteBuffers_func</a>           = <span class="keywordtype">void</span> GL_APIENTRY (*)(GLsizei n, <span class="keyword">const</span> GLuint *buffers);</div><div class="line"><a name="l00060"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#ab67febd926ffed1c0d55a827dafeda18">   60</a></span>&#160;<span class="keyword">using</span> <a class="code" href="_open_g_l_e_s_8cpp.xhtml#ab67febd926ffed1c0d55a827dafeda18">glDispatchCompute_func</a>         = <span class="keywordtype">void</span> GL_APIENTRY (*)(GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);</div><div class="line"><a name="l00061"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#a607609f737fab0b0565a7b84f2fa7d98">   61</a></span>&#160;<span class="keyword">using</span> <a class="code" href="_open_g_l_e_s_8cpp.xhtml#a607609f737fab0b0565a7b84f2fa7d98">glFlush_func</a>                   = <span class="keywordtype">void</span>      GL_APIENTRY (*)();</div><div class="line"><a name="l00062"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#a3b33df6fc93d0e151b779d1f253ceb97">   62</a></span>&#160;<span class="keyword">using</span> <a class="code" href="_open_g_l_e_s_8cpp.xhtml#a3b33df6fc93d0e151b779d1f253ceb97">glGenBuffers_func</a>              = <span class="keywordtype">void</span> GL_APIENTRY (*)(GLsizei n, GLuint *buffers);</div><div class="line"><a name="l00063"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#abdeb5e4397d8da638a60f53699040faf">   63</a></span>&#160;<span class="keyword">using</span> <a class="code" href="_open_g_l_e_s_8cpp.xhtml#abdeb5e4397d8da638a60f53699040faf">glGetProgramResourceIndex_func</a> = GLuint GL_APIENTRY (*)(GLuint program, GLenum programInterface, <span class="keyword">const</span> GLchar *name);</div><div class="line"><a name="l00064"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#acb6c0529eae7ee48cbde0d1e1389522d">   64</a></span>&#160;<span class="keyword">using</span> <a class="code" href="_open_g_l_e_s_8cpp.xhtml#acb6c0529eae7ee48cbde0d1e1389522d">glGetUniformLocation_func</a>      = GLint GL_APIENTRY (*)(GLuint program, <span class="keyword">const</span> GLchar *name);</div><div class="line"><a name="l00065"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#a2ea23820bdcb09cccc54556c879de64c">   65</a></span>&#160;<span class="keyword">using</span> <a class="code" href="_open_g_l_e_s_8cpp.xhtml#a2ea23820bdcb09cccc54556c879de64c">glMapBufferRange_func</a>          = <span class="keywordtype">void</span> *GL_APIENTRY (*)(GLenum target, GLintptr <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>, GLsizeiptr length, GLbitfield access);</div><div class="line"><a name="l00066"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#af9416600d973cf090c41f584c874dd9d">   66</a></span>&#160;<span class="keyword">using</span> <a class="code" href="_open_g_l_e_s_8cpp.xhtml#af9416600d973cf090c41f584c874dd9d">glMemoryBarrier_func</a>           = <span class="keywordtype">void</span> GL_APIENTRY (*)(GLbitfield barriers);</div><div class="line"><a name="l00067"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#a90f868801b1aacb4e6732d56a4a80447">   67</a></span>&#160;<span class="keyword">using</span> <a class="code" href="_open_g_l_e_s_8cpp.xhtml#a90f868801b1aacb4e6732d56a4a80447">glUniform1ui_func</a>              = <span class="keywordtype">void</span> GL_APIENTRY (*)(GLint location, GLuint v0);</div><div class="line"><a name="l00068"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#ad2a594cf5da72d124e1b7876af63897a">   68</a></span>&#160;<span class="keyword">using</span> <a class="code" href="_open_g_l_e_s_8cpp.xhtml#ad2a594cf5da72d124e1b7876af63897a">glUnmapBuffer_func</a>             = GLboolean GL_APIENTRY (*)(GLenum target);</div><div class="line"><a name="l00069"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#a1ee47b6b815699bd4da94c665c219572">   69</a></span>&#160;<span class="keyword">using</span> <a class="code" href="_open_g_l_e_s_8cpp.xhtml#a1ee47b6b815699bd4da94c665c219572">glGetError_func</a>                = GLenum          GL_APIENTRY (*)();</div><div class="line"><a name="l00070"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#ab6309a5c7ea63364d22adc28fceeae12">   70</a></span>&#160;<span class="keyword">using</span> <a class="code" href="_open_g_l_e_s_8cpp.xhtml#ab6309a5c7ea63364d22adc28fceeae12">glGetString_func</a>               = <span class="keyword">const</span> GLubyte * GL_APIENTRY (*)(GLenum name);</div><div class="line"><a name="l00071"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#a72c559fda39b1ce7e3cb8bdec4f7e23d">   71</a></span>&#160;<span class="keyword">using</span> <a class="code" href="_open_g_l_e_s_8cpp.xhtml#a72c559fda39b1ce7e3cb8bdec4f7e23d">glGetActiveUniformBlockiv_func</a> = <span class="keywordtype">void</span> GL_APIENTRY (*)(GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint *params);</div><div class="line"><a name="l00072"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#a408f02b52dabea4ad43a6af932ef60b0">   72</a></span>&#160;<span class="keyword">using</span> <a class="code" href="_open_g_l_e_s_8cpp.xhtml#a408f02b52dabea4ad43a6af932ef60b0">glUniformBlockBinding_func</a>     = <span class="keywordtype">void</span> GL_APIENTRY (*)(GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);</div><div class="line"><a name="l00073"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#aebb3ff24c30f701f357afbd9fbcb3cdb">   73</a></span>&#160;<span class="keyword">using</span> <a class="code" href="_open_g_l_e_s_8cpp.xhtml#aebb3ff24c30f701f357afbd9fbcb3cdb">glGetUniformBlockIndex_func</a>    = GLuint GL_APIENTRY (*)(GLuint program, <span class="keyword">const</span> GLchar *uniformBlockName);</div><div class="line"><a name="l00074"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#afe67a81cde1204302022baf01894474b">   74</a></span>&#160;<span class="keyword">using</span> <a class="code" href="_open_g_l_e_s_8cpp.xhtml#afe67a81cde1204302022baf01894474b">glGenTextures_func</a>             = <span class="keywordtype">void</span> GL_APIENTRY (*)(GLsizei n, GLuint *textures);</div><div class="line"><a name="l00075"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#a7dbe5708f69c0323c005b5911dd79e39">   75</a></span>&#160;<span class="keyword">using</span> <a class="code" href="_open_g_l_e_s_8cpp.xhtml#a7dbe5708f69c0323c005b5911dd79e39">glDeleteTextures_func</a>          = <span class="keywordtype">void</span> GL_APIENTRY (*)(GLsizei n, <span class="keyword">const</span> GLuint *textures);</div><div class="line"><a name="l00076"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#aa2f5d9a549dfc28d72e0bba335dd48b3">   76</a></span>&#160;<span class="keyword">using</span> <a class="code" href="_open_g_l_e_s_8cpp.xhtml#aa2f5d9a549dfc28d72e0bba335dd48b3">glBindTexture_func</a>             = <span class="keywordtype">void</span> GL_APIENTRY (*)(GLenum target, GLuint texture);</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="keyword">using</span> <a class="code" href="_open_g_l_e_s_8cpp.xhtml#a8a57841dd4e175e1afb79634a2fc7838">glTexImage2D_func</a>              = <span class="keywordtype">void</span> GL_APIENTRY (*)(GLenum target, GLint <a class="code" href="namespace_gemm_tuner.xhtml#afde8e18a788ccc92fc61cab298bca7e3">level</a>, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum <a class="code" href="namespace_gemm_tuner.xhtml#a7aead736a07eaf25623ad7bfa1f0ee2d">type</a>,</div><div class="line"><a name="l00078"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#a8a57841dd4e175e1afb79634a2fc7838">   78</a></span>&#160;                                                            <span class="keyword">const</span> GLvoid *pixels);</div><div class="line"><a name="l00079"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#a1c7704e1b45774a3b3e3de40224a7e00">   79</a></span>&#160;<span class="keyword">using</span> <a class="code" href="_open_g_l_e_s_8cpp.xhtml#a1c7704e1b45774a3b3e3de40224a7e00">glGenFramebuffers_func</a>      = <span class="keywordtype">void</span> GL_APIENTRY (*)(GLsizei n, GLuint *framebuffers);</div><div class="line"><a name="l00080"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#a7b5954fd97217b3141ad7e14dcc141d6">   80</a></span>&#160;<span class="keyword">using</span> <a class="code" href="_open_g_l_e_s_8cpp.xhtml#a7b5954fd97217b3141ad7e14dcc141d6">glDeleteFramebuffers_func</a>   = <span class="keywordtype">void</span> GL_APIENTRY (*)(GLsizei n, <span class="keyword">const</span> GLuint *framebuffers);</div><div class="line"><a name="l00081"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#ae3ce3fe66e38e3678fc08ffb8208d5ec">   81</a></span>&#160;<span class="keyword">using</span> <a class="code" href="_open_g_l_e_s_8cpp.xhtml#ae3ce3fe66e38e3678fc08ffb8208d5ec">glBindFramebuffer_func</a>      = <span class="keywordtype">void</span> GL_APIENTRY (*)(GLenum target, GLuint framebuffer);</div><div class="line"><a name="l00082"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#ab56dc4c4ad921ac0a23ccec193e963b2">   82</a></span>&#160;<span class="keyword">using</span> <a class="code" href="_open_g_l_e_s_8cpp.xhtml#ab56dc4c4ad921ac0a23ccec193e963b2">glFramebufferTexture2D_func</a> = <span class="keywordtype">void</span> GL_APIENTRY (*)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint <a class="code" href="namespace_gemm_tuner.xhtml#afde8e18a788ccc92fc61cab298bca7e3">level</a>);</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="keyword">class </span>GLESSymbols</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;{</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <span class="keywordtype">void</span> init()</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    {</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;        <span class="keywordtype">void</span> *egl_handle    = dlopen(<span class="stringliteral">&quot;libEGL.so&quot;</span>, RTLD_LAZY | RTLD_LOCAL);</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;        <span class="keywordtype">void</span> *glesv2_handle = dlopen(<span class="stringliteral">&quot;libGLESv2.so&quot;</span>, RTLD_LAZY | RTLD_LOCAL);</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        <span class="keywordtype">void</span> *glesv3_handle = dlopen(<span class="stringliteral">&quot;libGLESv3.so&quot;</span>, RTLD_LAZY | RTLD_LOCAL);</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        <span class="keywordflow">if</span>(egl_handle == <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        {</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;            std::cerr &lt;&lt; <span class="stringliteral">&quot;Can&#39;t load libEGL.so: &quot;</span> &lt;&lt; dlerror() &lt;&lt; std::endl;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        }</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        <span class="keywordflow">else</span></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        {</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="preprocessor">#undef EGL_ENTRY</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="preprocessor">#define EGL_ENTRY(_api) _api = reinterpret_cast&lt;_api##_func&gt;(dlsym(egl_handle, #_api));</span></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="preprocessor">#include &quot;./egl_entries.in&quot;</span></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="preprocessor">#undef EGL_ENTRY</span></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;            <span class="keywordflow">if</span>(<a class="code" href="_open_g_l_e_s_8cpp.xhtml#a8874678c01737df89fe9fa1ffde570a8">eglGetProcAddress</a> != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;            {</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="preprocessor">#undef EGL_ENTRY</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="preprocessor">#define EGL_ENTRY(_api)   \</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="preprocessor">    if((_api) == nullptr) \</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="preprocessor">        (_api) = reinterpret_cast&lt;_api##_func&gt;(eglGetProcAddress(#_api));</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="preprocessor">#include &quot;./egl_entries.in&quot;</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="preprocessor">#undef EGL_ENTRY</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="preprocessor">#undef GL_ENTRY</span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="preprocessor">#define GL_ENTRY(_api) _api = reinterpret_cast&lt;_api##_func&gt;(eglGetProcAddress(#_api));</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="preprocessor">#include &quot;./gl_entries.in&quot;</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="preprocessor">#undef GL_ENTRY</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;            }</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;            std::vector&lt;void *&gt; handles = { glesv3_handle, glesv2_handle };</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;            <span class="keywordflow">for</span>(<span class="keyword">auto</span> &amp;handle : handles)</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;            {</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;                <span class="keywordflow">if</span>(handle != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;                {</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="preprocessor">#undef GL_ENTRY</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="preprocessor">#define GL_ENTRY(_api)    \</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="preprocessor">    if((_api) == nullptr) \</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="preprocessor">        (_api) = reinterpret_cast&lt;_api##_func&gt;(dlsym(handle, #_api));</span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="preprocessor">#include &quot;./gl_entries.in&quot;</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="preprocessor">#undef GL_ENTRY</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;                }</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;            }</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;            <span class="comment">//Don&#39;t call dlclose(handle) or all the symbols will be unloaded !</span></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;        }</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    }</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    <span class="keywordtype">bool</span> _initialized = <span class="keyword">false</span>;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    <span class="keyword">static</span> GLESSymbols &amp;get()</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    {</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        <span class="keyword">static</span> GLESSymbols symbols = GLESSymbols();</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;        <span class="keywordflow">if</span>(!symbols._initialized)</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;        {</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;            symbols._initialized = <span class="keyword">true</span>;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;            symbols.init();</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;        }</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;        <span class="keywordflow">return</span> symbols;</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    }</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="preprocessor">#undef EGL_ENTRY</span></div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="preprocessor">#undef GL_ENTRY</span></div><div class="line"><a name="l00152"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#aa3518d2943000be78d58e9d433cc4eaa">  152</a></span>&#160;<span class="preprocessor">#define EGL_ENTRY(_api) _api##_func _api = nullptr;</span></div><div class="line"><a name="l00153"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#a5b691a78f9cef2aed8c5dc87b0898b39">  153</a></span>&#160;<span class="preprocessor">#define GL_ENTRY(_api) EGL_ENTRY(_api)</span></div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="preprocessor">#include &quot;./egl_entries.in&quot;</span></div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="preprocessor">#include &quot;./gl_entries.in&quot;</span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="preprocessor">#undef EGL_ENTRY</span></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;<span class="preprocessor">#undef GL_ENTRY</span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;};</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;</div><div class="line"><a name="l00160"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#ad8ec10f67d9849be264c23c5329d9324">  160</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="namespacearm__compute.xhtml#ad8ec10f67d9849be264c23c5329d9324">arm_compute::opengles31_is_available</a>()</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;{</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    <span class="keywordflow">return</span> GLESSymbols::get().glDispatchCompute != <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;}</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;</div><div class="line"><a name="l00165"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#a8874678c01737df89fe9fa1ffde570a8">  165</a></span>&#160;__eglMustCastToProperFunctionPointerType EGLAPIENTRY <a class="code" href="_open_g_l_e_s_8cpp.xhtml#a8874678c01737df89fe9fa1ffde570a8">eglGetProcAddress</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *procname)</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;{</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().eglGetProcAddress;</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    {</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;        <span class="keywordflow">return</span> func(procname);</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    }</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    {</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    }</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;}</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;</div><div class="line"><a name="l00178"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#a0f290b0be95432b64e73ead723a947b7">  178</a></span>&#160;EGLBoolean EGLAPIENTRY <a class="code" href="_open_g_l_e_s_8cpp.xhtml#a0f290b0be95432b64e73ead723a947b7">eglBindAPI</a>(EGLenum api)</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;{</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().eglBindAPI;</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    {</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;        <span class="keywordflow">return</span> func(api);</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    }</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    {</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;        <span class="keywordflow">return</span> EGL_FALSE;</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    }</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;}</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;</div><div class="line"><a name="l00191"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#a89a92c28d6d90e4c0fd1de37f9680a79">  191</a></span>&#160;EGLBoolean EGLAPIENTRY <a class="code" href="_open_g_l_e_s_8cpp.xhtml#a89a92c28d6d90e4c0fd1de37f9680a79">eglChooseConfig</a>(EGLDisplay dpy, <span class="keyword">const</span> EGLint *attrib_list, EGLConfig *configs, EGLint config_size, EGLint *num_config)</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;{</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().eglChooseConfig;</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    {</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;        <span class="keywordflow">return</span> func(dpy, attrib_list, configs, config_size, num_config);</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    }</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    {</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;        <span class="keywordflow">return</span> EGL_FALSE;</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    }</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;}</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;</div><div class="line"><a name="l00204"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#a82878b3783ce2a10736c91f7d153d009">  204</a></span>&#160;EGLContext EGLAPIENTRY <a class="code" href="_open_g_l_e_s_8cpp.xhtml#a82878b3783ce2a10736c91f7d153d009">eglCreateContext</a>(EGLDisplay dpy, EGLConfig config, EGLContext share_context, <span class="keyword">const</span> EGLint *attrib_list)</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;{</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().eglCreateContext;</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;    {</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;        <span class="keywordflow">return</span> func(dpy, config, share_context, attrib_list);</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    }</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;    {</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;    }</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;}</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;</div><div class="line"><a name="l00217"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#a80088eae3ba8f009a48c358adcefd3ca">  217</a></span>&#160;EGLBoolean EGLAPIENTRY <a class="code" href="_open_g_l_e_s_8cpp.xhtml#a80088eae3ba8f009a48c358adcefd3ca">eglDestroyContext</a>(EGLDisplay dpy, EGLContext ctx)</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;{</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().eglDestroyContext;</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;    {</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;        <span class="keywordflow">return</span> func(dpy, ctx);</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;    }</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;    {</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;        <span class="keywordflow">return</span> EGL_FALSE;</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;    }</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;}</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;</div><div class="line"><a name="l00230"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#a2ffc3e7fe8b002896756a3508800d3fa">  230</a></span>&#160;EGLDisplay EGLAPIENTRY <a class="code" href="_open_g_l_e_s_8cpp.xhtml#a2ffc3e7fe8b002896756a3508800d3fa">eglGetDisplay</a>(EGLNativeDisplayType display_id)</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;{</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().eglGetDisplay;</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;    {</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;        <span class="keywordflow">return</span> func(display_id);</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;    }</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;    {</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;    }</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;}</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;</div><div class="line"><a name="l00243"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#a071bc3efa12248af6089950f482689b9">  243</a></span>&#160;EGLBoolean EGLAPIENTRY <a class="code" href="_open_g_l_e_s_8cpp.xhtml#a071bc3efa12248af6089950f482689b9">eglInitialize</a>(EGLDisplay dpy, EGLint *major, EGLint *minor)</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;{</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().eglInitialize;</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;    {</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;        <span class="keywordflow">return</span> func(dpy, major, minor);</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;    }</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;    {</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;        <span class="keywordflow">return</span> EGL_FALSE;</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;    }</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;}</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;</div><div class="line"><a name="l00256"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#af6db9d046fe0e996c3693373864e6254">  256</a></span>&#160;EGLBoolean EGLAPIENTRY <a class="code" href="_open_g_l_e_s_8cpp.xhtml#af6db9d046fe0e996c3693373864e6254">eglMakeCurrent</a>(EGLDisplay dpy, EGLSurface draw, EGLSurface read, EGLContext ctx)</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;{</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().eglMakeCurrent;</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;    {</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;        <span class="keywordflow">return</span> func(dpy, draw, read, ctx);</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;    }</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;    {</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;        <span class="keywordflow">return</span> EGL_FALSE;</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;    }</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;}</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;</div><div class="line"><a name="l00269"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#a184f520190322b632ca710695195746a">  269</a></span>&#160;EGLBoolean EGLAPIENTRY <a class="code" href="_open_g_l_e_s_8cpp.xhtml#a184f520190322b632ca710695195746a">eglTerminate</a>(EGLDisplay dpy)</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;{</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().eglTerminate;</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;    {</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;        <span class="keywordflow">return</span> func(dpy);</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;    }</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;    {</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;        <span class="keywordflow">return</span> EGL_FALSE;</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;    }</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;}</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;</div><div class="line"><a name="l00282"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#a161b2c24e091cfa13e2eeb66e66ccf04">  282</a></span>&#160;EGLint EGLAPIENTRY <a class="code" href="_open_g_l_e_s_8cpp.xhtml#a161b2c24e091cfa13e2eeb66e66ccf04">eglGetError</a>()</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;{</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().eglGetError;</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;    {</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;        <span class="keywordflow">return</span> func();</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;    }</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;    {</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;        <span class="keywordflow">return</span> GL_NO_ERROR;</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;    }</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;}</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;</div><div class="line"><a name="l00295"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#a4d1a4543cb39945be511a48c6b12efb8">  295</a></span>&#160;<span class="keywordtype">char</span> <span class="keyword">const</span> *EGLAPIENTRY <a class="code" href="_open_g_l_e_s_8cpp.xhtml#a4d1a4543cb39945be511a48c6b12efb8">eglQueryString</a>(EGLDisplay dpy, EGLint name)</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;{</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().eglQueryString;</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;    {</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;        <span class="keywordflow">return</span> func(dpy, name);</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;    }</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;    {</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;    }</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;}</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;</div><div class="line"><a name="l00308"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#a75f4854b14c6eba12a7feb4d53933d6f">  308</a></span>&#160;<span class="keywordtype">void</span> GL_APIENTRY <a class="code" href="_open_g_l_e_s_8cpp.xhtml#a75f4854b14c6eba12a7feb4d53933d6f">glAttachShader</a>(GLuint program, GLuint shader)</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;{</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().glAttachShader;</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;    {</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;        <span class="keywordflow">return</span> func(program, shader);</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;    }</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;    {</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;    }</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;}</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;</div><div class="line"><a name="l00321"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#a76232dcbc71f0cb2b32c4e0f46cb2b64">  321</a></span>&#160;<span class="keywordtype">void</span> GL_APIENTRY <a class="code" href="_open_g_l_e_s_8cpp.xhtml#a76232dcbc71f0cb2b32c4e0f46cb2b64">glCompileShader</a>(GLuint shader)</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;{</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().glCompileShader;</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;    {</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;        <span class="keywordflow">return</span> func(shader);</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;    }</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;    {</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;    }</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;}</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;</div><div class="line"><a name="l00334"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#add28e8aa989a1ec2bffc6a45f7a75355">  334</a></span>&#160;GLuint GL_APIENTRY <a class="code" href="_open_g_l_e_s_8cpp.xhtml#add28e8aa989a1ec2bffc6a45f7a75355">glCreateProgram</a>()</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;{</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().glCreateProgram;</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;    {</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;        <span class="keywordflow">return</span> func();</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;    }</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;    {</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;        <span class="keywordflow">return</span> 0;</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;    }</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;}</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;</div><div class="line"><a name="l00347"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#ab8cce2e1a98daed0249b9a8f929dd176">  347</a></span>&#160;GLuint GL_APIENTRY <a class="code" href="_open_g_l_e_s_8cpp.xhtml#ab8cce2e1a98daed0249b9a8f929dd176">glCreateShader</a>(GLenum <a class="code" href="namespace_gemm_tuner.xhtml#a7aead736a07eaf25623ad7bfa1f0ee2d">type</a>)</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;{</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().glCreateShader;</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;    {</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;        <span class="keywordflow">return</span> func(<a class="code" href="namespace_gemm_tuner.xhtml#a7aead736a07eaf25623ad7bfa1f0ee2d">type</a>);</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;    }</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;    {</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;        <span class="keywordflow">return</span> 0;</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;    }</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;}</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;</div><div class="line"><a name="l00360"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#a334ce7125cfb54a811b748f23f228417">  360</a></span>&#160;<span class="keywordtype">void</span> GL_APIENTRY <a class="code" href="_open_g_l_e_s_8cpp.xhtml#a334ce7125cfb54a811b748f23f228417">glDeleteProgram</a>(GLuint program)</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;{</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().glDeleteProgram;</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;    {</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;        <span class="keywordflow">return</span> func(program);</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;    }</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;    {</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;    }</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;}</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;</div><div class="line"><a name="l00373"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#a3a5fb1ea4384fc30fedc9a6caf73e6e1">  373</a></span>&#160;<span class="keywordtype">void</span> GL_APIENTRY <a class="code" href="_open_g_l_e_s_8cpp.xhtml#a3a5fb1ea4384fc30fedc9a6caf73e6e1">glDeleteShader</a>(GLuint shader)</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;{</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().glDeleteShader;</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;    {</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;        <span class="keywordflow">return</span> func(shader);</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;    }</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;    {</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;    }</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;}</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;</div><div class="line"><a name="l00386"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#a4c71a67ba2f8104097a63d4f41a7e64e">  386</a></span>&#160;<span class="keywordtype">void</span> GL_APIENTRY <a class="code" href="_open_g_l_e_s_8cpp.xhtml#a4c71a67ba2f8104097a63d4f41a7e64e">glDetachShader</a>(GLuint program, GLuint shader)</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;{</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().glDetachShader;</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;    {</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;        <span class="keywordflow">return</span> func(program, shader);</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;    }</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;    {</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;    }</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;}</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;</div><div class="line"><a name="l00399"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#a9cf2058f28e321f12a8e8c4c80ece00f">  399</a></span>&#160;<span class="keywordtype">void</span> GL_APIENTRY <a class="code" href="_open_g_l_e_s_8cpp.xhtml#a9cf2058f28e321f12a8e8c4c80ece00f">glGetProgramInfoLog</a>(GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog)</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;{</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().glGetProgramInfoLog;</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;    {</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;        <span class="keywordflow">return</span> func(program, bufSize, length, infoLog);</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;    }</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;    {</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;    }</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;}</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;</div><div class="line"><a name="l00412"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#acf2f21042df45cad38c043cd9198628b">  412</a></span>&#160;<span class="keywordtype">void</span> GL_APIENTRY <a class="code" href="_open_g_l_e_s_8cpp.xhtml#acf2f21042df45cad38c043cd9198628b">glGetProgramiv</a>(GLuint program, GLenum pname, GLint *params)</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;{</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().glGetProgramiv;</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;    {</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;        <span class="keywordflow">return</span> func(program, pname, params);</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;    }</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;    {</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;    }</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;}</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;</div><div class="line"><a name="l00425"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#ac7c9e9800f919f0f217a8465994d81de">  425</a></span>&#160;<span class="keywordtype">void</span> GL_APIENTRY <a class="code" href="_open_g_l_e_s_8cpp.xhtml#ac7c9e9800f919f0f217a8465994d81de">glGetShaderInfoLog</a>(GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog)</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;{</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().glGetShaderInfoLog;</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;    {</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;        <span class="keywordflow">return</span> func(shader, bufSize, length, infoLog);</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;    }</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;    {</div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;    }</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;}</div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;</div><div class="line"><a name="l00438"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#ac164fec059717a7fdbf42aea5ea2ca1d">  438</a></span>&#160;<span class="keywordtype">void</span> GL_APIENTRY <a class="code" href="_open_g_l_e_s_8cpp.xhtml#ac164fec059717a7fdbf42aea5ea2ca1d">glGetShaderiv</a>(GLuint shader, GLenum pname, GLint *params)</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;{</div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().glGetShaderiv;</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;    {</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;        <span class="keywordflow">return</span> func(shader, pname, params);</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;    }</div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;    {</div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;    }</div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;}</div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;</div><div class="line"><a name="l00451"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#a07e3604c0cd0da716e5de2a7ec11c8ac">  451</a></span>&#160;<span class="keywordtype">void</span> GL_APIENTRY <a class="code" href="_open_g_l_e_s_8cpp.xhtml#a07e3604c0cd0da716e5de2a7ec11c8ac">glLinkProgram</a>(GLuint program)</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;{</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().glLinkProgram;</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;    {</div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;        <span class="keywordflow">return</span> func(program);</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;    }</div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;    {</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;    }</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;}</div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;</div><div class="line"><a name="l00464"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#a9f1f3138bcad87b01f61c136942875bd">  464</a></span>&#160;<span class="keywordtype">void</span> GL_APIENTRY <a class="code" href="_open_g_l_e_s_8cpp.xhtml#a9f1f3138bcad87b01f61c136942875bd">glShaderSource</a>(GLuint shader, GLsizei count, <span class="keyword">const</span> GLchar *<span class="keyword">const</span> *<span class="keywordtype">string</span>, <span class="keyword">const</span> GLint *length)</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;{</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().glShaderSource;</div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;    {</div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;        <span class="keywordflow">return</span> func(shader, count, <span class="keywordtype">string</span>, length);</div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;    }</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;    {</div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;    }</div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;}</div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;</div><div class="line"><a name="l00477"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#ab685deb85a327c7a4c22285619c3f26a">  477</a></span>&#160;<span class="keywordtype">void</span> GL_APIENTRY <a class="code" href="_open_g_l_e_s_8cpp.xhtml#ab685deb85a327c7a4c22285619c3f26a">glUseProgram</a>(GLuint program)</div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;{</div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().glUseProgram;</div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;    {</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;        <span class="keywordflow">return</span> func(program);</div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;    }</div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;    {</div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;    }</div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;}</div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;</div><div class="line"><a name="l00490"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#ad9528d3fb71b7ee1e23fab6aed1cba83">  490</a></span>&#160;<span class="keywordtype">void</span> GL_APIENTRY <a class="code" href="_open_g_l_e_s_8cpp.xhtml#ad9528d3fb71b7ee1e23fab6aed1cba83">glBindBuffer</a>(GLenum target, GLuint buffer)</div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;{</div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().glBindBuffer;</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;    {</div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;        <span class="keywordflow">return</span> func(target, buffer);</div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;    }</div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;    {</div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;    }</div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;}</div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;</div><div class="line"><a name="l00503"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#a377c2f368dc6d8961943363077581dbd">  503</a></span>&#160;<span class="keywordtype">void</span> GL_APIENTRY <a class="code" href="_open_g_l_e_s_8cpp.xhtml#a377c2f368dc6d8961943363077581dbd">glBindBufferBase</a>(GLenum target, GLuint index, GLuint buffer)</div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;{</div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().glBindBufferBase;</div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;    {</div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;        <span class="keywordflow">return</span> func(target, index, buffer);</div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;    }</div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;    {</div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;    }</div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;}</div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;</div><div class="line"><a name="l00516"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#a4991c46050f5040b9fc85fc35f8297ed">  516</a></span>&#160;<span class="keywordtype">void</span> GL_APIENTRY <a class="code" href="_open_g_l_e_s_8cpp.xhtml#a4991c46050f5040b9fc85fc35f8297ed">glBufferData</a>(GLenum target, GLsizeiptr size, <span class="keyword">const</span> GLvoid *data, GLenum usage)</div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;{</div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().glBufferData;</div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;    {</div><div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;        <span class="keywordflow">return</span> func(target, size, data, usage);</div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;    }</div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;    {</div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;    }</div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;}</div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;</div><div class="line"><a name="l00529"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#a528e76a977061a313bad3ab6fe7747fe">  529</a></span>&#160;<span class="keywordtype">void</span> GL_APIENTRY <a class="code" href="_open_g_l_e_s_8cpp.xhtml#a528e76a977061a313bad3ab6fe7747fe">glDeleteBuffers</a>(GLsizei n, <span class="keyword">const</span> GLuint *buffers)</div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;{</div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().glDeleteBuffers;</div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;    {</div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;        <span class="keywordflow">return</span> func(n, buffers);</div><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;    }</div><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;    {</div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;    }</div><div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;}</div><div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;</div><div class="line"><a name="l00542"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#af7682f051486a2d562206f70b2c212ab">  542</a></span>&#160;<span class="keywordtype">void</span> GL_APIENTRY <a class="code" href="_open_g_l_e_s_8cpp.xhtml#af7682f051486a2d562206f70b2c212ab">glDispatchCompute</a>(GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z)</div><div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;{</div><div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().glDispatchCompute;</div><div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;    {</div><div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;        <span class="keywordflow">return</span> func(num_groups_x, num_groups_y, num_groups_z);</div><div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;    }</div><div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;    {</div><div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;    }</div><div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;}</div><div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;</div><div class="line"><a name="l00555"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#a9ee298e3e0590cd31dffbc2dd8a5702c">  555</a></span>&#160;<span class="keywordtype">void</span> GL_APIENTRY <a class="code" href="_open_g_l_e_s_8cpp.xhtml#a9ee298e3e0590cd31dffbc2dd8a5702c">glFlush</a>(<span class="keywordtype">void</span>)</div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;{</div><div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().glFlush;</div><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;    {</div><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;        <span class="keywordflow">return</span> func();</div><div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;    }</div><div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;    {</div><div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;    }</div><div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;}</div><div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;</div><div class="line"><a name="l00568"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#a68154b66955d77ae9c5192218e02ebdc">  568</a></span>&#160;<span class="keywordtype">void</span> GL_APIENTRY <a class="code" href="_open_g_l_e_s_8cpp.xhtml#a68154b66955d77ae9c5192218e02ebdc">glGenBuffers</a>(GLsizei n, GLuint *buffers)</div><div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;{</div><div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().glGenBuffers;</div><div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;    {</div><div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;        <span class="keywordflow">return</span> func(n, buffers);</div><div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;    }</div><div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;    {</div><div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;    }</div><div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;}</div><div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;</div><div class="line"><a name="l00581"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#ac203fe33b5832bc45e58cd4abeb4a234">  581</a></span>&#160;GLuint GL_APIENTRY <a class="code" href="_open_g_l_e_s_8cpp.xhtml#ac203fe33b5832bc45e58cd4abeb4a234">glGetProgramResourceIndex</a>(GLuint program, GLenum programInterface, <span class="keyword">const</span> GLchar *name)</div><div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;{</div><div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().glGetProgramResourceIndex;</div><div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;    {</div><div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;        <span class="keywordflow">return</span> func(program, programInterface, name);</div><div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;    }</div><div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;    {</div><div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;        <span class="keywordflow">return</span> GL_INVALID_INDEX;</div><div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;    }</div><div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;}</div><div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;</div><div class="line"><a name="l00594"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#ab3f63cc618bace46bf4624c9a21dd3c4">  594</a></span>&#160;GLint GL_APIENTRY <a class="code" href="_open_g_l_e_s_8cpp.xhtml#ab3f63cc618bace46bf4624c9a21dd3c4">glGetUniformLocation</a>(GLuint program, <span class="keyword">const</span> GLchar *name)</div><div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;{</div><div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().glGetUniformLocation;</div><div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;    {</div><div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;        <span class="keywordflow">return</span> func(program, name);</div><div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;    }</div><div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;    {</div><div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;        <span class="keywordflow">return</span> -1;</div><div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;    }</div><div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;}</div><div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;</div><div class="line"><a name="l00607"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#a7a6ac79ff4cf0bf3ed8c5cd3953ec6de">  607</a></span>&#160;<span class="keywordtype">void</span> *GL_APIENTRY <a class="code" href="_open_g_l_e_s_8cpp.xhtml#a7a6ac79ff4cf0bf3ed8c5cd3953ec6de">glMapBufferRange</a>(GLenum target, GLintptr <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>, GLsizeiptr length, GLbitfield access)</div><div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;{</div><div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().glMapBufferRange;</div><div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;    {</div><div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;        <span class="keywordflow">return</span> func(target, <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>, length, access);</div><div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;    }</div><div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;    {</div><div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;    }</div><div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;}</div><div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;</div><div class="line"><a name="l00620"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#aa3889deebdf32118fa72107fe521e131">  620</a></span>&#160;<span class="keywordtype">void</span> GL_APIENTRY <a class="code" href="_open_g_l_e_s_8cpp.xhtml#aa3889deebdf32118fa72107fe521e131">glMemoryBarrier</a>(GLbitfield barriers)</div><div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;{</div><div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().glMemoryBarrier;</div><div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;    {</div><div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;        <span class="keywordflow">return</span> func(barriers);</div><div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;    }</div><div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;    {</div><div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;    }</div><div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;}</div><div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;</div><div class="line"><a name="l00633"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#a33ca42089dac5eea0502f914d4b41629">  633</a></span>&#160;<span class="keywordtype">void</span> GL_APIENTRY <a class="code" href="_open_g_l_e_s_8cpp.xhtml#a33ca42089dac5eea0502f914d4b41629">glUniform1ui</a>(GLint location, GLuint v0)</div><div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;{</div><div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().glUniform1ui;</div><div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;    {</div><div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;        <span class="keywordflow">return</span> func(location, v0);</div><div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;    }</div><div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;    {</div><div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;    }</div><div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;}</div><div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;</div><div class="line"><a name="l00646"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#ae5331c578edd6784ab4cc6e4f0710938">  646</a></span>&#160;GLboolean GL_APIENTRY <a class="code" href="_open_g_l_e_s_8cpp.xhtml#ae5331c578edd6784ab4cc6e4f0710938">glUnmapBuffer</a>(GLenum target)</div><div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;{</div><div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().glUnmapBuffer;</div><div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;    {</div><div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;        <span class="keywordflow">return</span> func(target);</div><div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;    }</div><div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;    {</div><div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;        <span class="keywordflow">return</span> GL_FALSE;</div><div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;    }</div><div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;}</div><div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;</div><div class="line"><a name="l00659"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#af677180282510057a304e67814062174">  659</a></span>&#160;GLenum GL_APIENTRY <a class="code" href="_open_g_l_e_s_8cpp.xhtml#af677180282510057a304e67814062174">glGetError</a>(<span class="keywordtype">void</span>)</div><div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;{</div><div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().glGetError;</div><div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;    {</div><div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;        <span class="keywordflow">return</span> func();</div><div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;    }</div><div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;    {</div><div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;        <span class="keywordflow">return</span> GL_NO_ERROR;</div><div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;    }</div><div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;}</div><div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;</div><div class="line"><a name="l00672"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#a2ee378c6363791b2a733b2ba4ec6e846">  672</a></span>&#160;<span class="keyword">const</span> GLubyte *GL_APIENTRY <a class="code" href="_open_g_l_e_s_8cpp.xhtml#a2ee378c6363791b2a733b2ba4ec6e846">glGetString</a>(GLenum name)</div><div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;{</div><div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().glGetString;</div><div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;    {</div><div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;        <span class="keywordflow">return</span> func(name);</div><div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;    }</div><div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;    {</div><div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;    }</div><div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;}</div><div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;</div><div class="line"><a name="l00685"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#a21827516ba1b8b4c12c6238b3fd67200">  685</a></span>&#160;<span class="keywordtype">void</span> GL_APIENTRY <a class="code" href="_open_g_l_e_s_8cpp.xhtml#a21827516ba1b8b4c12c6238b3fd67200">glGetActiveUniformBlockiv</a>(GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint *params)</div><div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;{</div><div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().glGetActiveUniformBlockiv;</div><div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;    {</div><div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;        <span class="keywordflow">return</span> func(program, uniformBlockIndex, pname, params);</div><div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;    }</div><div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;    {</div><div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;    }</div><div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;}</div><div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;</div><div class="line"><a name="l00698"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#a5943aadf8a3d988af82624d19cbd1c0a">  698</a></span>&#160;<span class="keywordtype">void</span> GL_APIENTRY <a class="code" href="_open_g_l_e_s_8cpp.xhtml#a5943aadf8a3d988af82624d19cbd1c0a">glUniformBlockBinding</a>(GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding)</div><div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;{</div><div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().glUniformBlockBinding;</div><div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;    {</div><div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;        <span class="keywordflow">return</span> func(program, uniformBlockIndex, uniformBlockBinding);</div><div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;    }</div><div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;    {</div><div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;    }</div><div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;}</div><div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;</div><div class="line"><a name="l00711"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#a81b3135fe4b76436b0e901032fc4df1b">  711</a></span>&#160;GLuint GL_APIENTRY <a class="code" href="_open_g_l_e_s_8cpp.xhtml#a81b3135fe4b76436b0e901032fc4df1b">glGetUniformBlockIndex</a>(GLuint program, <span class="keyword">const</span> GLchar *uniformBlockName)</div><div class="line"><a name="l00712"></a><span class="lineno">  712</span>&#160;{</div><div class="line"><a name="l00713"></a><span class="lineno">  713</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().glGetUniformBlockIndex;</div><div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00715"></a><span class="lineno">  715</span>&#160;    {</div><div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160;        <span class="keywordflow">return</span> func(program, uniformBlockName);</div><div class="line"><a name="l00717"></a><span class="lineno">  717</span>&#160;    }</div><div class="line"><a name="l00718"></a><span class="lineno">  718</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;    {</div><div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;        <span class="keywordflow">return</span> GL_INVALID_INDEX;</div><div class="line"><a name="l00721"></a><span class="lineno">  721</span>&#160;    }</div><div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;}</div><div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160;</div><div class="line"><a name="l00724"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#aeaa37f1850f96a9610b10f87af5b44a4">  724</a></span>&#160;<span class="keywordtype">void</span> GL_APIENTRY <a class="code" href="_open_g_l_e_s_8cpp.xhtml#aeaa37f1850f96a9610b10f87af5b44a4">glGenTextures</a>(GLsizei n, GLuint *textures)</div><div class="line"><a name="l00725"></a><span class="lineno">  725</span>&#160;{</div><div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().glGenTextures;</div><div class="line"><a name="l00727"></a><span class="lineno">  727</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;    {</div><div class="line"><a name="l00729"></a><span class="lineno">  729</span>&#160;        <span class="keywordflow">return</span> func(n, textures);</div><div class="line"><a name="l00730"></a><span class="lineno">  730</span>&#160;    }</div><div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00732"></a><span class="lineno">  732</span>&#160;    {</div><div class="line"><a name="l00733"></a><span class="lineno">  733</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00734"></a><span class="lineno">  734</span>&#160;    }</div><div class="line"><a name="l00735"></a><span class="lineno">  735</span>&#160;}</div><div class="line"><a name="l00736"></a><span class="lineno">  736</span>&#160;</div><div class="line"><a name="l00737"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#afa7af01b67ca2c80d2d33824cdd1e694">  737</a></span>&#160;<span class="keywordtype">void</span> GL_APIENTRY <a class="code" href="_open_g_l_e_s_8cpp.xhtml#afa7af01b67ca2c80d2d33824cdd1e694">glDeleteTextures</a>(GLsizei n, <span class="keyword">const</span> GLuint *textures)</div><div class="line"><a name="l00738"></a><span class="lineno">  738</span>&#160;{</div><div class="line"><a name="l00739"></a><span class="lineno">  739</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().glDeleteTextures;</div><div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160;    {</div><div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160;        <span class="keywordflow">return</span> func(n, textures);</div><div class="line"><a name="l00743"></a><span class="lineno">  743</span>&#160;    }</div><div class="line"><a name="l00744"></a><span class="lineno">  744</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00745"></a><span class="lineno">  745</span>&#160;    {</div><div class="line"><a name="l00746"></a><span class="lineno">  746</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00747"></a><span class="lineno">  747</span>&#160;    }</div><div class="line"><a name="l00748"></a><span class="lineno">  748</span>&#160;}</div><div class="line"><a name="l00749"></a><span class="lineno">  749</span>&#160;</div><div class="line"><a name="l00750"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#afdd4572fd462b84e467e9af2a94d1116">  750</a></span>&#160;<span class="keywordtype">void</span> GL_APIENTRY <a class="code" href="_open_g_l_e_s_8cpp.xhtml#afdd4572fd462b84e467e9af2a94d1116">glBindTexture</a>(GLenum target, GLuint texture)</div><div class="line"><a name="l00751"></a><span class="lineno">  751</span>&#160;{</div><div class="line"><a name="l00752"></a><span class="lineno">  752</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().glBindTexture;</div><div class="line"><a name="l00753"></a><span class="lineno">  753</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00754"></a><span class="lineno">  754</span>&#160;    {</div><div class="line"><a name="l00755"></a><span class="lineno">  755</span>&#160;        <span class="keywordflow">return</span> func(target, texture);</div><div class="line"><a name="l00756"></a><span class="lineno">  756</span>&#160;    }</div><div class="line"><a name="l00757"></a><span class="lineno">  757</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00758"></a><span class="lineno">  758</span>&#160;    {</div><div class="line"><a name="l00759"></a><span class="lineno">  759</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;    }</div><div class="line"><a name="l00761"></a><span class="lineno">  761</span>&#160;}</div><div class="line"><a name="l00762"></a><span class="lineno">  762</span>&#160;</div><div class="line"><a name="l00763"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#a52e5a8e8cf2a333616f36781b02f6b32">  763</a></span>&#160;<span class="keywordtype">void</span> GL_APIENTRY <a class="code" href="_open_g_l_e_s_8cpp.xhtml#a52e5a8e8cf2a333616f36781b02f6b32">glTexImage2D</a>(GLenum target, GLint <a class="code" href="namespace_gemm_tuner.xhtml#afde8e18a788ccc92fc61cab298bca7e3">level</a>, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum <a class="code" href="namespace_gemm_tuner.xhtml#a7aead736a07eaf25623ad7bfa1f0ee2d">type</a>, <span class="keyword">const</span> GLvoid *pixels)</div><div class="line"><a name="l00764"></a><span class="lineno">  764</span>&#160;{</div><div class="line"><a name="l00765"></a><span class="lineno">  765</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().glTexImage2D;</div><div class="line"><a name="l00766"></a><span class="lineno">  766</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00767"></a><span class="lineno">  767</span>&#160;    {</div><div class="line"><a name="l00768"></a><span class="lineno">  768</span>&#160;        <span class="keywordflow">return</span> func(target, <a class="code" href="namespace_gemm_tuner.xhtml#afde8e18a788ccc92fc61cab298bca7e3">level</a>, internalformat, width, height, border, format, <a class="code" href="namespace_gemm_tuner.xhtml#a7aead736a07eaf25623ad7bfa1f0ee2d">type</a>, pixels);</div><div class="line"><a name="l00769"></a><span class="lineno">  769</span>&#160;    }</div><div class="line"><a name="l00770"></a><span class="lineno">  770</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00771"></a><span class="lineno">  771</span>&#160;    {</div><div class="line"><a name="l00772"></a><span class="lineno">  772</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00773"></a><span class="lineno">  773</span>&#160;    }</div><div class="line"><a name="l00774"></a><span class="lineno">  774</span>&#160;}</div><div class="line"><a name="l00775"></a><span class="lineno">  775</span>&#160;</div><div class="line"><a name="l00776"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#a1773d8c97f9c1063a45db4cf9d7c1613">  776</a></span>&#160;<span class="keywordtype">void</span> GL_APIENTRY <a class="code" href="_open_g_l_e_s_8cpp.xhtml#a1773d8c97f9c1063a45db4cf9d7c1613">glGenFramebuffers</a>(GLsizei n, GLuint *framebuffers)</div><div class="line"><a name="l00777"></a><span class="lineno">  777</span>&#160;{</div><div class="line"><a name="l00778"></a><span class="lineno">  778</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().glGenFramebuffers;</div><div class="line"><a name="l00779"></a><span class="lineno">  779</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00780"></a><span class="lineno">  780</span>&#160;    {</div><div class="line"><a name="l00781"></a><span class="lineno">  781</span>&#160;        <span class="keywordflow">return</span> func(n, framebuffers);</div><div class="line"><a name="l00782"></a><span class="lineno">  782</span>&#160;    }</div><div class="line"><a name="l00783"></a><span class="lineno">  783</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00784"></a><span class="lineno">  784</span>&#160;    {</div><div class="line"><a name="l00785"></a><span class="lineno">  785</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00786"></a><span class="lineno">  786</span>&#160;    }</div><div class="line"><a name="l00787"></a><span class="lineno">  787</span>&#160;}</div><div class="line"><a name="l00788"></a><span class="lineno">  788</span>&#160;</div><div class="line"><a name="l00789"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#abe8c9f9c8d9e2fb48fbd3ea2291caca9">  789</a></span>&#160;<span class="keywordtype">void</span> GL_APIENTRY <a class="code" href="_open_g_l_e_s_8cpp.xhtml#abe8c9f9c8d9e2fb48fbd3ea2291caca9">glDeleteFramebuffers</a>(GLsizei n, <span class="keyword">const</span> GLuint *framebuffers)</div><div class="line"><a name="l00790"></a><span class="lineno">  790</span>&#160;{</div><div class="line"><a name="l00791"></a><span class="lineno">  791</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().glDeleteFramebuffers;</div><div class="line"><a name="l00792"></a><span class="lineno">  792</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00793"></a><span class="lineno">  793</span>&#160;    {</div><div class="line"><a name="l00794"></a><span class="lineno">  794</span>&#160;        <span class="keywordflow">return</span> func(n, framebuffers);</div><div class="line"><a name="l00795"></a><span class="lineno">  795</span>&#160;    }</div><div class="line"><a name="l00796"></a><span class="lineno">  796</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00797"></a><span class="lineno">  797</span>&#160;    {</div><div class="line"><a name="l00798"></a><span class="lineno">  798</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00799"></a><span class="lineno">  799</span>&#160;    }</div><div class="line"><a name="l00800"></a><span class="lineno">  800</span>&#160;}</div><div class="line"><a name="l00801"></a><span class="lineno">  801</span>&#160;</div><div class="line"><a name="l00802"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#a4213ab91e8c4fc1dc12f3904f7cc170e">  802</a></span>&#160;<span class="keywordtype">void</span> GL_APIENTRY <a class="code" href="_open_g_l_e_s_8cpp.xhtml#a4213ab91e8c4fc1dc12f3904f7cc170e">glBindFramebuffer</a>(GLenum target, GLuint framebuffer)</div><div class="line"><a name="l00803"></a><span class="lineno">  803</span>&#160;{</div><div class="line"><a name="l00804"></a><span class="lineno">  804</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().glBindFramebuffer;</div><div class="line"><a name="l00805"></a><span class="lineno">  805</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00806"></a><span class="lineno">  806</span>&#160;    {</div><div class="line"><a name="l00807"></a><span class="lineno">  807</span>&#160;        <span class="keywordflow">return</span> func(target, framebuffer);</div><div class="line"><a name="l00808"></a><span class="lineno">  808</span>&#160;    }</div><div class="line"><a name="l00809"></a><span class="lineno">  809</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00810"></a><span class="lineno">  810</span>&#160;    {</div><div class="line"><a name="l00811"></a><span class="lineno">  811</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00812"></a><span class="lineno">  812</span>&#160;    }</div><div class="line"><a name="l00813"></a><span class="lineno">  813</span>&#160;}</div><div class="line"><a name="l00814"></a><span class="lineno">  814</span>&#160;</div><div class="line"><a name="l00815"></a><span class="lineno"><a class="line" href="_open_g_l_e_s_8cpp.xhtml#a1c5dc7cc04f7c0b1bd7c181b0da84d9b">  815</a></span>&#160;<span class="keywordtype">void</span> GL_APIENTRY <a class="code" href="_open_g_l_e_s_8cpp.xhtml#a1c5dc7cc04f7c0b1bd7c181b0da84d9b">glFramebufferTexture2D</a>(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint <a class="code" href="namespace_gemm_tuner.xhtml#afde8e18a788ccc92fc61cab298bca7e3">level</a>)</div><div class="line"><a name="l00816"></a><span class="lineno">  816</span>&#160;{</div><div class="line"><a name="l00817"></a><span class="lineno">  817</span>&#160;    <span class="keyword">auto</span> func = GLESSymbols::get().glFramebufferTexture2D;</div><div class="line"><a name="l00818"></a><span class="lineno">  818</span>&#160;    <span class="keywordflow">if</span>(func != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00819"></a><span class="lineno">  819</span>&#160;    {</div><div class="line"><a name="l00820"></a><span class="lineno">  820</span>&#160;        <span class="keywordflow">return</span> func(target, attachment, textarget, texture, <a class="code" href="namespace_gemm_tuner.xhtml#afde8e18a788ccc92fc61cab298bca7e3">level</a>);</div><div class="line"><a name="l00821"></a><span class="lineno">  821</span>&#160;    }</div><div class="line"><a name="l00822"></a><span class="lineno">  822</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00823"></a><span class="lineno">  823</span>&#160;    {</div><div class="line"><a name="l00824"></a><span class="lineno">  824</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00825"></a><span class="lineno">  825</span>&#160;    }</div><div class="line"><a name="l00826"></a><span class="lineno">  826</span>&#160;}</div><div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_aeaa37f1850f96a9610b10f87af5b44a4"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#aeaa37f1850f96a9610b10f87af5b44a4">glGenTextures</a></div><div class="ttdeci">void GL_APIENTRY glGenTextures(GLsizei n, GLuint *textures)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00724">OpenGLES.cpp:724</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a8874678c01737df89fe9fa1ffde570a8"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a8874678c01737df89fe9fa1ffde570a8">eglGetProcAddress</a></div><div class="ttdeci">__eglMustCastToProperFunctionPointerType EGLAPIENTRY eglGetProcAddress(const char *procname)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00165">OpenGLES.cpp:165</a></div></div>
<div class="ttc" id="src_2core_2_c_l_2cl__kernels_2_helpers_8h_xhtml_a009469e4d9b8fce3b6d5e97d2077827d"><div class="ttname"><a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a></div><div class="ttdeci">__global uchar * offset(const Image *img, int x, int y)</div><div class="ttdoc">Get the pointer position of a Image.</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l00510">helpers.h:510</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_ab56dc4c4ad921ac0a23ccec193e963b2"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#ab56dc4c4ad921ac0a23ccec193e963b2">glFramebufferTexture2D_func</a></div><div class="ttdeci">void GL_APIENTRY(*)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level) glFramebufferTexture2D_func</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00082">OpenGLES.cpp:82</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_af6db9d046fe0e996c3693373864e6254"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#af6db9d046fe0e996c3693373864e6254">eglMakeCurrent</a></div><div class="ttdeci">EGLBoolean EGLAPIENTRY eglMakeCurrent(EGLDisplay dpy, EGLSurface draw, EGLSurface read, EGLContext ctx)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00256">OpenGLES.cpp:256</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a8654fc903edd9eacfe22788cab9b83e7"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a8654fc903edd9eacfe22788cab9b83e7">glShaderSource_func</a></div><div class="ttdeci">void GL_APIENTRY(*)(GLuint shader, GLsizei count, const GLchar *const *string, const GLint *length) glShaderSource_func</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00054">OpenGLES.cpp:54</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_afdd4572fd462b84e467e9af2a94d1116"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#afdd4572fd462b84e467e9af2a94d1116">glBindTexture</a></div><div class="ttdeci">void GL_APIENTRY glBindTexture(GLenum target, GLuint texture)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00750">OpenGLES.cpp:750</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_afa7af01b67ca2c80d2d33824cdd1e694"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#afa7af01b67ca2c80d2d33824cdd1e694">glDeleteTextures</a></div><div class="ttdeci">void GL_APIENTRY glDeleteTextures(GLsizei n, const GLuint *textures)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00737">OpenGLES.cpp:737</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a3e001bb1fbd825f9e9553b5d17ffb9f1"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a3e001bb1fbd825f9e9553b5d17ffb9f1">eglMakeCurrent_func</a></div><div class="ttdeci">EGLBoolean EGLAPIENTRY(*)(EGLDisplay dpy, EGLSurface draw, EGLSurface read, EGLContext ctx) eglMakeCurrent_func</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00038">OpenGLES.cpp:38</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a89a92c28d6d90e4c0fd1de37f9680a79"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a89a92c28d6d90e4c0fd1de37f9680a79">eglChooseConfig</a></div><div class="ttdeci">EGLBoolean EGLAPIENTRY eglChooseConfig(EGLDisplay dpy, const EGLint *attrib_list, EGLConfig *configs, EGLint config_size, EGLint *num_config)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00191">OpenGLES.cpp:191</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_ae40fe14e93e58a809bbf1f8bebcee62b"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#ae40fe14e93e58a809bbf1f8bebcee62b">eglCreateContext_func</a></div><div class="ttdeci">EGLContext EGLAPIENTRY(*)(EGLDisplay dpy, EGLConfig config, EGLContext share_context, const EGLint *attrib_list) eglCreateContext_func</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00034">OpenGLES.cpp:34</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a4213ab91e8c4fc1dc12f3904f7cc170e"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a4213ab91e8c4fc1dc12f3904f7cc170e">glBindFramebuffer</a></div><div class="ttdeci">void GL_APIENTRY glBindFramebuffer(GLenum target, GLuint framebuffer)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00802">OpenGLES.cpp:802</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a528e76a977061a313bad3ab6fe7747fe"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a528e76a977061a313bad3ab6fe7747fe">glDeleteBuffers</a></div><div class="ttdeci">void GL_APIENTRY glDeleteBuffers(GLsizei n, const GLuint *buffers)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00529">OpenGLES.cpp:529</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a793509ad769774d6d2b2898a9307d745"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a793509ad769774d6d2b2898a9307d745">glAttachShader_func</a></div><div class="ttdeci">void GL_APIENTRY(*)(GLuint program, GLuint shader) glAttachShader_func</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00042">OpenGLES.cpp:42</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a26e9fec0fd229ae63fd93edb24cb9f3a"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a26e9fec0fd229ae63fd93edb24cb9f3a">eglGetDisplay_func</a></div><div class="ttdeci">EGLDisplay EGLAPIENTRY(*)(EGLNativeDisplayType display_id) eglGetDisplay_func</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00036">OpenGLES.cpp:36</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_addae612338f2d0f234acaa34df861926"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#addae612338f2d0f234acaa34df861926">eglGetProcAddress_func</a></div><div class="ttdeci">__eglMustCastToProperFunctionPointerType EGLAPIENTRY(*)(const char *procname) eglGetProcAddress_func</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00031">OpenGLES.cpp:31</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a408f02b52dabea4ad43a6af932ef60b0"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a408f02b52dabea4ad43a6af932ef60b0">glUniformBlockBinding_func</a></div><div class="ttdeci">void GL_APIENTRY(*)(GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding) glUniformBlockBinding_func</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00072">OpenGLES.cpp:72</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a1c7704e1b45774a3b3e3de40224a7e00"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a1c7704e1b45774a3b3e3de40224a7e00">glGenFramebuffers_func</a></div><div class="ttdeci">void GL_APIENTRY(*)(GLsizei n, GLuint *framebuffers) glGenFramebuffers_func</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00079">OpenGLES.cpp:79</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a9cf2058f28e321f12a8e8c4c80ece00f"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a9cf2058f28e321f12a8e8c4c80ece00f">glGetProgramInfoLog</a></div><div class="ttdeci">void GL_APIENTRY glGetProgramInfoLog(GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00399">OpenGLES.cpp:399</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a82878b3783ce2a10736c91f7d153d009"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a82878b3783ce2a10736c91f7d153d009">eglCreateContext</a></div><div class="ttdeci">EGLContext EGLAPIENTRY eglCreateContext(EGLDisplay dpy, EGLConfig config, EGLContext share_context, const EGLint *attrib_list)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00204">OpenGLES.cpp:204</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a161b2c24e091cfa13e2eeb66e66ccf04"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a161b2c24e091cfa13e2eeb66e66ccf04">eglGetError</a></div><div class="ttdeci">EGLint EGLAPIENTRY eglGetError()</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00282">OpenGLES.cpp:282</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a9ee298e3e0590cd31dffbc2dd8a5702c"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a9ee298e3e0590cd31dffbc2dd8a5702c">glFlush</a></div><div class="ttdeci">void GL_APIENTRY glFlush(void)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00555">OpenGLES.cpp:555</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a0f290b0be95432b64e73ead723a947b7"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a0f290b0be95432b64e73ead723a947b7">eglBindAPI</a></div><div class="ttdeci">EGLBoolean EGLAPIENTRY eglBindAPI(EGLenum api)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00178">OpenGLES.cpp:178</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a90f868801b1aacb4e6732d56a4a80447"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a90f868801b1aacb4e6732d56a4a80447">glUniform1ui_func</a></div><div class="ttdeci">void GL_APIENTRY(*)(GLint location, GLuint v0) glUniform1ui_func</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00067">OpenGLES.cpp:67</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a3645a2eb4da58ba0c3ed5c295913caf3"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a3645a2eb4da58ba0c3ed5c295913caf3">eglGetError_func</a></div><div class="ttdeci">EGLint EGLAPIENTRY(*)() eglGetError_func</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00040">OpenGLES.cpp:40</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a76232dcbc71f0cb2b32c4e0f46cb2b64"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a76232dcbc71f0cb2b32c4e0f46cb2b64">glCompileShader</a></div><div class="ttdeci">void GL_APIENTRY glCompileShader(GLuint shader)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00321">OpenGLES.cpp:321</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a4d1a4543cb39945be511a48c6b12efb8"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a4d1a4543cb39945be511a48c6b12efb8">eglQueryString</a></div><div class="ttdeci">char const  *EGLAPIENTRY eglQueryString(EGLDisplay dpy, EGLint name)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00295">OpenGLES.cpp:295</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_ae5331c578edd6784ab4cc6e4f0710938"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#ae5331c578edd6784ab4cc6e4f0710938">glUnmapBuffer</a></div><div class="ttdeci">GLboolean GL_APIENTRY glUnmapBuffer(GLenum target)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00646">OpenGLES.cpp:646</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a8f2e0943b90ed6e7ff51b3458fcbd6aa"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a8f2e0943b90ed6e7ff51b3458fcbd6aa">glGetProgramiv_func</a></div><div class="ttdeci">void GL_APIENTRY(*)(GLuint program, GLenum pname, GLint *params) glGetProgramiv_func</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00050">OpenGLES.cpp:50</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_ac164fec059717a7fdbf42aea5ea2ca1d"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#ac164fec059717a7fdbf42aea5ea2ca1d">glGetShaderiv</a></div><div class="ttdeci">void GL_APIENTRY glGetShaderiv(GLuint shader, GLenum pname, GLint *params)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00438">OpenGLES.cpp:438</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a7dbe5708f69c0323c005b5911dd79e39"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a7dbe5708f69c0323c005b5911dd79e39">glDeleteTextures_func</a></div><div class="ttdeci">void GL_APIENTRY(*)(GLsizei n, const GLuint *textures) glDeleteTextures_func</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00075">OpenGLES.cpp:75</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_af677180282510057a304e67814062174"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#af677180282510057a304e67814062174">glGetError</a></div><div class="ttdeci">GLenum GL_APIENTRY glGetError(void)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00659">OpenGLES.cpp:659</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_ab6309a5c7ea63364d22adc28fceeae12"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#ab6309a5c7ea63364d22adc28fceeae12">glGetString_func</a></div><div class="ttdeci">const GLubyte *GL_APIENTRY(*)(GLenum name) glGetString_func</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00070">OpenGLES.cpp:70</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a1ee47b6b815699bd4da94c665c219572"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a1ee47b6b815699bd4da94c665c219572">glGetError_func</a></div><div class="ttdeci">GLenum GL_APIENTRY(*)() glGetError_func</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00069">OpenGLES.cpp:69</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ad8ec10f67d9849be264c23c5329d9324"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ec10f67d9849be264c23c5329d9324">arm_compute::opengles31_is_available</a></div><div class="ttdeci">bool opengles31_is_available()</div><div class="ttdoc">Check if the OpenGL ES 3.1 API is available at runtime.</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00160">OpenGLES.cpp:160</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_acb6c0529eae7ee48cbde0d1e1389522d"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#acb6c0529eae7ee48cbde0d1e1389522d">glGetUniformLocation_func</a></div><div class="ttdeci">GLint GL_APIENTRY(*)(GLuint program, const GLchar *name) glGetUniformLocation_func</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00064">OpenGLES.cpp:64</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_af9416600d973cf090c41f584c874dd9d"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#af9416600d973cf090c41f584c874dd9d">glMemoryBarrier_func</a></div><div class="ttdeci">void GL_APIENTRY(*)(GLbitfield barriers) glMemoryBarrier_func</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00066">OpenGLES.cpp:66</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_ae3ce3fe66e38e3678fc08ffb8208d5ec"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#ae3ce3fe66e38e3678fc08ffb8208d5ec">glBindFramebuffer_func</a></div><div class="ttdeci">void GL_APIENTRY(*)(GLenum target, GLuint framebuffer) glBindFramebuffer_func</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00081">OpenGLES.cpp:81</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a5943aadf8a3d988af82624d19cbd1c0a"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a5943aadf8a3d988af82624d19cbd1c0a">glUniformBlockBinding</a></div><div class="ttdeci">void GL_APIENTRY glUniformBlockBinding(GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00698">OpenGLES.cpp:698</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a80088eae3ba8f009a48c358adcefd3ca"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a80088eae3ba8f009a48c358adcefd3ca">eglDestroyContext</a></div><div class="ttdeci">EGLBoolean EGLAPIENTRY eglDestroyContext(EGLDisplay dpy, EGLContext ctx)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00217">OpenGLES.cpp:217</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a229121aaf2c5e610f5e3cab090cfab38"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a229121aaf2c5e610f5e3cab090cfab38">glBufferData_func</a></div><div class="ttdeci">void GL_APIENTRY(*)(GLenum target, GLsizeiptr size, const GLvoid *data, GLenum usage) glBufferData_func</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00058">OpenGLES.cpp:58</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_abe8c9f9c8d9e2fb48fbd3ea2291caca9"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#abe8c9f9c8d9e2fb48fbd3ea2291caca9">glDeleteFramebuffers</a></div><div class="ttdeci">void GL_APIENTRY glDeleteFramebuffers(GLsizei n, const GLuint *framebuffers)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00789">OpenGLES.cpp:789</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a39bb058fb4f13b0ceb51a30c2e7c13ba"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a39bb058fb4f13b0ceb51a30c2e7c13ba">eglBindAPI_func</a></div><div class="ttdeci">EGLBoolean EGLAPIENTRY(*)(EGLenum api) eglBindAPI_func</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00032">OpenGLES.cpp:32</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a0dd4e24993409491077ee74922a404e1"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a0dd4e24993409491077ee74922a404e1">glCreateProgram_func</a></div><div class="ttdeci">GLuint GL_APIENTRY(*)() glCreateProgram_func</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00044">OpenGLES.cpp:44</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a607609f737fab0b0565a7b84f2fa7d98"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a607609f737fab0b0565a7b84f2fa7d98">glFlush_func</a></div><div class="ttdeci">void GL_APIENTRY(*)() glFlush_func</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00061">OpenGLES.cpp:61</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_ad9528d3fb71b7ee1e23fab6aed1cba83"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#ad9528d3fb71b7ee1e23fab6aed1cba83">glBindBuffer</a></div><div class="ttdeci">void GL_APIENTRY glBindBuffer(GLenum target, GLuint buffer)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00490">OpenGLES.cpp:490</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a334ce7125cfb54a811b748f23f228417"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a334ce7125cfb54a811b748f23f228417">glDeleteProgram</a></div><div class="ttdeci">void GL_APIENTRY glDeleteProgram(GLuint program)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00360">OpenGLES.cpp:360</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a377c2f368dc6d8961943363077581dbd"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a377c2f368dc6d8961943363077581dbd">glBindBufferBase</a></div><div class="ttdeci">void GL_APIENTRY glBindBufferBase(GLenum target, GLuint index, GLuint buffer)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00503">OpenGLES.cpp:503</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_aca46e08b3624bcfc5540d0d36e577688"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#aca46e08b3624bcfc5540d0d36e577688">glBindBuffer_func</a></div><div class="ttdeci">void GL_APIENTRY(*)(GLenum target, GLuint buffer) glBindBuffer_func</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00056">OpenGLES.cpp:56</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a071bc3efa12248af6089950f482689b9"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a071bc3efa12248af6089950f482689b9">eglInitialize</a></div><div class="ttdeci">EGLBoolean EGLAPIENTRY eglInitialize(EGLDisplay dpy, EGLint *major, EGLint *minor)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00243">OpenGLES.cpp:243</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a81b3135fe4b76436b0e901032fc4df1b"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a81b3135fe4b76436b0e901032fc4df1b">glGetUniformBlockIndex</a></div><div class="ttdeci">GLuint GL_APIENTRY glGetUniformBlockIndex(GLuint program, const GLchar *uniformBlockName)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00711">OpenGLES.cpp:711</a></div></div>
<div class="ttc" id="namespace_gemm_tuner_xhtml_afde8e18a788ccc92fc61cab298bca7e3"><div class="ttname"><a href="namespace_gemm_tuner.xhtml#afde8e18a788ccc92fc61cab298bca7e3">GemmTuner.level</a></div><div class="ttdeci">level</div><div class="ttdef"><b>Definition:</b> <a href="_gemm_tuner_8py_source.xhtml#l00557">GemmTuner.py:557</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a72c559fda39b1ce7e3cb8bdec4f7e23d"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a72c559fda39b1ce7e3cb8bdec4f7e23d">glGetActiveUniformBlockiv_func</a></div><div class="ttdeci">void GL_APIENTRY(*)(GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint *params) glGetActiveUniformBlockiv_func</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00071">OpenGLES.cpp:71</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a3b33df6fc93d0e151b779d1f253ceb97"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a3b33df6fc93d0e151b779d1f253ceb97">glGenBuffers_func</a></div><div class="ttdeci">void GL_APIENTRY(*)(GLsizei n, GLuint *buffers) glGenBuffers_func</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00062">OpenGLES.cpp:62</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_ab685deb85a327c7a4c22285619c3f26a"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#ab685deb85a327c7a4c22285619c3f26a">glUseProgram</a></div><div class="ttdeci">void GL_APIENTRY glUseProgram(GLuint program)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00477">OpenGLES.cpp:477</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_afe67a81cde1204302022baf01894474b"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#afe67a81cde1204302022baf01894474b">glGenTextures_func</a></div><div class="ttdeci">void GL_APIENTRY(*)(GLsizei n, GLuint *textures) glGenTextures_func</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00074">OpenGLES.cpp:74</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a7a6ac79ff4cf0bf3ed8c5cd3953ec6de"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a7a6ac79ff4cf0bf3ed8c5cd3953ec6de">glMapBufferRange</a></div><div class="ttdeci">void *GL_APIENTRY glMapBufferRange(GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00607">OpenGLES.cpp:607</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_ab67febd926ffed1c0d55a827dafeda18"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#ab67febd926ffed1c0d55a827dafeda18">glDispatchCompute_func</a></div><div class="ttdeci">void GL_APIENTRY(*)(GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z) glDispatchCompute_func</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00060">OpenGLES.cpp:60</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a8a88f545679d1909b29aabad8fbfe31e"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a8a88f545679d1909b29aabad8fbfe31e">glDetachShader_func</a></div><div class="ttdeci">void GL_APIENTRY(*)(GLuint program, GLuint shader) glDetachShader_func</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00048">OpenGLES.cpp:48</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a52e5a8e8cf2a333616f36781b02f6b32"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a52e5a8e8cf2a333616f36781b02f6b32">glTexImage2D</a></div><div class="ttdeci">void GL_APIENTRY glTexImage2D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid *pixels)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00763">OpenGLES.cpp:763</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a9f1f3138bcad87b01f61c136942875bd"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a9f1f3138bcad87b01f61c136942875bd">glShaderSource</a></div><div class="ttdeci">void GL_APIENTRY glShaderSource(GLuint shader, GLsizei count, const GLchar *const *string, const GLint *length)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00464">OpenGLES.cpp:464</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a33ca42089dac5eea0502f914d4b41629"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a33ca42089dac5eea0502f914d4b41629">glUniform1ui</a></div><div class="ttdeci">void GL_APIENTRY glUniform1ui(GLint location, GLuint v0)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00633">OpenGLES.cpp:633</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a68154b66955d77ae9c5192218e02ebdc"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a68154b66955d77ae9c5192218e02ebdc">glGenBuffers</a></div><div class="ttdeci">void GL_APIENTRY glGenBuffers(GLsizei n, GLuint *buffers)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00568">OpenGLES.cpp:568</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_ab8cce2e1a98daed0249b9a8f929dd176"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#ab8cce2e1a98daed0249b9a8f929dd176">glCreateShader</a></div><div class="ttdeci">GLuint GL_APIENTRY glCreateShader(GLenum type)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00347">OpenGLES.cpp:347</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a435a9ea180e443d4500084da695323b6"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a435a9ea180e443d4500084da695323b6">glBindBufferBase_func</a></div><div class="ttdeci">void GL_APIENTRY(*)(GLenum target, GLuint index, GLuint buffer) glBindBufferBase_func</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00057">OpenGLES.cpp:57</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_ac02a0be24c3d1f37e5983f057355b192"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#ac02a0be24c3d1f37e5983f057355b192">eglQueryString_func</a></div><div class="ttdeci">char const *EGLAPIENTRY(*)(EGLDisplay dpy, EGLint name) eglQueryString_func</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00041">OpenGLES.cpp:41</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a64a4e181f49b72a4c50d8e8e5ad52076"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a64a4e181f49b72a4c50d8e8e5ad52076">glGetShaderInfoLog_func</a></div><div class="ttdeci">void GL_APIENTRY(*)(GLuint shader, GLsizei bufsize, GLsizei *length, GLchar *infolog) glGetShaderInfoLog_func</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00051">OpenGLES.cpp:51</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a75f4854b14c6eba12a7feb4d53933d6f"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a75f4854b14c6eba12a7feb4d53933d6f">glAttachShader</a></div><div class="ttdeci">void GL_APIENTRY glAttachShader(GLuint program, GLuint shader)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00308">OpenGLES.cpp:308</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_af7682f051486a2d562206f70b2c212ab"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#af7682f051486a2d562206f70b2c212ab">glDispatchCompute</a></div><div class="ttdeci">void GL_APIENTRY glDispatchCompute(GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00542">OpenGLES.cpp:542</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a1c5dc7cc04f7c0b1bd7c181b0da84d9b"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a1c5dc7cc04f7c0b1bd7c181b0da84d9b">glFramebufferTexture2D</a></div><div class="ttdeci">void GL_APIENTRY glFramebufferTexture2D(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00815">OpenGLES.cpp:815</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_add28e8aa989a1ec2bffc6a45f7a75355"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#add28e8aa989a1ec2bffc6a45f7a75355">glCreateProgram</a></div><div class="ttdeci">GLuint GL_APIENTRY glCreateProgram()</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00334">OpenGLES.cpp:334</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_acf2f21042df45cad38c043cd9198628b"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#acf2f21042df45cad38c043cd9198628b">glGetProgramiv</a></div><div class="ttdeci">void GL_APIENTRY glGetProgramiv(GLuint program, GLenum pname, GLint *params)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00412">OpenGLES.cpp:412</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a45bcdc2fee472f58603654d00fac7fea"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a45bcdc2fee472f58603654d00fac7fea">eglChooseConfig_func</a></div><div class="ttdeci">EGLBoolean EGLAPIENTRY(*)(EGLDisplay dpy, const EGLint *attrib_list, EGLConfig *configs, EGLint config_size, EGLint *num_config) eglChooseConfig_func</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00033">OpenGLES.cpp:33</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_ad9a1fc168717a342b9e39793605ada2b"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#ad9a1fc168717a342b9e39793605ada2b">eglDestroyContext_func</a></div><div class="ttdeci">EGLBoolean EGLAPIENTRY(*)(EGLDisplay dpy, EGLContext ctx) eglDestroyContext_func</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00035">OpenGLES.cpp:35</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a58cb9a679676e373b4cc6d0a518131d5"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a58cb9a679676e373b4cc6d0a518131d5">glCreateShader_func</a></div><div class="ttdeci">GLuint GL_APIENTRY(*)(GLenum type) glCreateShader_func</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00045">OpenGLES.cpp:45</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_aa3889deebdf32118fa72107fe521e131"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#aa3889deebdf32118fa72107fe521e131">glMemoryBarrier</a></div><div class="ttdeci">void GL_APIENTRY glMemoryBarrier(GLbitfield barriers)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00620">OpenGLES.cpp:620</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_ad5109705500d3ca577909a72388d2dba"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#ad5109705500d3ca577909a72388d2dba">glGetProgramInfoLog_func</a></div><div class="ttdeci">void GL_APIENTRY(*)(GLuint program, GLsizei bufsize, GLsizei *length, GLchar *infolog) glGetProgramInfoLog_func</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00049">OpenGLES.cpp:49</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8h_xhtml"><div class="ttname"><a href="_open_g_l_e_s_8h.xhtml">OpenGLES.h</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a1773d8c97f9c1063a45db4cf9d7c1613"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a1773d8c97f9c1063a45db4cf9d7c1613">glGenFramebuffers</a></div><div class="ttdeci">void GL_APIENTRY glGenFramebuffers(GLsizei n, GLuint *framebuffers)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00776">OpenGLES.cpp:776</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a73309e644fd9f860f55ca14d24119cdf"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a73309e644fd9f860f55ca14d24119cdf">eglInitialize_func</a></div><div class="ttdeci">EGLBoolean EGLAPIENTRY(*)(EGLDisplay dpy, EGLint *major, EGLint *minor) eglInitialize_func</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00037">OpenGLES.cpp:37</a></div></div>
<div class="ttc" id="namespace_gemm_tuner_xhtml_a7aead736a07eaf25623ad7bfa1f0ee2d"><div class="ttname"><a href="namespace_gemm_tuner.xhtml#a7aead736a07eaf25623ad7bfa1f0ee2d">GemmTuner.type</a></div><div class="ttdeci">type</div><div class="ttdef"><b>Definition:</b> <a href="_gemm_tuner_8py_source.xhtml#l00527">GemmTuner.py:527</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a8dbb590cdc005f7db2dae87085921ec1"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a8dbb590cdc005f7db2dae87085921ec1">glUseProgram_func</a></div><div class="ttdeci">void GL_APIENTRY(*)(GLuint program) glUseProgram_func</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00055">OpenGLES.cpp:55</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a07e3604c0cd0da716e5de2a7ec11c8ac"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a07e3604c0cd0da716e5de2a7ec11c8ac">glLinkProgram</a></div><div class="ttdeci">void GL_APIENTRY glLinkProgram(GLuint program)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00451">OpenGLES.cpp:451</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_aa2f5d9a549dfc28d72e0bba335dd48b3"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#aa2f5d9a549dfc28d72e0bba335dd48b3">glBindTexture_func</a></div><div class="ttdeci">void GL_APIENTRY(*)(GLenum target, GLuint texture) glBindTexture_func</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00076">OpenGLES.cpp:76</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a7b5954fd97217b3141ad7e14dcc141d6"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a7b5954fd97217b3141ad7e14dcc141d6">glDeleteFramebuffers_func</a></div><div class="ttdeci">void GL_APIENTRY(*)(GLsizei n, const GLuint *framebuffers) glDeleteFramebuffers_func</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00080">OpenGLES.cpp:80</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a2ffc3e7fe8b002896756a3508800d3fa"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a2ffc3e7fe8b002896756a3508800d3fa">eglGetDisplay</a></div><div class="ttdeci">EGLDisplay EGLAPIENTRY eglGetDisplay(EGLNativeDisplayType display_id)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00230">OpenGLES.cpp:230</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a4c71a67ba2f8104097a63d4f41a7e64e"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a4c71a67ba2f8104097a63d4f41a7e64e">glDetachShader</a></div><div class="ttdeci">void GL_APIENTRY glDetachShader(GLuint program, GLuint shader)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00386">OpenGLES.cpp:386</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_ab45761847d030754739c1b3b63cdbeab"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#ab45761847d030754739c1b3b63cdbeab">eglTerminate_func</a></div><div class="ttdeci">EGLBoolean EGLAPIENTRY(*)(EGLDisplay dpy) eglTerminate_func</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00039">OpenGLES.cpp:39</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a184f520190322b632ca710695195746a"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a184f520190322b632ca710695195746a">eglTerminate</a></div><div class="ttdeci">EGLBoolean EGLAPIENTRY eglTerminate(EGLDisplay dpy)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00269">OpenGLES.cpp:269</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a098aea49ac81aedbe84aa20873dbacac"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a098aea49ac81aedbe84aa20873dbacac">glGetShaderiv_func</a></div><div class="ttdeci">void GL_APIENTRY(*)(GLuint shader, GLenum pname, GLint *params) glGetShaderiv_func</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00052">OpenGLES.cpp:52</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a3a5fb1ea4384fc30fedc9a6caf73e6e1"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a3a5fb1ea4384fc30fedc9a6caf73e6e1">glDeleteShader</a></div><div class="ttdeci">void GL_APIENTRY glDeleteShader(GLuint shader)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00373">OpenGLES.cpp:373</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_ab3f63cc618bace46bf4624c9a21dd3c4"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#ab3f63cc618bace46bf4624c9a21dd3c4">glGetUniformLocation</a></div><div class="ttdeci">GLint GL_APIENTRY glGetUniformLocation(GLuint program, const GLchar *name)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00594">OpenGLES.cpp:594</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a2ea23820bdcb09cccc54556c879de64c"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a2ea23820bdcb09cccc54556c879de64c">glMapBufferRange_func</a></div><div class="ttdeci">void *GL_APIENTRY(*)(GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access) glMapBufferRange_func</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00065">OpenGLES.cpp:65</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a2ee378c6363791b2a733b2ba4ec6e846"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a2ee378c6363791b2a733b2ba4ec6e846">glGetString</a></div><div class="ttdeci">const GLubyte *GL_APIENTRY glGetString(GLenum name)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00672">OpenGLES.cpp:672</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_aaba74f195d36a2db4f13739aae07424a"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#aaba74f195d36a2db4f13739aae07424a">glLinkProgram_func</a></div><div class="ttdeci">void GL_APIENTRY(*)(GLuint program) glLinkProgram_func</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00053">OpenGLES.cpp:53</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_ac203fe33b5832bc45e58cd4abeb4a234"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#ac203fe33b5832bc45e58cd4abeb4a234">glGetProgramResourceIndex</a></div><div class="ttdeci">GLuint GL_APIENTRY glGetProgramResourceIndex(GLuint program, GLenum programInterface, const GLchar *name)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00581">OpenGLES.cpp:581</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a21827516ba1b8b4c12c6238b3fd67200"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a21827516ba1b8b4c12c6238b3fd67200">glGetActiveUniformBlockiv</a></div><div class="ttdeci">void GL_APIENTRY glGetActiveUniformBlockiv(GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint *params)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00685">OpenGLES.cpp:685</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_aeb78376a832e7aa3cb91e1ceef89666e"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#aeb78376a832e7aa3cb91e1ceef89666e">glCompileShader_func</a></div><div class="ttdeci">void GL_APIENTRY(*)(GLuint shader) glCompileShader_func</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00043">OpenGLES.cpp:43</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a8a57841dd4e175e1afb79634a2fc7838"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a8a57841dd4e175e1afb79634a2fc7838">glTexImage2D_func</a></div><div class="ttdeci">void GL_APIENTRY(*)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid *pixels) glTexImage2D_func</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00078">OpenGLES.cpp:78</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a4e3efbc91e67ce6aa1659916556634ab"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a4e3efbc91e67ce6aa1659916556634ab">glDeleteBuffers_func</a></div><div class="ttdeci">void GL_APIENTRY(*)(GLsizei n, const GLuint *buffers) glDeleteBuffers_func</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00059">OpenGLES.cpp:59</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a7d313afe766055d773c95b359521fb22"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a7d313afe766055d773c95b359521fb22">glDeleteProgram_func</a></div><div class="ttdeci">void GL_APIENTRY(*)(GLuint program) glDeleteProgram_func</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00046">OpenGLES.cpp:46</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_abdeb5e4397d8da638a60f53699040faf"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#abdeb5e4397d8da638a60f53699040faf">glGetProgramResourceIndex_func</a></div><div class="ttdeci">GLuint GL_APIENTRY(*)(GLuint program, GLenum programInterface, const GLchar *name) glGetProgramResourceIndex_func</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00063">OpenGLES.cpp:63</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_aebb3ff24c30f701f357afbd9fbcb3cdb"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#aebb3ff24c30f701f357afbd9fbcb3cdb">glGetUniformBlockIndex_func</a></div><div class="ttdeci">GLuint GL_APIENTRY(*)(GLuint program, const GLchar *uniformBlockName) glGetUniformBlockIndex_func</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00073">OpenGLES.cpp:73</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a0d49b3e64773db40479f7c4b1835ec1d"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a0d49b3e64773db40479f7c4b1835ec1d">glDeleteShader_func</a></div><div class="ttdeci">void GL_APIENTRY(*)(GLuint shader) glDeleteShader_func</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00047">OpenGLES.cpp:47</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a4991c46050f5040b9fc85fc35f8297ed"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a4991c46050f5040b9fc85fc35f8297ed">glBufferData</a></div><div class="ttdeci">void GL_APIENTRY glBufferData(GLenum target, GLsizeiptr size, const GLvoid *data, GLenum usage)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00516">OpenGLES.cpp:516</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_ad2a594cf5da72d124e1b7876af63897a"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#ad2a594cf5da72d124e1b7876af63897a">glUnmapBuffer_func</a></div><div class="ttdeci">GLboolean GL_APIENTRY(*)(GLenum target) glUnmapBuffer_func</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00068">OpenGLES.cpp:68</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_ac7c9e9800f919f0f217a8465994d81de"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#ac7c9e9800f919f0f217a8465994d81de">glGetShaderInfoLog</a></div><div class="ttdeci">void GL_APIENTRY glGetShaderInfoLog(GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00425">OpenGLES.cpp:425</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_aebb8dcc11953d78e620bbef0b9e2183.xhtml">core</a></li><li class="navelem"><a class="el" href="dir_88eff89ba7e837209a0b9693ad92651e.xhtml">GLES_COMPUTE</a></li><li class="navelem"><a class="el" href="_open_g_l_e_s_8cpp.xhtml">OpenGLES.cpp</a></li>
    <li class="footer">Generated on Fri Feb 21 2020 11:10:13 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
