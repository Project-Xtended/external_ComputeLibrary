<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/core/GLES_COMPUTE/GCKernelLibrary.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.02.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_g_c_kernel_library_8cpp_source.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">GCKernelLibrary.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_g_c_kernel_library_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2017-2019 ARM Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_g_c_kernel_library_8h.xhtml">arm_compute/core/GLES_COMPUTE/GCKernelLibrary.h</a>&quot;</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_error_8h.xhtml">arm_compute/core/Error.h</a>&quot;</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2core_2_utils_8h.xhtml">arm_compute/core/Utils.h</a>&quot;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &lt;fstream&gt;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &lt;iomanip&gt;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &lt;iostream&gt;</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &lt;regex&gt;</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &lt;utility&gt;</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">using namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a>;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div><div class="line"><a name="l00038"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_g_c_program.xhtml#aca45a2e24e9ad0a4ebaf2964589a6934">   38</a></span>&#160;<a class="code" href="classarm__compute_1_1_g_c_program.xhtml#aca45a2e24e9ad0a4ebaf2964589a6934">GCProgram::GCProgram</a>()</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    : _name(), _source()</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;{</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;}</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div><div class="line"><a name="l00043"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_g_c_program.xhtml#adc13d76cb0c84a46a95570e3c8b3b2c0">   43</a></span>&#160;<a class="code" href="classarm__compute_1_1_g_c_program.xhtml#aca45a2e24e9ad0a4ebaf2964589a6934">GCProgram::GCProgram</a>(std::string name, std::string source)</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    : _name(std::move(name)), _source(std::move(source))</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;{</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;}</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;</div><div class="line"><a name="l00048"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_g_c_program.xhtml#a5b4af3fb9839027279876a231a328ec9">   48</a></span>&#160;GLuint <a class="code" href="classarm__compute_1_1_g_c_program.xhtml#a5b4af3fb9839027279876a231a328ec9">GCProgram::link_program</a>(GLuint shader)</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;{</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    GLuint program = <a class="code" href="_open_g_l_e_s_8h.xhtml#a496c7b08ac063d996956854207366913">ARM_COMPUTE_GL_CHECK</a>(<a class="code" href="_open_g_l_e_s_8cpp.xhtml#add28e8aa989a1ec2bffc6a45f7a75355">glCreateProgram</a>());</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    GLint   rvalue;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    GLsizei length;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    <a class="code" href="_open_g_l_e_s_8h.xhtml#a496c7b08ac063d996956854207366913">ARM_COMPUTE_GL_CHECK</a>(<a class="code" href="_open_g_l_e_s_8cpp.xhtml#a75f4854b14c6eba12a7feb4d53933d6f">glAttachShader</a>(program, shader));</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    <a class="code" href="_open_g_l_e_s_8h.xhtml#a496c7b08ac063d996956854207366913">ARM_COMPUTE_GL_CHECK</a>(<a class="code" href="_open_g_l_e_s_8cpp.xhtml#a07e3604c0cd0da716e5de2a7ec11c8ac">glLinkProgram</a>(program));</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <a class="code" href="_open_g_l_e_s_8h.xhtml#a496c7b08ac063d996956854207366913">ARM_COMPUTE_GL_CHECK</a>(<a class="code" href="_open_g_l_e_s_8cpp.xhtml#a4c71a67ba2f8104097a63d4f41a7e64e">glDetachShader</a>(program, shader));</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <a class="code" href="_open_g_l_e_s_8h.xhtml#a496c7b08ac063d996956854207366913">ARM_COMPUTE_GL_CHECK</a>(<a class="code" href="_open_g_l_e_s_8cpp.xhtml#a3a5fb1ea4384fc30fedc9a6caf73e6e1">glDeleteShader</a>(shader));</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    <span class="comment">// Check if there were some issues when linking the shader.</span></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <a class="code" href="_open_g_l_e_s_8h.xhtml#a496c7b08ac063d996956854207366913">ARM_COMPUTE_GL_CHECK</a>(<a class="code" href="_open_g_l_e_s_8cpp.xhtml#acf2f21042df45cad38c043cd9198628b">glGetProgramiv</a>(program, GL_LINK_STATUS, &amp;rvalue));</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <span class="keywordflow">if</span>(rvalue == 0)</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    {</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        <a class="code" href="_open_g_l_e_s_8h.xhtml#a496c7b08ac063d996956854207366913">ARM_COMPUTE_GL_CHECK</a>(<a class="code" href="_open_g_l_e_s_8cpp.xhtml#acf2f21042df45cad38c043cd9198628b">glGetProgramiv</a>(program, GL_INFO_LOG_LENGTH, &amp;length));</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;        std::vector&lt;GLchar&gt; log(length);</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        <a class="code" href="_open_g_l_e_s_8h.xhtml#a496c7b08ac063d996956854207366913">ARM_COMPUTE_GL_CHECK</a>(<a class="code" href="_open_g_l_e_s_8cpp.xhtml#a9cf2058f28e321f12a8e8c4c80ece00f">glGetProgramInfoLog</a>(program, length, <span class="keyword">nullptr</span>, log.data()));</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;        <a class="code" href="_error_8h.xhtml#abd040a16dc0dbc75733e07aff93048a8">ARM_COMPUTE_ERROR_VAR</a>(<span class="stringliteral">&quot;Error: Linker log:\n%s\n&quot;</span>, log.data());</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        <span class="keywordflow">return</span> 0;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    }</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <a class="code" href="_open_g_l_e_s_8h.xhtml#a496c7b08ac063d996956854207366913">ARM_COMPUTE_GL_CHECK</a>(<a class="code" href="_open_g_l_e_s_8cpp.xhtml#ab685deb85a327c7a4c22285619c3f26a">glUseProgram</a>(program));</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <span class="keywordflow">return</span> program;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;}</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div><div class="line"><a name="l00079"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_g_c_program.xhtml#acab405c2120743ab9e063930064a6b0a">   79</a></span>&#160;GLuint <a class="code" href="classarm__compute_1_1_g_c_program.xhtml#acab405c2120743ab9e063930064a6b0a">GCProgram::compile_shader</a>(<span class="keyword">const</span> std::string &amp;<a class="code" href="_c_l_im2_col_kernel_8cpp.xhtml#a3e76c95cfc49454dbfff42e02d25ccb8">build_options</a>)</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;{</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    GLuint shader = <a class="code" href="_open_g_l_e_s_8h.xhtml#a496c7b08ac063d996956854207366913">ARM_COMPUTE_GL_CHECK</a>(<a class="code" href="_open_g_l_e_s_8cpp.xhtml#ab8cce2e1a98daed0249b9a8f929dd176">glCreateShader</a>(GL_COMPUTE_SHADER));</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a989ab3e96426615bb98e04e0235088ca">src</a>[]</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    {</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;        <span class="stringliteral">&quot;#version 310 es\n&quot;</span>,</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        <a class="code" href="_c_l_im2_col_kernel_8cpp.xhtml#a3e76c95cfc49454dbfff42e02d25ccb8">build_options</a>.c_str(),</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;        _source.c_str()</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    };</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <a class="code" href="_open_g_l_e_s_8h.xhtml#a496c7b08ac063d996956854207366913">ARM_COMPUTE_GL_CHECK</a>(<a class="code" href="_open_g_l_e_s_8cpp.xhtml#a9f1f3138bcad87b01f61c136942875bd">glShaderSource</a>(shader, <span class="keyword">sizeof</span>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a989ab3e96426615bb98e04e0235088ca">src</a>) / <span class="keyword">sizeof</span>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a989ab3e96426615bb98e04e0235088ca">src</a>[0]), <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a989ab3e96426615bb98e04e0235088ca">src</a>, <span class="keyword">nullptr</span>));</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <a class="code" href="_open_g_l_e_s_8h.xhtml#a496c7b08ac063d996956854207366913">ARM_COMPUTE_GL_CHECK</a>(<a class="code" href="_open_g_l_e_s_8cpp.xhtml#a76232dcbc71f0cb2b32c4e0f46cb2b64">glCompileShader</a>(shader));</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <span class="comment">// Check if there were any issues when compiling the shader</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    GLint   rvalue;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    GLsizei length;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    <a class="code" href="_open_g_l_e_s_8h.xhtml#a496c7b08ac063d996956854207366913">ARM_COMPUTE_GL_CHECK</a>(<a class="code" href="_open_g_l_e_s_8cpp.xhtml#ac164fec059717a7fdbf42aea5ea2ca1d">glGetShaderiv</a>(shader, GL_COMPILE_STATUS, &amp;rvalue));</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <span class="keywordflow">if</span>(rvalue == 0)</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    {</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        <a class="code" href="_open_g_l_e_s_8h.xhtml#a496c7b08ac063d996956854207366913">ARM_COMPUTE_GL_CHECK</a>(<a class="code" href="_open_g_l_e_s_8cpp.xhtml#ac164fec059717a7fdbf42aea5ea2ca1d">glGetShaderiv</a>(shader, GL_INFO_LOG_LENGTH, &amp;length));</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        std::vector&lt;GLchar&gt; log(length);</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        <a class="code" href="_open_g_l_e_s_8h.xhtml#a496c7b08ac063d996956854207366913">ARM_COMPUTE_GL_CHECK</a>(<a class="code" href="_open_g_l_e_s_8cpp.xhtml#ac7c9e9800f919f0f217a8465994d81de">glGetShaderInfoLog</a>(shader, length, <span class="keyword">nullptr</span>, log.data()));</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="preprocessor">#ifdef ARM_COMPUTE_DEBUG_ENABLED</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        std::istringstream ss(_source);</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        std::stringstream  output_stream;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        std::string        line;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        <span class="keywordtype">size_t</span>             line_num = 1;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        <a class="code" href="_log_8h.xhtml#af641430e72aa4c9f28d83131bb8e0fb9">ARM_COMPUTE_LOG_INFO_MSG_WITH_FORMAT_CORE</a>(<span class="stringliteral">&quot;GLES Shader build options:\n%s\n&quot;</span>, <a class="code" href="_c_l_im2_col_kernel_8cpp.xhtml#a3e76c95cfc49454dbfff42e02d25ccb8">build_options</a>.c_str());</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        <span class="keywordflow">while</span>(std::getline(ss, line, <span class="charliteral">&#39;\n&#39;</span>))</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        {</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;            output_stream &lt;&lt; std::setw(6) &lt;&lt; line_num &lt;&lt; <span class="stringliteral">&quot;: &quot;</span> &lt;&lt; line &lt;&lt; std::endl;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;            line_num++;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;        }</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        <a class="code" href="_log_8h.xhtml#a17fad2b9a7024c0aa258caec4d8b44c0">ARM_COMPUTE_LOG_INFO_STREAM_CORE</a>(<span class="stringliteral">&quot;GLES Shader source code:\n&quot;</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;                                         &lt;&lt; output_stream.rdbuf());</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* ARM_COMPUTE_DEBUG_ENABLED */</span><span class="preprocessor"></span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;        <a class="code" href="_error_8h.xhtml#abd040a16dc0dbc75733e07aff93048a8">ARM_COMPUTE_ERROR_VAR</a>(<span class="stringliteral">&quot;Error: Compiler log:\n%s\n&quot;</span>, log.data());</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;        <span class="keywordflow">return</span> 0;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    }</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    <span class="keywordflow">return</span> shader;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;}</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;</div><div class="line"><a name="l00131"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_g_c_kernel.xhtml#a4e7b1870ca694b9b2b6c4a0f50e1de3c">  131</a></span>&#160;<a class="code" href="classarm__compute_1_1_g_c_kernel.xhtml#a4e7b1870ca694b9b2b6c4a0f50e1de3c">GCKernel::GCKernel</a>()</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    : _name(), _program(), _shader_arguments(), _shader_params_ubo_name(), _shader_params_binding_point(), _shader_params_index(), _shader_params_size()</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;{</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;}</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="comment">// Add a default destructor in cpp file to workaround the free unallocated value issue on Android</span></div><div class="line"><a name="l00137"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_g_c_kernel.xhtml#a1b2e4d932f06eda71c000133bd277688">  137</a></span>&#160;<a class="code" href="classarm__compute_1_1_g_c_kernel.xhtml#a1b2e4d932f06eda71c000133bd277688">GCKernel::~GCKernel</a>() <span class="comment">// NOLINT</span></div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;{</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;}</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;</div><div class="line"><a name="l00141"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_g_c_kernel.xhtml#ab344625b341d67d80da2d63854401617">  141</a></span>&#160;<a class="code" href="classarm__compute_1_1_g_c_kernel.xhtml#a4e7b1870ca694b9b2b6c4a0f50e1de3c">GCKernel::GCKernel</a>(std::string name, GLuint program)</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    : _name(std::move(name)),</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;      _program(program),</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;      _shader_arguments(),</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;      _shader_params_ubo_name(0),</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;      _shader_params_binding_point(0),</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;      _shader_params_index(0),</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;      _shader_params_size(0)</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;{</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    _shader_arguments.clear();</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    <a class="code" href="_open_g_l_e_s_8h.xhtml#a496c7b08ac063d996956854207366913">ARM_COMPUTE_GL_CHECK</a>(<a class="code" href="_open_g_l_e_s_8cpp.xhtml#a68154b66955d77ae9c5192218e02ebdc">glGenBuffers</a>(1, &amp;_shader_params_ubo_name));</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    _shader_params_index = <a class="code" href="_open_g_l_e_s_8h.xhtml#a496c7b08ac063d996956854207366913">ARM_COMPUTE_GL_CHECK</a>(<a class="code" href="_open_g_l_e_s_8cpp.xhtml#a81b3135fe4b76436b0e901032fc4df1b">glGetUniformBlockIndex</a>(_program, _shader_params_name));</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    <a class="code" href="_error_8h.xhtml#acaa348bf0c7eb9493c72092b7293d45f">ARM_COMPUTE_ERROR_ON_MSG_VAR</a>(_shader_params_index == GL_INVALID_INDEX, <span class="stringliteral">&quot;Failed to get index of %s&quot;</span>, _shader_params_name);</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    <a class="code" href="_open_g_l_e_s_8h.xhtml#a496c7b08ac063d996956854207366913">ARM_COMPUTE_GL_CHECK</a>(<a class="code" href="_open_g_l_e_s_8cpp.xhtml#a21827516ba1b8b4c12c6238b3fd67200">glGetActiveUniformBlockiv</a>(_program, _shader_params_index, GL_UNIFORM_BLOCK_DATA_SIZE, &amp;_shader_params_size));</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    <a class="code" href="_error_8h.xhtml#acaa348bf0c7eb9493c72092b7293d45f">ARM_COMPUTE_ERROR_ON_MSG_VAR</a>(_shader_params_size == 0, <span class="stringliteral">&quot;Failed to get size of %s&quot;</span>, _shader_params_name);</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;}</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;</div><div class="line"><a name="l00160"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_g_c_kernel.xhtml#a4b66d5e31b5dc18b314c8a68163263bd">  160</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_g_c_kernel.xhtml#a4b66d5e31b5dc18b314c8a68163263bd">GCKernel::cleanup</a>()</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;{</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    <a class="code" href="_open_g_l_e_s_8h.xhtml#a496c7b08ac063d996956854207366913">ARM_COMPUTE_GL_CHECK</a>(<a class="code" href="_open_g_l_e_s_8cpp.xhtml#a528e76a977061a313bad3ab6fe7747fe">glDeleteBuffers</a>(1, &amp;_shader_params_ubo_name));</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    <a class="code" href="_open_g_l_e_s_8h.xhtml#a496c7b08ac063d996956854207366913">ARM_COMPUTE_GL_CHECK</a>(<a class="code" href="_open_g_l_e_s_8cpp.xhtml#ad9528d3fb71b7ee1e23fab6aed1cba83">glBindBuffer</a>(GL_UNIFORM_BUFFER, 0));</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    <a class="code" href="_open_g_l_e_s_8h.xhtml#a496c7b08ac063d996956854207366913">ARM_COMPUTE_GL_CHECK</a>(<a class="code" href="_open_g_l_e_s_8cpp.xhtml#a334ce7125cfb54a811b748f23f228417">glDeleteProgram</a>(_program));</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    <a class="code" href="_open_g_l_e_s_8h.xhtml#a496c7b08ac063d996956854207366913">ARM_COMPUTE_GL_CHECK</a>(<a class="code" href="_open_g_l_e_s_8cpp.xhtml#ab685deb85a327c7a4c22285619c3f26a">glUseProgram</a>(0));</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;}</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;</div><div class="line"><a name="l00168"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_g_c_kernel.xhtml#a8a05de24712939691a7cf8934d9e5c5f">  168</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_g_c_kernel.xhtml#a8a05de24712939691a7cf8934d9e5c5f">GCKernel::use</a>()</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;{</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    <a class="code" href="_open_g_l_e_s_8h.xhtml#a496c7b08ac063d996956854207366913">ARM_COMPUTE_GL_CHECK</a>(<a class="code" href="_open_g_l_e_s_8cpp.xhtml#ab685deb85a327c7a4c22285619c3f26a">glUseProgram</a>(_program));</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;}</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;</div><div class="line"><a name="l00173"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_g_c_kernel.xhtml#ae02bc07b18ddc44c29318c100a063d3a">  173</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_g_c_kernel.xhtml#ae02bc07b18ddc44c29318c100a063d3a">GCKernel::unuse</a>()</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;{</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    <a class="code" href="_open_g_l_e_s_8h.xhtml#a496c7b08ac063d996956854207366913">ARM_COMPUTE_GL_CHECK</a>(<a class="code" href="_open_g_l_e_s_8cpp.xhtml#ab685deb85a327c7a4c22285619c3f26a">glUseProgram</a>(0));</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;}</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;</div><div class="line"><a name="l00178"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_g_c_kernel.xhtml#a7c2752de95fae1daedbae97fa9b031e4">  178</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_g_c_kernel.xhtml#a7c2752de95fae1daedbae97fa9b031e4">GCKernel::update_shader_params</a>()</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;{</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    <a class="code" href="_error_8h.xhtml#acaa348bf0c7eb9493c72092b7293d45f">ARM_COMPUTE_ERROR_ON_MSG_VAR</a>((_shader_params_size != (<span class="keywordtype">int</span>)(_shader_arguments.size() * <span class="keyword">sizeof</span>(_shader_arguments[0]))), <span class="stringliteral">&quot;Arguments size (%zu) is not equal to shader params block size (%d)&quot;</span>,</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;                                 _shader_arguments.size() * <span class="keyword">sizeof</span>(_shader_arguments[0]), _shader_params_size);</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    <a class="code" href="_open_g_l_e_s_8h.xhtml#a496c7b08ac063d996956854207366913">ARM_COMPUTE_GL_CHECK</a>(<a class="code" href="_open_g_l_e_s_8cpp.xhtml#a5943aadf8a3d988af82624d19cbd1c0a">glUniformBlockBinding</a>(_program, _shader_params_index, _shader_params_binding_point));</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    <a class="code" href="_open_g_l_e_s_8h.xhtml#a496c7b08ac063d996956854207366913">ARM_COMPUTE_GL_CHECK</a>(<a class="code" href="_open_g_l_e_s_8cpp.xhtml#a377c2f368dc6d8961943363077581dbd">glBindBufferBase</a>(GL_UNIFORM_BUFFER, _shader_params_binding_point, _shader_params_ubo_name));</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    <a class="code" href="_open_g_l_e_s_8h.xhtml#a496c7b08ac063d996956854207366913">ARM_COMPUTE_GL_CHECK</a>(<a class="code" href="_open_g_l_e_s_8cpp.xhtml#ad9528d3fb71b7ee1e23fab6aed1cba83">glBindBuffer</a>(GL_UNIFORM_BUFFER, _shader_params_ubo_name));</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    <a class="code" href="_open_g_l_e_s_8h.xhtml#a496c7b08ac063d996956854207366913">ARM_COMPUTE_GL_CHECK</a>(<a class="code" href="_open_g_l_e_s_8cpp.xhtml#a4991c46050f5040b9fc85fc35f8297ed">glBufferData</a>(GL_UNIFORM_BUFFER, _shader_params_size, _shader_arguments.data(), GL_DYNAMIC_DRAW));</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    <a class="code" href="_open_g_l_e_s_8h.xhtml#a496c7b08ac063d996956854207366913">ARM_COMPUTE_GL_CHECK</a>(<a class="code" href="_open_g_l_e_s_8cpp.xhtml#ad9528d3fb71b7ee1e23fab6aed1cba83">glBindBuffer</a>(GL_UNIFORM_BUFFER, 0));</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;}</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="keyword">const</span> std::map&lt;std::string, std::string&gt; GCKernelLibrary::_shader_program_map =</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;{</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    { <span class="stringliteral">&quot;absdiff&quot;</span>, <span class="stringliteral">&quot;absdiff.cs&quot;</span> },</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    { <span class="stringliteral">&quot;tensorshift&quot;</span>, <span class="stringliteral">&quot;tensor_shift.cs&quot;</span> },</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    { <span class="stringliteral">&quot;direct_convolution1x1&quot;</span>, <span class="stringliteral">&quot;direct_convolution1x1.cs&quot;</span> },</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    { <span class="stringliteral">&quot;direct_convolution3x3&quot;</span>, <span class="stringliteral">&quot;direct_convolution3x3.cs&quot;</span> },</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;    { <span class="stringliteral">&quot;direct_convolution5x5&quot;</span>, <span class="stringliteral">&quot;direct_convolution5x5.cs&quot;</span> },</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    { <span class="stringliteral">&quot;pooling_layer_2&quot;</span>, <span class="stringliteral">&quot;pooling_layer.cs&quot;</span> },</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    { <span class="stringliteral">&quot;pooling_layer_3&quot;</span>, <span class="stringliteral">&quot;pooling_layer.cs&quot;</span> },</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    { <span class="stringliteral">&quot;pooling_layer_7&quot;</span>, <span class="stringliteral">&quot;pooling_layer.cs&quot;</span> },</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    { <span class="stringliteral">&quot;pooling_layer_3_optimized&quot;</span>, <span class="stringliteral">&quot;pooling_layer.cs&quot;</span> },</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    { <span class="stringliteral">&quot;pooling_layer_n&quot;</span>, <span class="stringliteral">&quot;pooling_layer.cs&quot;</span> },</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    { <span class="stringliteral">&quot;fill_image_borders_replicate&quot;</span>, <span class="stringliteral">&quot;fill_border.cs&quot;</span> },</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    { <span class="stringliteral">&quot;fill_image_borders_constant&quot;</span>, <span class="stringliteral">&quot;fill_border.cs&quot;</span> },</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    { <span class="stringliteral">&quot;gemm_accumulate_biases&quot;</span>, <span class="stringliteral">&quot;gemm.cs&quot;</span> },</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    { <span class="stringliteral">&quot;gemm_interleave4x4&quot;</span>, <span class="stringliteral">&quot;gemm.cs&quot;</span> },</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    { <span class="stringliteral">&quot;gemm_ma&quot;</span>, <span class="stringliteral">&quot;gemm.cs&quot;</span> },</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    { <span class="stringliteral">&quot;gemm_mm_interleaved_transposed&quot;</span>, <span class="stringliteral">&quot;gemm.cs&quot;</span> },</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;    { <span class="stringliteral">&quot;gemm_mm_floating_point&quot;</span>, <span class="stringliteral">&quot;gemm.cs&quot;</span> },</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    { <span class="stringliteral">&quot;gemm_transpose1x4&quot;</span>, <span class="stringliteral">&quot;gemm.cs&quot;</span> },</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    { <span class="stringliteral">&quot;reshape_to_columns&quot;</span>, <span class="stringliteral">&quot;convolution_layer.cs&quot;</span> },</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    { <span class="stringliteral">&quot;im2col_kernel3x3_padx0_pady0&quot;</span>, <span class="stringliteral">&quot;convolution_layer.cs&quot;</span> },</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;    { <span class="stringliteral">&quot;im2col_generic&quot;</span>, <span class="stringliteral">&quot;convolution_layer.cs&quot;</span> },</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;    { <span class="stringliteral">&quot;im2col_reduced&quot;</span>, <span class="stringliteral">&quot;convolution_layer.cs&quot;</span> },</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;    { <span class="stringliteral">&quot;col2im&quot;</span>, <span class="stringliteral">&quot;convolution_layer.cs&quot;</span> },</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    { <span class="stringliteral">&quot;transpose&quot;</span>, <span class="stringliteral">&quot;transpose.cs&quot;</span> },</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    { <span class="stringliteral">&quot;activation_layer&quot;</span>, <span class="stringliteral">&quot;activation_layer.cs&quot;</span> },</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;    { <span class="stringliteral">&quot;softmax_layer_max&quot;</span>, <span class="stringliteral">&quot;softmax_layer.cs&quot;</span> },</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;    { <span class="stringliteral">&quot;softmax_layer_shift_exp_sum&quot;</span>, <span class="stringliteral">&quot;softmax_layer.cs&quot;</span> },</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;    { <span class="stringliteral">&quot;softmax_layer_norm&quot;</span>, <span class="stringliteral">&quot;softmax_layer.cs&quot;</span> },</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;    { <span class="stringliteral">&quot;pixelwise_mul_float&quot;</span>, <span class="stringliteral">&quot;pixelwise_mul_float.cs&quot;</span> },</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;    { <span class="stringliteral">&quot;normalization_layer&quot;</span>, <span class="stringliteral">&quot;normalization_layer.cs&quot;</span> },</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;    { <span class="stringliteral">&quot;batchnormalization_layer&quot;</span>, <span class="stringliteral">&quot;batchnormalization_layer.cs&quot;</span> },</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;    { <span class="stringliteral">&quot;concatenate_depth&quot;</span>, <span class="stringliteral">&quot;concatenate.cs&quot;</span> },</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;    { <span class="stringliteral">&quot;dropout&quot;</span>, <span class="stringliteral">&quot;dropout.cs&quot;</span> },</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;    { <span class="stringliteral">&quot;normalize_planar_yuv_layer&quot;</span>, <span class="stringliteral">&quot;normalize_planar_yuv_layer.cs&quot;</span> },</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;    { <span class="stringliteral">&quot;scale_nearest_neighbour&quot;</span>, <span class="stringliteral">&quot;scale.cs&quot;</span> },</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;    { <span class="stringliteral">&quot;arithmetic_add&quot;</span>, <span class="stringliteral">&quot;arithmetic_add.cs&quot;</span> },</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;    { <span class="stringliteral">&quot;depthwise_convolution_3x3&quot;</span>, <span class="stringliteral">&quot;depthwise_convolution3x3.cs&quot;</span> },</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;};</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;<span class="keyword">const</span> std::map&lt;std::string, std::string&gt; GCKernelLibrary::_program_source_map =</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;{</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;<span class="preprocessor">#ifdef EMBEDDED_KERNELS</span></div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;    {</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;        <span class="stringliteral">&quot;helpers_cs.h&quot;</span>,</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;<span class="preprocessor">#include &quot;./cs_shaders/helpers_cs.hembed&quot;</span></div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;    },</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;    {</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;        <span class="stringliteral">&quot;activation_layer_helpers_cs.h&quot;</span>,</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;<span class="preprocessor">#include &quot;./cs_shaders/activation_layer_helpers_cs.hembed&quot;</span></div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;    },</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;    {</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;        <span class="stringliteral">&quot;absdiff.cs&quot;</span>,</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;<span class="preprocessor">#include &quot;./cs_shaders/absdiff.csembed&quot;</span></div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;    },</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;    {</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;        <span class="stringliteral">&quot;tensor_shift.cs&quot;</span>,</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;<span class="preprocessor">#include &quot;./cs_shaders/tensor_shift.csembed&quot;</span></div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;    },</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;    {</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;        <span class="stringliteral">&quot;convolution_layer.cs&quot;</span>,</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;<span class="preprocessor">#include &quot;./cs_shaders/convolution_layer.csembed&quot;</span></div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;    },</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;    {</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;        <span class="stringliteral">&quot;direct_convolution1x1.cs&quot;</span>,</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;<span class="preprocessor">#include &quot;./cs_shaders/direct_convolution1x1.csembed&quot;</span></div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;    },</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;    {</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;        <span class="stringliteral">&quot;direct_convolution3x3.cs&quot;</span>,</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;<span class="preprocessor">#include &quot;./cs_shaders/direct_convolution3x3.csembed&quot;</span></div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;    },</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;    {</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;        <span class="stringliteral">&quot;direct_convolution5x5.cs&quot;</span>,</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;<span class="preprocessor">#include &quot;./cs_shaders/direct_convolution5x5.csembed&quot;</span></div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;    },</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;    {</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;        <span class="stringliteral">&quot;pooling_layer.cs&quot;</span>,</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;<span class="preprocessor">#include &quot;./cs_shaders/pooling_layer.csembed&quot;</span></div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;    },</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;    {</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;        <span class="stringliteral">&quot;fill_border.cs&quot;</span>,</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;<span class="preprocessor">#include &quot;./cs_shaders/fill_border.csembed&quot;</span></div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;    },</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;    {</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;        <span class="stringliteral">&quot;gemm.cs&quot;</span>,</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;<span class="preprocessor">#include &quot;./cs_shaders/gemm.csembed&quot;</span></div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;    },</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;    {</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;        <span class="stringliteral">&quot;transpose.cs&quot;</span>,</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;<span class="preprocessor">#include &quot;./cs_shaders/transpose.csembed&quot;</span></div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;    },</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;    {</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;        <span class="stringliteral">&quot;activation_layer.cs&quot;</span>,</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;<span class="preprocessor">#include &quot;./cs_shaders/activation_layer.csembed&quot;</span></div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;    },</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;    {</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;        <span class="stringliteral">&quot;softmax_layer.cs&quot;</span>,</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;<span class="preprocessor">#include &quot;./cs_shaders/softmax_layer.csembed&quot;</span></div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;    },</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;    {</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;        <span class="stringliteral">&quot;pixelwise_mul_float.cs&quot;</span>,</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;<span class="preprocessor">#include &quot;./cs_shaders/pixelwise_mul_float.csembed&quot;</span></div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;    },</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;    {</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;        <span class="stringliteral">&quot;normalization_layer.cs&quot;</span>,</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;<span class="preprocessor">#include &quot;./cs_shaders/normalization_layer.csembed&quot;</span></div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;    },</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;    {</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;        <span class="stringliteral">&quot;batchnormalization_layer.cs&quot;</span>,</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;<span class="preprocessor">#include &quot;./cs_shaders/batchnormalization_layer.csembed&quot;</span></div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;    },</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;    {</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;        <span class="stringliteral">&quot;concatenate.cs&quot;</span>,</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;<span class="preprocessor">#include &quot;./cs_shaders/concatenate.csembed&quot;</span></div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;    },</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;    {</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;        <span class="stringliteral">&quot;dropout.cs&quot;</span>,</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;<span class="preprocessor">#include &quot;./cs_shaders/dropout.csembed&quot;</span></div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;    },</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;    {</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;        <span class="stringliteral">&quot;normalize_planar_yuv_layer.cs&quot;</span>,</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;<span class="preprocessor">#include &quot;./cs_shaders/normalize_planar_yuv_layer.csembed&quot;</span></div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;    },</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;    {</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;        <span class="stringliteral">&quot;scale.cs&quot;</span>,</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;<span class="preprocessor">#include &quot;./cs_shaders/scale.csembed&quot;</span></div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;    },</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;    {</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;        <span class="stringliteral">&quot;arithmetic_add.cs&quot;</span>,</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;<span class="preprocessor">#include &quot;./cs_shaders/arithmetic_add.csembed&quot;</span></div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;    },</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;    {</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;        <span class="stringliteral">&quot;depthwise_convolution3x3.cs&quot;</span>,</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;<span class="preprocessor">#include &quot;./cs_shaders/depthwise_convolution3x3.csembed&quot;</span></div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;    },</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* EMBEDDED_KERNELS */</span><span class="preprocessor"></span></div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;};</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;</div><div class="line"><a name="l00329"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_g_c_kernel_library.xhtml#a180442a389960babb1fca97ef99df0d4">  329</a></span>&#160;<a class="code" href="classarm__compute_1_1_g_c_kernel_library.xhtml#a180442a389960babb1fca97ef99df0d4">GCKernelLibrary::GCKernelLibrary</a>()</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;    : _display(EGL_NO_DISPLAY), _context(EGL_NO_CONTEXT), _frame_buffer(0), _tex_rt(0), _shader_path(<span class="stringliteral">&quot;./&quot;</span>), _programs_map(), _built_programs_map()</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;{</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;}</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;</div><div class="line"><a name="l00334"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_g_c_kernel_library.xhtml#a677e1b4dae70aaa7a18e9a8f1a4692e8">  334</a></span>&#160;<a class="code" href="classarm__compute_1_1_g_c_kernel_library.xhtml">GCKernelLibrary</a> &amp;<a class="code" href="classarm__compute_1_1_g_c_kernel_library.xhtml#a677e1b4dae70aaa7a18e9a8f1a4692e8">GCKernelLibrary::get</a>()</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;{</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;    <span class="keyword">static</span> <a class="code" href="classarm__compute_1_1_g_c_kernel_library.xhtml">GCKernelLibrary</a> _kernel_library;</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;    <span class="keywordflow">return</span> _kernel_library;</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;}</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;</div><div class="line"><a name="l00340"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_g_c_kernel_library.xhtml#abe24625d55f2fb35da7e293e5e28d483">  340</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_g_c_kernel_library.xhtml#abe24625d55f2fb35da7e293e5e28d483">GCKernelLibrary::init</a>(std::string shader_path, EGLDisplay dpy, EGLContext ctx)</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;{</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;    <span class="comment">//TODO: deal with old display and context.</span></div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;    _shader_path = std::move(shader_path);</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;    _display = dpy;</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;    _context = ctx;</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;    <a class="code" href="_open_g_l_e_s_8cpp.xhtml#af6db9d046fe0e996c3693373864e6254">eglMakeCurrent</a>(_display, EGL_NO_SURFACE, EGL_NO_SURFACE, _context);</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;    <a class="code" href="classarm__compute_1_1_g_c_kernel_library.xhtml#a374c8804afa3425411f78ec3b164f267">setup_dummy_fbo</a>();</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;}</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;</div><div class="line"><a name="l00352"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_g_c_kernel_library.xhtml#a1d39c8fd9605c241b797dcbd9d3cc474">  352</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_g_c_kernel_library.xhtml#a1d39c8fd9605c241b797dcbd9d3cc474">GCKernelLibrary::set_shader_path</a>(<span class="keyword">const</span> std::string &amp;shader_path)</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;{</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;    _shader_path = shader_path;</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;}</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;</div><div class="line"><a name="l00357"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_g_c_kernel_library.xhtml#adad9a34e26a1a1b6574057981a1f7bb3">  357</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_g_c_kernel_library.xhtml#adad9a34e26a1a1b6574057981a1f7bb3">GCKernelLibrary::set_context</a>(EGLDisplay dpy, EGLContext ctx)</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;{</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;    <span class="comment">//TODO: deal with old display and context.</span></div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;    _display = dpy;</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;    _context = ctx;</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;    <a class="code" href="_open_g_l_e_s_8cpp.xhtml#af6db9d046fe0e996c3693373864e6254">eglMakeCurrent</a>(dpy, EGL_NO_SURFACE, EGL_NO_SURFACE, ctx);</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;    <a class="code" href="classarm__compute_1_1_g_c_kernel_library.xhtml#a374c8804afa3425411f78ec3b164f267">setup_dummy_fbo</a>();</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;}</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;</div><div class="line"><a name="l00367"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_g_c_kernel_library.xhtml#a622a42cbd9eefe938d3bf87869f0b6be">  367</a></span>&#160;<a class="code" href="classarm__compute_1_1_g_c_kernel.xhtml">GCKernel</a> <a class="code" href="classarm__compute_1_1_g_c_kernel_library.xhtml#a622a42cbd9eefe938d3bf87869f0b6be">GCKernelLibrary::create_kernel</a>(<span class="keyword">const</span> std::string &amp;shader_name, <span class="keyword">const</span> StringSet &amp;build_options_set)<span class="keyword"> const</span></div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;    <span class="comment">// Find which program contains the kernel</span></div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;    <span class="keyword">auto</span> shader_program_it = _shader_program_map.find(shader_name);</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;    <span class="keywordflow">if</span>(_shader_program_map.end() == shader_program_it)</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;    {</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;        <a class="code" href="_error_8h.xhtml#abd040a16dc0dbc75733e07aff93048a8">ARM_COMPUTE_ERROR_VAR</a>(<span class="stringliteral">&quot;Shader %s not found in the GCKernelLibrary&quot;</span>, shader_name.c_str());</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;    }</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;    <span class="comment">// Check if the program has been built before with same build options.</span></div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;    <span class="keyword">const</span> std::string program_name       = shader_program_it-&gt;second;</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;    <span class="keyword">const</span> std::string <a class="code" href="_c_l_im2_col_kernel_8cpp.xhtml#a3e76c95cfc49454dbfff42e02d25ccb8">build_options</a>      = stringify_set(build_options_set);</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;    <span class="keyword">const</span> std::string built_program_name = program_name + <span class="stringliteral">&quot;_&quot;</span> + <a class="code" href="_c_l_im2_col_kernel_8cpp.xhtml#a3e76c95cfc49454dbfff42e02d25ccb8">build_options</a>;</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;    <span class="keyword">auto</span>              built_program_it   = _built_programs_map.find(built_program_name);</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;    <a class="code" href="classarm__compute_1_1_g_c_kernel.xhtml">GCKernel</a> kernel;</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;    <span class="keywordflow">if</span>(_built_programs_map.end() != built_program_it)</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;    {</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;        <span class="comment">// If program has been built, retrieve to create kernel from it</span></div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;        kernel = built_program_it-&gt;second;</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;    }</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;    {</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;        <a class="code" href="classarm__compute_1_1_g_c_program.xhtml">GCProgram</a> program = load_program(program_name);</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;        std::string source_name = _shader_path + shader_program_it-&gt;second;</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;        <span class="comment">// load shader</span></div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;        GLuint shader = program.<a class="code" href="classarm__compute_1_1_g_c_program.xhtml#acab405c2120743ab9e063930064a6b0a">compile_shader</a>(<a class="code" href="_c_l_im2_col_kernel_8cpp.xhtml#a3e76c95cfc49454dbfff42e02d25ccb8">build_options</a>);</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;        <span class="comment">// Build program</span></div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;        GLuint gles_program = program.<a class="code" href="classarm__compute_1_1_g_c_program.xhtml#a5b4af3fb9839027279876a231a328ec9">link_program</a>(shader);</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;        <span class="comment">// Create GCKernel</span></div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;        kernel = <a class="code" href="classarm__compute_1_1_g_c_kernel.xhtml">GCKernel</a>(shader_name, gles_program);</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;        <span class="comment">// Add built program to internal map</span></div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;        _built_programs_map.emplace(built_program_name, kernel);</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;    }</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;    kernel.<a class="code" href="classarm__compute_1_1_g_c_kernel.xhtml#a8a05de24712939691a7cf8934d9e5c5f">use</a>();</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;    kernel.<a class="code" href="classarm__compute_1_1_g_c_kernel.xhtml#a2ff24cc62df8324f57dcc2f3c9e533a9">clear_arguments</a>();</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;    <span class="comment">// set shader params binding point</span></div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;    kernel.<a class="code" href="classarm__compute_1_1_g_c_kernel.xhtml#ae722344eb4eb8a404d600561914859ab">set_shader_params_binding_point</a>(0);</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;    <span class="keywordflow">return</span> kernel;</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;}</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;std::string GCKernelLibrary::preprocess_shader(<span class="keyword">const</span> std::string &amp;shader_source)<span class="keyword"> const</span></div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;    <span class="keyword">enum class</span> ParserStage</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;    {</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;        FIRST,</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;        SKIP_COMMENTS = FIRST,</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;        RESOLVE_INCLUDES,</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;        LAST</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;    };</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;    <span class="comment">// Define a GLES compute shader parser function</span></div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;    std::function&lt;std::string(<span class="keyword">const</span> std::string &amp;, ParserStage, <span class="keywordtype">int</span>)&gt; cs_parser;</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;    cs_parser = [&amp;](<span class="keyword">const</span> std::string &amp; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a989ab3e96426615bb98e04e0235088ca">src</a>, ParserStage stage, int) -&gt; std::string</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;    {</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;        std::string <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>;</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;</div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;        <span class="keywordflow">if</span>(stage == ParserStage::LAST || std::regex_match(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a989ab3e96426615bb98e04e0235088ca">src</a>, std::regex(R<span class="stringliteral">&quot;(\s*)&quot;)))</span></div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;<span class="stringliteral">        {</span></div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;<span class="stringliteral">            </span><span class="keywordflow">return</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a989ab3e96426615bb98e04e0235088ca">src</a>;</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;        }</div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;        <span class="keyword">auto</span> next_stage = static_cast&lt;ParserStage&gt;(static_cast&lt;int&gt;(stage) + 1);</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;        std::string search_pattern;</div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;        <span class="keywordflow">switch</span>(stage)</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;        {</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;            <span class="keywordflow">case</span> ParserStage::SKIP_COMMENTS:</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;                search_pattern = R<span class="stringliteral">&quot;((/\*([^*]|\n|(\*+([^*/]|\n)))*\*+/)|(//.*))&quot;;</span></div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;<span class="stringliteral">                </span><span class="keywordflow">break</span>;</div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;            <span class="keywordflow">case</span> ParserStage::RESOLVE_INCLUDES:</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;                search_pattern = R<span class="stringliteral">&quot;rgx((?:^|\n)[ \t]*#include &quot;(.*)&quot;)rgx&quot;;</span></div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;<span class="stringliteral">                </span><span class="keywordflow">break</span>;</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;            <span class="keywordflow">default</span>:</div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;                <span class="keywordflow">break</span>;</div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;        }</div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;        std::regex  search_regex(search_pattern);</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;        std::smatch match;</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;        ptrdiff_t   parsed_pos = 0;</div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;        <span class="keywordflow">if</span>(std::regex_search(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a989ab3e96426615bb98e04e0235088ca">src</a>, match, search_regex))</div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;        {</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;            <span class="comment">// Pass the content before the match to the next stage</span></div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;            <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>.append(cs_parser(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a989ab3e96426615bb98e04e0235088ca">src</a>.substr(0, match.position()), next_stage, 0));</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;            parsed_pos = match.position() + match.length();</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;            <span class="comment">// Deal with the matched content</span></div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;            <span class="keywordflow">switch</span>(stage)</div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;            {</div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;                <span class="keywordflow">case</span> ParserStage::RESOLVE_INCLUDES:</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;                {</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;                    <span class="comment">// Replace with the included file contents</span></div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;                    <span class="comment">// And parse the content from the first stage</span></div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;                    <span class="keyword">const</span> std::string source_name = _shader_path + match.str(1);</div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;                    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>.append(cs_parser(<a class="code" href="namespacearm__compute.xhtml#ae0d288429eb20baf6da6109f3a21e6bb">read_file</a>(source_name, <span class="keyword">false</span>), ParserStage::FIRST, 0));</div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;                }</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;                <span class="keywordflow">case</span> ParserStage::SKIP_COMMENTS:</div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;                <span class="keywordflow">default</span>:</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;                    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>.append(match.str());</div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;            }</div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;            next_stage = stage;</div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;        }</div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;        <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>.append(cs_parser(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a989ab3e96426615bb98e04e0235088ca">src</a>.substr(parsed_pos, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a989ab3e96426615bb98e04e0235088ca">src</a>.length() - parsed_pos), next_stage, 0));</div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;</div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>;</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;    };</div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;</div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;    <span class="keywordflow">return</span> cs_parser(shader_source, ParserStage::FIRST, 0);</div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;}</div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;</div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_g_c_program.xhtml">GCProgram</a> &amp;GCKernelLibrary::load_program(<span class="keyword">const</span> std::string &amp;program_name)<span class="keyword"> const</span></div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> program_it = _programs_map.find(program_name);</div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;</div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;    <span class="keywordflow">if</span>(program_it != _programs_map.end())</div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;    {</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;        <span class="keywordflow">return</span> program_it-&gt;second;</div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;    }</div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;</div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;    <a class="code" href="classarm__compute_1_1_g_c_program.xhtml">GCProgram</a> program;</div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;</div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;<span class="preprocessor">#ifdef EMBEDDED_KERNELS</span></div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> program_source_it = _program_source_map.find(program_name);</div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;</div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;    <span class="keywordflow">if</span>(_program_source_map.end() == program_source_it)</div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;    {</div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;        <a class="code" href="_error_8h.xhtml#abd040a16dc0dbc75733e07aff93048a8">ARM_COMPUTE_ERROR_VAR</a>(<span class="stringliteral">&quot;Embedded program for %s does not exist.&quot;</span>, program_name.c_str());</div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;    }</div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;</div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;    program = <a class="code" href="classarm__compute_1_1_g_c_program.xhtml">GCProgram</a>(program_name, program_source_it-&gt;second);</div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;<span class="preprocessor">#else  </span><span class="comment">/* EMBEDDED_KERNELS */</span><span class="preprocessor"></span></div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;    <span class="comment">// Check for binary</span></div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;    std::string source_name = _shader_path + program_name;</div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;    <span class="keywordflow">if</span>(std::ifstream(source_name).is_open())</div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;    {</div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;        program = <a class="code" href="classarm__compute_1_1_g_c_program.xhtml">GCProgram</a>(program_name, preprocess_shader(<a class="code" href="namespacearm__compute.xhtml#ae0d288429eb20baf6da6109f3a21e6bb">read_file</a>(source_name, <span class="keyword">false</span>)));</div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;    }</div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;    {</div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;        <a class="code" href="_error_8h.xhtml#abd040a16dc0dbc75733e07aff93048a8">ARM_COMPUTE_ERROR_VAR</a>(<span class="stringliteral">&quot;Shader file %s does not exist.&quot;</span>, source_name.c_str());</div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;    }</div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* EMBEDDED_KERNELS */</span><span class="preprocessor"></span></div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;</div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;    <span class="comment">// Insert program to program map</span></div><div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> new_program = _programs_map.emplace(program_name, std::move(program));</div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;</div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;    <span class="keywordflow">return</span> new_program.first-&gt;second;</div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;}</div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;</div><div class="line"><a name="l00526"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_g_c_kernel_library.xhtml#a374c8804afa3425411f78ec3b164f267">  526</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_g_c_kernel_library.xhtml#a374c8804afa3425411f78ec3b164f267">GCKernelLibrary::setup_dummy_fbo</a>()</div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;{</div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;    <a class="code" href="_open_g_l_e_s_8h.xhtml#a496c7b08ac063d996956854207366913">ARM_COMPUTE_GL_CHECK</a>(<a class="code" href="_open_g_l_e_s_8cpp.xhtml#a1773d8c97f9c1063a45db4cf9d7c1613">glGenFramebuffers</a>(1, &amp;_frame_buffer));</div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;    <a class="code" href="_open_g_l_e_s_8h.xhtml#a496c7b08ac063d996956854207366913">ARM_COMPUTE_GL_CHECK</a>(<a class="code" href="_open_g_l_e_s_8cpp.xhtml#a4213ab91e8c4fc1dc12f3904f7cc170e">glBindFramebuffer</a>(GL_FRAMEBUFFER, _frame_buffer));</div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;    <a class="code" href="_open_g_l_e_s_8h.xhtml#a496c7b08ac063d996956854207366913">ARM_COMPUTE_GL_CHECK</a>(<a class="code" href="_open_g_l_e_s_8cpp.xhtml#aeaa37f1850f96a9610b10f87af5b44a4">glGenTextures</a>(1, &amp;_tex_rt));</div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;    <a class="code" href="_open_g_l_e_s_8h.xhtml#a496c7b08ac063d996956854207366913">ARM_COMPUTE_GL_CHECK</a>(<a class="code" href="_open_g_l_e_s_8cpp.xhtml#afdd4572fd462b84e467e9af2a94d1116">glBindTexture</a>(GL_TEXTURE_2D, _tex_rt));</div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;    <a class="code" href="_open_g_l_e_s_8h.xhtml#a496c7b08ac063d996956854207366913">ARM_COMPUTE_GL_CHECK</a>(<a class="code" href="_open_g_l_e_s_8cpp.xhtml#a52e5a8e8cf2a333616f36781b02f6b32">glTexImage2D</a>(GL_TEXTURE_2D, 0, GL_RGB, 1, 1, 0, GL_RGB, GL_UNSIGNED_BYTE, <span class="keyword">nullptr</span>));</div><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;    <a class="code" href="_open_g_l_e_s_8h.xhtml#a496c7b08ac063d996956854207366913">ARM_COMPUTE_GL_CHECK</a>(<a class="code" href="_open_g_l_e_s_8cpp.xhtml#a1c5dc7cc04f7c0b1bd7c181b0da84d9b">glFramebufferTexture2D</a>(GL_FRAMEBUFFER, GL_COLOR_ATTACHMENT0, GL_TEXTURE_2D, _tex_rt, 0));</div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;}</div><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;</div><div class="line"><a name="l00536"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_g_c_kernel_library.xhtml#a8654ef10c691a43bd0a6e52b131ff79d">  536</a></span>&#160;<a class="code" href="classarm__compute_1_1_g_c_kernel_library.xhtml#a8654ef10c691a43bd0a6e52b131ff79d">GCKernelLibrary::~GCKernelLibrary</a>()</div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;{</div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;    <span class="keywordflow">for</span>(<span class="keyword">auto</span> &amp;program : _built_programs_map)</div><div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;    {</div><div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;        static_cast&lt;GCKernel&gt;(program.second).cleanup();</div><div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;    }</div><div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;</div><div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;    <a class="code" href="_open_g_l_e_s_8h.xhtml#a496c7b08ac063d996956854207366913">ARM_COMPUTE_GL_CHECK</a>(<a class="code" href="_open_g_l_e_s_8cpp.xhtml#afdd4572fd462b84e467e9af2a94d1116">glBindTexture</a>(GL_TEXTURE_2D, 0));</div><div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;    <a class="code" href="_open_g_l_e_s_8h.xhtml#a496c7b08ac063d996956854207366913">ARM_COMPUTE_GL_CHECK</a>(<a class="code" href="_open_g_l_e_s_8cpp.xhtml#a4213ab91e8c4fc1dc12f3904f7cc170e">glBindFramebuffer</a>(GL_FRAMEBUFFER, 0));</div><div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;    <a class="code" href="_open_g_l_e_s_8h.xhtml#a496c7b08ac063d996956854207366913">ARM_COMPUTE_GL_CHECK</a>(<a class="code" href="_open_g_l_e_s_8cpp.xhtml#afa7af01b67ca2c80d2d33824cdd1e694">glDeleteTextures</a>(1, &amp;_tex_rt));</div><div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;    <a class="code" href="_open_g_l_e_s_8h.xhtml#a496c7b08ac063d996956854207366913">ARM_COMPUTE_GL_CHECK</a>(<a class="code" href="_open_g_l_e_s_8cpp.xhtml#abe8c9f9c8d9e2fb48fbd3ea2291caca9">glDeleteFramebuffers</a>(1, &amp;_frame_buffer));</div><div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;}</div><div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;</div><div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;std::string GCKernelLibrary::stringify_set(<span class="keyword">const</span> StringSet &amp;s)<span class="keyword"> const</span></div><div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;    std::string concat_set;</div><div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;</div><div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;    <span class="comment">// Concatenate set</span></div><div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;    <span class="keywordflow">for</span>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;el : s)</div><div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;    {</div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;        concat_set += el + <span class="stringliteral">&quot;\n&quot;</span>;</div><div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;    }</div><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;</div><div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;    <span class="keywordflow">return</span> concat_set;</div><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;}</div><div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_aeaa37f1850f96a9610b10f87af5b44a4"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#aeaa37f1850f96a9610b10f87af5b44a4">glGenTextures</a></div><div class="ttdeci">void GL_APIENTRY glGenTextures(GLsizei n, GLuint *textures)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00724">OpenGLES.cpp:724</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_c_kernel_xhtml_a1b2e4d932f06eda71c000133bd277688"><div class="ttname"><a href="classarm__compute_1_1_g_c_kernel.xhtml#a1b2e4d932f06eda71c000133bd277688">arm_compute::GCKernel::~GCKernel</a></div><div class="ttdeci">~GCKernel()</div><div class="ttdoc">Destructor.</div><div class="ttdef"><b>Definition:</b> <a href="_g_c_kernel_library_8cpp_source.xhtml#l00137">GCKernelLibrary.cpp:137</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_c_program_xhtml_aca45a2e24e9ad0a4ebaf2964589a6934"><div class="ttname"><a href="classarm__compute_1_1_g_c_program.xhtml#aca45a2e24e9ad0a4ebaf2964589a6934">arm_compute::GCProgram::GCProgram</a></div><div class="ttdeci">GCProgram()</div><div class="ttdoc">Default constructor.</div><div class="ttdef"><b>Definition:</b> <a href="_g_c_kernel_library_8cpp_source.xhtml#l00038">GCKernelLibrary.cpp:38</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8h_xhtml_a496c7b08ac063d996956854207366913"><div class="ttname"><a href="_open_g_l_e_s_8h.xhtml#a496c7b08ac063d996956854207366913">ARM_COMPUTE_GL_CHECK</a></div><div class="ttdeci">#define ARM_COMPUTE_GL_CHECK(x)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8h_source.xhtml#l00045">OpenGLES.h:45</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_af6db9d046fe0e996c3693373864e6254"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#af6db9d046fe0e996c3693373864e6254">eglMakeCurrent</a></div><div class="ttdeci">EGLBoolean EGLAPIENTRY eglMakeCurrent(EGLDisplay dpy, EGLSurface draw, EGLSurface read, EGLContext ctx)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00256">OpenGLES.cpp:256</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_afdd4572fd462b84e467e9af2a94d1116"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#afdd4572fd462b84e467e9af2a94d1116">glBindTexture</a></div><div class="ttdeci">void GL_APIENTRY glBindTexture(GLenum target, GLuint texture)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00750">OpenGLES.cpp:750</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_afa7af01b67ca2c80d2d33824cdd1e694"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#afa7af01b67ca2c80d2d33824cdd1e694">glDeleteTextures</a></div><div class="ttdeci">void GL_APIENTRY glDeleteTextures(GLsizei n, const GLuint *textures)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00737">OpenGLES.cpp:737</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_c_kernel_library_xhtml_adad9a34e26a1a1b6574057981a1f7bb3"><div class="ttname"><a href="classarm__compute_1_1_g_c_kernel_library.xhtml#adad9a34e26a1a1b6574057981a1f7bb3">arm_compute::GCKernelLibrary::set_context</a></div><div class="ttdeci">void set_context(EGLDisplay dpy, EGLContext ctx)</div><div class="ttdoc">Sets display and context to create kernel.</div><div class="ttdef"><b>Definition:</b> <a href="_g_c_kernel_library_8cpp_source.xhtml#l00357">GCKernelLibrary.cpp:357</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a4213ab91e8c4fc1dc12f3904f7cc170e"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a4213ab91e8c4fc1dc12f3904f7cc170e">glBindFramebuffer</a></div><div class="ttdeci">void GL_APIENTRY glBindFramebuffer(GLenum target, GLuint framebuffer)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00802">OpenGLES.cpp:802</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a528e76a977061a313bad3ab6fe7747fe"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a528e76a977061a313bad3ab6fe7747fe">glDeleteBuffers</a></div><div class="ttdeci">void GL_APIENTRY glDeleteBuffers(GLsizei n, const GLuint *buffers)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00529">OpenGLES.cpp:529</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a9cf2058f28e321f12a8e8c4c80ece00f"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a9cf2058f28e321f12a8e8c4c80ece00f">glGetProgramInfoLog</a></div><div class="ttdeci">void GL_APIENTRY glGetProgramInfoLog(GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00399">OpenGLES.cpp:399</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_c_program_xhtml_acab405c2120743ab9e063930064a6b0a"><div class="ttname"><a href="classarm__compute_1_1_g_c_program.xhtml#acab405c2120743ab9e063930064a6b0a">arm_compute::GCProgram::compile_shader</a></div><div class="ttdeci">GLuint compile_shader(const std::string &amp;build_options)</div><div class="ttdoc">Compile shader.</div><div class="ttdef"><b>Definition:</b> <a href="_g_c_kernel_library_8cpp_source.xhtml#l00079">GCKernelLibrary.cpp:79</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a76232dcbc71f0cb2b32c4e0f46cb2b64"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a76232dcbc71f0cb2b32c4e0f46cb2b64">glCompileShader</a></div><div class="ttdeci">void GL_APIENTRY glCompileShader(GLuint shader)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00321">OpenGLES.cpp:321</a></div></div>
<div class="ttc" id="_error_8h_xhtml_abd040a16dc0dbc75733e07aff93048a8"><div class="ttname"><a href="_error_8h.xhtml#abd040a16dc0dbc75733e07aff93048a8">ARM_COMPUTE_ERROR_VAR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_VAR(msg,...)</div><div class="ttdoc">Print the given message then throw an std::runtime_error.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00346">Error.h:346</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_c_kernel_xhtml_a7c2752de95fae1daedbae97fa9b031e4"><div class="ttname"><a href="classarm__compute_1_1_g_c_kernel.xhtml#a7c2752de95fae1daedbae97fa9b031e4">arm_compute::GCKernel::update_shader_params</a></div><div class="ttdeci">void update_shader_params()</div><div class="ttdoc">Update shader params.</div><div class="ttdef"><b>Definition:</b> <a href="_g_c_kernel_library_8cpp_source.xhtml#l00178">GCKernelLibrary.cpp:178</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_ac164fec059717a7fdbf42aea5ea2ca1d"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#ac164fec059717a7fdbf42aea5ea2ca1d">glGetShaderiv</a></div><div class="ttdeci">void GL_APIENTRY glGetShaderiv(GLuint shader, GLenum pname, GLint *params)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00438">OpenGLES.cpp:438</a></div></div>
<div class="ttc" id="_error_8h_xhtml_acaa348bf0c7eb9493c72092b7293d45f"><div class="ttname"><a href="_error_8h.xhtml#acaa348bf0c7eb9493c72092b7293d45f">ARM_COMPUTE_ERROR_ON_MSG_VAR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_MSG_VAR(cond, msg,...)</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00457">Error.h:457</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_c_kernel_xhtml"><div class="ttname"><a href="classarm__compute_1_1_g_c_kernel.xhtml">arm_compute::GCKernel</a></div><div class="ttdoc">GCKernel class.</div><div class="ttdef"><b>Definition:</b> <a href="_g_c_kernel_library_8h_source.xhtml#l00087">GCKernelLibrary.h:87</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_c_kernel_xhtml_a8a05de24712939691a7cf8934d9e5c5f"><div class="ttname"><a href="classarm__compute_1_1_g_c_kernel.xhtml#a8a05de24712939691a7cf8934d9e5c5f">arm_compute::GCKernel::use</a></div><div class="ttdeci">void use()</div><div class="ttdoc">Use current program.</div><div class="ttdef"><b>Definition:</b> <a href="_g_c_kernel_library_8cpp_source.xhtml#l00168">GCKernelLibrary.cpp:168</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_c_program_xhtml"><div class="ttname"><a href="classarm__compute_1_1_g_c_program.xhtml">arm_compute::GCProgram</a></div><div class="ttdoc">GCProgram class.</div><div class="ttdef"><b>Definition:</b> <a href="_g_c_kernel_library_8h_source.xhtml#l00039">GCKernelLibrary.h:39</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2020 ARM Limited.</div><div class="ttdef"><b>Definition:</b> <a href="00__introduction_8dox_source.xhtml#l00024">00_introduction.dox:24</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a5943aadf8a3d988af82624d19cbd1c0a"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a5943aadf8a3d988af82624d19cbd1c0a">glUniformBlockBinding</a></div><div class="ttdeci">void GL_APIENTRY glUniformBlockBinding(GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00698">OpenGLES.cpp:698</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_c_kernel_xhtml_ae722344eb4eb8a404d600561914859ab"><div class="ttname"><a href="classarm__compute_1_1_g_c_kernel.xhtml#ae722344eb4eb8a404d600561914859ab">arm_compute::GCKernel::set_shader_params_binding_point</a></div><div class="ttdeci">void set_shader_params_binding_point(unsigned int binding)</div><div class="ttdoc">Set shader params binding point.</div><div class="ttdef"><b>Definition:</b> <a href="_g_c_kernel_library_8h_source.xhtml#l00162">GCKernelLibrary.h:162</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_abe8c9f9c8d9e2fb48fbd3ea2291caca9"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#abe8c9f9c8d9e2fb48fbd3ea2291caca9">glDeleteFramebuffers</a></div><div class="ttdeci">void GL_APIENTRY glDeleteFramebuffers(GLsizei n, const GLuint *framebuffers)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00789">OpenGLES.cpp:789</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_c_kernel_xhtml_a4b66d5e31b5dc18b314c8a68163263bd"><div class="ttname"><a href="classarm__compute_1_1_g_c_kernel.xhtml#a4b66d5e31b5dc18b314c8a68163263bd">arm_compute::GCKernel::cleanup</a></div><div class="ttdeci">void cleanup()</div><div class="ttdoc">Clean up program and ubo.</div><div class="ttdef"><b>Definition:</b> <a href="_g_c_kernel_library_8cpp_source.xhtml#l00160">GCKernelLibrary.cpp:160</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_ad9528d3fb71b7ee1e23fab6aed1cba83"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#ad9528d3fb71b7ee1e23fab6aed1cba83">glBindBuffer</a></div><div class="ttdeci">void GL_APIENTRY glBindBuffer(GLenum target, GLuint buffer)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00490">OpenGLES.cpp:490</a></div></div>
<div class="ttc" id="arm__compute_2core_2_utils_8h_xhtml"><div class="ttname"><a href="arm__compute_2core_2_utils_8h.xhtml">Utils.h</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a334ce7125cfb54a811b748f23f228417"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a334ce7125cfb54a811b748f23f228417">glDeleteProgram</a></div><div class="ttdeci">void GL_APIENTRY glDeleteProgram(GLuint program)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00360">OpenGLES.cpp:360</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a377c2f368dc6d8961943363077581dbd"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a377c2f368dc6d8961943363077581dbd">glBindBufferBase</a></div><div class="ttdeci">void GL_APIENTRY glBindBufferBase(GLenum target, GLuint index, GLuint buffer)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00503">OpenGLES.cpp:503</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a81b3135fe4b76436b0e901032fc4df1b"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a81b3135fe4b76436b0e901032fc4df1b">glGetUniformBlockIndex</a></div><div class="ttdeci">GLuint GL_APIENTRY glGetUniformBlockIndex(GLuint program, const GLchar *uniformBlockName)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00711">OpenGLES.cpp:711</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ae0d288429eb20baf6da6109f3a21e6bb"><div class="ttname"><a href="namespacearm__compute.xhtml#ae0d288429eb20baf6da6109f3a21e6bb">arm_compute::read_file</a></div><div class="ttdeci">std::string read_file(const std::string &amp;filename, bool binary)</div><div class="ttdoc">Load an entire file in memory.</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_utils_8cpp_source.xhtml#l00047">Utils.cpp:47</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_c_kernel_library_xhtml_a1d39c8fd9605c241b797dcbd9d3cc474"><div class="ttname"><a href="classarm__compute_1_1_g_c_kernel_library.xhtml#a1d39c8fd9605c241b797dcbd9d3cc474">arm_compute::GCKernelLibrary::set_shader_path</a></div><div class="ttdeci">void set_shader_path(const std::string &amp;shader_path)</div><div class="ttdoc">Sets the path that the shaders reside in.</div><div class="ttdef"><b>Definition:</b> <a href="_g_c_kernel_library_8cpp_source.xhtml#l00352">GCKernelLibrary.cpp:352</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_ab685deb85a327c7a4c22285619c3f26a"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#ab685deb85a327c7a4c22285619c3f26a">glUseProgram</a></div><div class="ttdeci">void GL_APIENTRY glUseProgram(GLuint program)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00477">OpenGLES.cpp:477</a></div></div>
<div class="ttc" id="_g_c_kernel_library_8h_xhtml"><div class="ttname"><a href="_g_c_kernel_library_8h.xhtml">GCKernelLibrary.h</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a52e5a8e8cf2a333616f36781b02f6b32"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a52e5a8e8cf2a333616f36781b02f6b32">glTexImage2D</a></div><div class="ttdeci">void GL_APIENTRY glTexImage2D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid *pixels)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00763">OpenGLES.cpp:763</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a9f1f3138bcad87b01f61c136942875bd"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a9f1f3138bcad87b01f61c136942875bd">glShaderSource</a></div><div class="ttdeci">void GL_APIENTRY glShaderSource(GLuint shader, GLsizei count, const GLchar *const *string, const GLint *length)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00464">OpenGLES.cpp:464</a></div></div>
<div class="ttc" id="_c_l_im2_col_kernel_8cpp_xhtml_a3e76c95cfc49454dbfff42e02d25ccb8"><div class="ttname"><a href="_c_l_im2_col_kernel_8cpp.xhtml#a3e76c95cfc49454dbfff42e02d25ccb8">build_options</a></div><div class="ttdeci">std::set&lt; std::string &gt; build_options</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_im2_col_kernel_8cpp_source.xhtml#l00053">CLIm2ColKernel.cpp:53</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a68154b66955d77ae9c5192218e02ebdc"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a68154b66955d77ae9c5192218e02ebdc">glGenBuffers</a></div><div class="ttdeci">void GL_APIENTRY glGenBuffers(GLsizei n, GLuint *buffers)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00568">OpenGLES.cpp:568</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_c_kernel_library_xhtml_a180442a389960babb1fca97ef99df0d4"><div class="ttname"><a href="classarm__compute_1_1_g_c_kernel_library.xhtml#a180442a389960babb1fca97ef99df0d4">arm_compute::GCKernelLibrary::GCKernelLibrary</a></div><div class="ttdeci">GCKernelLibrary()</div><div class="ttdoc">Default Constructor.</div><div class="ttdef"><b>Definition:</b> <a href="_g_c_kernel_library_8cpp_source.xhtml#l00329">GCKernelLibrary.cpp:329</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_ab8cce2e1a98daed0249b9a8f929dd176"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#ab8cce2e1a98daed0249b9a8f929dd176">glCreateShader</a></div><div class="ttdeci">GLuint GL_APIENTRY glCreateShader(GLenum type)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00347">OpenGLES.cpp:347</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_adbf67dcee294e673cf796f1ed8aeb6a4"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">arm_compute::test::validation::dst</a></div><div class="ttdeci">CLTensor dst</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_absolute_difference_8cpp_source.xhtml#l00102">AbsoluteDifference.cpp:102</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_c_kernel_library_xhtml_a8654ef10c691a43bd0a6e52b131ff79d"><div class="ttname"><a href="classarm__compute_1_1_g_c_kernel_library.xhtml#a8654ef10c691a43bd0a6e52b131ff79d">arm_compute::GCKernelLibrary::~GCKernelLibrary</a></div><div class="ttdeci">~GCKernelLibrary()</div><div class="ttdoc">Default Destructor.</div><div class="ttdef"><b>Definition:</b> <a href="_g_c_kernel_library_8cpp_source.xhtml#l00536">GCKernelLibrary.cpp:536</a></div></div>
<div class="ttc" id="_error_8h_xhtml"><div class="ttname"><a href="_error_8h.xhtml">Error.h</a></div></div>
<div class="ttc" id="_log_8h_xhtml_a17fad2b9a7024c0aa258caec4d8b44c0"><div class="ttname"><a href="_log_8h.xhtml#a17fad2b9a7024c0aa258caec4d8b44c0">ARM_COMPUTE_LOG_INFO_STREAM_CORE</a></div><div class="ttdeci">#define ARM_COMPUTE_LOG_INFO_STREAM_CORE(ss)</div><div class="ttdoc">Log information level stream to the core system logger.</div><div class="ttdef"><b>Definition:</b> <a href="_log_8h_source.xhtml#l00110">Log.h:110</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_c_program_xhtml_a5b4af3fb9839027279876a231a328ec9"><div class="ttname"><a href="classarm__compute_1_1_g_c_program.xhtml#a5b4af3fb9839027279876a231a328ec9">arm_compute::GCProgram::link_program</a></div><div class="ttdeci">GLuint link_program(GLuint shader)</div><div class="ttdoc">Link program.</div><div class="ttdef"><b>Definition:</b> <a href="_g_c_kernel_library_8cpp_source.xhtml#l00048">GCKernelLibrary.cpp:48</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a75f4854b14c6eba12a7feb4d53933d6f"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a75f4854b14c6eba12a7feb4d53933d6f">glAttachShader</a></div><div class="ttdeci">void GL_APIENTRY glAttachShader(GLuint program, GLuint shader)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00308">OpenGLES.cpp:308</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_c_kernel_library_xhtml_a374c8804afa3425411f78ec3b164f267"><div class="ttname"><a href="classarm__compute_1_1_g_c_kernel_library.xhtml#a374c8804afa3425411f78ec3b164f267">arm_compute::GCKernelLibrary::setup_dummy_fbo</a></div><div class="ttdeci">void setup_dummy_fbo()</div><div class="ttdoc">Setup a dummy fbo to workaround an issue on Galaxy S8.</div><div class="ttdef"><b>Definition:</b> <a href="_g_c_kernel_library_8cpp_source.xhtml#l00526">GCKernelLibrary.cpp:526</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a1c5dc7cc04f7c0b1bd7c181b0da84d9b"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a1c5dc7cc04f7c0b1bd7c181b0da84d9b">glFramebufferTexture2D</a></div><div class="ttdeci">void GL_APIENTRY glFramebufferTexture2D(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00815">OpenGLES.cpp:815</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_add28e8aa989a1ec2bffc6a45f7a75355"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#add28e8aa989a1ec2bffc6a45f7a75355">glCreateProgram</a></div><div class="ttdeci">GLuint GL_APIENTRY glCreateProgram()</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00334">OpenGLES.cpp:334</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_acf2f21042df45cad38c043cd9198628b"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#acf2f21042df45cad38c043cd9198628b">glGetProgramiv</a></div><div class="ttdeci">void GL_APIENTRY glGetProgramiv(GLuint program, GLenum pname, GLint *params)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00412">OpenGLES.cpp:412</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_c_kernel_xhtml_a2ff24cc62df8324f57dcc2f3c9e533a9"><div class="ttname"><a href="classarm__compute_1_1_g_c_kernel.xhtml#a2ff24cc62df8324f57dcc2f3c9e533a9">arm_compute::GCKernel::clear_arguments</a></div><div class="ttdeci">void clear_arguments()</div><div class="ttdoc">Clear shader arguments.</div><div class="ttdef"><b>Definition:</b> <a href="_g_c_kernel_library_8h_source.xhtml#l00154">GCKernelLibrary.h:154</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_c_kernel_library_xhtml_a677e1b4dae70aaa7a18e9a8f1a4692e8"><div class="ttname"><a href="classarm__compute_1_1_g_c_kernel_library.xhtml#a677e1b4dae70aaa7a18e9a8f1a4692e8">arm_compute::GCKernelLibrary::get</a></div><div class="ttdeci">static GCKernelLibrary &amp; get()</div><div class="ttdoc">Get the static instance of GCKernelLibrary.</div><div class="ttdef"><b>Definition:</b> <a href="_g_c_kernel_library_8cpp_source.xhtml#l00334">GCKernelLibrary.cpp:334</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a1773d8c97f9c1063a45db4cf9d7c1613"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a1773d8c97f9c1063a45db4cf9d7c1613">glGenFramebuffers</a></div><div class="ttdeci">void GL_APIENTRY glGenFramebuffers(GLsizei n, GLuint *framebuffers)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00776">OpenGLES.cpp:776</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_c_kernel_library_xhtml_abe24625d55f2fb35da7e293e5e28d483"><div class="ttname"><a href="classarm__compute_1_1_g_c_kernel_library.xhtml#abe24625d55f2fb35da7e293e5e28d483">arm_compute::GCKernelLibrary::init</a></div><div class="ttdeci">void init(std::string shader_path=&quot;./&quot;, EGLDisplay dpy=EGL_NO_DISPLAY, EGLContext ctx=EGL_NO_CONTEXT)</div><div class="ttdoc">Initialises the kernel library.</div><div class="ttdef"><b>Definition:</b> <a href="_g_c_kernel_library_8cpp_source.xhtml#l00340">GCKernelLibrary.cpp:340</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a07e3604c0cd0da716e5de2a7ec11c8ac"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a07e3604c0cd0da716e5de2a7ec11c8ac">glLinkProgram</a></div><div class="ttdeci">void GL_APIENTRY glLinkProgram(GLuint program)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00451">OpenGLES.cpp:451</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a4c71a67ba2f8104097a63d4f41a7e64e"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a4c71a67ba2f8104097a63d4f41a7e64e">glDetachShader</a></div><div class="ttdeci">void GL_APIENTRY glDetachShader(GLuint program, GLuint shader)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00386">OpenGLES.cpp:386</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a3a5fb1ea4384fc30fedc9a6caf73e6e1"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a3a5fb1ea4384fc30fedc9a6caf73e6e1">glDeleteShader</a></div><div class="ttdeci">void GL_APIENTRY glDeleteShader(GLuint shader)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00373">OpenGLES.cpp:373</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_c_kernel_library_xhtml_a622a42cbd9eefe938d3bf87869f0b6be"><div class="ttname"><a href="classarm__compute_1_1_g_c_kernel_library.xhtml#a622a42cbd9eefe938d3bf87869f0b6be">arm_compute::GCKernelLibrary::create_kernel</a></div><div class="ttdeci">GCKernel create_kernel(const std::string &amp;shader_name, const StringSet &amp;build_options_set={}) const</div><div class="ttdoc">Creates a kernel from the kernel library.</div><div class="ttdef"><b>Definition:</b> <a href="_g_c_kernel_library_8cpp_source.xhtml#l00367">GCKernelLibrary.cpp:367</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a21827516ba1b8b4c12c6238b3fd67200"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a21827516ba1b8b4c12c6238b3fd67200">glGetActiveUniformBlockiv</a></div><div class="ttdeci">void GL_APIENTRY glGetActiveUniformBlockiv(GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint *params)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00685">OpenGLES.cpp:685</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_c_kernel_xhtml_a4e7b1870ca694b9b2b6c4a0f50e1de3c"><div class="ttname"><a href="classarm__compute_1_1_g_c_kernel.xhtml#a4e7b1870ca694b9b2b6c4a0f50e1de3c">arm_compute::GCKernel::GCKernel</a></div><div class="ttdeci">GCKernel()</div><div class="ttdoc">Default Constructor.</div><div class="ttdef"><b>Definition:</b> <a href="_g_c_kernel_library_8cpp_source.xhtml#l00131">GCKernelLibrary.cpp:131</a></div></div>
<div class="ttc" id="_log_8h_xhtml_af641430e72aa4c9f28d83131bb8e0fb9"><div class="ttname"><a href="_log_8h.xhtml#af641430e72aa4c9f28d83131bb8e0fb9">ARM_COMPUTE_LOG_INFO_MSG_WITH_FORMAT_CORE</a></div><div class="ttdeci">#define ARM_COMPUTE_LOG_INFO_MSG_WITH_FORMAT_CORE(fmt,...)</div><div class="ttdoc">Log information level formatted message to the core system logger.</div><div class="ttdef"><b>Definition:</b> <a href="_log_8h_source.xhtml#l00099">Log.h:99</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_c_kernel_xhtml_ae02bc07b18ddc44c29318c100a063d3a"><div class="ttname"><a href="classarm__compute_1_1_g_c_kernel.xhtml#ae02bc07b18ddc44c29318c100a063d3a">arm_compute::GCKernel::unuse</a></div><div class="ttdeci">void unuse()</div><div class="ttdoc">Unuse current program.</div><div class="ttdef"><b>Definition:</b> <a href="_g_c_kernel_library_8cpp_source.xhtml#l00173">GCKernelLibrary.cpp:173</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_c_kernel_library_xhtml"><div class="ttname"><a href="classarm__compute_1_1_g_c_kernel_library.xhtml">arm_compute::GCKernelLibrary</a></div><div class="ttdoc">GCKernelLibrary class.</div><div class="ttdef"><b>Definition:</b> <a href="_g_c_kernel_library_8h_source.xhtml#l00187">GCKernelLibrary.h:187</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a989ab3e96426615bb98e04e0235088ca"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a989ab3e96426615bb98e04e0235088ca">arm_compute::test::validation::src</a></div><div class="ttdeci">cast configure &amp; src</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_cast_8cpp_source.xhtml#l00169">Cast.cpp:169</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_a4991c46050f5040b9fc85fc35f8297ed"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#a4991c46050f5040b9fc85fc35f8297ed">glBufferData</a></div><div class="ttdeci">void GL_APIENTRY glBufferData(GLenum target, GLsizeiptr size, const GLvoid *data, GLenum usage)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00516">OpenGLES.cpp:516</a></div></div>
<div class="ttc" id="_open_g_l_e_s_8cpp_xhtml_ac7c9e9800f919f0f217a8465994d81de"><div class="ttname"><a href="_open_g_l_e_s_8cpp.xhtml#ac7c9e9800f919f0f217a8465994d81de">glGetShaderInfoLog</a></div><div class="ttdeci">void GL_APIENTRY glGetShaderInfoLog(GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog)</div><div class="ttdef"><b>Definition:</b> <a href="_open_g_l_e_s_8cpp_source.xhtml#l00425">OpenGLES.cpp:425</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_aebb8dcc11953d78e620bbef0b9e2183.xhtml">core</a></li><li class="navelem"><a class="el" href="dir_88eff89ba7e837209a0b9693ad92651e.xhtml">GLES_COMPUTE</a></li><li class="navelem"><a class="el" href="_g_c_kernel_library_8cpp.xhtml">GCKernelLibrary.cpp</a></li>
    <li class="footer">Generated on Thu Mar 5 2020 16:06:59 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
