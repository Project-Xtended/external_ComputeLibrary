<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: arm_compute/runtime/GLES_COMPUTE/functions/GCNormalizationLayer.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.02.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_g_c_normalization_layer_8h_source.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">GCNormalizationLayer.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_g_c_normalization_layer_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2017-2019 ARM Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#ifndef ARM_COMPUTE_GCNORMALIZATIONLAYER_H</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#define ARM_COMPUTE_GCNORMALIZATIONLAYER_H</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_i_function_8h.xhtml">arm_compute/runtime/IFunction.h</a>&quot;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_g_c_fill_border_kernel_8h.xhtml">arm_compute/core/GLES_COMPUTE/kernels/GCFillBorderKernel.h</a>&quot;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_g_c_normalization_layer_kernel_8h.xhtml">arm_compute/core/GLES_COMPUTE/kernels/GCNormalizationLayerKernel.h</a>&quot;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_g_c_pixel_wise_multiplication_kernel_8h.xhtml">arm_compute/core/GLES_COMPUTE/kernels/GCPixelWiseMultiplicationKernel.h</a>&quot;</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_g_c_tensor_8h.xhtml">arm_compute/runtime/GLES_COMPUTE/GCTensor.h</a>&quot;</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_memory_group_8h.xhtml">arm_compute/runtime/MemoryGroup.h</a>&quot;</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2core_2_types_8h.xhtml">arm_compute/core/Types.h</a>&quot;</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;{</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="comment">// Forward declarations</span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keyword">class </span>IGCTensor;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="comment">/** Basic function to compute a normalization layer. This function calls the following OpenGL ES kernels:</span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="comment"> * -# @ref GCPixelWiseMultiplicationKernel</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="comment"> * -# @ref GCFillBorderKernel</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="comment"> * -# @ref GCNormalizationLayerKernel</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00048"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_g_c_normalization_layer.xhtml">   48</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1_g_c_normalization_layer.xhtml">GCNormalizationLayer</a> : <span class="keyword">public</span> <a class="code" href="classarm__compute_1_1_i_function.xhtml">IFunction</a></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;{</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="keyword">public</span>:<span class="comment"></span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="comment">    /** Default constructor */</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <a class="code" href="classarm__compute_1_1_g_c_normalization_layer.xhtml#a0f6772d2f730cfaa60a07d172094bfb7">GCNormalizationLayer</a>(std::shared_ptr&lt;IMemoryManager&gt; memory_manager = <span class="keyword">nullptr</span>);<span class="comment"></span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="comment">    /** Set the input and output tensors.</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="comment">     * @param[in]  input     Source tensor. 3 lower dims represent a single input with dimensions [width, height, IFM],</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="comment">     *                       and an optional 4th dimension for batch of inputs. Data types supported: F32. Number of channels must be 1.</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="comment">     * @param[out] output    Destination tensor. Dimensions, data type and number of channels must match the input ones.</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="comment">     * @param[in]  norm_info Normalization layer information like the normalization type, normalization size and other parameters.</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_g_c_normalization_layer.xhtml#a8d636dd5daa60351d1c2b941a9260ed6">configure</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_g_c_tensor.xhtml">IGCTensor</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, <a class="code" href="classarm__compute_1_1_i_g_c_tensor.xhtml">IGCTensor</a> *output, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_normalization_layer_info.xhtml">NormalizationLayerInfo</a> &amp;norm_info);</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <span class="comment">// Inherited methods overridden:</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_g_c_normalization_layer.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>() <span class="keyword">override</span>;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <a class="code" href="classarm__compute_1_1_memory_group.xhtml">MemoryGroup</a>                     _memory_group;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <a class="code" href="classarm__compute_1_1_g_c_tensor.xhtml">GCTensor</a>                        _squared_input;   <span class="comment">/**&lt; The intermediate buffer which stores results of squaring input*/</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <a class="code" href="classarm__compute_1_1_g_c_normalization_layer_kernel.xhtml">GCNormalizationLayerKernel</a>      _norm_kernel;     <span class="comment">/**&lt; Normalization layer kernel to run */</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <a class="code" href="classarm__compute_1_1_g_c_pixel_wise_multiplication_kernel.xhtml">GCPixelWiseMultiplicationKernel</a> _multiply_kernel; <span class="comment">/**&lt; Pixel multiplication kernel to run */</span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <a class="code" href="classarm__compute_1_1_g_c_fill_border_kernel.xhtml">GCFillBorderKernel</a>              _border_handler;  <span class="comment">/**&lt; Kernel to handle  borders */</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;};</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;} <span class="comment">// namespace arm_compute</span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* ARM_COMPUTE_GCNORMALIZATIONLAYER_H */</span><span class="preprocessor"></span></div><div class="ttc" id="classarm__compute_1_1_memory_group_xhtml"><div class="ttname"><a href="classarm__compute_1_1_memory_group.xhtml">arm_compute::MemoryGroup</a></div><div class="ttdoc">Memory group.</div><div class="ttdef"><b>Definition:</b> <a href="_memory_group_8h_source.xhtml#l00043">MemoryGroup.h:43</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_c_pixel_wise_multiplication_kernel_xhtml"><div class="ttname"><a href="classarm__compute_1_1_g_c_pixel_wise_multiplication_kernel.xhtml">arm_compute::GCPixelWiseMultiplicationKernel</a></div><div class="ttdoc">Interface for the pixelwise multiplication kernel.</div><div class="ttdef"><b>Definition:</b> <a href="_g_c_pixel_wise_multiplication_kernel_8h_source.xhtml#l00037">GCPixelWiseMultiplicationKernel.h:37</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_function_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_function.xhtml">arm_compute::IFunction</a></div><div class="ttdoc">Base class for all functions.</div><div class="ttdef"><b>Definition:</b> <a href="_i_function_8h_source.xhtml#l00030">IFunction.h:30</a></div></div>
<div class="ttc" id="classarm__compute_1_1_normalization_layer_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_normalization_layer_info.xhtml">arm_compute::NormalizationLayerInfo</a></div><div class="ttdoc">Normalization Layer Information class.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01677">Types.h:1677</a></div></div>
<div class="ttc" id="_g_c_pixel_wise_multiplication_kernel_8h_xhtml"><div class="ttname"><a href="_g_c_pixel_wise_multiplication_kernel_8h.xhtml">GCPixelWiseMultiplicationKernel.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_g_c_tensor_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_g_c_tensor.xhtml">arm_compute::IGCTensor</a></div><div class="ttdoc">Interface for GLES Compute tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_i_g_c_tensor_8h_source.xhtml#l00035">IGCTensor.h:35</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_c_fill_border_kernel_xhtml"><div class="ttname"><a href="classarm__compute_1_1_g_c_fill_border_kernel.xhtml">arm_compute::GCFillBorderKernel</a></div><div class="ttdoc">Interface for filling the border of a kernel.</div><div class="ttdef"><b>Definition:</b> <a href="_g_c_fill_border_kernel_8h_source.xhtml#l00036">GCFillBorderKernel.h:36</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_c_normalization_layer_xhtml_a0f6772d2f730cfaa60a07d172094bfb7"><div class="ttname"><a href="classarm__compute_1_1_g_c_normalization_layer.xhtml#a0f6772d2f730cfaa60a07d172094bfb7">arm_compute::GCNormalizationLayer::GCNormalizationLayer</a></div><div class="ttdeci">GCNormalizationLayer(std::shared_ptr&lt; IMemoryManager &gt; memory_manager=nullptr)</div><div class="ttdoc">Default constructor.</div><div class="ttdef"><b>Definition:</b> <a href="_g_c_normalization_layer_8cpp_source.xhtml#l00036">GCNormalizationLayer.cpp:36</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_c_tensor_xhtml"><div class="ttname"><a href="classarm__compute_1_1_g_c_tensor.xhtml">arm_compute::GCTensor</a></div><div class="ttdoc">Interface for OpenGL ES tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_g_c_tensor_8h_source.xhtml#l00038">GCTensor.h:38</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2020 ARM Limited.</div><div class="ttdef"><b>Definition:</b> <a href="00__introduction_8dox_source.xhtml#l00024">00_introduction.dox:24</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a8fcf2ddd9a1d58b1b280f5c0aed71845"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">arm_compute::test::validation::input</a></div><div class="ttdeci">auto input</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00487">LSTMLayerQuantized.cpp:487</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_c_normalization_layer_kernel_xhtml"><div class="ttname"><a href="classarm__compute_1_1_g_c_normalization_layer_kernel.xhtml">arm_compute::GCNormalizationLayerKernel</a></div><div class="ttdoc">Interface for the normalization layer kernel.</div><div class="ttdef"><b>Definition:</b> <a href="_g_c_normalization_layer_kernel_8h_source.xhtml#l00035">GCNormalizationLayerKernel.h:35</a></div></div>
<div class="ttc" id="_g_c_normalization_layer_kernel_8h_xhtml"><div class="ttname"><a href="_g_c_normalization_layer_kernel_8h.xhtml">GCNormalizationLayerKernel.h</a></div></div>
<div class="ttc" id="_memory_group_8h_xhtml"><div class="ttname"><a href="_memory_group_8h.xhtml">MemoryGroup.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_c_normalization_layer_xhtml_ad1717410afd0be936c6213a63c8005fb"><div class="ttname"><a href="classarm__compute_1_1_g_c_normalization_layer.xhtml#ad1717410afd0be936c6213a63c8005fb">arm_compute::GCNormalizationLayer::run</a></div><div class="ttdeci">void run() override</div><div class="ttdoc">Run the kernels contained in the function.</div><div class="ttdef"><b>Definition:</b> <a href="_g_c_normalization_layer_8cpp_source.xhtml#l00057">GCNormalizationLayer.cpp:57</a></div></div>
<div class="ttc" id="_g_c_fill_border_kernel_8h_xhtml"><div class="ttname"><a href="_g_c_fill_border_kernel_8h.xhtml">GCFillBorderKernel.h</a></div></div>
<div class="ttc" id="_i_function_8h_xhtml"><div class="ttname"><a href="_i_function_8h.xhtml">IFunction.h</a></div></div>
<div class="ttc" id="arm__compute_2core_2_types_8h_xhtml"><div class="ttname"><a href="arm__compute_2core_2_types_8h.xhtml">Types.h</a></div></div>
<div class="ttc" id="_g_c_tensor_8h_xhtml"><div class="ttname"><a href="_g_c_tensor_8h.xhtml">GCTensor.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_c_normalization_layer_xhtml_a8d636dd5daa60351d1c2b941a9260ed6"><div class="ttname"><a href="classarm__compute_1_1_g_c_normalization_layer.xhtml#a8d636dd5daa60351d1c2b941a9260ed6">arm_compute::GCNormalizationLayer::configure</a></div><div class="ttdeci">void configure(const IGCTensor *input, IGCTensor *output, const NormalizationLayerInfo &amp;norm_info)</div><div class="ttdoc">Set the input and output tensors.</div><div class="ttdef"><b>Definition:</b> <a href="_g_c_normalization_layer_8cpp_source.xhtml#l00041">GCNormalizationLayer.cpp:41</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_c_normalization_layer_xhtml"><div class="ttname"><a href="classarm__compute_1_1_g_c_normalization_layer.xhtml">arm_compute::GCNormalizationLayer</a></div><div class="ttdoc">Basic function to compute a normalization layer.</div><div class="ttdef"><b>Definition:</b> <a href="_g_c_normalization_layer_8h_source.xhtml#l00048">GCNormalizationLayer.h:48</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_214608ef36d61442cb2b0c1c4e9a7def.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="dir_8bc26130589aa16388b5a02f17abf2c2.xhtml">runtime</a></li><li class="navelem"><a class="el" href="dir_e83fa7cb9796f3ad7be03e3d9fcd3249.xhtml">GLES_COMPUTE</a></li><li class="navelem"><a class="el" href="dir_b2d75812ef27339cb07aa08923a4a042.xhtml">functions</a></li><li class="navelem"><a class="el" href="_g_c_normalization_layer_8h.xhtml">GCNormalizationLayer.h</a></li>
    <li class="footer">Generated on Thu Mar 5 2020 16:06:56 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
