<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: tests/validation/CL/ConvolutionLayer.cpp File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.02.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_c_l_2_convolution_layer_8cpp.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#namespaces">Namespaces</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">ConvolutionLayer.cpp File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &quot;<a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">arm_compute/core/Types.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_c_l_tensor_8h_source.xhtml">arm_compute/runtime/CL/CLTensor.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_c_l_tensor_allocator_8h_source.xhtml">arm_compute/runtime/CL/CLTensorAllocator.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_c_l_convolution_layer_8h_source.xhtml">arm_compute/runtime/CL/functions/CLConvolutionLayer.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_c_l_g_e_m_m_convolution_layer_8h_source.xhtml">arm_compute/runtime/CL/functions/CLGEMMConvolutionLayer.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_c_l_accessor_8h_source.xhtml">tests/CL/CLAccessor.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_padding_calculator_8h_source.xhtml">tests/PaddingCalculator.h</a>&quot;</code><br />
<code>#include &quot;tests/datasets/LargeConvolutionLayerDataset.h&quot;</code><br />
<code>#include &quot;tests/datasets/SmallConvolutionLayerDataset.h&quot;</code><br />
<code>#include &quot;tests/datasets/TinyConvolutionLayerDataset.h&quot;</code><br />
<code>#include &quot;<a class="el" href="_asserts_8h_source.xhtml">tests/framework/Asserts.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="tests_2framework_2_macros_8h_source.xhtml">tests/framework/Macros.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_datasets_8h_source.xhtml">tests/framework/datasets/Datasets.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_validation_8h_source.xhtml">tests/validation/Validation.h</a>&quot;</code><br />
<code>#include &quot;tests/validation/fixtures/ConvolutionLayerFixture.h&quot;</code><br />
</div>
<p><a href="_c_l_2_convolution_layer_8cpp_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"></a>
Namespaces</h2></td></tr>
<tr class="memitem:namespacearm__compute"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></td></tr>
<tr class="memdesc:namespacearm__compute"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copyright (c) 2017-2020 ARM Limited. <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespacearm__compute_1_1test"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test.xhtml">arm_compute::test</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespacearm__compute_1_1test_1_1validation"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml">arm_compute::test::validation</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:a94a15057a0ff4d88b074dbd787507bfe"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a94a15057a0ff4d88b074dbd787507bfe"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a94a15057a0ff4d88b074dbd787507bfe">CLGEMMConvolutionLayerFixture</a> = ConvolutionValidationFixture&lt; CLTensor, CLAccessor, CLGEMMConvolutionLayer, T &gt;</td></tr>
<tr class="separator:a94a15057a0ff4d88b074dbd787507bfe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9c57d7b691ce9bdaf3585fd21a98b6e2"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a9c57d7b691ce9bdaf3585fd21a98b6e2"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a9c57d7b691ce9bdaf3585fd21a98b6e2">CLGEMMConvolutionLayerQuantizedPerChannelFixture</a> = ConvolutionValidationQuantizedPerChannelFixture&lt; CLTensor, CLAccessor, CLGEMMConvolutionLayer, T, int8_t &gt;</td></tr>
<tr class="separator:a9c57d7b691ce9bdaf3585fd21a98b6e2"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a648a276a30f541e70bdbc8406340c71a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a648a276a30f541e70bdbc8406340c71a">DATA_TEST_CASE</a> (ValidateConvolutionMethod, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(17U, 31U, 2U), 1, DataType::F32), TensorInfo(TensorShape(17U, 31U, 2U), 1, DataType::F32), TensorInfo(TensorShape(23U, 27U, 5U, 4U), 1, DataType::F32), TensorInfo(TensorShape(23U, 27U, 31U, 4U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 1U), 1, DataType::F32), TensorInfo(TensorShape(33U, 27U, 7U, 4U), 1, DataType::F32), TensorInfo(TensorShape(17U, 31U, 32U), 1, DataType::F32), TensorInfo(TensorShape(17U, 31U, 2U), 1, DataType::F32), TensorInfo(TensorShape(17U, 31U, 2U), 1, DataType::QASYMM8_SIGNED), }), framework::dataset::make(&quot;WeightsInfo&quot;, { TensorInfo(TensorShape(5U, 5U, 2U, 19U), 1, DataType::F32), TensorInfo(TensorShape(5U, 5U, 2U, 19U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 5U, 21U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 31U, 21U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 5U, 21U), 1, DataType::F32), TensorInfo(TensorShape(5U, 5U, 7U, 16U), 1, DataType::F16), TensorInfo(TensorShape(5U, 5U, 32U, 19U), 1, DataType::F32), TensorInfo(TensorShape(5U, 5U, 2U, 19U), 1, DataType::F32), TensorInfo(TensorShape(5U, 5U, 2U, 19U), 1, DataType::QASYMM8_SIGNED), })), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(15U, 15U, 19U), 1, DataType::F32), TensorInfo(TensorShape(15U, 15U, 19U), 1, DataType::F32), TensorInfo(TensorShape(21U, 25U, 21U, 4U), 1, DataType::F32), TensorInfo(TensorShape(21U, 25U, 21U, 4U), 1, DataType::F32), TensorInfo(TensorShape(11U, 25U, 21U), 1, DataType::F32), TensorInfo(TensorShape(11U, 12U, 16U, 4U), 1, DataType::F32), TensorInfo(TensorShape(17U, 31U, 19U), 1, DataType::F32), TensorInfo(TensorShape(17U, 31U, 19U), 1, DataType::F32), TensorInfo(TensorShape(17U, 31U, 19U), 1, DataType::QASYMM8_SIGNED), })), framework::dataset::make(&quot;ConvInfo&quot;, { PadStrideInfo(1, 2, 1, 1), PadStrideInfo(1, 2, 1, 1), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(2, 1, 0, 0), PadStrideInfo(3, 2, 1, 0), PadStrideInfo(1, 1, 2, 2), PadStrideInfo(1, 1, 2, 2), PadStrideInfo(1, 1, 2, 2), })), framework::dataset::make(&quot;GpuTarget&quot;, { GPUTarget::BIFROST, GPUTarget::MIDGARD, GPUTarget::G71, GPUTarget::G71, GPUTarget::MIDGARD, GPUTarget::BIFROST, GPUTarget::BIFROST, GPUTarget::BIFROST, GPUTarget::BIFROST, })), framework::dataset::make(&quot;Dilation&quot;, { Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(2U, 1U), Size2D(2U, 1U), })), framework::dataset::make(&quot;EnableFastMath&quot;, { false, false, false, false, false, false, true, true, true })), framework::dataset::make(&quot;Expected&quot;,{ ConvolutionMethod::GEMM, ConvolutionMethod::GEMM, ConvolutionMethod::GEMM, ConvolutionMethod::WINOGRAD, ConvolutionMethod::GEMM, ConvolutionMethod::GEMM, ConvolutionMethod::WINOGRAD, ConvolutionMethod::GEMM, ConvolutionMethod::GEMM, })), input_info, weights_info, output_info, conv_info, gpu_target, dilation, enable_fast_math, expected)</td></tr>
<tr class="separator:a648a276a30f541e70bdbc8406340c71a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac2ed31007ae463a3cec24a581f3651f6"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac2ed31007ae463a3cec24a581f3651f6">TEST_SUITE_END</a> () const auto Int16QuantizedActivationFunctionsDataset = ActivationValidationQuantizedFixture&lt;CLTensor, CLAccessor, CLActivationLayer, T&gt;</td></tr>
<tr class="memdesc:ac2ed31007ae463a3cec24a581f3651f6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Input data sets.  <a href="namespacearm__compute_1_1test_1_1validation.xhtml#ac2ed31007ae463a3cec24a581f3651f6">More...</a><br /></td></tr>
<tr class="separator:ac2ed31007ae463a3cec24a581f3651f6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a61ea7d7b6ace9d9c3dac58ab36c0550d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a61ea7d7b6ace9d9c3dac58ab36c0550d">combine</a> (combine(datasets::SmallConvolutionLayerDataset(), CNNDataTypes), ActivationFunctionsDataset)</td></tr>
<tr class="separator:a61ea7d7b6ace9d9c3dac58ab36c0550d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af3c1de77fd86df539395c75c17ec230e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#af3c1de77fd86df539395c75c17ec230e">ARM_COMPUTE_EXPECT</a> (src.info() -&gt;is_resizable(), framework::LogLevel::ERRORS)</td></tr>
<tr class="separator:af3c1de77fd86df539395c75c17ec230e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4723dcafb6cb17bc56a7ef564beba6bf"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4723dcafb6cb17bc56a7ef564beba6bf">ARM_COMPUTE_EXPECT</a> (weights.info() -&gt;is_resizable(), framework::LogLevel::ERRORS)</td></tr>
<tr class="separator:a4723dcafb6cb17bc56a7ef564beba6bf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8a3a4ff1ec017f023aa950ddc43434e8"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8a3a4ff1ec017f023aa950ddc43434e8">ARM_COMPUTE_EXPECT</a> (bias.info() -&gt;is_resizable(), framework::LogLevel::ERRORS)</td></tr>
<tr class="separator:a8a3a4ff1ec017f023aa950ddc43434e8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aedc846191741fb759460952ef3dbf6d2"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aedc846191741fb759460952ef3dbf6d2">ARM_COMPUTE_EXPECT</a> (dst.info() -&gt;is_resizable(), framework::LogLevel::ERRORS)</td></tr>
<tr class="separator:aedc846191741fb759460952ef3dbf6d2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac1783f94b5942a7c78100c398e192569"><td class="memItemLeft" align="right" valign="top">convolution configure &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac1783f94b5942a7c78100c398e192569">src</a> (), 0, border_mode</td></tr>
<tr class="separator:ac1783f94b5942a7c78100c398e192569"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7b3a3ff6a6f15d54e05a82f13dc727c2"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7b3a3ff6a6f15d54e05a82f13dc727c2">validate</a> (src.info() -&gt;valid_region(), src_valid_region)</td></tr>
<tr class="separator:a7b3a3ff6a6f15d54e05a82f13dc727c2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a379c037a43bfd25a8664a9650b93d56a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a379c037a43bfd25a8664a9650b93d56a">validate</a> (weights.info() -&gt;valid_region(), weights_valid_region)</td></tr>
<tr class="separator:a379c037a43bfd25a8664a9650b93d56a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a25d6ff2730cac30b00fc8fe6c9028108"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a25d6ff2730cac30b00fc8fe6c9028108">validate</a> (bias.info() -&gt;valid_region(), bias_valid_region)</td></tr>
<tr class="separator:a25d6ff2730cac30b00fc8fe6c9028108"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6813132c943295888972727864ea5c2f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6813132c943295888972727864ea5c2f">validate</a> (dst.info() -&gt;valid_region(), dst_valid_region)</td></tr>
<tr class="separator:a6813132c943295888972727864ea5c2f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a230a5295f65fab5a7ad5028c1f2561b2"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a230a5295f65fab5a7ad5028c1f2561b2">ARM_COMPUTE_EXPECT</a> (src.info() -&gt;quantization_info()==src_quantization_info, framework::LogLevel::ERRORS)</td></tr>
<tr class="separator:a230a5295f65fab5a7ad5028c1f2561b2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5c77cc4c8d5ea17105cebb7abdda28c2"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5c77cc4c8d5ea17105cebb7abdda28c2">ARM_COMPUTE_EXPECT</a> (weights.info() -&gt;quantization_info()==weights_quantization_info, framework::LogLevel::ERRORS)</td></tr>
<tr class="separator:a5c77cc4c8d5ea17105cebb7abdda28c2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adfac73ddd29ceb2d8b90c07749ab2b75"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#adfac73ddd29ceb2d8b90c07749ab2b75">FIXTURE_DATA_TEST_CASE</a> (RunSmall, CLGEMMConvolutionLayerFixture&lt; half &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(datasets::SmallConvolutionLayerReducedDataset(), framework::dataset::make(&quot;ReshapeWeights&quot;, { true })), framework::dataset::make(&quot;DataType&quot;, DataType::F16)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), ActivationFunctionsSmallDataset))</td></tr>
<tr class="separator:adfac73ddd29ceb2d8b90c07749ab2b75"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae56e8ccc59b9165658842ced766e21ea"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae56e8ccc59b9165658842ced766e21ea">FIXTURE_DATA_TEST_CASE</a> (RunLarge, CLGEMMConvolutionLayerFixture&lt; half &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(framework::dataset::concat(datasets::SmallConvolutionLayerDataset(), datasets::LargeConvolutionLayerDataset()), framework::dataset::make(&quot;ReshapeWeights&quot;, { true })), framework::dataset::make(&quot;DataType&quot;, DataType::F16)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:ae56e8ccc59b9165658842ced766e21ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acc29e65bd656baad653f863c5045b2c7"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#acc29e65bd656baad653f863c5045b2c7">combine</a> (combine(combine(combine(datasets::SmallConvolutionLayerReducedDataset(), framework::dataset::make(&quot;ReshapeWeights&quot;, { true })), framework::dataset::make(&quot;DataType&quot;, DataType::F32)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), ActivationFunctionsSmallDataset))</td></tr>
<tr class="separator:acc29e65bd656baad653f863c5045b2c7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab59581debfeea11f73528296fc4c485a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ab59581debfeea11f73528296fc4c485a">FIXTURE_DATA_TEST_CASE</a> (RunLarge, CLGEMMConvolutionLayerFixture&lt; float &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(framework::dataset::concat(datasets::SmallConvolutionLayerDataset(), datasets::LargeConvolutionLayerDataset()), framework::dataset::make(&quot;ReshapeWeights&quot;, { true })), framework::dataset::make(&quot;DataType&quot;, DataType::F32)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:ab59581debfeea11f73528296fc4c485a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abe5e0e78a9dd187bc1caa2fbf168c06c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#abe5e0e78a9dd187bc1caa2fbf168c06c">FIXTURE_DATA_TEST_CASE</a> (RunSmall, CLGEMMConvolutionLayerQuantizedFixture&lt; uint8_t &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(combine(datasets::SmallConvolutionLayerReducedDataset(), framework::dataset::make(&quot;ReshapeWeights&quot;, { true })), framework::dataset::make(&quot;DataType&quot;, DataType::QASYMM8)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), QuantizationData), QuantizedActivationFunctionsSmallDataset))</td></tr>
<tr class="separator:abe5e0e78a9dd187bc1caa2fbf168c06c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aad53b8d93423976287977600d94aec48"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aad53b8d93423976287977600d94aec48">FIXTURE_DATA_TEST_CASE</a> (RunLarge, CLGEMMConvolutionLayerQuantizedFixture&lt; uint8_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(framework::dataset::concat(datasets::SmallConvolutionLayerDataset(), datasets::LargeConvolutionLayerDataset()), framework::dataset::make(&quot;ReshapeWeights&quot;, { true })), framework::dataset::make(&quot;DataType&quot;, DataType::QASYMM8)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), QuantizationData), QuantizedActivationFunctionsDataset))</td></tr>
<tr class="separator:aad53b8d93423976287977600d94aec48"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a340f8974ee439d2d851cb725d26cc3bc"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a340f8974ee439d2d851cb725d26cc3bc">combine</a> (combine(combine(combine(combine(datasets::SmallConvolutionLayerReducedDataset(), framework::dataset::make(&quot;ReshapeWeights&quot;, { true })), framework::dataset::make(&quot;DataType&quot;, DataType::QASYMM8_SIGNED)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), QuantizationData), QuantizedActivationFunctionsSmallDataset))</td></tr>
<tr class="separator:a340f8974ee439d2d851cb725d26cc3bc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a40f270c60152eb62592ad7e2211c30e1"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a40f270c60152eb62592ad7e2211c30e1">combine</a> (combine(combine(combine(combine(combine(datasets::SmallConvolutionLayerReducedDataset(), framework::dataset::make(&quot;ReshapeWeights&quot;, { true })), framework::dataset::make(&quot;DataType&quot;, { DataType::QASYMM8 })), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), QuantizationData), QuantizedActivationFunctionsSmallDataset), framework::dataset::make(&quot;WeightsDataType&quot;, { DataType::QSYMM8_PER_CHANNEL })))</td></tr>
<tr class="separator:a40f270c60152eb62592ad7e2211c30e1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a077dfc7fd780409742c9ee17b4025617"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a077dfc7fd780409742c9ee17b4025617">FIXTURE_DATA_TEST_CASE</a> (RunLarge, CLGEMMConvolutionLayerQuantizedPerChannelFixture&lt; uint8_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(combine(datasets::SmallConvolutionLayerDataset(), framework::dataset::make(&quot;ReshapeWeights&quot;, { true })), framework::dataset::make(&quot;DataType&quot;, { DataType::QASYMM8 })), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), QuantizationData), QuantizedActivationFunctionsDataset), framework::dataset::make(&quot;WeightsDataType&quot;, { DataType::QSYMM8_PER_CHANNEL })))</td></tr>
<tr class="separator:a077dfc7fd780409742c9ee17b4025617"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abb065a41d5c0bce8f2e6434d622d1b0d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#abb065a41d5c0bce8f2e6434d622d1b0d">DATA_TEST_CASE</a> (Configuration, framework::DatasetMode::ALL, combine(combine(datasets::SmallGroupedConvolutionLayerDataset(), GroupedCNNDataTypes), ActivationFunctionsDataset), input_shape, weights_shape, bias_shape, output_shape, info, dilation, data_type, act_info)</td></tr>
<tr class="separator:abb065a41d5c0bce8f2e6434d622d1b0d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4285021da4d786c03f562fa4e0f8cc0d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4285021da4d786c03f562fa4e0f8cc0d">FIXTURE_DATA_TEST_CASE</a> (RunSmall, CLGEMMGroupedConvolutionLayerFixture&lt; float &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(datasets::SmallGroupedConvolutionLayerDataset(), framework::dataset::make(&quot;ReshapeWeights&quot;, { true })), framework::dataset::make(&quot;DataType&quot;, DataType::F32)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW })), ActivationFunctionsSmallDataset))</td></tr>
<tr class="separator:a4285021da4d786c03f562fa4e0f8cc0d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4f09c78a3f0e1d7760f41b6fe1c0a2e4"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4f09c78a3f0e1d7760f41b6fe1c0a2e4">FIXTURE_DATA_TEST_CASE</a> (RunLarge, CLGEMMGroupedConvolutionLayerFixture&lt; float &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(framework::dataset::concat(datasets::SmallGroupedConvolutionLayerDataset(), datasets::LargeGroupedConvolutionLayerDataset()), framework::dataset::make(&quot;ReshapeWeights&quot;, { true })), framework::dataset::make(&quot;DataType&quot;, DataType::F32)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:a4f09c78a3f0e1d7760f41b6fe1c0a2e4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8e72541241145dab4fed298d94de781e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8e72541241145dab4fed298d94de781e">combine</a> (combine(combine(combine(datasets::SmallGroupedConvolutionLayerDataset(), framework::dataset::make(&quot;ReshapeWeights&quot;, { true })), framework::dataset::make(&quot;DataType&quot;, DataType::F16)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW })), ActivationFunctionsSmallDataset))</td></tr>
<tr class="separator:a8e72541241145dab4fed298d94de781e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a45772f186df6066362a96cdfca053147"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a45772f186df6066362a96cdfca053147">FIXTURE_DATA_TEST_CASE</a> (RunLarge, CLGEMMGroupedConvolutionLayerFixture&lt; half &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(framework::dataset::concat(datasets::SmallGroupedConvolutionLayerDataset(), datasets::LargeGroupedConvolutionLayerDataset()), framework::dataset::make(&quot;ReshapeWeights&quot;, { true })), framework::dataset::make(&quot;DataType&quot;, DataType::F16)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:a45772f186df6066362a96cdfca053147"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:ae59e3cf27216b7361c71cbd2830ec4c2"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae59e3cf27216b7361c71cbd2830ec4c2">input_shape</a> { input_size, batch_size }</td></tr>
<tr class="separator:ae59e3cf27216b7361c71cbd2830ec4c2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae8f0126f051c787279a8c9ee3c3a5d55"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae8f0126f051c787279a8c9ee3c3a5d55">weights_shape</a></td></tr>
<tr class="separator:ae8f0126f051c787279a8c9ee3c3a5d55"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a79820c7442073b8eb22fb3eaef6fd6ba"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a79820c7442073b8eb22fb3eaef6fd6ba">bias_shape</a> { output_size }</td></tr>
<tr class="separator:a79820c7442073b8eb22fb3eaef6fd6ba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab1806bf0c5a41f674fb9d2dc6af644f5"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ab1806bf0c5a41f674fb9d2dc6af644f5">output_shape</a> { output_size, batch_size}</td></tr>
<tr class="separator:ab1806bf0c5a41f674fb9d2dc6af644f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4f4125dba5283887b34f889b1c615c0c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4f4125dba5283887b34f889b1c615c0c">info</a></td></tr>
<tr class="separator:a4f4125dba5283887b34f889b1c615c0c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad3fd4136244e42ad89b01c02b904336d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad3fd4136244e42ad89b01c02b904336d">dilation</a></td></tr>
<tr class="separator:ad3fd4136244e42ad89b01c02b904336d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1f8aca235c095df227e7444f6b237eb1"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1f8aca235c095df227e7444f6b237eb1">act_info</a></td></tr>
<tr class="separator:a1f8aca235c095df227e7444f6b237eb1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a64a08a9fec5aeee8650e7182b6d171d0"><td class="memItemLeft" align="right" valign="top">CLTensor&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a64a08a9fec5aeee8650e7182b6d171d0">weights</a> = create_tensor&lt;CLTensor&gt;(weights_shape, data_type, 1, QuantizationInfo(2.f / 255.f, 127))</td></tr>
<tr class="separator:a64a08a9fec5aeee8650e7182b6d171d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3a77be8aebd8e00522b32061d46ccdbd"><td class="memItemLeft" align="right" valign="top">CLTensor&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3a77be8aebd8e00522b32061d46ccdbd">bias</a> = create_tensor&lt;CLTensor&gt;(bias_shape, bias_data_type, 1, QuantizationInfo(2.f / 255.f, 127))</td></tr>
<tr class="separator:a3a77be8aebd8e00522b32061d46ccdbd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aec2bf1a2d6e75d2bb845dd3fdba02bc4"><td class="memItemLeft" align="right" valign="top">const QuantizationInfo&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aec2bf1a2d6e75d2bb845dd3fdba02bc4">src_quantization_info</a> = src.info()-&gt;quantization_info()</td></tr>
<tr class="separator:aec2bf1a2d6e75d2bb845dd3fdba02bc4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afff44a0110c3767f144c9cb8e6f81625"><td class="memItemLeft" align="right" valign="top">const QuantizationInfo&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#afff44a0110c3767f144c9cb8e6f81625">weights_quantization_info</a> = weights.info()-&gt;quantization_info()</td></tr>
<tr class="separator:afff44a0110c3767f144c9cb8e6f81625"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abfb048093787b1a7878fea54e60430a4"><td class="memItemLeft" align="right" valign="top">const ValidRegion&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#abfb048093787b1a7878fea54e60430a4">src_valid_region</a> = shape_to_valid_region(input_shape)</td></tr>
<tr class="separator:abfb048093787b1a7878fea54e60430a4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a38297b12b5b28c686788eaf2f05eaec8"><td class="memItemLeft" align="right" valign="top">const ValidRegion&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a38297b12b5b28c686788eaf2f05eaec8">weights_valid_region</a> = shape_to_valid_region(weights_shape)</td></tr>
<tr class="separator:a38297b12b5b28c686788eaf2f05eaec8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af42ac4b2bf87fe75b10d2b29371da967"><td class="memItemLeft" align="right" valign="top">const ValidRegion&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#af42ac4b2bf87fe75b10d2b29371da967">bias_valid_region</a> = shape_to_valid_region(bias_shape)</td></tr>
<tr class="separator:af42ac4b2bf87fe75b10d2b29371da967"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0f3dc00a54fa25a6e8d565b5c8b56ea0"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a0f3dc00a54fa25a6e8d565b5c8b56ea0">CLGEMMConvolutionLayerFixture&lt; float &gt;</a></td></tr>
<tr class="separator:a0f3dc00a54fa25a6e8d565b5c8b56ea0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6716299a6877933f664cdc9796f6c924"><td class="memItemLeft" align="right" valign="top">const auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6716299a6877933f664cdc9796f6c924">QuantizedActivationFunctionsDataset</a></td></tr>
<tr class="memdesc:a6716299a6877933f664cdc9796f6c924"><td class="mdescLeft">&#160;</td><td class="mdescRight">Input data sets.  <a href="namespacearm__compute_1_1test_1_1validation.xhtml#a6716299a6877933f664cdc9796f6c924">More...</a><br /></td></tr>
<tr class="separator:a6716299a6877933f664cdc9796f6c924"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0c4de6fef335f27d37630b6f16ed0f24"><td class="memItemLeft" align="right" valign="top">const auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a0c4de6fef335f27d37630b6f16ed0f24">QuantizedActivationFunctionsSmallDataset</a></td></tr>
<tr class="separator:a0c4de6fef335f27d37630b6f16ed0f24"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a35ac9eed0f8401a833752c2c56c5041c"><td class="memItemLeft" align="right" valign="top">const auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a35ac9eed0f8401a833752c2c56c5041c">QuantizationData</a></td></tr>
<tr class="separator:a35ac9eed0f8401a833752c2c56c5041c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acf6c2a11e8059a6390d045677b6e88a5"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#acf6c2a11e8059a6390d045677b6e88a5">CLGEMMConvolutionLayerQuantizedFixture&lt; int8_t &gt;</a></td></tr>
<tr class="separator:acf6c2a11e8059a6390d045677b6e88a5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7e002f978c99fcafee4b61ce8bd05924"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7e002f978c99fcafee4b61ce8bd05924">CLGEMMConvolutionLayerQuantizedPerChannelFixture&lt; uint8_t &gt;</a></td></tr>
<tr class="separator:a7e002f978c99fcafee4b61ce8bd05924"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adda980a6f6ff459cb9b0a1720cd8fbe8"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#adda980a6f6ff459cb9b0a1720cd8fbe8">CLGEMMGroupedConvolutionLayerFixture&lt; half &gt;</a></td></tr>
<tr class="separator:adda980a6f6ff459cb9b0a1720cd8fbe8"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_59425e443f801f1f2fd8bbe4959a3ccf.xhtml">tests</a></li><li class="navelem"><a class="el" href="dir_e7c7b16542faa38cb4655ff1750d3604.xhtml">validation</a></li><li class="navelem"><a class="el" href="dir_f7024513cd67abef53e86ee9382ac5ce.xhtml">CL</a></li><li class="navelem"><a class="el" href="_c_l_2_convolution_layer_8cpp.xhtml">ConvolutionLayer.cpp</a></li>
    <li class="footer">Generated on Thu Mar 5 2020 16:07:08 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
