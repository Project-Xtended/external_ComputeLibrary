<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/core/CL/cl_kernels/helpers.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.02.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">helpers.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2016-2020 ARM Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#ifndef ARM_COMPUTE_HELPER_H</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#define ARM_COMPUTE_HELPER_H</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#if defined(ARM_COMPUTE_OPENCL_FP16_ENABLED) &amp;&amp; defined(cl_khr_fp16)</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#pragma OPENCL EXTENSION cl_khr_fp16 : enable</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#endif // defined(ARM_COMPUTE_OPENCL_FP16_ENABLED) &amp;&amp; defined(cl_khr_fp16)</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#if defined(ARM_COMPUTE_OPENCL_DOT8_ENABLED) &amp;&amp; defined(cl_arm_integer_dot_product_int8)</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#pragma OPENCL EXTENSION cl_arm_integer_dot_product_int8 : enable</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#endif // defined(ARM_COMPUTE_OPENCL_DOT8_ENABLED) &amp;&amp; defined(cl_arm_integer_dot_product_int8)</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="preprocessor">#if defined(ARM_COMPUTE_OPENCL_DOT8_ACC_ENABLED) &amp;&amp; defined(cl_arm_integer_dot_product_accumulate_int8)</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="preprocessor">#pragma OPENCL EXTENSION cl_arm_integer_dot_product_accumulate_int8 : enable</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="preprocessor">#endif // defined(ARM_COMPUTE_OPENCL_DOT8_ACC_ENABLED) &amp;&amp; defined(cl_arm_integer_dot_product_accumulate_int8)</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="preprocessor">#if defined(ARM_COMPUTE_DEBUG_ENABLED) &amp;&amp; defined(cl_arm_printf)</span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="preprocessor">#pragma OPENCL EXTENSION cl_arm_printf : enable</span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="preprocessor">#endif // defined(ARM_COMPUTE_DEBUG_ENABLED) &amp;&amp; defined(cl_arm_printf)</span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div><div class="line"><a name="l00043"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#ab5975aa797b02c8e21551e4a3425c499">   43</a></span>&#160;<span class="preprocessor">#define GPU_ARCH_MIDGARD 0x100</span></div><div class="line"><a name="l00044"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#aec09a338dceecbe27346707f420fcd4f">   44</a></span>&#160;<span class="preprocessor">#define GPU_ARCH_BIFROST 0x200</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="comment">/** Concatenate two inputs.</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="comment"> * @param[in] a The first input to be concatenated</span></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="comment"> * @param[in] b The second input to be concatenated</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="comment"> * @return The concatenated output</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00053"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a88fa737059e67b4b17ec980e5877361e">   53</a></span>&#160;<span class="preprocessor">#define CONCAT(a, b) a##b</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="comment">/** Expand the given vector</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="comment"> * @param[in] x The vector to be expanded</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="comment"> * @return The expanded output</span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00061"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#ae4b532a93c757194ec73b6790a3e6b1f">   61</a></span>&#160;<span class="preprocessor">#define EXPAND(x) x</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="comment">/** Clamp the given value between an upper and lower bound.</span></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="comment"> * @param[in] x       The value to be clamped</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="comment"> * @param[in] min_val The lower bound</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="comment"> * @param[in] max_val The upper bound</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="comment"> * @return The clamped value.</span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00071"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#aabdbe431f2713c5c2604cb9872b66aab">   71</a></span>&#160;<span class="preprocessor">#define CLAMP(x, min_val, max_val) min(max(x, min_val), max_val)</span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="comment">/** REVn reverses the given vector whose size is n.</span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="comment"> * @name REVn</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="comment"> * @param[in] x The vector to be reversed</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="comment"> * @return The reversed vector</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="comment"> * @{</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00081"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a0ef282e1db20d3440be2cedaae43c571">   81</a></span>&#160;<span class="preprocessor">#define REV1(x) ((x))</span></div><div class="line"><a name="l00082"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#ad7b90c34e7f0b02d66ef27d4acc3598f">   82</a></span>&#160;<span class="preprocessor">#define REV2(x) ((x).s10)</span></div><div class="line"><a name="l00083"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a9ecf52ba928a97d051a8473fce5d8843">   83</a></span>&#160;<span class="preprocessor">#define REV3(x) ((x).s210)</span></div><div class="line"><a name="l00084"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#ac03804bb54dcbd2a27abef692beef629">   84</a></span>&#160;<span class="preprocessor">#define REV4(x) ((x).s3210)</span></div><div class="line"><a name="l00085"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#ac2d4c2bcad7f1f900620db19120945a8">   85</a></span>&#160;<span class="preprocessor">#define REV8(x) ((x).s76543210)</span></div><div class="line"><a name="l00086"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a4eac562c0f8aef3d6d692cbe316d24fb">   86</a></span>&#160;<span class="preprocessor">#define REV16(x) ((x).sFEDCBA9876543210)</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="comment">/** @} */</span> <span class="comment">// end of group REVn</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="comment">/** Reverse the given vector.</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="comment"> * @name REVERSE</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="comment"> * @param[in] x The vector to be reversed</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="comment"> * @param[in] s The size of the vector</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="comment"> * @return The reversed vector</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="comment"> * @{</span></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00098"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a959c637de15b674a7a3afd89058f132e">   98</a></span>&#160;<span class="preprocessor">#define REVERSE_STR(x, s) REV##s((x))</span></div><div class="line"><a name="l00099"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#abcadce1c5f0c9f446d1a72cac2421121">   99</a></span>&#160;<span class="preprocessor">#define REVERSE(x, s) REVERSE_STR(x, s)</span></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="comment">/** @} */</span> <span class="comment">// end of group REVERSE</span></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="comment">/** Circular-right-shift (rotate-right) the vector of size s by the amount of n.</span></div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="comment"> * @name ROTs_n</span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="comment"> * @param[in] x The vector to be shifted</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="comment"> * @return The shifted vector</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="comment"> * @{</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00110"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#adfdb450aa84ebaae24406dd4c05f0b61">  110</a></span>&#160;<span class="preprocessor">#define ROT1_0(x) ((x))</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;</div><div class="line"><a name="l00112"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a49593f2dadd2f7a9834fdb3ce2df566f">  112</a></span>&#160;<span class="preprocessor">#define ROT2_0(x) ((x))</span></div><div class="line"><a name="l00113"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#ac999719b140ef5dcfd131eaf554c0c3f">  113</a></span>&#160;<span class="preprocessor">#define ROT2_1(x) ((x).s10)</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;</div><div class="line"><a name="l00115"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#ad57d553c3b0caf95ffbfc408c28be75f">  115</a></span>&#160;<span class="preprocessor">#define ROT3_0(x) ((x))</span></div><div class="line"><a name="l00116"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a2c20967973979913742e0b5987a0f230">  116</a></span>&#160;<span class="preprocessor">#define ROT3_1(x) ((x).s201)</span></div><div class="line"><a name="l00117"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#af8d8ecb9b2a444c807a12d8674b63d5f">  117</a></span>&#160;<span class="preprocessor">#define ROT3_2(x) ((x).s120)</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;</div><div class="line"><a name="l00119"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#abec52f2c766de0c9d54cb312c847f351">  119</a></span>&#160;<span class="preprocessor">#define ROT4_0(x) ((x))</span></div><div class="line"><a name="l00120"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#ac17d64fd9c1220217b30258673a23423">  120</a></span>&#160;<span class="preprocessor">#define ROT4_1(x) ((x).s3012)</span></div><div class="line"><a name="l00121"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#acfabbc4d3d33d2e66a69e0dbe42309f2">  121</a></span>&#160;<span class="preprocessor">#define ROT4_2(x) ((x).s2301)</span></div><div class="line"><a name="l00122"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a883317c0c5c48efdf62c8b2baa6d49f9">  122</a></span>&#160;<span class="preprocessor">#define ROT4_3(x) ((x).s1230)</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;</div><div class="line"><a name="l00124"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a2e17a5460c021f86062f4192b2bce81e">  124</a></span>&#160;<span class="preprocessor">#define ROT8_0(x) ((x))</span></div><div class="line"><a name="l00125"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#acaa9ac7ab7a3a37dd1d19467682b9781">  125</a></span>&#160;<span class="preprocessor">#define ROT8_1(x) ((x).s70123456)</span></div><div class="line"><a name="l00126"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a50a6739e610fb8db0a36d90fb2a9da65">  126</a></span>&#160;<span class="preprocessor">#define ROT8_2(x) ((x).s67012345)</span></div><div class="line"><a name="l00127"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a3bd068b1c9ef33513caaa2a7256fd7a4">  127</a></span>&#160;<span class="preprocessor">#define ROT8_3(x) ((x).s56701234)</span></div><div class="line"><a name="l00128"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a44ef2b46f3d785719f5a105ab9b2f301">  128</a></span>&#160;<span class="preprocessor">#define ROT8_4(x) ((x).s45670123)</span></div><div class="line"><a name="l00129"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a94d4e7e094f2c50a656f11a3be762648">  129</a></span>&#160;<span class="preprocessor">#define ROT8_5(x) ((x).s34567012)</span></div><div class="line"><a name="l00130"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#aac479c79aab47d60fabbb253e0aa7d36">  130</a></span>&#160;<span class="preprocessor">#define ROT8_6(x) ((x).s23456701)</span></div><div class="line"><a name="l00131"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#aa75a4a09b6ea7d907e9a841274d15848">  131</a></span>&#160;<span class="preprocessor">#define ROT8_7(x) ((x).s12345670)</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;</div><div class="line"><a name="l00133"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#ae82de13afa3fcabe76ab4df6ec66467e">  133</a></span>&#160;<span class="preprocessor">#define ROT16_0(x) ((x))</span></div><div class="line"><a name="l00134"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a87157ecb1eac88925f04a3fcb0ea6fa3">  134</a></span>&#160;<span class="preprocessor">#define ROT16_1(x) ((x).sF0123456789ABCDE)</span></div><div class="line"><a name="l00135"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a3e3545d02ac724a8cc7b1160516b971e">  135</a></span>&#160;<span class="preprocessor">#define ROT16_2(x) ((x).sEF0123456789ABCD)</span></div><div class="line"><a name="l00136"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#aa9601c02904caf78396432626dcd3523">  136</a></span>&#160;<span class="preprocessor">#define ROT16_3(x) ((x).sDEF0123456789ABC)</span></div><div class="line"><a name="l00137"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a9aea137b236010781936a227b9a4e2e9">  137</a></span>&#160;<span class="preprocessor">#define ROT16_4(x) ((x).sCDEF0123456789AB)</span></div><div class="line"><a name="l00138"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#ac3c846c01e7687c5efb6d16dcd09cac0">  138</a></span>&#160;<span class="preprocessor">#define ROT16_5(x) ((x).sBCDEF0123456789A)</span></div><div class="line"><a name="l00139"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a95ee8b0cd224c30aea053bfe78dbab75">  139</a></span>&#160;<span class="preprocessor">#define ROT16_6(x) ((x).sABCDEF0123456789)</span></div><div class="line"><a name="l00140"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a1abf9217dba994904912e8e87fc25dce">  140</a></span>&#160;<span class="preprocessor">#define ROT16_7(x) ((x).s9ABCDEF012345678)</span></div><div class="line"><a name="l00141"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36b479de88df6133b4469fa1567a1d68">  141</a></span>&#160;<span class="preprocessor">#define ROT16_8(x) ((x).s89ABCDEF01234567)</span></div><div class="line"><a name="l00142"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a05aad9f9d702677fc60888e6298267a3">  142</a></span>&#160;<span class="preprocessor">#define ROT16_9(x) ((x).s789ABCDEF0123456)</span></div><div class="line"><a name="l00143"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a2b71123dd4b37b86b35831239585d856">  143</a></span>&#160;<span class="preprocessor">#define ROT16_10(x) ((x).s6789ABCDEF012345)</span></div><div class="line"><a name="l00144"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a27349cf6810998445207a85ac272bcfc">  144</a></span>&#160;<span class="preprocessor">#define ROT16_11(x) ((x).s56789ABCDEF01234)</span></div><div class="line"><a name="l00145"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#ae339b14b82a083ad72297eb935207a3b">  145</a></span>&#160;<span class="preprocessor">#define ROT16_12(x) ((x).s456789ABCDEF0123)</span></div><div class="line"><a name="l00146"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#afa9c7e027b971148a60e2114b8c42d6e">  146</a></span>&#160;<span class="preprocessor">#define ROT16_13(x) ((x).s3456789ABCDEF012)</span></div><div class="line"><a name="l00147"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a68e52d6db124aaa761b83485f21b8b53">  147</a></span>&#160;<span class="preprocessor">#define ROT16_14(x) ((x).s23456789ABCDEF01)</span></div><div class="line"><a name="l00148"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a477ef51b7efcd40860bc02d66dd9fab4">  148</a></span>&#160;<span class="preprocessor">#define ROT16_15(x) ((x).s123456789ABCDEF0)</span></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="comment">/** @} */</span> <span class="comment">// end of group ROTs_n</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="comment">/** Circular-right-shift (rotate-right) the given vector by the given amount.</span></div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="comment"> * @name ROTATE</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="comment"> * @param[in] x The vector to be shifted</span></div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="comment"> * @param[in] s The size of the vector</span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="comment"> * @param[in] n The amount to be shifted</span></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;<span class="comment"> * @return The shifted vector</span></div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;<span class="comment"> * @{</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00161"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#aa1ac65b6c223b7636be4d80041bf05ae">  161</a></span>&#160;<span class="preprocessor">#define ROTATE_STR(x, s, n) ROT##s##_##n(x)</span></div><div class="line"><a name="l00162"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#aa6a1974248e56bbdfb2845d985093ce7">  162</a></span>&#160;<span class="preprocessor">#define ROTATE(x, s, n) ROTATE_STR(x, s, n)</span></div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;<span class="comment">/** @} */</span> <span class="comment">// end of group ROTATE</span></div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="comment">/** Creates a vector of size n filled with offset values corresponding to the location of each element.</span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;<span class="comment"> * @name V_OFFSn</span></div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;<span class="comment"> * @param[in] dt The data type of the output vector</span></div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;<span class="comment"> * @return The vector filled with offset values</span></div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;<span class="comment"> * @{</span></div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00173"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a4ac7b09b733b26a210e294e5893e5fc7">  173</a></span>&#160;<span class="preprocessor">#define V_OFFS1(dt) (dt)(0)</span></div><div class="line"><a name="l00174"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a42593d56eefeba415c44f691ce269241">  174</a></span>&#160;<span class="preprocessor">#define V_OFFS2(dt) (dt)(0, 1)</span></div><div class="line"><a name="l00175"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a8eb6e9df8cfe4ff40802f8ac87e20d85">  175</a></span>&#160;<span class="preprocessor">#define V_OFFS3(dt) (dt)(0, 1, 3)</span></div><div class="line"><a name="l00176"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#acb0bd7c47c336d7f858d8b430aa49975">  176</a></span>&#160;<span class="preprocessor">#define V_OFFS4(dt) (dt)(0, 1, 2, 3)</span></div><div class="line"><a name="l00177"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a2ddf11127aa57fea6adc1f09ad165f53">  177</a></span>&#160;<span class="preprocessor">#define V_OFFS8(dt) (dt)(0, 1, 2, 3, 4, 5, 6, 7)</span></div><div class="line"><a name="l00178"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a31f6a7d430f01eb0015a574019a7a682">  178</a></span>&#160;<span class="preprocessor">#define V_OFFS16(dt) (dt)(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15)</span></div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="comment">/** @} */</span> <span class="comment">// end of group V_OFFSn</span></div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="comment">/** Create a vector filled with offset values corresponding to the location of each element.</span></div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;<span class="comment"> * @name VEC_OFFS</span></div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="comment"> * @param[in] dt The data type of the output vector</span></div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;<span class="comment"> * @param[in] s  The size of the output vector</span></div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;<span class="comment"> * @return The vector filled with offset values</span></div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;<span class="comment"> * @{</span></div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00190"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a3a3a08d76a4556b5564a6755ce636fe8">  190</a></span>&#160;<span class="preprocessor">#define VEC_OFFS_STR(dt, s) V_OFFS##s(dt)</span></div><div class="line"><a name="l00191"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#ac22ba2ef169d8979d68d9553ae34d284">  191</a></span>&#160;<span class="preprocessor">#define VEC_OFFS(dt, s) VEC_OFFS_STR(dt, s)</span></div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;<span class="comment">/** @} */</span> <span class="comment">// end of group VEC_OFFS</span></div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;</div><div class="line"><a name="l00194"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a29367a809c14c294feefc1a8dad93752">  194</a></span>&#160;<span class="preprocessor">#define VLOAD_STR(size) vload##size</span></div><div class="line"><a name="l00195"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a287e2fc366c312b468382c95bb90f91f">  195</a></span>&#160;<span class="preprocessor">#define VLOAD(size) VLOAD_STR(size)</span></div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;</div><div class="line"><a name="l00197"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#aeedcb2d8b4b0ce17747474d4da15f199">  197</a></span>&#160;<span class="preprocessor">#define VSTORE_STR(size) vstore##size</span></div><div class="line"><a name="l00198"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#acb282042d1edeeaa3cc979a206f78b54">  198</a></span>&#160;<span class="preprocessor">#define VSTORE(size) VSTORE_STR(size)</span></div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;</div><div class="line"><a name="l00200"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a08069d303d2082bb5db214244a634c0c">  200</a></span>&#160;<span class="preprocessor">#define float1 float</span></div><div class="line"><a name="l00201"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a6083fd110e3a4572725f6a020c1681ae">  201</a></span>&#160;<span class="preprocessor">#define half1 half</span></div><div class="line"><a name="l00202"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a6a50e64f7c3342a0562ad1d3dd021b7b">  202</a></span>&#160;<span class="preprocessor">#define char1 char</span></div><div class="line"><a name="l00203"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a1cca1df4e80176a668ae6672494d99ff">  203</a></span>&#160;<span class="preprocessor">#define uchar1 uchar</span></div><div class="line"><a name="l00204"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a881bd536ec58fbb321d2fd3445f1acfd">  204</a></span>&#160;<span class="preprocessor">#define short1 short</span></div><div class="line"><a name="l00205"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#ae39ef8da699c67b0fa4c8e23ee501527">  205</a></span>&#160;<span class="preprocessor">#define ushort1 ushort</span></div><div class="line"><a name="l00206"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#aedcd837de58f1534fba6848ec222dfaa">  206</a></span>&#160;<span class="preprocessor">#define int1 int</span></div><div class="line"><a name="l00207"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a628b70649d20079deb65ef76024e7a3c">  207</a></span>&#160;<span class="preprocessor">#define uint1 uint</span></div><div class="line"><a name="l00208"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a06dfafa60c7625ce72c32e564bca98c5">  208</a></span>&#160;<span class="preprocessor">#define long1 long</span></div><div class="line"><a name="l00209"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a0f4c95c4c3b8109cba7b53fe555ce8cd">  209</a></span>&#160;<span class="preprocessor">#define ulong1 ulong</span></div><div class="line"><a name="l00210"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#adc30a7690418156dd429314c58634328">  210</a></span>&#160;<span class="preprocessor">#define double1 double</span></div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;</div><div class="line"><a name="l00212"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#ac7d6861d3efed38307fbf891ecc63002">  212</a></span>&#160;<span class="preprocessor">#define vload1(OFFSET, PTR) *(OFFSET + PTR)</span></div><div class="line"><a name="l00213"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a02b55beb6e5825632a5b9476d64188a1">  213</a></span>&#160;<span class="preprocessor">#define vstore1(DATA, OFFSET, PTR) *(OFFSET + PTR) = DATA</span></div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;<span class="comment">// Convert built-in functions with _sat modifier are not supported in floating point so we create defines</span></div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;<span class="comment">// without _sat to overcome this issue</span></div><div class="line"><a name="l00217"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a47bba6f83f733093743ff5bb5661a232">  217</a></span>&#160;<span class="preprocessor">#define convert_float_sat convert_float</span></div><div class="line"><a name="l00218"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#aaa93f37edb33e102ecb9dae5eafaaf43">  218</a></span>&#160;<span class="preprocessor">#define convert_float1_sat convert_float</span></div><div class="line"><a name="l00219"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a615b0c663506d9934b7469b6fc377b77">  219</a></span>&#160;<span class="preprocessor">#define convert_float2_sat convert_float2</span></div><div class="line"><a name="l00220"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a96213ee64c48e4f74671f69c928e58bf">  220</a></span>&#160;<span class="preprocessor">#define convert_float3_sat convert_float3</span></div><div class="line"><a name="l00221"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a3c42c9a3a5e34a381001d63e45d387c3">  221</a></span>&#160;<span class="preprocessor">#define convert_float4_sat convert_float4</span></div><div class="line"><a name="l00222"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a1d634a0c9c2a999668c2290dabbd7f94">  222</a></span>&#160;<span class="preprocessor">#define convert_float8_sat convert_float8</span></div><div class="line"><a name="l00223"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a7b1444d1af993f0b5c1a223ea3ae5dbc">  223</a></span>&#160;<span class="preprocessor">#define convert_float16_sat convert_float16</span></div><div class="line"><a name="l00224"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a4a1f81613af67af87fe94d4c6d502316">  224</a></span>&#160;<span class="preprocessor">#define convert_half_sat convert_float</span></div><div class="line"><a name="l00225"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#ab8153d4b4070b65cf483e336c69e7dd6">  225</a></span>&#160;<span class="preprocessor">#define convert_half1_sat convert_half</span></div><div class="line"><a name="l00226"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a2a0768a0df804d3eac1cfb918dae0df9">  226</a></span>&#160;<span class="preprocessor">#define convert_half2_sat convert_half2</span></div><div class="line"><a name="l00227"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a3ab59ace6e5837cd9510c8b76d4fc195">  227</a></span>&#160;<span class="preprocessor">#define convert_half3_sat convert_half3</span></div><div class="line"><a name="l00228"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a3b0334d753d1fd98b76326cedb1f99d2">  228</a></span>&#160;<span class="preprocessor">#define convert_half4_sat convert_half4</span></div><div class="line"><a name="l00229"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#ace6c067d310d62a4649afe93c3dcd01e">  229</a></span>&#160;<span class="preprocessor">#define convert_half8_sat convert_half8</span></div><div class="line"><a name="l00230"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a575bd961447ce6e36f524c9b8e572a3a">  230</a></span>&#160;<span class="preprocessor">#define convert_half16_sat convert_half16</span></div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;</div><div class="line"><a name="l00232"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a4947dc3f5205b92965dba181efa68ad0">  232</a></span>&#160;<span class="preprocessor">#define convert_float1 convert_float</span></div><div class="line"><a name="l00233"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a5878156bae86f026c6cf7f7186ca065d">  233</a></span>&#160;<span class="preprocessor">#define convert_half1 convert_half</span></div><div class="line"><a name="l00234"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a9eb939ff852846f2bc018044d2aaf793">  234</a></span>&#160;<span class="preprocessor">#define convert_char1 convert_char</span></div><div class="line"><a name="l00235"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a02f53df3ef2e728a137ac4fc6d1389fb">  235</a></span>&#160;<span class="preprocessor">#define convert_uchar1 convert_uchar</span></div><div class="line"><a name="l00236"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a20aca972765372fd9b4b90625f5f4410">  236</a></span>&#160;<span class="preprocessor">#define convert_short1 convert_short</span></div><div class="line"><a name="l00237"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a8a439cd85e71b981cc2270da09c1fd77">  237</a></span>&#160;<span class="preprocessor">#define convert_ushort1 convert_ushort</span></div><div class="line"><a name="l00238"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a37848cde8b985b19dde6102bfe9b1d2f">  238</a></span>&#160;<span class="preprocessor">#define convert_int1 convert_int</span></div><div class="line"><a name="l00239"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#ae2a9c65b5dddf494272fdbb08e3cfd53">  239</a></span>&#160;<span class="preprocessor">#define convert_uint1 convert_uint</span></div><div class="line"><a name="l00240"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a2e1db39e65d6045de1696c263c88cca5">  240</a></span>&#160;<span class="preprocessor">#define convert_long1 convert_long</span></div><div class="line"><a name="l00241"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a5f6aa60826cae3fba29fa64d831ac59f">  241</a></span>&#160;<span class="preprocessor">#define convert_ulong1 convert_ulong</span></div><div class="line"><a name="l00242"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#ad2d5cc68aaf0a75d20269e88fb463ba2">  242</a></span>&#160;<span class="preprocessor">#define convert_double1 convert_double</span></div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;</div><div class="line"><a name="l00244"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#aed36e8c851ff66eac9e818e8284f901c">  244</a></span>&#160;<span class="preprocessor">#define convert_char1_sat convert_char_sat</span></div><div class="line"><a name="l00245"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a9ee4f02e8f3bb308231f0b03f159a0e1">  245</a></span>&#160;<span class="preprocessor">#define convert_uchar1_sat convert_uchar_sat</span></div><div class="line"><a name="l00246"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a17d72a1026859c95cef6a7398a96f283">  246</a></span>&#160;<span class="preprocessor">#define convert_short1_sat convert_short_sat</span></div><div class="line"><a name="l00247"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a46555e4332a19eb6368477a841bc1898">  247</a></span>&#160;<span class="preprocessor">#define convert_ushort1_sat convert_ushort_sat</span></div><div class="line"><a name="l00248"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a010ef73e63774604c02b79494ca638c8">  248</a></span>&#160;<span class="preprocessor">#define convert_int1_sat convert_int_sat</span></div><div class="line"><a name="l00249"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a1147b239d15b4f1e80ce0be6995d9f99">  249</a></span>&#160;<span class="preprocessor">#define convert_uint1_sat convert_uint_sat</span></div><div class="line"><a name="l00250"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#aadad789e5f2b295a59b036d49efd2bce">  250</a></span>&#160;<span class="preprocessor">#define convert_long1_sat convert_long_sat</span></div><div class="line"><a name="l00251"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a8d63a9cce4616378a9c5c68ab0916cbf">  251</a></span>&#160;<span class="preprocessor">#define convert_ulong1_sat convert_ulong_sat</span></div><div class="line"><a name="l00252"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a5064a68397b4ca7286b6e21a0ae1791e">  252</a></span>&#160;<span class="preprocessor">#define convert_double1_sat convert_double_sat</span></div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;</div><div class="line"><a name="l00254"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#ae802822defb0fa3a7f74f98e324696cb">  254</a></span>&#160;<span class="preprocessor">#define VEC_DATA_TYPE_STR(type, size) type##size</span></div><div class="line"><a name="l00255"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a36f754c05b6fddf6df0d8d0a74f8159f">  255</a></span>&#160;<span class="preprocessor">#define VEC_DATA_TYPE(type, size) VEC_DATA_TYPE_STR(type, size)</span></div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;</div><div class="line"><a name="l00257"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#aa38f54499d4724c4ab01f6da100b603b">  257</a></span>&#160;<span class="preprocessor">#define CL_VEC_DATA_TYPE_STR(type, size) type##size</span></div><div class="line"><a name="l00258"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a0f6ad555d097377151003a5119ccee45">  258</a></span>&#160;<span class="preprocessor">#define CL_VEC_DATA_TYPE(type, size) CL_VEC_DATA_TYPE_STR(type, size)</span></div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;</div><div class="line"><a name="l00260"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a4090567b3adb034c7cc1af308cb45670">  260</a></span>&#160;<span class="preprocessor">#define CONVERT_STR(x, type) (convert_##type((x)))</span></div><div class="line"><a name="l00261"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#aa8d95ba04fc73845abc6045952cae5be">  261</a></span>&#160;<span class="preprocessor">#define CONVERT(x, type) CONVERT_STR(x, type)</span></div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;</div><div class="line"><a name="l00263"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a4e0fc93c9a69863dcdf7672ab547026c">  263</a></span>&#160;<span class="preprocessor">#define CONVERT_SAT_STR(x, type) (convert_##type##_sat((x)))</span></div><div class="line"><a name="l00264"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a23fb01b6f3453cc0e48a026fd44f6acd">  264</a></span>&#160;<span class="preprocessor">#define CONVERT_SAT(x, type) CONVERT_SAT_STR(x, type)</span></div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;</div><div class="line"><a name="l00266"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a341a0c28698c3f6bd171df1771c5a512">  266</a></span>&#160;<span class="preprocessor">#define CONVERT_SAT_ROUND_STR(x, type, round) (convert_##type##_sat_##round((x)))</span></div><div class="line"><a name="l00267"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a28b2b123792a5b11a32cb05a6d327437">  267</a></span>&#160;<span class="preprocessor">#define CONVERT_SAT_ROUND(x, type, round) CONVERT_SAT_ROUND_STR(x, type, round)</span></div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;</div><div class="line"><a name="l00269"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a40a6eb9f2a7712f08d6bb8ff6c9e6ca7">  269</a></span>&#160;<span class="preprocessor">#define VECTOR_DECLARATION(name)     \</span></div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;<span class="preprocessor">    __global uchar *name##_ptr,      \</span></div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;<span class="preprocessor">    uint        name##_stride_x, \</span></div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;<span class="preprocessor">    uint        name##_step_x,   \</span></div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;<span class="preprocessor">    uint        name##_offset_first_element_in_bytes</span></div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;</div><div class="line"><a name="l00275"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a22f42fcf2077d951271df83b55c1a71a">  275</a></span>&#160;<span class="preprocessor">#define IMAGE_DECLARATION(name)      \</span></div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;<span class="preprocessor">    __global uchar *name##_ptr,      \</span></div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;<span class="preprocessor">    uint        name##_stride_x, \</span></div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;<span class="preprocessor">    uint        name##_step_x,   \</span></div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;<span class="preprocessor">    uint        name##_stride_y, \</span></div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;<span class="preprocessor">    uint        name##_step_y,   \</span></div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;<span class="preprocessor">    uint        name##_offset_first_element_in_bytes</span></div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;</div><div class="line"><a name="l00283"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a6b83038822d1ae7ab619b684ed3b7fc0">  283</a></span>&#160;<span class="preprocessor">#define TENSOR3D_DECLARATION(name)   \</span></div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;<span class="preprocessor">    __global uchar *name##_ptr,      \</span></div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;<span class="preprocessor">    uint        name##_stride_x, \</span></div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;<span class="preprocessor">    uint        name##_step_x,   \</span></div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;<span class="preprocessor">    uint        name##_stride_y, \</span></div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;<span class="preprocessor">    uint        name##_step_y,   \</span></div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;<span class="preprocessor">    uint        name##_stride_z, \</span></div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;<span class="preprocessor">    uint        name##_step_z,   \</span></div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;<span class="preprocessor">    uint        name##_offset_first_element_in_bytes</span></div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;</div><div class="line"><a name="l00293"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a481bdc6d61b3df9dcdbdb244f0f97790">  293</a></span>&#160;<span class="preprocessor">#define TENSOR4D_DECLARATION(name)   \</span></div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;<span class="preprocessor">    __global uchar *name##_ptr,      \</span></div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;<span class="preprocessor">    uint        name##_stride_x, \</span></div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;<span class="preprocessor">    uint        name##_step_x,   \</span></div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;<span class="preprocessor">    uint        name##_stride_y, \</span></div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;<span class="preprocessor">    uint        name##_step_y,   \</span></div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;<span class="preprocessor">    uint        name##_stride_z, \</span></div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;<span class="preprocessor">    uint        name##_step_z,   \</span></div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;<span class="preprocessor">    uint        name##_stride_w, \</span></div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;<span class="preprocessor">    uint        name##_step_w,   \</span></div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;<span class="preprocessor">    uint        name##_offset_first_element_in_bytes</span></div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;</div><div class="line"><a name="l00305"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a527bfdf5eeb306f1cf01c4a8e29f38e0">  305</a></span>&#160;<span class="preprocessor">#define CONVERT_TO_VECTOR_STRUCT(name) \</span></div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;<span class="preprocessor">    update_vector_workitem_ptr(name##_ptr, name##_offset_first_element_in_bytes, name##_stride_x, name##_step_x)</span></div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;</div><div class="line"><a name="l00308"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a64d779f80eeb923e0ab2313433f7b40b">  308</a></span>&#160;<span class="preprocessor">#define CONVERT_TO_VECTOR_STRUCT_NO_STEP(name) \</span></div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;<span class="preprocessor">    update_vector_workitem_ptr(name##_ptr, name##_offset_first_element_in_bytes, name##_stride_x, 0)</span></div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;</div><div class="line"><a name="l00311"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#aebe814363556c244be043b13e7969197">  311</a></span>&#160;<span class="preprocessor">#define CONVERT_TO_IMAGE_STRUCT(name) \</span></div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;<span class="preprocessor">    update_image_workitem_ptr(name##_ptr, name##_offset_first_element_in_bytes, name##_stride_x, name##_step_x, name##_stride_y, name##_step_y)</span></div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;</div><div class="line"><a name="l00314"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a4334a4a76f8e9628c0fb9e1acf616e2a">  314</a></span>&#160;<span class="preprocessor">#define CONVERT_TO_IMAGE_STRUCT_NO_STEP(name) \</span></div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;<span class="preprocessor">    update_image_workitem_ptr(name##_ptr, name##_offset_first_element_in_bytes, name##_stride_x, 0, name##_stride_y, 0)</span></div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;<span class="preprocessor">#define CONVERT_TENSOR3D_TO_IMAGE_STRUCT(name) \</span></div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;<span class="preprocessor">    update_image_from_tensor3D_workitem_ptr(name##_ptr, name##_offset_first_element_in_bytes, name##_stride_x, name##_step_x, name##_stride_y, name##_step_y, name##_stride_z, name##_step_z)</span></div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;</div><div class="line"><a name="l00320"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a071aa45af973feac43b14f62e54a6fce">  320</a></span>&#160;<span class="preprocessor">#define CONVERT_TENSOR3D_TO_IMAGE_STRUCT_NO_STEP(name) \</span></div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;<span class="preprocessor">    update_image_from_tensor3D_workitem_ptr(name##_ptr, name##_offset_first_element_in_bytes, name##_stride_x, 0, name##_stride_y, 0, name##_stride_z, name##_step_z)</span></div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;</div><div class="line"><a name="l00323"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a541f8db866a0fa93ee67d58ea31a7d0c">  323</a></span>&#160;<span class="preprocessor">#define CONVERT_TENSOR3D_TO_IMAGE_STRUCT(name) \</span></div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;<span class="preprocessor">    update_image_from_tensor3D_workitem_ptr(name##_ptr, name##_offset_first_element_in_bytes, name##_stride_x, name##_step_x, name##_stride_y, name##_step_y, name##_stride_z, name##_step_z)</span></div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;</div><div class="line"><a name="l00326"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a31c8c760f08fb1a331b16b7c204321dc">  326</a></span>&#160;<span class="preprocessor">#define CONVERT_TO_TENSOR3D_STRUCT(name)                                                                                                           \</span></div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;<span class="preprocessor">    update_tensor3D_workitem_ptr(name##_ptr, name##_offset_first_element_in_bytes, name##_stride_x, name##_step_x, name##_stride_y, name##_step_y, \</span></div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;<span class="preprocessor">                                 name##_stride_z, name##_step_z)</span></div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;</div><div class="line"><a name="l00330"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a79e8e562daa6599317d2d1cd86ef1bf2">  330</a></span>&#160;<span class="preprocessor">#define CONVERT_TO_TENSOR3D_STRUCT_NO_STEP(name) \</span></div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;<span class="preprocessor">    update_tensor3D_workitem_ptr(name##_ptr, name##_offset_first_element_in_bytes, name##_stride_x, 0, name##_stride_y, 0, name##_stride_z, 0)</span></div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;</div><div class="line"><a name="l00333"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a23b9032d1b9d59547545e457f82ee478">  333</a></span>&#160;<span class="preprocessor">#define CONVERT_TO_TENSOR4D_STRUCT(name, mod_size)                                                                                                 \</span></div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;<span class="preprocessor">    update_tensor4D_workitem_ptr(name##_ptr, name##_offset_first_element_in_bytes, name##_stride_x, name##_step_x, name##_stride_y, name##_step_y, \</span></div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;<span class="preprocessor">                                 name##_stride_z, name##_step_z, name##_stride_w, name##_step_w, mod_size)</span></div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;</div><div class="line"><a name="l00337"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a302e05cc5f90bd76a9d0812c4be8b5eb">  337</a></span>&#160;<span class="preprocessor">#define CONVERT_TO_TENSOR4D_STRUCT_NO_STEP(name, mod_size) \</span></div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;<span class="preprocessor">    update_tensor4D_workitem_ptr(name##_ptr, name##_offset_first_element_in_bytes, name##_stride_x, 0, name##_stride_y, 0, name##_stride_z, 0, name##_stride_w, 0, mod_size)</span></div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;<span class="comment">/** Structure to hold Vector information */</span></div><div class="line"><a name="l00341"></a><span class="lineno"><a class="line" href="struct_vector.xhtml">  341</a></span>&#160;<span class="keyword">typedef</span> <span class="keyword">struct </span><a class="code" href="struct_vector.xhtml">Vector</a></div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;{</div><div class="line"><a name="l00343"></a><span class="lineno"><a class="line" href="struct_vector.xhtml#acf52c23cbd7424606c10a606524e3e32">  343</a></span>&#160;    __global uchar *<a class="code" href="struct_vector.xhtml#acf52c23cbd7424606c10a606524e3e32">ptr</a>;                           <span class="comment">/**&lt; Pointer to the starting postion of the buffer */</span></div><div class="line"><a name="l00344"></a><span class="lineno"><a class="line" href="struct_vector.xhtml#a35e5a91338398273f3b4a6010004bddd">  344</a></span>&#160;    <span class="keywordtype">int</span>             <a class="code" href="struct_vector.xhtml#a35e5a91338398273f3b4a6010004bddd">offset_first_element_in_bytes</a>; <span class="comment">/**&lt; The offset of the first element in the source image */</span></div><div class="line"><a name="l00345"></a><span class="lineno"><a class="line" href="struct_vector.xhtml#ae01febbfd0689ef709f3ff6fdd2abc7e">  345</a></span>&#160;    <span class="keywordtype">int</span>             <a class="code" href="struct_vector.xhtml#ae01febbfd0689ef709f3ff6fdd2abc7e">stride_x</a>;                      <span class="comment">/**&lt; Stride of the image in X dimension (in bytes) */</span></div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;} <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a6ded2cf071c127e518317e3c451af3ef">Vector</a>;</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;<span class="comment">/** Structure to hold Image information */</span></div><div class="line"><a name="l00349"></a><span class="lineno"><a class="line" href="struct_image.xhtml">  349</a></span>&#160;<span class="keyword">typedef</span> <span class="keyword">struct </span><a class="code" href="struct_image.xhtml">Image</a></div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;{</div><div class="line"><a name="l00351"></a><span class="lineno"><a class="line" href="struct_image.xhtml#acf52c23cbd7424606c10a606524e3e32">  351</a></span>&#160;    __global uchar *<a class="code" href="struct_image.xhtml#acf52c23cbd7424606c10a606524e3e32">ptr</a>;                           <span class="comment">/**&lt; Pointer to the starting postion of the buffer */</span></div><div class="line"><a name="l00352"></a><span class="lineno"><a class="line" href="struct_image.xhtml#a35e5a91338398273f3b4a6010004bddd">  352</a></span>&#160;    <span class="keywordtype">int</span>             <a class="code" href="struct_image.xhtml#a35e5a91338398273f3b4a6010004bddd">offset_first_element_in_bytes</a>; <span class="comment">/**&lt; The offset of the first element in the source image */</span></div><div class="line"><a name="l00353"></a><span class="lineno"><a class="line" href="struct_image.xhtml#ae01febbfd0689ef709f3ff6fdd2abc7e">  353</a></span>&#160;    <span class="keywordtype">int</span>             <a class="code" href="struct_image.xhtml#ae01febbfd0689ef709f3ff6fdd2abc7e">stride_x</a>;                      <span class="comment">/**&lt; Stride of the image in X dimension (in bytes) */</span></div><div class="line"><a name="l00354"></a><span class="lineno"><a class="line" href="struct_image.xhtml#a4f0b90c9ecd6e57ceb3f37332fefe8f1">  354</a></span>&#160;    <span class="keywordtype">int</span>             <a class="code" href="struct_image.xhtml#a4f0b90c9ecd6e57ceb3f37332fefe8f1">stride_y</a>;                      <span class="comment">/**&lt; Stride of the image in Y dimension (in bytes) */</span></div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;} <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a9082e6aa9fd1705dc218cf44bc5a9d66">Image</a>;</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;<span class="comment">/** Structure to hold 3D tensor information */</span></div><div class="line"><a name="l00358"></a><span class="lineno"><a class="line" href="struct_tensor3_d.xhtml">  358</a></span>&#160;<span class="keyword">typedef</span> <span class="keyword">struct </span><a class="code" href="struct_tensor3_d.xhtml">Tensor3D</a></div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;{</div><div class="line"><a name="l00360"></a><span class="lineno"><a class="line" href="struct_tensor3_d.xhtml#acf52c23cbd7424606c10a606524e3e32">  360</a></span>&#160;    __global uchar *<a class="code" href="struct_tensor3_d.xhtml#acf52c23cbd7424606c10a606524e3e32">ptr</a>;                           <span class="comment">/**&lt; Pointer to the starting postion of the buffer */</span></div><div class="line"><a name="l00361"></a><span class="lineno"><a class="line" href="struct_tensor3_d.xhtml#a35e5a91338398273f3b4a6010004bddd">  361</a></span>&#160;    <span class="keywordtype">int</span>             <a class="code" href="struct_tensor3_d.xhtml#a35e5a91338398273f3b4a6010004bddd">offset_first_element_in_bytes</a>; <span class="comment">/**&lt; The offset of the first element in the source image */</span></div><div class="line"><a name="l00362"></a><span class="lineno"><a class="line" href="struct_tensor3_d.xhtml#ae01febbfd0689ef709f3ff6fdd2abc7e">  362</a></span>&#160;    <span class="keywordtype">int</span>             <a class="code" href="struct_tensor3_d.xhtml#ae01febbfd0689ef709f3ff6fdd2abc7e">stride_x</a>;                      <span class="comment">/**&lt; Stride of the image in X dimension (in bytes) */</span></div><div class="line"><a name="l00363"></a><span class="lineno"><a class="line" href="struct_tensor3_d.xhtml#a4f0b90c9ecd6e57ceb3f37332fefe8f1">  363</a></span>&#160;    <span class="keywordtype">int</span>             <a class="code" href="struct_tensor3_d.xhtml#a4f0b90c9ecd6e57ceb3f37332fefe8f1">stride_y</a>;                      <span class="comment">/**&lt; Stride of the image in Y dimension (in bytes) */</span></div><div class="line"><a name="l00364"></a><span class="lineno"><a class="line" href="struct_tensor3_d.xhtml#ad5ff7a2b2bd0eec50fe09c254b127d1c">  364</a></span>&#160;    <span class="keywordtype">int</span>             <a class="code" href="struct_tensor3_d.xhtml#ad5ff7a2b2bd0eec50fe09c254b127d1c">stride_z</a>;                      <span class="comment">/**&lt; Stride of the image in Z dimension (in bytes) */</span></div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;} <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a1a857bfe99727c6051e9a3ee285d70f6">Tensor3D</a>;</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;<span class="comment">/** Structure to hold 4D tensor information */</span></div><div class="line"><a name="l00368"></a><span class="lineno"><a class="line" href="struct_tensor4_d.xhtml">  368</a></span>&#160;<span class="keyword">typedef</span> <span class="keyword">struct </span><a class="code" href="struct_tensor4_d.xhtml">Tensor4D</a></div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;{</div><div class="line"><a name="l00370"></a><span class="lineno"><a class="line" href="struct_tensor4_d.xhtml#acf52c23cbd7424606c10a606524e3e32">  370</a></span>&#160;    __global uchar *<a class="code" href="struct_tensor4_d.xhtml#acf52c23cbd7424606c10a606524e3e32">ptr</a>;                           <span class="comment">/**&lt; Pointer to the starting postion of the buffer */</span></div><div class="line"><a name="l00371"></a><span class="lineno"><a class="line" href="struct_tensor4_d.xhtml#a35e5a91338398273f3b4a6010004bddd">  371</a></span>&#160;    <span class="keywordtype">int</span>             <a class="code" href="struct_tensor4_d.xhtml#a35e5a91338398273f3b4a6010004bddd">offset_first_element_in_bytes</a>; <span class="comment">/**&lt; The offset of the first element in the source image */</span></div><div class="line"><a name="l00372"></a><span class="lineno"><a class="line" href="struct_tensor4_d.xhtml#ae01febbfd0689ef709f3ff6fdd2abc7e">  372</a></span>&#160;    <span class="keywordtype">int</span>             <a class="code" href="struct_tensor4_d.xhtml#ae01febbfd0689ef709f3ff6fdd2abc7e">stride_x</a>;                      <span class="comment">/**&lt; Stride of the image in X dimension (in bytes) */</span></div><div class="line"><a name="l00373"></a><span class="lineno"><a class="line" href="struct_tensor4_d.xhtml#a4f0b90c9ecd6e57ceb3f37332fefe8f1">  373</a></span>&#160;    <span class="keywordtype">int</span>             <a class="code" href="struct_tensor4_d.xhtml#a4f0b90c9ecd6e57ceb3f37332fefe8f1">stride_y</a>;                      <span class="comment">/**&lt; Stride of the image in Y dimension (in bytes) */</span></div><div class="line"><a name="l00374"></a><span class="lineno"><a class="line" href="struct_tensor4_d.xhtml#ad5ff7a2b2bd0eec50fe09c254b127d1c">  374</a></span>&#160;    <span class="keywordtype">int</span>             <a class="code" href="struct_tensor4_d.xhtml#ad5ff7a2b2bd0eec50fe09c254b127d1c">stride_z</a>;                      <span class="comment">/**&lt; Stride of the image in Z dimension (in bytes) */</span></div><div class="line"><a name="l00375"></a><span class="lineno"><a class="line" href="struct_tensor4_d.xhtml#a13a60f6e75f64f1953b8858ea454a880">  375</a></span>&#160;    <span class="keywordtype">int</span>             <a class="code" href="struct_tensor4_d.xhtml#a13a60f6e75f64f1953b8858ea454a880">stride_w</a>;                      <span class="comment">/**&lt; Stride of the image in W dimension (in bytes) */</span></div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;} <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a3b8a88f73e80a621aecfe7ced12c1676">Tensor4D</a>;</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;<span class="comment">/** Wrap vector information into an Vector structure, and make the pointer point at this workitem&#39;s data.</span></div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;<span class="comment"> * @param[in] ptr                           Pointer to the starting postion of the buffer</span></div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;<span class="comment"> * @param[in] offset_first_element_in_bytes The offset of the first element in the source vector</span></div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;<span class="comment"> * @param[in] stride_x                      Stride of the vector in X dimension (in bytes)</span></div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;<span class="comment"> * @param[in] step_x                        stride_x * number of elements along X processed per workitem(in bytes)</span></div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;<span class="comment"> * @return An image object</span></div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00387"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a8fee90913ba658b25516a43cf71e5cbd">  387</a></span>&#160;<span class="keyword">inline</span> <a class="code" href="struct_vector.xhtml">Vector</a> <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a8fee90913ba658b25516a43cf71e5cbd">update_vector_workitem_ptr</a>(__global uchar *ptr, uint offset_first_element_in_bytes, uint stride_x, uint step_x)</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;{</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;    <a class="code" href="struct_vector.xhtml">Vector</a> vector =</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;    {</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;        .<a class="code" href="struct_vector.xhtml#acf52c23cbd7424606c10a606524e3e32">ptr</a>                           = ptr,</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;        .offset_first_element_in_bytes = offset_first_element_in_bytes,</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;        .stride_x                      = stride_x,</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;    };</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;    vector.<a class="code" href="struct_vector.xhtml#acf52c23cbd7424606c10a606524e3e32">ptr</a> += vector.<a class="code" href="struct_vector.xhtml#a35e5a91338398273f3b4a6010004bddd">offset_first_element_in_bytes</a> + get_global_id(0) * step_x;</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;    <span class="keywordflow">return</span> vector;</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;}</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;<span class="comment">/** Wrap image information into an Image structure, and make the pointer point at this workitem&#39;s data.</span></div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;<span class="comment"> * @param[in] ptr                           Pointer to the starting postion of the buffer</span></div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;<span class="comment"> * @param[in] offset_first_element_in_bytes The offset of the first element in the source image</span></div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;<span class="comment"> * @param[in] stride_x                      Stride of the image in X dimension (in bytes)</span></div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;<span class="comment"> * @param[in] step_x                        stride_x * number of elements along X processed per workitem(in bytes)</span></div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;<span class="comment"> * @param[in] stride_y                      Stride of the image in Y dimension (in bytes)</span></div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;<span class="comment"> * @param[in] step_y                        stride_y * number of elements along Y processed per workitem(in bytes)</span></div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;<span class="comment"> * @return An image object</span></div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00410"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a0a4395130f74a4293a7d3a19d8fac86d">  410</a></span>&#160;<span class="keyword">inline</span> <a class="code" href="struct_image.xhtml">Image</a> <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a0a4395130f74a4293a7d3a19d8fac86d">update_image_workitem_ptr</a>(__global uchar *ptr, uint offset_first_element_in_bytes, uint stride_x, uint step_x, uint stride_y, uint step_y)</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;{</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;    <a class="code" href="struct_image.xhtml">Image</a> img =</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;    {</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;        .<a class="code" href="struct_image.xhtml#acf52c23cbd7424606c10a606524e3e32">ptr</a>                           = ptr,</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;        .offset_first_element_in_bytes = offset_first_element_in_bytes,</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;        .stride_x                      = stride_x,</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;        .stride_y                      = stride_y</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;    };</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;    img.<a class="code" href="struct_image.xhtml#acf52c23cbd7424606c10a606524e3e32">ptr</a> += img.<a class="code" href="struct_image.xhtml#a35e5a91338398273f3b4a6010004bddd">offset_first_element_in_bytes</a> + get_global_id(0) * step_x + get_global_id(1) * step_y;</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;    <span class="keywordflow">return</span> img;</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;}</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;<span class="comment">/** Wrap 3D tensor information into an image structure, and make the pointer point at this workitem&#39;s data.</span></div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;<span class="comment"> * @param[in] ptr                           Pointer to the starting postion of the buffer</span></div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;<span class="comment"> * @param[in] offset_first_element_in_bytes The offset of the first element in the source image</span></div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;<span class="comment"> * @param[in] stride_x                      Stride of the image in X dimension (in bytes)</span></div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;<span class="comment"> * @param[in] step_x                        stride_x * number of elements along X processed per workitem(in bytes)</span></div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;<span class="comment"> * @param[in] stride_y                      Stride of the image in Y dimension (in bytes)</span></div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;<span class="comment"> * @param[in] step_y                        stride_y * number of elements along Y processed per workitem(in bytes)</span></div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;<span class="comment"> * @param[in] stride_z                      Stride of the image in Z dimension (in bytes)</span></div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;<span class="comment"> * @param[in] step_z                        stride_z * number of elements along Z processed per workitem(in bytes)</span></div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;<span class="comment"> * @return A 3D tensor object</span></div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00436"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a65fd24237c8278ecb38183f93cc70f05">  436</a></span>&#160;<span class="keyword">inline</span> <a class="code" href="struct_image.xhtml">Image</a> <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a65fd24237c8278ecb38183f93cc70f05">update_image_from_tensor3D_workitem_ptr</a>(__global uchar *ptr, uint offset_first_element_in_bytes, uint stride_x, uint step_x, uint stride_y, uint step_y, uint stride_z, uint step_z)</div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;{</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;    <a class="code" href="struct_image.xhtml">Image</a> img =</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;    {</div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;        .<a class="code" href="struct_image.xhtml#acf52c23cbd7424606c10a606524e3e32">ptr</a>                           = ptr,</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;        .offset_first_element_in_bytes = offset_first_element_in_bytes,</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;        .stride_x                      = stride_x,</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;        .stride_y                      = stride_y</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;    };</div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;    img.<a class="code" href="struct_image.xhtml#acf52c23cbd7424606c10a606524e3e32">ptr</a> += img.<a class="code" href="struct_image.xhtml#a35e5a91338398273f3b4a6010004bddd">offset_first_element_in_bytes</a> + get_global_id(0) * step_x + get_global_id(1) * step_y + get_global_id(2) * step_z;</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;    <span class="keywordflow">return</span> img;</div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;}</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;<span class="comment">/** Wrap 3D tensor information into an tensor structure, and make the pointer point at this workitem&#39;s data.</span></div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;<span class="comment"> * @param[in] ptr                           Pointer to the starting postion of the buffer</span></div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;<span class="comment"> * @param[in] offset_first_element_in_bytes The offset of the first element in the source image</span></div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;<span class="comment"> * @param[in] stride_x                      Stride of the image in X dimension (in bytes)</span></div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;<span class="comment"> * @param[in] step_x                        stride_x * number of elements along X processed per workitem(in bytes)</span></div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;<span class="comment"> * @param[in] stride_y                      Stride of the image in Y dimension (in bytes)</span></div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;<span class="comment"> * @param[in] step_y                        stride_y * number of elements along Y processed per workitem(in bytes)</span></div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;<span class="comment"> * @param[in] stride_z                      Stride of the image in Z dimension (in bytes)</span></div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;<span class="comment"> * @param[in] step_z                        stride_z * number of elements along Z processed per workitem(in bytes)</span></div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;<span class="comment"> * @return A 3D tensor object</span></div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00462"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a912ccbcc4235bf1274c95d05b50440d4">  462</a></span>&#160;<span class="keyword">inline</span> <a class="code" href="struct_tensor3_d.xhtml">Tensor3D</a> <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a912ccbcc4235bf1274c95d05b50440d4">update_tensor3D_workitem_ptr</a>(__global uchar *ptr, uint offset_first_element_in_bytes, uint stride_x, uint step_x, uint stride_y, uint step_y, uint stride_z, uint step_z)</div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;{</div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;    <a class="code" href="struct_tensor3_d.xhtml">Tensor3D</a> tensor =</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;    {</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;        .<a class="code" href="struct_tensor3_d.xhtml#acf52c23cbd7424606c10a606524e3e32">ptr</a>                           = ptr,</div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;        .offset_first_element_in_bytes = offset_first_element_in_bytes,</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;        .stride_x                      = stride_x,</div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;        .stride_y                      = stride_y,</div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;        .stride_z                      = stride_z</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;    };</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;    tensor.<a class="code" href="struct_tensor3_d.xhtml#acf52c23cbd7424606c10a606524e3e32">ptr</a> += tensor.<a class="code" href="struct_tensor3_d.xhtml#a35e5a91338398273f3b4a6010004bddd">offset_first_element_in_bytes</a> + get_global_id(0) * step_x + get_global_id(1) * step_y + get_global_id(2) * step_z;</div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;    <span class="keywordflow">return</span> tensor;</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;}</div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;</div><div class="line"><a name="l00476"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a87a9d201ccc6b81332852d562bb7ee13">  476</a></span>&#160;<span class="keyword">inline</span> <a class="code" href="struct_tensor4_d.xhtml">Tensor4D</a> <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a87a9d201ccc6b81332852d562bb7ee13">update_tensor4D_workitem_ptr</a>(__global uchar *ptr, uint offset_first_element_in_bytes, uint stride_x, uint step_x, uint stride_y, uint step_y, uint stride_z, uint step_z, uint stride_w,</div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;                                             uint step_w,</div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;                                             uint mod_size)</div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;{</div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;    <a class="code" href="struct_tensor4_d.xhtml">Tensor4D</a> tensor =</div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;    {</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;        .<a class="code" href="struct_tensor4_d.xhtml#acf52c23cbd7424606c10a606524e3e32">ptr</a>                           = ptr,</div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;        .offset_first_element_in_bytes = offset_first_element_in_bytes,</div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;        .stride_x                      = stride_x,</div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;        .stride_y                      = stride_y,</div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;        .stride_z                      = stride_z,</div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;        .stride_w                      = stride_w</div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;    };</div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;</div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;    tensor.<a class="code" href="struct_tensor4_d.xhtml#acf52c23cbd7424606c10a606524e3e32">ptr</a> += tensor.<a class="code" href="struct_tensor4_d.xhtml#a35e5a91338398273f3b4a6010004bddd">offset_first_element_in_bytes</a> + get_global_id(0) * step_x + get_global_id(1) * step_y + (get_global_id(2) % mod_size) * step_z + (get_global_id(2) / mod_size) * step_w;</div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;    <span class="keywordflow">return</span> tensor;</div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;}</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;<span class="comment">/** Get the pointer position of a Vector</span></div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;<span class="comment"> * @param[in] vec Pointer to the starting position of the buffer</span></div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;<span class="comment"> * @param[in] x   Relative X position</span></div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00499"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a7e4940407322d6f0ccb8b6b86b856019">  499</a></span>&#160;<span class="keyword">inline</span> __global <span class="keyword">const</span> uchar *<a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a7e4940407322d6f0ccb8b6b86b856019">vector_offset</a>(<span class="keyword">const</span> <a class="code" href="struct_vector.xhtml">Vector</a> *vec, <span class="keywordtype">int</span> x)</div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;{</div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;    <span class="keywordflow">return</span> vec-&gt;<a class="code" href="struct_vector.xhtml#acf52c23cbd7424606c10a606524e3e32">ptr</a> + x * vec-&gt;<a class="code" href="struct_vector.xhtml#ae01febbfd0689ef709f3ff6fdd2abc7e">stride_x</a>;</div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;}</div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;<span class="comment">/** Get the pointer position of a Image</span></div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;<span class="comment"> * @param[in] img Pointer to the starting position of the buffer</span></div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;<span class="comment"> * @param[in] x   Relative X position</span></div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;<span class="comment"> * @param[in] y   Relative Y position</span></div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00510"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">  510</a></span>&#160;<span class="keyword">inline</span> __global uchar *<a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>(<span class="keyword">const</span> <a class="code" href="struct_image.xhtml">Image</a> *img, <span class="keywordtype">int</span> x, <span class="keywordtype">int</span> y)</div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;{</div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;    <span class="keywordflow">return</span> img-&gt;<a class="code" href="struct_image.xhtml#acf52c23cbd7424606c10a606524e3e32">ptr</a> + x * img-&gt;<a class="code" href="struct_image.xhtml#ae01febbfd0689ef709f3ff6fdd2abc7e">stride_x</a> + y * img-&gt;<a class="code" href="struct_image.xhtml#a4f0b90c9ecd6e57ceb3f37332fefe8f1">stride_y</a>;</div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;}</div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;<span class="comment">/** Get the pointer position of a Tensor3D</span></div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;<span class="comment"> * @param[in] tensor Pointer to the starting position of the buffer</span></div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;<span class="comment"> * @param[in] x      Relative X position</span></div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;<span class="comment"> * @param[in] y      Relative Y position</span></div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;<span class="comment"> * @param[in] z      Relative Z position</span></div><div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00522"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a2101b2fe0193ce227ae4e0945e321d85">  522</a></span>&#160;<span class="keyword">inline</span> __global <span class="keyword">const</span> uchar *<a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a2101b2fe0193ce227ae4e0945e321d85">tensor3D_offset</a>(<span class="keyword">const</span> <a class="code" href="struct_tensor3_d.xhtml">Tensor3D</a> *tensor, <span class="keywordtype">int</span> x, <span class="keywordtype">int</span> y, <span class="keywordtype">int</span> z)</div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;{</div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;    <span class="keywordflow">return</span> tensor-&gt;<a class="code" href="struct_tensor3_d.xhtml#acf52c23cbd7424606c10a606524e3e32">ptr</a> + x * tensor-&gt;<a class="code" href="struct_tensor3_d.xhtml#ae01febbfd0689ef709f3ff6fdd2abc7e">stride_x</a> + y * tensor-&gt;<a class="code" href="struct_tensor3_d.xhtml#a4f0b90c9ecd6e57ceb3f37332fefe8f1">stride_y</a> + z * tensor-&gt;<a class="code" href="struct_tensor3_d.xhtml#ad5ff7a2b2bd0eec50fe09c254b127d1c">stride_z</a>;</div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;}</div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;<span class="comment">/** Get the pointer position of a Tensor4D</span></div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;<span class="comment"> * @param[in] tensor Pointer to the starting position of the buffer</span></div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;<span class="comment"> * @param[in] x      Relative X position</span></div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;<span class="comment"> * @param[in] y      Relative Y position</span></div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;<span class="comment"> * @param[in] z      Relative Z position</span></div><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;<span class="comment"> * @param[in] w      Relative W position</span></div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00535"></a><span class="lineno"><a class="line" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#ad442fb5ec8be1fff97f543150de5d822">  535</a></span>&#160;<span class="keyword">inline</span> __global <span class="keyword">const</span> uchar *<a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#ad442fb5ec8be1fff97f543150de5d822">tensor4D_offset</a>(<span class="keyword">const</span> <a class="code" href="struct_tensor4_d.xhtml">Tensor4D</a> *tensor, <span class="keywordtype">int</span> x, <span class="keywordtype">int</span> y, <span class="keywordtype">int</span> z, <span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1a367830ae09bf6138df822888ec1d71">w</a>)</div><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;{</div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;    <span class="keywordflow">return</span> tensor-&gt;<a class="code" href="struct_tensor4_d.xhtml#acf52c23cbd7424606c10a606524e3e32">ptr</a> + x * tensor-&gt;<a class="code" href="struct_tensor4_d.xhtml#ae01febbfd0689ef709f3ff6fdd2abc7e">stride_x</a> + y * tensor-&gt;<a class="code" href="struct_tensor4_d.xhtml#a4f0b90c9ecd6e57ceb3f37332fefe8f1">stride_y</a> + z * tensor-&gt;<a class="code" href="struct_tensor4_d.xhtml#ad5ff7a2b2bd0eec50fe09c254b127d1c">stride_z</a> + <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1a367830ae09bf6138df822888ec1d71">w</a> * tensor-&gt;<a class="code" href="struct_tensor4_d.xhtml#a13a60f6e75f64f1953b8858ea454a880">stride_w</a>;</div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;}</div><div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;</div><div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;<span class="preprocessor">#endif // _HELPER_H</span></div><div class="ttc" id="struct_vector_xhtml"><div class="ttname"><a href="struct_vector.xhtml">Vector</a></div><div class="ttdoc">Structure to hold Vector information.</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l00341">helpers.h:341</a></div></div>
<div class="ttc" id="src_2core_2_c_l_2cl__kernels_2_helpers_8h_xhtml_a009469e4d9b8fce3b6d5e97d2077827d"><div class="ttname"><a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a></div><div class="ttdeci">__global uchar * offset(const Image *img, int x, int y)</div><div class="ttdoc">Get the pointer position of a Image.</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l00510">helpers.h:510</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a1a367830ae09bf6138df822888ec1d71"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a1a367830ae09bf6138df822888ec1d71">arm_compute::test::validation::w</a></div><div class="ttdeci">SimpleTensor&lt; float &gt; w</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00156">DFT.cpp:156</a></div></div>
<div class="ttc" id="src_2core_2_c_l_2cl__kernels_2_helpers_8h_xhtml_a0a4395130f74a4293a7d3a19d8fac86d"><div class="ttname"><a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a0a4395130f74a4293a7d3a19d8fac86d">update_image_workitem_ptr</a></div><div class="ttdeci">Image update_image_workitem_ptr(__global uchar *ptr, uint offset_first_element_in_bytes, uint stride_x, uint step_x, uint stride_y, uint step_y)</div><div class="ttdoc">Wrap image information into an Image structure, and make the pointer point at this workitem's data.</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l00410">helpers.h:410</a></div></div>
<div class="ttc" id="src_2core_2_c_l_2cl__kernels_2_helpers_8h_xhtml_a912ccbcc4235bf1274c95d05b50440d4"><div class="ttname"><a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a912ccbcc4235bf1274c95d05b50440d4">update_tensor3D_workitem_ptr</a></div><div class="ttdeci">Tensor3D update_tensor3D_workitem_ptr(__global uchar *ptr, uint offset_first_element_in_bytes, uint stride_x, uint step_x, uint stride_y, uint step_y, uint stride_z, uint step_z)</div><div class="ttdoc">Wrap 3D tensor information into an tensor structure, and make the pointer point at this workitem's da...</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l00462">helpers.h:462</a></div></div>
<div class="ttc" id="struct_tensor4_d_xhtml_acf52c23cbd7424606c10a606524e3e32"><div class="ttname"><a href="struct_tensor4_d.xhtml#acf52c23cbd7424606c10a606524e3e32">Tensor4D::ptr</a></div><div class="ttdeci">__global uchar * ptr</div><div class="ttdoc">Pointer to the starting postion of the buffer.</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l00370">helpers.h:370</a></div></div>
<div class="ttc" id="struct_tensor3_d_xhtml_ad5ff7a2b2bd0eec50fe09c254b127d1c"><div class="ttname"><a href="struct_tensor3_d.xhtml#ad5ff7a2b2bd0eec50fe09c254b127d1c">Tensor3D::stride_z</a></div><div class="ttdeci">int stride_z</div><div class="ttdoc">Stride of the image in Z dimension (in bytes)</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l00364">helpers.h:364</a></div></div>
<div class="ttc" id="src_2core_2_c_l_2cl__kernels_2_helpers_8h_xhtml_a9082e6aa9fd1705dc218cf44bc5a9d66"><div class="ttname"><a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a9082e6aa9fd1705dc218cf44bc5a9d66">Image</a></div><div class="ttdeci">struct Image Image</div><div class="ttdoc">Structure to hold Image information.</div></div>
<div class="ttc" id="src_2core_2_c_l_2cl__kernels_2_helpers_8h_xhtml_a1a857bfe99727c6051e9a3ee285d70f6"><div class="ttname"><a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a1a857bfe99727c6051e9a3ee285d70f6">Tensor3D</a></div><div class="ttdeci">struct Tensor3D Tensor3D</div><div class="ttdoc">Structure to hold 3D tensor information.</div></div>
<div class="ttc" id="struct_tensor3_d_xhtml_ae01febbfd0689ef709f3ff6fdd2abc7e"><div class="ttname"><a href="struct_tensor3_d.xhtml#ae01febbfd0689ef709f3ff6fdd2abc7e">Tensor3D::stride_x</a></div><div class="ttdeci">int stride_x</div><div class="ttdoc">Stride of the image in X dimension (in bytes)</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l00362">helpers.h:362</a></div></div>
<div class="ttc" id="src_2core_2_c_l_2cl__kernels_2_helpers_8h_xhtml_a3b8a88f73e80a621aecfe7ced12c1676"><div class="ttname"><a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a3b8a88f73e80a621aecfe7ced12c1676">Tensor4D</a></div><div class="ttdeci">struct Tensor4D Tensor4D</div><div class="ttdoc">Structure to hold 4D tensor information.</div></div>
<div class="ttc" id="struct_image_xhtml_a35e5a91338398273f3b4a6010004bddd"><div class="ttname"><a href="struct_image.xhtml#a35e5a91338398273f3b4a6010004bddd">Image::offset_first_element_in_bytes</a></div><div class="ttdeci">int offset_first_element_in_bytes</div><div class="ttdoc">The offset of the first element in the source image.</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l00352">helpers.h:352</a></div></div>
<div class="ttc" id="struct_tensor3_d_xhtml"><div class="ttname"><a href="struct_tensor3_d.xhtml">Tensor3D</a></div><div class="ttdoc">Structure to hold 3D tensor information.</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l00358">helpers.h:358</a></div></div>
<div class="ttc" id="struct_tensor4_d_xhtml"><div class="ttname"><a href="struct_tensor4_d.xhtml">Tensor4D</a></div><div class="ttdoc">Structure to hold 4D tensor information.</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l00368">helpers.h:368</a></div></div>
<div class="ttc" id="struct_tensor4_d_xhtml_a13a60f6e75f64f1953b8858ea454a880"><div class="ttname"><a href="struct_tensor4_d.xhtml#a13a60f6e75f64f1953b8858ea454a880">Tensor4D::stride_w</a></div><div class="ttdeci">int stride_w</div><div class="ttdoc">Stride of the image in W dimension (in bytes)</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l00375">helpers.h:375</a></div></div>
<div class="ttc" id="src_2core_2_c_l_2cl__kernels_2_helpers_8h_xhtml_ad442fb5ec8be1fff97f543150de5d822"><div class="ttname"><a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#ad442fb5ec8be1fff97f543150de5d822">tensor4D_offset</a></div><div class="ttdeci">__global const uchar * tensor4D_offset(const Tensor4D *tensor, int x, int y, int z, int w)</div><div class="ttdoc">Get the pointer position of a Tensor4D.</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l00535">helpers.h:535</a></div></div>
<div class="ttc" id="struct_vector_xhtml_ae01febbfd0689ef709f3ff6fdd2abc7e"><div class="ttname"><a href="struct_vector.xhtml#ae01febbfd0689ef709f3ff6fdd2abc7e">Vector::stride_x</a></div><div class="ttdeci">int stride_x</div><div class="ttdoc">Stride of the image in X dimension (in bytes)</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l00345">helpers.h:345</a></div></div>
<div class="ttc" id="struct_vector_xhtml_acf52c23cbd7424606c10a606524e3e32"><div class="ttname"><a href="struct_vector.xhtml#acf52c23cbd7424606c10a606524e3e32">Vector::ptr</a></div><div class="ttdeci">__global uchar * ptr</div><div class="ttdoc">Pointer to the starting postion of the buffer.</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l00343">helpers.h:343</a></div></div>
<div class="ttc" id="src_2core_2_c_l_2cl__kernels_2_helpers_8h_xhtml_a65fd24237c8278ecb38183f93cc70f05"><div class="ttname"><a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a65fd24237c8278ecb38183f93cc70f05">update_image_from_tensor3D_workitem_ptr</a></div><div class="ttdeci">Image update_image_from_tensor3D_workitem_ptr(__global uchar *ptr, uint offset_first_element_in_bytes, uint stride_x, uint step_x, uint stride_y, uint step_y, uint stride_z, uint step_z)</div><div class="ttdoc">Wrap 3D tensor information into an image structure, and make the pointer point at this workitem's dat...</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l00436">helpers.h:436</a></div></div>
<div class="ttc" id="struct_tensor4_d_xhtml_a4f0b90c9ecd6e57ceb3f37332fefe8f1"><div class="ttname"><a href="struct_tensor4_d.xhtml#a4f0b90c9ecd6e57ceb3f37332fefe8f1">Tensor4D::stride_y</a></div><div class="ttdeci">int stride_y</div><div class="ttdoc">Stride of the image in Y dimension (in bytes)</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l00373">helpers.h:373</a></div></div>
<div class="ttc" id="struct_image_xhtml"><div class="ttname"><a href="struct_image.xhtml">Image</a></div><div class="ttdoc">Structure to hold Image information.</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l00349">helpers.h:349</a></div></div>
<div class="ttc" id="struct_vector_xhtml_a35e5a91338398273f3b4a6010004bddd"><div class="ttname"><a href="struct_vector.xhtml#a35e5a91338398273f3b4a6010004bddd">Vector::offset_first_element_in_bytes</a></div><div class="ttdeci">int offset_first_element_in_bytes</div><div class="ttdoc">The offset of the first element in the source image.</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l00344">helpers.h:344</a></div></div>
<div class="ttc" id="struct_tensor4_d_xhtml_a35e5a91338398273f3b4a6010004bddd"><div class="ttname"><a href="struct_tensor4_d.xhtml#a35e5a91338398273f3b4a6010004bddd">Tensor4D::offset_first_element_in_bytes</a></div><div class="ttdeci">int offset_first_element_in_bytes</div><div class="ttdoc">The offset of the first element in the source image.</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l00371">helpers.h:371</a></div></div>
<div class="ttc" id="struct_image_xhtml_acf52c23cbd7424606c10a606524e3e32"><div class="ttname"><a href="struct_image.xhtml#acf52c23cbd7424606c10a606524e3e32">Image::ptr</a></div><div class="ttdeci">__global uchar * ptr</div><div class="ttdoc">Pointer to the starting postion of the buffer.</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l00351">helpers.h:351</a></div></div>
<div class="ttc" id="src_2core_2_c_l_2cl__kernels_2_helpers_8h_xhtml_a7e4940407322d6f0ccb8b6b86b856019"><div class="ttname"><a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a7e4940407322d6f0ccb8b6b86b856019">vector_offset</a></div><div class="ttdeci">__global const uchar * vector_offset(const Vector *vec, int x)</div><div class="ttdoc">Get the pointer position of a Vector.</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l00499">helpers.h:499</a></div></div>
<div class="ttc" id="src_2core_2_c_l_2cl__kernels_2_helpers_8h_xhtml_a6ded2cf071c127e518317e3c451af3ef"><div class="ttname"><a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a6ded2cf071c127e518317e3c451af3ef">Vector</a></div><div class="ttdeci">struct Vector Vector</div><div class="ttdoc">Structure to hold Vector information.</div></div>
<div class="ttc" id="src_2core_2_c_l_2cl__kernels_2_helpers_8h_xhtml_a8fee90913ba658b25516a43cf71e5cbd"><div class="ttname"><a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a8fee90913ba658b25516a43cf71e5cbd">update_vector_workitem_ptr</a></div><div class="ttdeci">Vector update_vector_workitem_ptr(__global uchar *ptr, uint offset_first_element_in_bytes, uint stride_x, uint step_x)</div><div class="ttdoc">Wrap vector information into an Vector structure, and make the pointer point at this workitem's data.</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l00387">helpers.h:387</a></div></div>
<div class="ttc" id="struct_tensor3_d_xhtml_acf52c23cbd7424606c10a606524e3e32"><div class="ttname"><a href="struct_tensor3_d.xhtml#acf52c23cbd7424606c10a606524e3e32">Tensor3D::ptr</a></div><div class="ttdeci">__global uchar * ptr</div><div class="ttdoc">Pointer to the starting postion of the buffer.</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l00360">helpers.h:360</a></div></div>
<div class="ttc" id="struct_tensor4_d_xhtml_ae01febbfd0689ef709f3ff6fdd2abc7e"><div class="ttname"><a href="struct_tensor4_d.xhtml#ae01febbfd0689ef709f3ff6fdd2abc7e">Tensor4D::stride_x</a></div><div class="ttdeci">int stride_x</div><div class="ttdoc">Stride of the image in X dimension (in bytes)</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l00372">helpers.h:372</a></div></div>
<div class="ttc" id="struct_tensor3_d_xhtml_a4f0b90c9ecd6e57ceb3f37332fefe8f1"><div class="ttname"><a href="struct_tensor3_d.xhtml#a4f0b90c9ecd6e57ceb3f37332fefe8f1">Tensor3D::stride_y</a></div><div class="ttdeci">int stride_y</div><div class="ttdoc">Stride of the image in Y dimension (in bytes)</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l00363">helpers.h:363</a></div></div>
<div class="ttc" id="struct_tensor4_d_xhtml_ad5ff7a2b2bd0eec50fe09c254b127d1c"><div class="ttname"><a href="struct_tensor4_d.xhtml#ad5ff7a2b2bd0eec50fe09c254b127d1c">Tensor4D::stride_z</a></div><div class="ttdeci">int stride_z</div><div class="ttdoc">Stride of the image in Z dimension (in bytes)</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l00374">helpers.h:374</a></div></div>
<div class="ttc" id="struct_tensor3_d_xhtml_a35e5a91338398273f3b4a6010004bddd"><div class="ttname"><a href="struct_tensor3_d.xhtml#a35e5a91338398273f3b4a6010004bddd">Tensor3D::offset_first_element_in_bytes</a></div><div class="ttdeci">int offset_first_element_in_bytes</div><div class="ttdoc">The offset of the first element in the source image.</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l00361">helpers.h:361</a></div></div>
<div class="ttc" id="src_2core_2_c_l_2cl__kernels_2_helpers_8h_xhtml_a87a9d201ccc6b81332852d562bb7ee13"><div class="ttname"><a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a87a9d201ccc6b81332852d562bb7ee13">update_tensor4D_workitem_ptr</a></div><div class="ttdeci">Tensor4D update_tensor4D_workitem_ptr(__global uchar *ptr, uint offset_first_element_in_bytes, uint stride_x, uint step_x, uint stride_y, uint step_y, uint stride_z, uint step_z, uint stride_w, uint step_w, uint mod_size)</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l00476">helpers.h:476</a></div></div>
<div class="ttc" id="struct_image_xhtml_a4f0b90c9ecd6e57ceb3f37332fefe8f1"><div class="ttname"><a href="struct_image.xhtml#a4f0b90c9ecd6e57ceb3f37332fefe8f1">Image::stride_y</a></div><div class="ttdeci">int stride_y</div><div class="ttdoc">Stride of the image in Y dimension (in bytes)</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l00354">helpers.h:354</a></div></div>
<div class="ttc" id="src_2core_2_c_l_2cl__kernels_2_helpers_8h_xhtml_a2101b2fe0193ce227ae4e0945e321d85"><div class="ttname"><a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a2101b2fe0193ce227ae4e0945e321d85">tensor3D_offset</a></div><div class="ttdeci">__global const uchar * tensor3D_offset(const Tensor3D *tensor, int x, int y, int z)</div><div class="ttdoc">Get the pointer position of a Tensor3D.</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l00522">helpers.h:522</a></div></div>
<div class="ttc" id="struct_image_xhtml_ae01febbfd0689ef709f3ff6fdd2abc7e"><div class="ttname"><a href="struct_image.xhtml#ae01febbfd0689ef709f3ff6fdd2abc7e">Image::stride_x</a></div><div class="ttdeci">int stride_x</div><div class="ttdoc">Stride of the image in X dimension (in bytes)</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l00353">helpers.h:353</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_aebb8dcc11953d78e620bbef0b9e2183.xhtml">core</a></li><li class="navelem"><a class="el" href="dir_8c278f79c760e5c5fbd911f9870614c1.xhtml">CL</a></li><li class="navelem"><a class="el" href="dir_25885286e9dad4fa105b7b25a8031bbf.xhtml">cl_kernels</a></li><li class="navelem"><a class="el" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml">helpers.h</a></li>
    <li class="footer">Generated on Thu Mar 5 2020 16:06:54 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
