<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/runtime/CL/functions/CLGEMMLowpMatrixMultiplyCore.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_c_l_g_e_m_m_lowp_matrix_multiply_core_8cpp_source.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">CLGEMMLowpMatrixMultiplyCore.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_c_l_g_e_m_m_lowp_matrix_multiply_core_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2017-2020 ARM Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_c_l_g_e_m_m_lowp_matrix_multiply_core_8h.xhtml">arm_compute/runtime/CL/functions/CLGEMMLowpMatrixMultiplyCore.h</a>&quot;</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_i_c_l_tensor_8h.xhtml">arm_compute/core/CL/ICLTensor.h</a>&quot;</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_c_l_g_e_m_m_native_kernel_configuration_8h.xhtml">arm_compute/core/CL/gemm/native/CLGEMMNativeKernelConfiguration.h</a>&quot;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_c_l_g_e_m_m_reshaped_only_r_h_s_kernel_configuration_8h.xhtml">arm_compute/core/CL/gemm/reshaped_only_rhs/CLGEMMReshapedOnlyRHSKernelConfiguration.h</a>&quot;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_error_8h.xhtml">arm_compute/core/Error.h</a>&quot;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2core_2_helpers_8h.xhtml">arm_compute/core/Helpers.h</a>&quot;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_tensor_info_8h.xhtml">arm_compute/core/TensorInfo.h</a>&quot;</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2core_2_types_8h.xhtml">arm_compute/core/Types.h</a>&quot;</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_validate_8h.xhtml">arm_compute/core/Validate.h</a>&quot;</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_shape_calculator_8h.xhtml">arm_compute/core/utils/misc/ShapeCalculator.h</a>&quot;</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_asymm_helpers_8h.xhtml">arm_compute/core/utils/quantization/AsymmHelpers.h</a>&quot;</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_c_l_scheduler_8h.xhtml">arm_compute/runtime/CL/CLScheduler.h</a>&quot;</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;{</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keyword">using namespace </span><a class="code" href="namespacearm__compute_1_1misc_1_1shape__calculator.xhtml">arm_compute::misc::shape_calculator</a>;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="keyword">using namespace </span><a class="code" href="namespacearm__compute_1_1cl__gemm.xhtml">arm_compute::cl_gemm</a>;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="keyword">namespace</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;{</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="keyword">inline</span> <span class="keywordtype">bool</span> is_gemm_reshaped(<span class="keywordtype">bool</span> reshape_b_only_on_first_run, <a class="code" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3">GPUTarget</a> gpu_target)</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;{</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <span class="keywordflow">return</span> (<a class="code" href="namespacearm__compute.xhtml#a2355c2bf5d1950088937416baea24fe6">get_arch_from_target</a>(gpu_target) != <a class="code" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3afa362f4daec88442a387ff7cda411a38">GPUTarget::MIDGARD</a>) &amp;&amp; (reshape_b_only_on_first_run);</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;}</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;} <span class="comment">// namespace</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div><div class="line"><a name="l00051"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_g_e_m_m_lowp_matrix_multiply_core.xhtml#a1c3a177d5a3188691c9946e1a78839d0">   51</a></span>&#160;<a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_lowp_matrix_multiply_core.xhtml#a1c3a177d5a3188691c9946e1a78839d0">CLGEMMLowpMatrixMultiplyCore::CLGEMMLowpMatrixMultiplyCore</a>(std::shared_ptr&lt;IMemoryManager&gt; memory_manager)</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    : _memory_group(std::move(memory_manager)),</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;      _weights_to_qasymm8(),</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;      _mm_midgard_kernel(),</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;      _mm_native_kernel(),</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;      _mm_reshaped_only_rhs_kernel(),</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;      _mtx_b_reshape_kernel(),</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;      _mtx_a_reduction_kernel(),</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;      _mtx_b_reduction_kernel(),</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;      _offset_contribution_kernel(),</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;      _offset_contribution_output_stage_kernel(),</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;      _qasymm8_weights(),</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;      _vector_sum_col(),</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;      _vector_sum_row(),</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;      _tmp_b(),</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;      _mm_result_s32(),</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;      _gemm_output_stage_multipliers(),</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;      _gemm_output_stage_shifts(),</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;      _matrix_a(nullptr),</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;      _original_b(nullptr),</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;      _output(nullptr),</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;      _a_offset(0),</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;      _b_offset(0),</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;      _is_gemm_reshaped(true),</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;      _is_midgard(false),</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;      _reshape_b_only_on_first_run(false),</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;      _is_prepared(false),</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;      _fuse_output_stage(false),</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;      _convert_to_qasymm8(false)</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;{</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;}</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div><div class="line"><a name="l00083"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_g_e_m_m_lowp_matrix_multiply_core.xhtml#a0ae54876c8c3394f2e207f6b884f2b58">   83</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_lowp_matrix_multiply_core.xhtml#a0ae54876c8c3394f2e207f6b884f2b58">CLGEMMLowpMatrixMultiplyCore::configure</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *a, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *c, <a class="code" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *output, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_g_e_m_m_info.xhtml">GEMMInfo</a> &amp;gemm_info)</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;{</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <a class="code" href="_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a>(a, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>, output);</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <a class="code" href="_error_8h.xhtml#a938dcd406ce611ef5345ad2531cdb948">ARM_COMPUTE_ERROR_THROW_ON</a>(<a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_lowp_matrix_multiply_core.xhtml#a8c3cf2d65afb288e39909171ada19566">CLGEMMLowpMatrixMultiplyCore::validate</a>(a-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>(), <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>-&gt;info(), c != <span class="keyword">nullptr</span> ? c-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>() : <span class="keyword">nullptr</span>, output-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>(), gemm_info));</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    _is_prepared                 = <span class="keyword">false</span>;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    _original_b                  = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    _reshape_b_only_on_first_run = gemm_info.<a class="code" href="classarm__compute_1_1_g_e_m_m_info.xhtml#a4c8f9fa843de1086c27c86a6b8cf4582">reshape_b_only_on_first_run</a>();</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    _a_offset                    = a-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a3f3e1a3200223e6a304a533b1016e749">quantization_info</a>().<a class="code" href="classarm__compute_1_1_quantization_info.xhtml#a706fc156bcd4c45441bcaad05884b57d">uniform</a>().<a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml#a97bd6c077f3c7769f575b82988b9b668">offset</a>;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    _matrix_a                    = a;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    _output                      = output;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    _convert_to_qasymm8 = <a class="code" href="namespacearm__compute.xhtml#a84437d80241f6a31e1a07c231ee8e3ac">is_data_type_quantized_per_channel</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>-&gt;info()-&gt;data_type()) &amp;&amp; <a class="code" href="namespacearm__compute.xhtml#a922cd85c475c0d725fc030116ea57979">is_data_type_quantized_symmetric</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>-&gt;info()-&gt;data_type())</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;                          &amp;&amp; <a class="code" href="namespacearm__compute.xhtml#a14f46283f316e7f0fad301d5c1507e9f">is_data_type_quantized_asymmetric</a>(a-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">data_type</a>());</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    _b_offset = _convert_to_qasymm8 ? -128 : <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>-&gt;info()-&gt;quantization_info().uniform().offset;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <span class="comment">// Get the GPU target</span></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <span class="keyword">const</span> <a class="code" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3">GPUTarget</a> gpu_target = <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a27561688e2fc60176608ef725a4ecb30">target</a>();</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <span class="comment">// Set the target for the kernels</span></div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    _mm_midgard_kernel.<a class="code" href="classarm__compute_1_1_i_c_l_kernel.xhtml#ad5ba9d34a3a855bf1dd2e36316ff550a">set_target</a>(gpu_target);</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    _mm_native_kernel.<a class="code" href="classarm__compute_1_1_i_c_l_kernel.xhtml#ad5ba9d34a3a855bf1dd2e36316ff550a">set_target</a>(gpu_target);</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    _mm_reshaped_only_rhs_kernel.<a class="code" href="classarm__compute_1_1_i_c_l_kernel.xhtml#ad5ba9d34a3a855bf1dd2e36316ff550a">set_target</a>(gpu_target);</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <a class="code" href="structarm__compute_1_1_g_e_m_m_r_h_s_matrix_info.xhtml">GEMMRHSMatrixInfo</a> rhs_info;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <a class="code" href="structarm__compute_1_1_g_e_m_m_l_h_s_matrix_info.xhtml">GEMMLHSMatrixInfo</a> lhs_info;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    <span class="comment">// Arguments used by GEMMReshapeInfo</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    <span class="comment">// If we pass the matrix A and matrix B reshaped to CLGEMMMatrixMultiplyKernel, we need to pass m, n, k, mult_transpose1xW_width and mult_interleave4x4_height to CLGEMMReshapeInfo</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    <span class="comment">// in order to know how the matrices have been reshaped</span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <span class="keywordtype">bool</span>               reinterpret_input_as_3d = gemm_info.<a class="code" href="classarm__compute_1_1_g_e_m_m_info.xhtml#a00330b8913cac3b07029ac0c3350e806">reinterpret_input_as_3d</a>();</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> m                       = reinterpret_input_as_3d ? (a-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(1) * a-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(2)) : a-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(1);</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> n                       = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>-&gt;info()-&gt;dimension(0);</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> k                       = a-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(0);</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> batch_size              = reinterpret_input_as_3d ? a-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(3) : a-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(2);</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span>          depth_output_gemm3d     = gemm_info.<a class="code" href="classarm__compute_1_1_g_e_m_m_info.xhtml#abbd888f118c2209bf7578eb4f8942a07">depth_output_gemm3d</a>();</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <span class="comment">// Check if we need to reshape the matrix A and matrix B</span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    _is_gemm_reshaped = is_gemm_reshaped(_reshape_b_only_on_first_run, gpu_target);</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    _is_midgard       = gpu_target == <a class="code" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3afa362f4daec88442a387ff7cda411a38">GPUTarget::MIDGARD</a>;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    <span class="keywordflow">if</span>(_convert_to_qasymm8)</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    {</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;        <span class="comment">// Set data type for converted weights</span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;        <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7cb842ebfe255726066039853a4322f0">weights_info</a>(*<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>-&gt;info());</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7cb842ebfe255726066039853a4322f0">weights_info</a>.set_data_type(<a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">DataType::QASYMM8</a>);</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;        _qasymm8_weights.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_allocator.xhtml#af36143939a43fa124312e395975091ed">init</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7cb842ebfe255726066039853a4322f0">weights_info</a>);</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;        _weights_to_qasymm8.<a class="code" href="classarm__compute_1_1_c_l_depth_convert_layer_kernel.xhtml#a536f0de1a70ea80d40b0a24657ac5290">configure</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>, &amp;_qasymm8_weights, <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fae1c8555fcf0ea2bb648a6fd527d658c0">ConvertPolicy::WRAP</a>, 0);</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    }</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *matrix_b = _convert_to_qasymm8 ? &amp;_qasymm8_weights : <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>;</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <span class="keywordflow">if</span>(_is_gemm_reshaped)</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    {</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        matrix_b = &amp;_tmp_b;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;        <span class="keywordflow">if</span>(!_reshape_b_only_on_first_run)</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;        {</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;            _memory_group.<a class="code" href="classarm__compute_1_1_memory_group.xhtml#a6fc0a49304c152c20a0f6df0634fb3cd">manage</a>(&amp;_tmp_b);</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;        }</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;        <span class="comment">// Pick up the GEMM configuration</span></div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;        std::tie(lhs_info, rhs_info) = <a class="code" href="classarm__compute_1_1cl__gemm_1_1_c_l_g_e_m_m_reshaped_only_r_h_s_kernel_configuration_factory.xhtml#ab2b50810acd1c74616ee97dee3cbdb6b">CLGEMMReshapedOnlyRHSKernelConfigurationFactory::create</a>(gpu_target)-&gt;configure(m, n, k, batch_size, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">DataType::QASYMM8</a>);</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;        <span class="comment">// Configure reshape RHS kernel</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;        _mtx_b_reshape_kernel.<a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_reshape_r_h_s_matrix_kernel.xhtml#aa0b0eaffc9a83e1a6495d957b63bbccc">configure</a>(_convert_to_qasymm8 ? &amp;_qasymm8_weights : <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>, &amp;_tmp_b, rhs_info);</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    }</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    <span class="comment">// Initialize matrix B reduction kernel only if _a_offset is not equal to 0</span></div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    <span class="keywordflow">if</span>(_a_offset != 0)</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    {</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;        <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> info_vector_sum_col(<a class="code" href="namespacearm__compute_1_1misc_1_1shape__calculator.xhtml#a60ce6c017f70d978b48b101ce314969e">compute_reductionA_shape</a>(*<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>-&gt;info()), 1, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58aa1e28eee0339658d39a8b4d325b56e9c">DataType::S32</a>);</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;        _vector_sum_col.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_allocator.xhtml#af36143939a43fa124312e395975091ed">init</a>(info_vector_sum_col);</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;        <span class="keywordflow">if</span>(!_reshape_b_only_on_first_run)</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;        {</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;            _memory_group.<a class="code" href="classarm__compute_1_1_memory_group.xhtml#a6fc0a49304c152c20a0f6df0634fb3cd">manage</a>(&amp;_vector_sum_col);</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;        }</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;        <span class="comment">// Configure Matrix B reduction kernel</span></div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;        _mtx_b_reduction_kernel.<a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_lowp_matrix_b_reduction_kernel.xhtml#aa526095c6ddce38f2ef22d45e18e2fe2">configure</a>(_convert_to_qasymm8 ? &amp;_qasymm8_weights : <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>, &amp;_vector_sum_col);</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    }</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    <span class="comment">// Initialize Matrix A reduction kernel only if _b_offset is not equal to 0</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    <span class="keywordflow">if</span>(_b_offset != 0)</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    {</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;        <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> info_vector_sum_row(<a class="code" href="namespacearm__compute_1_1misc_1_1shape__calculator.xhtml#a69f9b3191aafc4905f9d029ff9d48fea">compute_reductionB_shape</a>(*a-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()), 1, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58aa1e28eee0339658d39a8b4d325b56e9c">DataType::S32</a>);</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;        _vector_sum_row.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_allocator.xhtml#af36143939a43fa124312e395975091ed">init</a>(info_vector_sum_row);</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;        _memory_group.<a class="code" href="classarm__compute_1_1_memory_group.xhtml#a6fc0a49304c152c20a0f6df0634fb3cd">manage</a>(&amp;_vector_sum_row);</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;        <span class="comment">// Configure matrix A reduction kernel</span></div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;        _mtx_a_reduction_kernel.<a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_lowp_matrix_a_reduction_kernel.xhtml#a613f25e524dbabbff55ea9d7df53c7f6">configure</a>(a, &amp;_vector_sum_row);</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    }</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    <span class="comment">// If GEMMLowpOutputStage != NONE, fuse the offset contribution with the output stage</span></div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    <span class="keywordflow">if</span>(gemm_info.<a class="code" href="classarm__compute_1_1_g_e_m_m_info.xhtml#a11d8f855e323a8396fe6944edcef4238">gemmlowp_output_stage</a>().<a class="code" href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml#a6e019ad85979fd73c74f97e5483faf35">type</a> != <a class="code" href="namespacearm__compute.xhtml#a5558e2cc22f7f4771653d992c8ad8864ab50339a10e1de285ac99d4c3990b8693">GEMMLowpOutputStageType::NONE</a>)</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    {</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;        _fuse_output_stage = <span class="keyword">true</span>;</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;        _memory_group.<a class="code" href="classarm__compute_1_1_memory_group.xhtml#a6fc0a49304c152c20a0f6df0634fb3cd">manage</a>(&amp;_mm_result_s32);</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;        <span class="keywordflow">if</span>(_is_gemm_reshaped)</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;        {</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;            <span class="comment">// Configure and tune matrix multiply kernel</span></div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;            _mm_reshaped_only_rhs_kernel.<a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_lowp_matrix_multiply_reshaped_only_r_h_s_kernel.xhtml#aa7967bee001197b8642e30d4efaa96cc">configure</a>(_matrix_a, matrix_b, &amp;_mm_result_s32, lhs_info, rhs_info, <a class="code" href="classarm__compute_1_1_g_e_m_m_reshape_info.xhtml">GEMMReshapeInfo</a>(m, n, k, 1, 1, depth_output_gemm3d, reinterpret_input_as_3d));</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;        }</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;        <span class="keywordflow">else</span></div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;        {</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;            <span class="keywordflow">if</span>(_is_midgard)</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;            {</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;                <span class="comment">// Configure matrix multiply kernel</span></div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;                _mm_midgard_kernel.<a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_lowp_matrix_multiply_kernel.xhtml#a8aa57bd9c0703378b82393e8f440e9c8">configure</a>(_matrix_a, matrix_b, &amp;_mm_result_s32, <a class="code" href="classarm__compute_1_1_g_e_m_m_reshape_info.xhtml">GEMMReshapeInfo</a>(m, n, k, 1, 1, depth_output_gemm3d, reinterpret_input_as_3d));</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;            }</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;            <span class="keywordflow">else</span></div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;            {</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;                <span class="comment">// Pick up the GEMM configuration</span></div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;                std::tie(lhs_info, rhs_info) = <a class="code" href="classarm__compute_1_1cl__gemm_1_1_c_l_g_e_m_m_native_kernel_configuration_factory.xhtml#ab2b50810acd1c74616ee97dee3cbdb6b">CLGEMMNativeKernelConfigurationFactory::create</a>(gpu_target)-&gt;configure(m, n, k, batch_size, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">DataType::QASYMM8</a>);</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;                <span class="comment">// Configure matrix multiply kernel</span></div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;                _mm_native_kernel.<a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_lowp_matrix_multiply_native_kernel.xhtml#aa7967bee001197b8642e30d4efaa96cc">configure</a>(_matrix_a, matrix_b, &amp;_mm_result_s32, lhs_info, rhs_info, <a class="code" href="classarm__compute_1_1_g_e_m_m_reshape_info.xhtml">GEMMReshapeInfo</a>(m, n, k, 1, 1, depth_output_gemm3d, reinterpret_input_as_3d));</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;            }</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;        }</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;        <span class="comment">// Configure offset contribution kernel</span></div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">size_t</span> num_filters = (gemm_info.<a class="code" href="classarm__compute_1_1_g_e_m_m_info.xhtml#a11d8f855e323a8396fe6944edcef4238">gemmlowp_output_stage</a>().<a class="code" href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml#a94e1801be6c3d9d6645c694d7e280cda">is_quantized_per_channel</a>) ? gemm_info.<a class="code" href="classarm__compute_1_1_g_e_m_m_info.xhtml#a11d8f855e323a8396fe6944edcef4238">gemmlowp_output_stage</a>().<a class="code" href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml#ae5bd6bebbc0c7ebd9e7dbfd47d939c2a">gemmlowp_multipliers</a>.size() : 1;</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;        _gemm_output_stage_multipliers.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_allocator.xhtml#af36143939a43fa124312e395975091ed">init</a>(<a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(num_filters), 1, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58aa1e28eee0339658d39a8b4d325b56e9c">DataType::S32</a>));</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;        _gemm_output_stage_shifts.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_allocator.xhtml#af36143939a43fa124312e395975091ed">init</a>(<a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(num_filters), 1, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58aa1e28eee0339658d39a8b4d325b56e9c">DataType::S32</a>));</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;        <a class="code" href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml">GEMMLowpOutputStageInfo</a> gemmlowp_output_stage = gemm_info.<a class="code" href="classarm__compute_1_1_g_e_m_m_info.xhtml#a11d8f855e323a8396fe6944edcef4238">gemmlowp_output_stage</a>();</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;        gemmlowp_output_stage.<a class="code" href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml#ab233758aca2751c6e71a2f79baf7b92a">output_data_type</a>        = _matrix_a-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">data_type</a>();</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;        _offset_contribution_output_stage_kernel.<a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_lowp_offset_contribution_output_stage_kernel.xhtml#ac727ebddb913babf19047a6444b89fba">configure</a>(&amp;_mm_result_s32, _a_offset == 0 ? <span class="keyword">nullptr</span> : &amp;_vector_sum_col, _b_offset == 0 ? <span class="keyword">nullptr</span> : &amp;_vector_sum_row, c, output, a-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(0),</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;                                                           _a_offset, _b_offset, gemmlowp_output_stage, &amp;_gemm_output_stage_multipliers, &amp;_gemm_output_stage_shifts);</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;        _gemm_output_stage_multipliers.allocator()-&gt;allocate();</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;        _gemm_output_stage_shifts.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_c_l_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;        <span class="comment">// Compute GEMM output multipliers and shifts for output stage</span></div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;        _gemm_output_stage_multipliers.map();</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;        _gemm_output_stage_shifts.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a14c53d2d17be6fa8a2c9861527c7b002">map</a>();</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;        std::memcpy(_gemm_output_stage_multipliers.ptr_to_element(<a class="code" href="classarm__compute_1_1_coordinates.xhtml">Coordinates</a>(0)), gemm_info.<a class="code" href="classarm__compute_1_1_g_e_m_m_info.xhtml#a11d8f855e323a8396fe6944edcef4238">gemmlowp_output_stage</a>().<a class="code" href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml#ae5bd6bebbc0c7ebd9e7dbfd47d939c2a">gemmlowp_multipliers</a>.data(), num_filters * <span class="keyword">sizeof</span>(int32_t));</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;        std::memcpy(_gemm_output_stage_shifts.<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#adbd73147d41e8a640bc299d12613c31e">ptr_to_element</a>(<a class="code" href="classarm__compute_1_1_coordinates.xhtml">Coordinates</a>(0)), gemm_info.<a class="code" href="classarm__compute_1_1_g_e_m_m_info.xhtml#a11d8f855e323a8396fe6944edcef4238">gemmlowp_output_stage</a>().<a class="code" href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml#ab269b182588a158cd256f9d4bb2a00dd">gemmlowp_shifts</a>.data(), num_filters * <span class="keyword">sizeof</span>(int32_t));</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;        _gemm_output_stage_multipliers.unmap();</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;        _gemm_output_stage_shifts.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a1ffeb3b5abb3d61f62b58a391816201c">unmap</a>();</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;        _mm_result_s32.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_c_l_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;    }</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;    {</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;        <span class="keywordflow">if</span>(_is_gemm_reshaped)</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;        {</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;            <span class="comment">// Configure and tune matrix multiply kernel</span></div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;            _mm_reshaped_only_rhs_kernel.<a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_lowp_matrix_multiply_reshaped_only_r_h_s_kernel.xhtml#aa7967bee001197b8642e30d4efaa96cc">configure</a>(_matrix_a, matrix_b, output, lhs_info, rhs_info, <a class="code" href="classarm__compute_1_1_g_e_m_m_reshape_info.xhtml">GEMMReshapeInfo</a>(m, n, k, 1, 1, depth_output_gemm3d, reinterpret_input_as_3d));</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;        }</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;        <span class="keywordflow">else</span></div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;        {</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;            <span class="keywordflow">if</span>(_is_midgard)</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;            {</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;                <span class="comment">// Configure matrix multiply kernel</span></div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;                _mm_midgard_kernel.<a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_lowp_matrix_multiply_kernel.xhtml#a8aa57bd9c0703378b82393e8f440e9c8">configure</a>(_matrix_a, matrix_b, output, <a class="code" href="classarm__compute_1_1_g_e_m_m_reshape_info.xhtml">GEMMReshapeInfo</a>(m, n, k, 1, 1, depth_output_gemm3d, reinterpret_input_as_3d));</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;            }</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;            <span class="keywordflow">else</span></div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;            {</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;                <span class="comment">// Pick up the GEMM configuration</span></div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;                std::tie(lhs_info, rhs_info) = <a class="code" href="classarm__compute_1_1cl__gemm_1_1_c_l_g_e_m_m_native_kernel_configuration_factory.xhtml#ab2b50810acd1c74616ee97dee3cbdb6b">CLGEMMNativeKernelConfigurationFactory::create</a>(gpu_target)-&gt;configure(m, n, k, batch_size, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">DataType::QASYMM8</a>);</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;                <span class="comment">// Configure matrix multiply kernel</span></div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;                _mm_native_kernel.<a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_lowp_matrix_multiply_native_kernel.xhtml#aa7967bee001197b8642e30d4efaa96cc">configure</a>(_matrix_a, matrix_b, output, lhs_info, rhs_info, <a class="code" href="classarm__compute_1_1_g_e_m_m_reshape_info.xhtml">GEMMReshapeInfo</a>(m, n, k, 1, 1, depth_output_gemm3d, reinterpret_input_as_3d));</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;            }</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;        }</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;        <span class="comment">// Configure offset contribution kernel</span></div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;        _offset_contribution_kernel.<a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_lowp_offset_contribution_kernel.xhtml#a094cc43211df267051139e766f002d77">configure</a>(output, _a_offset == 0 ? <span class="keyword">nullptr</span> : &amp;_vector_sum_col, _b_offset == 0 ? <span class="keyword">nullptr</span> : &amp;_vector_sum_row, c, a-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(0), _a_offset, _b_offset);</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;    }</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;    <span class="comment">// Allocate tensors</span></div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    <span class="keywordflow">if</span>(_is_gemm_reshaped)</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;    {</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;        <span class="keywordflow">if</span>(!_reshape_b_only_on_first_run)</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;        {</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;            _tmp_b.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_c_l_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;        }</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;    }</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;    <span class="keywordflow">if</span>(_a_offset != 0 &amp;&amp; !_reshape_b_only_on_first_run)</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;    {</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;        _vector_sum_col.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_c_l_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;    }</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;    <span class="keywordflow">if</span>(_b_offset != 0)</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;    {</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;        _vector_sum_row.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_c_l_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;    }</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;}</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;</div><div class="line"><a name="l00274"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_g_e_m_m_lowp_matrix_multiply_core.xhtml#a8c3cf2d65afb288e39909171ada19566">  274</a></span>&#160;<a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> <a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_lowp_matrix_multiply_core.xhtml#a8c3cf2d65afb288e39909171ada19566">CLGEMMLowpMatrixMultiplyCore::validate</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *a, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *c, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *output, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_g_e_m_m_info.xhtml">GEMMInfo</a> &amp;gemm_info)</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;{</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;    <a class="code" href="_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a>(a, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>, output);</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;    <a class="code" href="_validate_8h.xhtml#ae7eed178dac535c6e727061b1f5bc6eb">ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN</a>(a, 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">DataType::QASYMM8</a>, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a329f5d0c4b0c80e3474951d2c4435dd9">DataType::QASYMM8_SIGNED</a>);</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;    <span class="comment">//DataType::QSYMM8_PER_CHANNEL supported only for weights</span></div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;    <span class="keywordflow">if</span>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>-&gt;data_type() != <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a34f500e941c4df30b870126ec868ebd5">DataType::QSYMM8_PER_CHANNEL</a>)</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;    {</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;        <a class="code" href="_validate_8h.xhtml#a8f3ff7da485ff7e75dab07baadf5b4bd">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES</a>(a, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>);</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;    }</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;    <a class="code" href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>(gemm_info.<a class="code" href="classarm__compute_1_1_g_e_m_m_info.xhtml#aa7e9584d7080ca6442cec62afaff6cad">is_a_reshaped</a>(), <span class="stringliteral">&quot;Matrix A already reshaped is not supported&quot;</span>);</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;    <a class="code" href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>(gemm_info.<a class="code" href="classarm__compute_1_1_g_e_m_m_info.xhtml#a77964edb8d16bb8ec14ddd8985e03cb0">is_b_reshaped</a>(), <span class="stringliteral">&quot;Matrix B already reshaped is not supported&quot;</span>);</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;    int32_t a_offset = a-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a3f3e1a3200223e6a304a533b1016e749">quantization_info</a>().<a class="code" href="classarm__compute_1_1_quantization_info.xhtml#a706fc156bcd4c45441bcaad05884b57d">uniform</a>().<a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml#a97bd6c077f3c7769f575b82988b9b668">offset</a>;</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;    int32_t b_offset = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>-&gt;quantization_info().uniform().offset;</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *matrix_a_info = a;</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>        tmp_b_info{};</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;    <a class="code" href="structarm__compute_1_1_g_e_m_m_r_h_s_matrix_info.xhtml">GEMMRHSMatrixInfo</a> rhs_info;</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;    <a class="code" href="structarm__compute_1_1_g_e_m_m_l_h_s_matrix_info.xhtml">GEMMLHSMatrixInfo</a> lhs_info;</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;    <span class="comment">// Get the GPU target</span></div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;    <span class="keyword">const</span> <a class="code" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3">GPUTarget</a> gpu_target = <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a27561688e2fc60176608ef725a4ecb30">target</a>();</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;    <span class="keywordtype">bool</span>               reinterpret_input_as_3d = gemm_info.<a class="code" href="classarm__compute_1_1_g_e_m_m_info.xhtml#a00330b8913cac3b07029ac0c3350e806">reinterpret_input_as_3d</a>();</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> m                       = reinterpret_input_as_3d ? (a-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(1) * a-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(2)) : a-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(1);</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> n                       = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>-&gt;dimension(0);</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> k                       = a-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(0);</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> batch_size              = reinterpret_input_as_3d ? a-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(3) : a-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(2);</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span>          depth_output_gemm3d     = gemm_info.<a class="code" href="classarm__compute_1_1_g_e_m_m_info.xhtml#abbd888f118c2209bf7578eb4f8942a07">depth_output_gemm3d</a>();</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">bool</span>         is_midgard              = gpu_target == <a class="code" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3afa362f4daec88442a387ff7cda411a38">GPUTarget::MIDGARD</a>;</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;    <span class="keywordtype">bool</span> reshape_matrix_b = is_gemm_reshaped(gemm_info.<a class="code" href="classarm__compute_1_1_g_e_m_m_info.xhtml#a4c8f9fa843de1086c27c86a6b8cf4582">reshape_b_only_on_first_run</a>(), <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a27561688e2fc60176608ef725a4ecb30">target</a>());</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_g_e_m_m_reshape_info.xhtml">GEMMReshapeInfo</a> reshape_info = <a class="code" href="classarm__compute_1_1_g_e_m_m_reshape_info.xhtml">GEMMReshapeInfo</a>(m, n, k, 1, 1, depth_output_gemm3d, reinterpret_input_as_3d);</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;    <span class="keywordtype">bool</span> convert_to_qasymm8 = <a class="code" href="namespacearm__compute.xhtml#a84437d80241f6a31e1a07c231ee8e3ac">is_data_type_quantized_per_channel</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>-&gt;data_type()) &amp;&amp; <a class="code" href="namespacearm__compute.xhtml#a922cd85c475c0d725fc030116ea57979">is_data_type_quantized_symmetric</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>-&gt;data_type())</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;                              &amp;&amp; <a class="code" href="namespacearm__compute.xhtml#a14f46283f316e7f0fad301d5c1507e9f">is_data_type_quantized_asymmetric</a>(a-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">data_type</a>());</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7cb842ebfe255726066039853a4322f0">weights_info</a>(*<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>);</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;    <span class="keywordflow">if</span>(convert_to_qasymm8)</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;    {</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;        b_offset = -128;</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;        <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7cb842ebfe255726066039853a4322f0">weights_info</a>.set_data_type(<a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">DataType::QASYMM8</a>);</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;        <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1_c_l_depth_convert_layer_kernel.xhtml#a31fdffa6cbd16d74f8c2da415e6f4912">CLDepthConvertLayerKernel::validate</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>, &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7cb842ebfe255726066039853a4322f0">weights_info</a>, <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fae1c8555fcf0ea2bb648a6fd527d658c0">ConvertPolicy::WRAP</a>, 0));</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;    }</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *matrix_b_info = &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7cb842ebfe255726066039853a4322f0">weights_info</a>;</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;    <span class="keywordflow">if</span>(reshape_matrix_b)</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;    {</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;        matrix_b_info = &amp;tmp_b_info;</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;        <span class="comment">// Pick up the GEMM configuration</span></div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;        std::tie(lhs_info, rhs_info) = <a class="code" href="classarm__compute_1_1cl__gemm_1_1_c_l_g_e_m_m_reshaped_only_r_h_s_kernel_configuration_factory.xhtml#ab2b50810acd1c74616ee97dee3cbdb6b">CLGEMMReshapedOnlyRHSKernelConfigurationFactory::create</a>(gpu_target)-&gt;configure(m, n, k, batch_size, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">DataType::QASYMM8</a>);</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;        <span class="comment">// Validate reshape RHS kernel</span></div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;        <a class="code" href="namespacearm__compute.xhtml#a47be6fa38308d0003c25b60b7dbc45ce">auto_init_if_empty</a>(tmp_b_info, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7cb842ebfe255726066039853a4322f0">weights_info</a>.clone()-&gt;set_tensor_shape(<a class="code" href="namespacearm__compute_1_1misc_1_1shape__calculator.xhtml#a09ad10a110d947fd9c444b2ea5e4c127">compute_rhs_reshaped_shape</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7cb842ebfe255726066039853a4322f0">weights_info</a>, rhs_info)));</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;        <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_reshape_r_h_s_matrix_kernel.xhtml#aca0da52b749b54d37ff996f4b28f6762">CLGEMMReshapeRHSMatrixKernel::validate</a>(&amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7cb842ebfe255726066039853a4322f0">weights_info</a>, &amp;tmp_b_info, rhs_info));</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;    }</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> info_vector_sum_col{};</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> info_vector_sum_row{};</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;    <span class="comment">// Validate matrix B reduction kernel only if _a_offset is not equal to 0</span></div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;    <span class="keywordflow">if</span>(a_offset != 0)</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;    {</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;        info_vector_sum_col = <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>(<a class="code" href="namespacearm__compute_1_1misc_1_1shape__calculator.xhtml#a60ce6c017f70d978b48b101ce314969e">compute_reductionA_shape</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7cb842ebfe255726066039853a4322f0">weights_info</a>), 1, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58aa1e28eee0339658d39a8b4d325b56e9c">DataType::S32</a>);</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;        <span class="comment">// Configure Matrix B reduction kernel</span></div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;        <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_lowp_matrix_b_reduction_kernel.xhtml#a21f628daa45675076fd25e46a052a53a">CLGEMMLowpMatrixBReductionKernel::validate</a>(&amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7cb842ebfe255726066039853a4322f0">weights_info</a>, &amp;info_vector_sum_col));</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;    }</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;    <span class="comment">// Validate Matrix A reduction kernel only if _b_offset is not equal to 0</span></div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;    <span class="keywordflow">if</span>(b_offset != 0)</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;    {</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;        info_vector_sum_row = <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>(<a class="code" href="namespacearm__compute_1_1misc_1_1shape__calculator.xhtml#a69f9b3191aafc4905f9d029ff9d48fea">compute_reductionB_shape</a>(*a), 1, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58aa1e28eee0339658d39a8b4d325b56e9c">DataType::S32</a>);</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;        <span class="comment">// Configure matrix A reduction kernel</span></div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;        <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_lowp_matrix_a_reduction_kernel.xhtml#a46e5929d20bb4cc0678590dfa251df9e">CLGEMMLowpMatrixAReductionKernel::validate</a>(a, &amp;info_vector_sum_row));</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;    }</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;    <span class="keywordflow">if</span>(gemm_info.<a class="code" href="classarm__compute_1_1_g_e_m_m_info.xhtml#a11d8f855e323a8396fe6944edcef4238">gemmlowp_output_stage</a>().<a class="code" href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml#a6e019ad85979fd73c74f97e5483faf35">type</a> != <a class="code" href="namespacearm__compute.xhtml#a5558e2cc22f7f4771653d992c8ad8864ab50339a10e1de285ac99d4c3990b8693">GEMMLowpOutputStageType::NONE</a>)</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;    {</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;        <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> mm_result_s32_info{};</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;        <span class="keywordflow">if</span>(reshape_matrix_b)</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;        {</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;            <span class="comment">// Output tensor auto inizialitation if not yet initialized</span></div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;            <a class="code" href="namespacearm__compute.xhtml#a47be6fa38308d0003c25b60b7dbc45ce">auto_init_if_empty</a>(mm_result_s32_info, a-&gt;<a class="code" href="classarm__compute_1_1misc_1_1_i_cloneable.xhtml#a4d10e5012a872e7f78f2b539b673049d">clone</a>()-&gt;set_tensor_shape(<a class="code" href="namespacearm__compute_1_1misc_1_1shape__calculator.xhtml#adca241b012a5e00ddfcdc5a8db05a2a3">compute_mm_shape</a>(*matrix_a_info, *matrix_b_info, reshape_info)).set_data_type(<a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58aa1e28eee0339658d39a8b4d325b56e9c">DataType::S32</a>));</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;            <span class="comment">// Validate matrix multiply</span></div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;            <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_lowp_matrix_multiply_reshaped_only_r_h_s_kernel.xhtml#a96f40eda5c40e254a6729e8bc0cb8195">CLGEMMLowpMatrixMultiplyReshapedOnlyRHSKernel::validate</a>(matrix_a_info, matrix_b_info, &amp;mm_result_s32_info, lhs_info, rhs_info, reshape_info));</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;        }</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;        <span class="keywordflow">else</span></div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;        {</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;            <span class="comment">// Output tensor auto inizialitation if not yet initialized</span></div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;            <a class="code" href="namespacearm__compute.xhtml#a47be6fa38308d0003c25b60b7dbc45ce">auto_init_if_empty</a>(mm_result_s32_info, a-&gt;<a class="code" href="classarm__compute_1_1misc_1_1_i_cloneable.xhtml#a4d10e5012a872e7f78f2b539b673049d">clone</a>()-&gt;set_tensor_shape(<a class="code" href="namespacearm__compute_1_1misc_1_1shape__calculator.xhtml#adca241b012a5e00ddfcdc5a8db05a2a3">compute_mm_shape</a>(*matrix_a_info, *matrix_b_info, <span class="keyword">false</span>, reshape_info)).set_data_type(<a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58aa1e28eee0339658d39a8b4d325b56e9c">DataType::S32</a>));</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;            <span class="keywordflow">if</span>(is_midgard)</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;            {</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;                <span class="comment">// Validate matrix multiply</span></div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;                <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_lowp_matrix_multiply_kernel.xhtml#a9c52840c4fadda388888e26f655de61d">CLGEMMLowpMatrixMultiplyKernel::validate</a>(matrix_a_info, matrix_b_info, &amp;mm_result_s32_info, reshape_info));</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;            }</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;            <span class="keywordflow">else</span></div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;            {</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;                <span class="comment">// Pick up the GEMM configuration</span></div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;                std::tie(lhs_info, rhs_info) = <a class="code" href="classarm__compute_1_1cl__gemm_1_1_c_l_g_e_m_m_native_kernel_configuration_factory.xhtml#ab2b50810acd1c74616ee97dee3cbdb6b">CLGEMMNativeKernelConfigurationFactory::create</a>(gpu_target)-&gt;configure(m, n, k, batch_size, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">DataType::QASYMM8</a>);</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;                <span class="comment">// Validate matrix multiply</span></div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;                <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_lowp_matrix_multiply_native_kernel.xhtml#a96f40eda5c40e254a6729e8bc0cb8195">CLGEMMLowpMatrixMultiplyNativeKernel::validate</a>(matrix_a_info, matrix_b_info, &amp;mm_result_s32_info, lhs_info, rhs_info, reshape_info));</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;            }</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;        }</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;        <span class="comment">// Validate offset contribution kernel</span></div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">size_t</span> num_filters = (gemm_info.<a class="code" href="classarm__compute_1_1_g_e_m_m_info.xhtml#a11d8f855e323a8396fe6944edcef4238">gemmlowp_output_stage</a>().<a class="code" href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml#a94e1801be6c3d9d6645c694d7e280cda">is_quantized_per_channel</a>) ? gemm_info.<a class="code" href="classarm__compute_1_1_g_e_m_m_info.xhtml#a11d8f855e323a8396fe6944edcef4238">gemmlowp_output_stage</a>().<a class="code" href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml#ae5bd6bebbc0c7ebd9e7dbfd47d939c2a">gemmlowp_multipliers</a>.size() : 1;</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> gemm_output_stage_multipliers_shifts_info(<a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(num_filters), 1, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58aa1e28eee0339658d39a8b4d325b56e9c">DataType::S32</a>));</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;        <a class="code" href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml">GEMMLowpOutputStageInfo</a> gemmlowp_output_stage = gemm_info.<a class="code" href="classarm__compute_1_1_g_e_m_m_info.xhtml#a11d8f855e323a8396fe6944edcef4238">gemmlowp_output_stage</a>();</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;        gemmlowp_output_stage.<a class="code" href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml#ab233758aca2751c6e71a2f79baf7b92a">output_data_type</a>        = a-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">data_type</a>();</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;        <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_lowp_offset_contribution_output_stage_kernel.xhtml#aad155f02e1a76694b771f82953c258c4">CLGEMMLowpOffsetContributionOutputStageKernel::validate</a>(&amp;mm_result_s32_info,</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;                                                                                            a_offset == 0 ? <span class="keyword">nullptr</span> : &amp;info_vector_sum_col,</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;                                                                                            b_offset == 0 ? <span class="keyword">nullptr</span> : &amp;info_vector_sum_row,</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;                                                                                            c,</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;                                                                                            output,</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;                                                                                            a_offset, b_offset,</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;                                                                                            gemmlowp_output_stage,</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;                                                                                            &amp;gemm_output_stage_multipliers_shifts_info,</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;                                                                                            &amp;gemm_output_stage_multipliers_shifts_info));</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;    }</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;    {</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;        <span class="keywordflow">if</span>(reshape_matrix_b)</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;        {</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;            <span class="comment">// Validate matrix multiply</span></div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;            <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_lowp_matrix_multiply_reshaped_only_r_h_s_kernel.xhtml#a96f40eda5c40e254a6729e8bc0cb8195">CLGEMMLowpMatrixMultiplyReshapedOnlyRHSKernel::validate</a>(matrix_a_info, matrix_b_info, output, lhs_info, rhs_info, reshape_info));</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;        }</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;        <span class="keywordflow">else</span></div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;        {</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;            <span class="keywordflow">if</span>(is_midgard)</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;            {</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;                <span class="comment">// Validate matrix multiply</span></div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;                <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_lowp_matrix_multiply_kernel.xhtml#a9c52840c4fadda388888e26f655de61d">CLGEMMLowpMatrixMultiplyKernel::validate</a>(matrix_a_info, matrix_b_info, output, reshape_info));</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;            }</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;            <span class="keywordflow">else</span></div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;            {</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;                <span class="comment">// Pick up the GEMM configuration</span></div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;                std::tie(lhs_info, rhs_info) = <a class="code" href="classarm__compute_1_1cl__gemm_1_1_c_l_g_e_m_m_native_kernel_configuration_factory.xhtml#ab2b50810acd1c74616ee97dee3cbdb6b">CLGEMMNativeKernelConfigurationFactory::create</a>(gpu_target)-&gt;configure(m, n, k, batch_size, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">DataType::QASYMM8</a>);</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;                <span class="comment">// Validate matrix multiply</span></div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;                <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_lowp_matrix_multiply_native_kernel.xhtml#a96f40eda5c40e254a6729e8bc0cb8195">CLGEMMLowpMatrixMultiplyNativeKernel::validate</a>(matrix_a_info, matrix_b_info, output, lhs_info, rhs_info, reshape_info));</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;            }</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;        }</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;        <span class="keywordflow">if</span>(output-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a18064e0011c3869d884653e9e7c47b66">total_size</a>() != 0)</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;        {</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;            <span class="comment">// Validate offset contribution kernel</span></div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;            <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_lowp_offset_contribution_kernel.xhtml#a0c8e9fe3b2d6411e9f75bfcfa8b8e7d2">CLGEMMLowpOffsetContributionKernel::validate</a>(output,</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;                                                                                     a_offset == 0 ? <span class="keyword">nullptr</span> : &amp;info_vector_sum_col,</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;                                                                                     b_offset == 0 ? <span class="keyword">nullptr</span> : &amp;info_vector_sum_row,</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;                                                                                     c,</div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;                                                                                     a_offset, b_offset));</div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;        }</div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;    }</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;</div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_status.xhtml">Status</a>{};</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;}</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;</div><div class="line"><a name="l00440"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_g_e_m_m_lowp_matrix_multiply_core.xhtml#ad1717410afd0be936c6213a63c8005fb">  440</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_lowp_matrix_multiply_core.xhtml#ad1717410afd0be936c6213a63c8005fb">CLGEMMLowpMatrixMultiplyCore::run</a>()</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;{</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_lowp_matrix_multiply_core.xhtml#aa9b93ef660fc3c5b4b19d3fc7b891b77">prepare</a>();</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;    <a class="code" href="classarm__compute_1_1_memory_group_resource_scope.xhtml">MemoryGroupResourceScope</a> scope_mg(_memory_group);</div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;    <span class="keywordflow">if</span>(_is_gemm_reshaped)</div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;    {</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;        <span class="keywordflow">if</span>(!_reshape_b_only_on_first_run)</div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;        {</div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;            <span class="comment">// Run reshape matrix B</span></div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;            <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#ae1a643e517f50bf0392fb6516dd7cf67">enqueue</a>(_mtx_b_reshape_kernel, <span class="keyword">false</span>);</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;        }</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;    }</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;</div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;    <span class="comment">// Run matrix B reduction kernel only if _a_offset is not equal to 0</span></div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;    <span class="keywordflow">if</span>(_a_offset != 0 &amp;&amp; !_reshape_b_only_on_first_run)</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;    {</div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;        <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#ae1a643e517f50bf0392fb6516dd7cf67">enqueue</a>(_mtx_b_reduction_kernel, <span class="keyword">false</span>);</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;    }</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;    <span class="comment">// Run matrix multiply</span></div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;    <span class="keywordflow">if</span>(_is_gemm_reshaped)</div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;    {</div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;        <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#ae1a643e517f50bf0392fb6516dd7cf67">enqueue</a>(_mm_reshaped_only_rhs_kernel, <span class="keyword">false</span>);</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;    }</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;    {</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;        <span class="keywordflow">if</span>(_is_midgard)</div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;        {</div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;            <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#ae1a643e517f50bf0392fb6516dd7cf67">enqueue</a>(_mm_midgard_kernel, <span class="keyword">false</span>);</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;        }</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;        <span class="keywordflow">else</span></div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;        {</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;            <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#ae1a643e517f50bf0392fb6516dd7cf67">enqueue</a>(_mm_native_kernel, <span class="keyword">false</span>);</div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;        }</div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;    }</div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;</div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;    <span class="comment">// Run matrix A reduction kernel only if _b_offset is not equal to 0</span></div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;    <span class="keywordflow">if</span>(_b_offset != 0)</div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;    {</div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;        <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#ae1a643e517f50bf0392fb6516dd7cf67">enqueue</a>(_mtx_a_reduction_kernel, <span class="keyword">false</span>);</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;    }</div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;</div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;    <span class="keywordflow">if</span>(_fuse_output_stage)</div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;    {</div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;        <span class="comment">// Run offset contribution/output stage kernel</span></div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;        <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#ae1a643e517f50bf0392fb6516dd7cf67">enqueue</a>(_offset_contribution_output_stage_kernel, <span class="keyword">true</span>);</div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;    }</div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;    {</div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;        <span class="comment">// Run offset contribution kernel</span></div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;        <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#ae1a643e517f50bf0392fb6516dd7cf67">enqueue</a>(_offset_contribution_kernel, <span class="keyword">true</span>);</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;    }</div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;}</div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;</div><div class="line"><a name="l00496"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_g_e_m_m_lowp_matrix_multiply_core.xhtml#aa9b93ef660fc3c5b4b19d3fc7b891b77">  496</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_lowp_matrix_multiply_core.xhtml#aa9b93ef660fc3c5b4b19d3fc7b891b77">CLGEMMLowpMatrixMultiplyCore::prepare</a>()</div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;{</div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;    <span class="keywordflow">if</span>(!_is_prepared)</div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;    {</div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;        <span class="keywordflow">if</span>(_convert_to_qasymm8)</div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;        {</div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;            _qasymm8_weights.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_c_l_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;            <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#ae1a643e517f50bf0392fb6516dd7cf67">enqueue</a>(_weights_to_qasymm8, <span class="keyword">false</span>);</div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;        }</div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;</div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;        <span class="keywordflow">if</span>(_is_gemm_reshaped &amp;&amp; _reshape_b_only_on_first_run)</div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;        {</div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;            <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(!_original_b-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a209ea2ddfdfa80703799c92da8beb643">is_used</a>());</div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;</div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;            <span class="comment">// Run reshape kernel and mark original weights tensor as unused</span></div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;            _tmp_b.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_c_l_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;            <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#ae1a643e517f50bf0392fb6516dd7cf67">enqueue</a>(_mtx_b_reshape_kernel, <span class="keyword">false</span>);</div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;            _original_b-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a9bc00234de9adf8c99a21eb1d7d494c2">mark_as_unused</a>();</div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;        }</div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;</div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;        <span class="comment">// Run matrix B reduction kernel only if _a_offset is not equal to 0</span></div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;        <span class="keywordflow">if</span>(_a_offset != 0 &amp;&amp; _reshape_b_only_on_first_run)</div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;        {</div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;            _vector_sum_col.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_c_l_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;            <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#ae1a643e517f50bf0392fb6516dd7cf67">enqueue</a>(_mtx_b_reduction_kernel, <span class="keyword">false</span>);</div><div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;        }</div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;</div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;        <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a398a2582c746d28fc125487a44c9ed74">queue</a>().finish();</div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;        _is_prepared = <span class="keyword">true</span>;</div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;    }</div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;}</div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;} <span class="comment">// namespace arm_compute</span></div><div class="ttc" id="classarm__compute_1_1_i_tensor_xhtml_adbd73147d41e8a640bc299d12613c31e"><div class="ttname"><a href="classarm__compute_1_1_i_tensor.xhtml#adbd73147d41e8a640bc299d12613c31e">arm_compute::ITensor::ptr_to_element</a></div><div class="ttdeci">uint8_t * ptr_to_element(const Coordinates &amp;id) const</div><div class="ttdoc">Return a pointer to the element at the passed coordinates.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_8h_source.xhtml#l00063">ITensor.h:63</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_shape_xhtml"><div class="ttname"><a href="classarm__compute_1_1_tensor_shape.xhtml">arm_compute::TensorShape</a></div><div class="ttdoc">Shape of a tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_shape_8h_source.xhtml#l00039">TensorShape.h:39</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_g_e_m_m_lowp_offset_contribution_kernel_xhtml_a094cc43211df267051139e766f002d77"><div class="ttname"><a href="classarm__compute_1_1_c_l_g_e_m_m_lowp_offset_contribution_kernel.xhtml#a094cc43211df267051139e766f002d77">arm_compute::CLGEMMLowpOffsetContributionKernel::configure</a></div><div class="ttdeci">void configure(ICLTensor *mm_result, const ICLTensor *vector_sum_col, const ICLTensor *vector_sum_row, const ICLTensor *bias, int32_t k, int32_t a_offset, int32_t b_offset)</div><div class="ttdoc">Initialise the kernel's input and output.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_g_e_m_m_lowp_offset_contribution_kernel_8cpp_source.xhtml#l00145">CLGEMMLowpOffsetContributionKernel.cpp:145</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_g_e_m_m_lowp_matrix_multiply_core_xhtml_aa9b93ef660fc3c5b4b19d3fc7b891b77"><div class="ttname"><a href="classarm__compute_1_1_c_l_g_e_m_m_lowp_matrix_multiply_core.xhtml#aa9b93ef660fc3c5b4b19d3fc7b891b77">arm_compute::CLGEMMLowpMatrixMultiplyCore::prepare</a></div><div class="ttdeci">void prepare() override</div><div class="ttdoc">Prepare the function for executing.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_g_e_m_m_lowp_matrix_multiply_core_8cpp_source.xhtml#l00496">CLGEMMLowpMatrixMultiplyCore.cpp:496</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_a178f0d3d87f959e00a743328d95359d2"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">arm_compute::ITensorInfo::dimension</a></div><div class="ttdeci">virtual size_t dimension(size_t index) const =0</div><div class="ttdoc">Return the size of the requested dimension.</div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_g_e_m_m_lowp_offset_contribution_kernel_xhtml_a0c8e9fe3b2d6411e9f75bfcfa8b8e7d2"><div class="ttname"><a href="classarm__compute_1_1_c_l_g_e_m_m_lowp_offset_contribution_kernel.xhtml#a0c8e9fe3b2d6411e9f75bfcfa8b8e7d2">arm_compute::CLGEMMLowpOffsetContributionKernel::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *mm_result, const ITensorInfo *vector_sum_col, const ITensorInfo *vector_sum_row, const ITensorInfo *bias, int32_t a_offset, int32_t b_offset)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration of CLGEMMLowpOffsetContribu...</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_g_e_m_m_lowp_offset_contribution_kernel_8cpp_source.xhtml#l00205">CLGEMMLowpOffsetContributionKernel.cpp:205</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_depth_convert_layer_kernel_xhtml_a31fdffa6cbd16d74f8c2da415e6f4912"><div class="ttname"><a href="classarm__compute_1_1_c_l_depth_convert_layer_kernel.xhtml#a31fdffa6cbd16d74f8c2da415e6f4912">arm_compute::CLDepthConvertLayerKernel::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *input, const ITensorInfo *output, ConvertPolicy policy, uint32_t shift)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration of CLDepthConvertLayerKerne...</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_depth_convert_layer_kernel_8cpp_source.xhtml#l00130">CLDepthConvertLayerKernel.cpp:130</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_aa76b4a6e74940dabc5b7fc6b2dab3545"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">arm_compute::test::validation::b</a></div><div class="ttdeci">SimpleTensor&lt; float &gt; b</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00157">DFT.cpp:157</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_scheduler_xhtml_a9b58d0eb9a2af8e6d7908695e1557d6c"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">arm_compute::CLScheduler::get</a></div><div class="ttdeci">static CLScheduler &amp; get()</div><div class="ttdoc">Access the scheduler singleton.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00099">CLScheduler.cpp:99</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a7cb842ebfe255726066039853a4322f0"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a7cb842ebfe255726066039853a4322f0">arm_compute::test::validation::weights_info</a></div><div class="ttdeci">weights_info</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_batch_normalization_layer_8cpp_source.xhtml#l00196">BatchNormalizationLayer.cpp:196</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a5558e2cc22f7f4771653d992c8ad8864ab50339a10e1de285ac99d4c3990b8693"><div class="ttname"><a href="namespacearm__compute.xhtml#a5558e2cc22f7f4771653d992c8ad8864ab50339a10e1de285ac99d4c3990b8693">arm_compute::GEMMLowpOutputStageType::NONE</a></div><div class="ttdoc">No quantization.</div></div>
<div class="ttc" id="_validate_8h_xhtml_a8f3ff7da485ff7e75dab07baadf5b4bd"><div class="ttname"><a href="_validate_8h.xhtml#a8f3ff7da485ff7e75dab07baadf5b4bd">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES(...)</div><div class="ttdef"><b>Definition:</b> <a href="_validate_8h_source.xhtml#l00545">Validate.h:545</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_scheduler_xhtml_a27561688e2fc60176608ef725a4ecb30"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#a27561688e2fc60176608ef725a4ecb30">arm_compute::CLScheduler::target</a></div><div class="ttdeci">GPUTarget target() const</div><div class="ttdoc">Get the target GPU.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00047">CLScheduler.cpp:47</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_e_m_m_reshape_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_g_e_m_m_reshape_info.xhtml">arm_compute::GEMMReshapeInfo</a></div><div class="ttdoc">GEMM reshape information class.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01823">Types.h:1823</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a8a1e1c105f0bdaf37db408c7cfcb77a4"><div class="ttname"><a href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ON_ERROR(status)</div><div class="ttdoc">Checks if a status contains an error and returns it.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00204">Error.h:204</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_a7cfb31af63202568efef5214acfbf3ba"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">arm_compute::ITensorInfo::data_type</a></div><div class="ttdeci">virtual DataType data_type() const =0</div><div class="ttdoc">Data type used for each element of the tensor.</div></div>
<div class="ttc" id="namespacearm__compute_1_1misc_1_1shape__calculator_xhtml_adca241b012a5e00ddfcdc5a8db05a2a3"><div class="ttname"><a href="namespacearm__compute_1_1misc_1_1shape__calculator.xhtml#adca241b012a5e00ddfcdc5a8db05a2a3">arm_compute::misc::shape_calculator::compute_mm_shape</a></div><div class="ttdeci">TensorShape compute_mm_shape(const ITensorInfo &amp;input0, const ITensorInfo &amp;input1, bool is_interleaved_transposed, const GEMMReshapeInfo &amp;reshape_info)</div><div class="ttdoc">Calculate the matrix multiplication output shape of two tensors.</div><div class="ttdef"><b>Definition:</b> <a href="_shape_calculator_8h_source.xhtml#l00858">ShapeCalculator.h:858</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_xhtml_a209ea2ddfdfa80703799c92da8beb643"><div class="ttname"><a href="classarm__compute_1_1_i_tensor.xhtml#a209ea2ddfdfa80703799c92da8beb643">arm_compute::ITensor::is_used</a></div><div class="ttdeci">bool is_used() const</div><div class="ttdoc">Flags if the tensor is used or not.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_8cpp_source.xhtml#l00162">ITensor.cpp:162</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_e_m_m_info_xhtml_a11d8f855e323a8396fe6944edcef4238"><div class="ttname"><a href="classarm__compute_1_1_g_e_m_m_info.xhtml#a11d8f855e323a8396fe6944edcef4238">arm_compute::GEMMInfo::gemmlowp_output_stage</a></div><div class="ttdeci">GEMMLowpOutputStageInfo gemmlowp_output_stage() const</div><div class="ttdoc">GEMMLowp output stage.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l02086">Types.h:2086</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1misc_1_1shape__calculator_xhtml_a60ce6c017f70d978b48b101ce314969e"><div class="ttname"><a href="namespacearm__compute_1_1misc_1_1shape__calculator.xhtml#a60ce6c017f70d978b48b101ce314969e">arm_compute::misc::shape_calculator::compute_reductionA_shape</a></div><div class="ttdeci">TensorShape compute_reductionA_shape(const ITensorInfo &amp;b)</div><div class="ttdoc">Calculate the reductionA shape used in GEMMLowp.</div><div class="ttdef"><b>Definition:</b> <a href="_shape_calculator_8h_source.xhtml#l00357">ShapeCalculator.h:357</a></div></div>
<div class="ttc" id="_validate_8h_xhtml_ae7eed178dac535c6e727061b1f5bc6eb"><div class="ttname"><a href="_validate_8h.xhtml#ae7eed178dac535c6e727061b1f5bc6eb">ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN(t, c,...)</div><div class="ttdef"><b>Definition:</b> <a href="_validate_8h_source.xhtml#l00792">Validate.h:792</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_g_e_m_m_lowp_offset_contribution_output_stage_kernel_xhtml_ac727ebddb913babf19047a6444b89fba"><div class="ttname"><a href="classarm__compute_1_1_c_l_g_e_m_m_lowp_offset_contribution_output_stage_kernel.xhtml#ac727ebddb913babf19047a6444b89fba">arm_compute::CLGEMMLowpOffsetContributionOutputStageKernel::configure</a></div><div class="ttdeci">void configure(const ICLTensor *mm_result, const ICLTensor *vector_sum_col, const ICLTensor *vector_sum_row, const ICLTensor *bias, ICLTensor *output, int32_t k, int32_t a_offset, int32_t b_offset, const GEMMLowpOutputStageInfo &amp;output_stage, const ICLTensor *output_multipliers, const ICLTensor *output_shifts)</div><div class="ttdoc">Initialise the kernel's input and output.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_g_e_m_m_lowp_offset_contribution_output_stage_kernel_8cpp_source.xhtml#l00196">CLGEMMLowpOffsetContributionOutputStageKernel.cpp:196</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1cl__gemm_xhtml"><div class="ttname"><a href="namespacearm__compute_1_1cl__gemm.xhtml">arm_compute::cl_gemm</a></div><div class="ttdef"><b>Definition:</b> <a href="_c_l_g_e_m_m_helpers_8h_source.xhtml#l00031">CLGEMMHelpers.h:31</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00466">Error.h:466</a></div></div>
<div class="ttc" id="structarm__compute_1_1_g_e_m_m_l_h_s_matrix_info_xhtml"><div class="ttname"><a href="structarm__compute_1_1_g_e_m_m_l_h_s_matrix_info.xhtml">arm_compute::GEMMLHSMatrixInfo</a></div><div class="ttdoc">GEMM LHS (Left Hand Side) matrix information.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01959">Types.h:1959</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml">arm_compute::ITensorInfo</a></div><div class="ttdoc">Store the tensor's metadata.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_info_8h_source.xhtml#l00040">ITensorInfo.h:40</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_g_e_m_m_lowp_matrix_a_reduction_kernel_xhtml_a46e5929d20bb4cc0678590dfa251df9e"><div class="ttname"><a href="classarm__compute_1_1_c_l_g_e_m_m_lowp_matrix_a_reduction_kernel.xhtml#a46e5929d20bb4cc0678590dfa251df9e">arm_compute::CLGEMMLowpMatrixAReductionKernel::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *mtx_a, const ITensorInfo *vector_sum_row)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration of CLGEMMLowpMatrixAReducti...</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_g_e_m_m_lowp_reduction_kernel_8cpp_source.xhtml#l00139">CLGEMMLowpReductionKernel.cpp:139</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_tensor_xhtml_a4083de30daebd6bdee6b35d9c8262108"><div class="ttname"><a href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">arm_compute::CLTensor::allocator</a></div><div class="ttdeci">CLTensorAllocator * allocator()</div><div class="ttdoc">Return a pointer to the tensor's allocator.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_tensor_8cpp_source.xhtml#l00061">CLTensor.cpp:61</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a938dcd406ce611ef5345ad2531cdb948"><div class="ttname"><a href="_error_8h.xhtml#a938dcd406ce611ef5345ad2531cdb948">ARM_COMPUTE_ERROR_THROW_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_THROW_ON(status)</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00455">Error.h:455</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_g_e_m_m_lowp_matrix_multiply_core_xhtml_a0ae54876c8c3394f2e207f6b884f2b58"><div class="ttname"><a href="classarm__compute_1_1_c_l_g_e_m_m_lowp_matrix_multiply_core.xhtml#a0ae54876c8c3394f2e207f6b884f2b58">arm_compute::CLGEMMLowpMatrixMultiplyCore::configure</a></div><div class="ttdeci">void configure(const ICLTensor *a, const ICLTensor *b, const ICLTensor *c, ICLTensor *output, const GEMMInfo &amp;gemm_info=GEMMInfo())</div><div class="ttdoc">Initialise the kernel's inputs, output.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_g_e_m_m_lowp_matrix_multiply_core_8cpp_source.xhtml#l00083">CLGEMMLowpMatrixMultiplyCore.cpp:83</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_e_m_m_info_xhtml_abbd888f118c2209bf7578eb4f8942a07"><div class="ttname"><a href="classarm__compute_1_1_g_e_m_m_info.xhtml#abbd888f118c2209bf7578eb4f8942a07">arm_compute::GEMMInfo::depth_output_gemm3d</a></div><div class="ttdeci">int depth_output_gemm3d() const</div><div class="ttdoc">Depth of the output when GEMM output is reinterpreted as 3D tensor.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l02062">Types.h:2062</a></div></div>
<div class="ttc" id="classarm__compute_1_1_status_xhtml"><div class="ttname"><a href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a></div><div class="ttdoc">Status class.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00052">Error.h:52</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a2355c2bf5d1950088937416baea24fe6"><div class="ttname"><a href="namespacearm__compute.xhtml#a2355c2bf5d1950088937416baea24fe6">arm_compute::get_arch_from_target</a></div><div class="ttdeci">GPUTarget get_arch_from_target(GPUTarget target)</div><div class="ttdoc">Helper function to get the GPU arch.</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_g_p_u_target_8cpp_source.xhtml#l00189">GPUTarget.cpp:189</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_g_e_m_m_lowp_matrix_multiply_core_xhtml_ad1717410afd0be936c6213a63c8005fb"><div class="ttname"><a href="classarm__compute_1_1_c_l_g_e_m_m_lowp_matrix_multiply_core.xhtml#ad1717410afd0be936c6213a63c8005fb">arm_compute::CLGEMMLowpMatrixMultiplyCore::run</a></div><div class="ttdeci">void run() override</div><div class="ttdoc">Run the kernels contained in the function.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_g_e_m_m_lowp_matrix_multiply_core_8cpp_source.xhtml#l00440">CLGEMMLowpMatrixMultiplyCore.cpp:440</a></div></div>
<div class="ttc" id="_tensor_info_8h_xhtml"><div class="ttname"><a href="_tensor_info_8h.xhtml">TensorInfo.h</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a922cd85c475c0d725fc030116ea57979"><div class="ttname"><a href="namespacearm__compute.xhtml#a922cd85c475c0d725fc030116ea57979">arm_compute::is_data_type_quantized_symmetric</a></div><div class="ttdeci">bool is_data_type_quantized_symmetric(DataType dt)</div><div class="ttdoc">Check if a given data type is of symmetric quantized type.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_utils_8h_source.xhtml#l01175">Utils.h:1175</a></div></div>
<div class="ttc" id="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info_xhtml_a6e019ad85979fd73c74f97e5483faf35"><div class="ttname"><a href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml#a6e019ad85979fd73c74f97e5483faf35">arm_compute::GEMMLowpOutputStageInfo::type</a></div><div class="ttdeci">GEMMLowpOutputStageType type</div><div class="ttdoc">GEMMLowp output stage type.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01946">Types.h:1946</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_allocator_xhtml_af36143939a43fa124312e395975091ed"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_allocator.xhtml#af36143939a43fa124312e395975091ed">arm_compute::ITensorAllocator::init</a></div><div class="ttdeci">void init(const TensorInfo &amp;input, size_t alignment=0)</div><div class="ttdoc">Initialize a tensor based on the passed TensorInfo.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_allocator_8cpp_source.xhtml#l00038">ITensorAllocator.cpp:38</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2020 ARM Limited.</div><div class="ttdef"><b>Definition:</b> <a href="00__introduction_8dox_source.xhtml#l00024">00_introduction.dox:24</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a47be6fa38308d0003c25b60b7dbc45ce"><div class="ttname"><a href="namespacearm__compute.xhtml#a47be6fa38308d0003c25b60b7dbc45ce">arm_compute::auto_init_if_empty</a></div><div class="ttdeci">bool auto_init_if_empty(ITensorInfo &amp;info, const TensorShape &amp;shape, int num_channels, DataType data_type, QuantizationInfo quantization_info=QuantizationInfo())</div><div class="ttdoc">Auto initialize the tensor info (shape, number of channels and data type) if the current assignment i...</div><div class="ttdef"><b>Definition:</b> <a href="_helpers_8inl_source.xhtml#l00202">Helpers.inl:202</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_e_m_m_info_xhtml_a77964edb8d16bb8ec14ddd8985e03cb0"><div class="ttname"><a href="classarm__compute_1_1_g_e_m_m_info.xhtml#a77964edb8d16bb8ec14ddd8985e03cb0">arm_compute::GEMMInfo::is_b_reshaped</a></div><div class="ttdeci">bool is_b_reshaped() const</div><div class="ttdoc">Flag which specifies if the matrix B has been reshaped.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l02044">Types.h:2044</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_tensor_xhtml_a14c53d2d17be6fa8a2c9861527c7b002"><div class="ttname"><a href="classarm__compute_1_1_c_l_tensor.xhtml#a14c53d2d17be6fa8a2c9861527c7b002">arm_compute::CLTensor::map</a></div><div class="ttdeci">void map(bool blocking=true)</div><div class="ttdoc">Enqueue a map operation of the allocated buffer.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_tensor_8cpp_source.xhtml#l00066">CLTensor.cpp:66</a></div></div>
<div class="ttc" id="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info_xhtml_a94e1801be6c3d9d6645c694d7e280cda"><div class="ttname"><a href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml#a94e1801be6c3d9d6645c694d7e280cda">arm_compute::GEMMLowpOutputStageInfo::is_quantized_per_channel</a></div><div class="ttdeci">bool is_quantized_per_channel</div><div class="ttdoc">GEMMLowp quantized per-channel flag.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01954">Types.h:1954</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_depth_convert_layer_kernel_xhtml_a536f0de1a70ea80d40b0a24657ac5290"><div class="ttname"><a href="classarm__compute_1_1_c_l_depth_convert_layer_kernel.xhtml#a536f0de1a70ea80d40b0a24657ac5290">arm_compute::CLDepthConvertLayerKernel::configure</a></div><div class="ttdeci">void configure(const ICLTensor *input, ICLTensor *output, ConvertPolicy policy, uint32_t shift)</div><div class="ttdoc">Set the input and output of the kernel.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_depth_convert_layer_kernel_8cpp_source.xhtml#l00074">CLDepthConvertLayerKernel.cpp:74</a></div></div>
<div class="ttc" id="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info_xhtml_ab269b182588a158cd256f9d4bb2a00dd"><div class="ttname"><a href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml#ab269b182588a158cd256f9d4bb2a00dd">arm_compute::GEMMLowpOutputStageInfo::gemmlowp_shifts</a></div><div class="ttdeci">std::vector&lt; int32_t &gt; gemmlowp_shifts</div><div class="ttdoc">GEMMLowp output stage multiplier used for quantizing to QASYMM8.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01953">Types.h:1953</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_xhtml_a9bc00234de9adf8c99a21eb1d7d494c2"><div class="ttname"><a href="classarm__compute_1_1_i_tensor.xhtml#a9bc00234de9adf8c99a21eb1d7d494c2">arm_compute::ITensor::mark_as_unused</a></div><div class="ttdeci">void mark_as_unused() const</div><div class="ttdoc">Marks a tensor as unused.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_8cpp_source.xhtml#l00167">ITensor.cpp:167</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58aa1e28eee0339658d39a8b4d325b56e9c"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58aa1e28eee0339658d39a8b4d325b56e9c">arm_compute::Format::S32</a></div><div class="ttdoc">1 channel, 1 S32 per channel</div></div>
<div class="ttc" id="classarm__compute_1_1_memory_group_xhtml_a6fc0a49304c152c20a0f6df0634fb3cd"><div class="ttname"><a href="classarm__compute_1_1_memory_group.xhtml#a6fc0a49304c152c20a0f6df0634fb3cd">arm_compute::MemoryGroup::manage</a></div><div class="ttdeci">void manage(IMemoryManageable *obj) override</div><div class="ttdoc">Sets a object to be managed by the given memory group.</div><div class="ttdef"><b>Definition:</b> <a href="_memory_group_8h_source.xhtml#l00079">MemoryGroup.h:79</a></div></div>
<div class="ttc" id="_c_l_scheduler_8h_xhtml"><div class="ttname"><a href="_c_l_scheduler_8h.xhtml">CLScheduler.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_g_e_m_m_lowp_offset_contribution_output_stage_kernel_xhtml_aad155f02e1a76694b771f82953c258c4"><div class="ttname"><a href="classarm__compute_1_1_c_l_g_e_m_m_lowp_offset_contribution_output_stage_kernel.xhtml#aad155f02e1a76694b771f82953c258c4">arm_compute::CLGEMMLowpOffsetContributionOutputStageKernel::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *mm_result, const ITensorInfo *vector_sum_col, const ITensorInfo *vector_sum_row, const ITensorInfo *bias, const ITensorInfo *output, int32_t a_offset, int32_t b_offset, const GEMMLowpOutputStageInfo &amp;output_stage, const ITensorInfo *output_multipliers, const ITensorInfo *output_shifts)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration of CLGEMMLowpOffsetContribu...</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_g_e_m_m_lowp_offset_contribution_output_stage_kernel_8cpp_source.xhtml#l00280">CLGEMMLowpOffsetContributionOutputStageKernel.cpp:280</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_g_e_m_m_lowp_matrix_multiply_core_xhtml_a8c3cf2d65afb288e39909171ada19566"><div class="ttname"><a href="classarm__compute_1_1_c_l_g_e_m_m_lowp_matrix_multiply_core.xhtml#a8c3cf2d65afb288e39909171ada19566">arm_compute::CLGEMMLowpMatrixMultiplyCore::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *a, const ITensorInfo *b, const ITensorInfo *c, const ITensorInfo *output, const GEMMInfo &amp;gemm_info=GEMMInfo())</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration of CLGEMMLowpMatrixMultiply...</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_g_e_m_m_lowp_matrix_multiply_core_8cpp_source.xhtml#l00274">CLGEMMLowpMatrixMultiplyCore.cpp:274</a></div></div>
<div class="ttc" id="classarm__compute_1_1cl__gemm_1_1_c_l_g_e_m_m_native_kernel_configuration_factory_xhtml_ab2b50810acd1c74616ee97dee3cbdb6b"><div class="ttname"><a href="classarm__compute_1_1cl__gemm_1_1_c_l_g_e_m_m_native_kernel_configuration_factory.xhtml#ab2b50810acd1c74616ee97dee3cbdb6b">arm_compute::cl_gemm::CLGEMMNativeKernelConfigurationFactory::create</a></div><div class="ttdeci">static std::unique_ptr&lt; ICLGEMMKernelConfiguration &gt; create(GPUTarget arch)</div><div class="ttdoc">Static method to construct CLGEMMNative kernel object accordingly with the GPU architecture.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_g_e_m_m_native_kernel_configuration_8h_source.xhtml#l00046">CLGEMMNativeKernelConfiguration.h:46</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a84437d80241f6a31e1a07c231ee8e3ac"><div class="ttname"><a href="namespacearm__compute.xhtml#a84437d80241f6a31e1a07c231ee8e3ac">arm_compute::is_data_type_quantized_per_channel</a></div><div class="ttdeci">bool is_data_type_quantized_per_channel(DataType dt)</div><div class="ttdoc">Check if a given data type is of per channel type.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_utils_8h_source.xhtml#l01194">Utils.h:1194</a></div></div>
<div class="ttc" id="structarm__compute_1_1_g_e_m_m_r_h_s_matrix_info_xhtml"><div class="ttname"><a href="structarm__compute_1_1_g_e_m_m_r_h_s_matrix_info.xhtml">arm_compute::GEMMRHSMatrixInfo</a></div><div class="ttdoc">GEMM RHS (Right Hand Side) matrix information.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01969">Types.h:1969</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_g_e_m_m_lowp_matrix_multiply_kernel_xhtml_a9c52840c4fadda388888e26f655de61d"><div class="ttname"><a href="classarm__compute_1_1_c_l_g_e_m_m_lowp_matrix_multiply_kernel.xhtml#a9c52840c4fadda388888e26f655de61d">arm_compute::CLGEMMLowpMatrixMultiplyKernel::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *input0, const ITensorInfo *input1, const ITensorInfo *output, const GEMMReshapeInfo &amp;gemm_info=GEMMReshapeInfo())</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration of CLGEMMLowpMatrixMultiply...</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_g_e_m_m_lowp_matrix_multiply_kernel_8cpp_source.xhtml#l00235">CLGEMMLowpMatrixMultiplyKernel.cpp:235</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">arm_compute::DataType::QASYMM8</a></div><div class="ttdoc">quantized, asymmetric fixed-point 8-bit number unsigned</div></div>
<div class="ttc" id="_c_l_g_e_m_m_native_kernel_configuration_8h_xhtml"><div class="ttname"><a href="_c_l_g_e_m_m_native_kernel_configuration_8h.xhtml">CLGEMMNativeKernelConfiguration.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_coordinates_xhtml"><div class="ttname"><a href="classarm__compute_1_1_coordinates.xhtml">arm_compute::Coordinates</a></div><div class="ttdoc">Coordinates of an item.</div><div class="ttdef"><b>Definition:</b> <a href="_coordinates_8h_source.xhtml#l00037">Coordinates.h:37</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_g_e_m_m_lowp_matrix_multiply_native_kernel_xhtml_aa7967bee001197b8642e30d4efaa96cc"><div class="ttname"><a href="classarm__compute_1_1_c_l_g_e_m_m_lowp_matrix_multiply_native_kernel.xhtml#aa7967bee001197b8642e30d4efaa96cc">arm_compute::CLGEMMLowpMatrixMultiplyNativeKernel::configure</a></div><div class="ttdeci">void configure(const ICLTensor *input0, const ICLTensor *input1, ICLTensor *output, const GEMMLHSMatrixInfo &amp;lhs_info, const GEMMRHSMatrixInfo &amp;rhs_info, const GEMMReshapeInfo &amp;gemm_info)</div><div class="ttdoc">Initialise the kernel's input and output.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_g_e_m_m_lowp_matrix_multiply_native_kernel_8cpp_source.xhtml#l00173">CLGEMMLowpMatrixMultiplyNativeKernel.cpp:173</a></div></div>
<div class="ttc" id="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info_xhtml_ae5bd6bebbc0c7ebd9e7dbfd47d939c2a"><div class="ttname"><a href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml#ae5bd6bebbc0c7ebd9e7dbfd47d939c2a">arm_compute::GEMMLowpOutputStageInfo::gemmlowp_multipliers</a></div><div class="ttdeci">std::vector&lt; int32_t &gt; gemmlowp_multipliers</div><div class="ttdoc">GEMMLowp output stage multiplier used for quantizing to QASYMM8.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01952">Types.h:1952</a></div></div>
<div class="ttc" id="classarm__compute_1_1_quantization_info_xhtml_a706fc156bcd4c45441bcaad05884b57d"><div class="ttname"><a href="classarm__compute_1_1_quantization_info.xhtml#a706fc156bcd4c45441bcaad05884b57d">arm_compute::QuantizationInfo::uniform</a></div><div class="ttdeci">UniformQuantizationInfo uniform() const</div><div class="ttdoc">Return per layer quantization info.</div><div class="ttdef"><b>Definition:</b> <a href="_quantization_info_8h_source.xhtml#l00148">QuantizationInfo.h:148</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_g_e_m_m_lowp_matrix_b_reduction_kernel_xhtml_aa526095c6ddce38f2ef22d45e18e2fe2"><div class="ttname"><a href="classarm__compute_1_1_c_l_g_e_m_m_lowp_matrix_b_reduction_kernel.xhtml#aa526095c6ddce38f2ef22d45e18e2fe2">arm_compute::CLGEMMLowpMatrixBReductionKernel::configure</a></div><div class="ttdeci">void configure(const ICLTensor *mtx_b, ICLTensor *vector_sum_col) override</div><div class="ttdoc">Initialise the kernel's input and output.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_g_e_m_m_lowp_reduction_kernel_8cpp_source.xhtml#l00171">CLGEMMLowpReductionKernel.cpp:171</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1misc_1_1shape__calculator_xhtml_a09ad10a110d947fd9c444b2ea5e4c127"><div class="ttname"><a href="namespacearm__compute_1_1misc_1_1shape__calculator.xhtml#a09ad10a110d947fd9c444b2ea5e4c127">arm_compute::misc::shape_calculator::compute_rhs_reshaped_shape</a></div><div class="ttdeci">TensorShape compute_rhs_reshaped_shape(const ITensorInfo &amp;a, const GEMMRHSMatrixInfo &amp;rhs_info)</div><div class="ttdoc">Calculate the Right Hand Side matrix reshaped shape.</div><div class="ttdef"><b>Definition:</b> <a href="_shape_calculator_8h_source.xhtml#l00224">ShapeCalculator.h:224</a></div></div>
<div class="ttc" id="_shape_calculator_8h_xhtml"><div class="ttname"><a href="_shape_calculator_8h.xhtml">ShapeCalculator.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1misc_1_1_i_cloneable_xhtml_a4d10e5012a872e7f78f2b539b673049d"><div class="ttname"><a href="classarm__compute_1_1misc_1_1_i_cloneable.xhtml#a4d10e5012a872e7f78f2b539b673049d">arm_compute::misc::ICloneable::clone</a></div><div class="ttdeci">virtual std::unique_ptr&lt; T &gt; clone() const =0</div><div class="ttdoc">Provide a clone of the current object of class T.</div></div>
<div class="ttc" id="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info_xhtml"><div class="ttname"><a href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml">arm_compute::GEMMLowpOutputStageInfo</a></div><div class="ttdoc">GEMMLowp output stage info.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01944">Types.h:1944</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_xhtml_a0e95dc1e53c361348314873b168ae237"><div class="ttname"><a href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">arm_compute::ITensor::info</a></div><div class="ttdeci">virtual ITensorInfo * info() const =0</div><div class="ttdoc">Interface to be implemented by the child class to return the tensor's metadata.</div></div>
<div class="ttc" id="_error_8h_xhtml"><div class="ttname"><a href="_error_8h.xhtml">Error.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_scheduler_xhtml_a398a2582c746d28fc125487a44c9ed74"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#a398a2582c746d28fc125487a44c9ed74">arm_compute::CLScheduler::queue</a></div><div class="ttdeci">cl::CommandQueue &amp; queue()</div><div class="ttdoc">Accessor for the associated CL command queue.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00041">CLScheduler.cpp:41</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_e_m_m_info_xhtml_a00330b8913cac3b07029ac0c3350e806"><div class="ttname"><a href="classarm__compute_1_1_g_e_m_m_info.xhtml#a00330b8913cac3b07029ac0c3350e806">arm_compute::GEMMInfo::reinterpret_input_as_3d</a></div><div class="ttdeci">bool reinterpret_input_as_3d() const</div><div class="ttdoc">Flag which specifies if the input tensor has to be reinterpreted as 3D.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l02070">Types.h:2070</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_a3f3e1a3200223e6a304a533b1016e749"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a3f3e1a3200223e6a304a533b1016e749">arm_compute::ITensorInfo::quantization_info</a></div><div class="ttdeci">virtual QuantizationInfo quantization_info() const =0</div><div class="ttdoc">Get the quantization settings (scale and offset) of the tensor.</div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_scheduler_xhtml_ae1a643e517f50bf0392fb6516dd7cf67"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#ae1a643e517f50bf0392fb6516dd7cf67">arm_compute::CLScheduler::enqueue</a></div><div class="ttdeci">void enqueue(ICLKernel &amp;kernel, bool flush=true)</div><div class="ttdoc">Schedule the execution of the passed kernel if possible.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00154">CLScheduler.cpp:154</a></div></div>
<div class="ttc" id="classarm__compute_1_1cl__gemm_1_1_c_l_g_e_m_m_reshaped_only_r_h_s_kernel_configuration_factory_xhtml_ab2b50810acd1c74616ee97dee3cbdb6b"><div class="ttname"><a href="classarm__compute_1_1cl__gemm_1_1_c_l_g_e_m_m_reshaped_only_r_h_s_kernel_configuration_factory.xhtml#ab2b50810acd1c74616ee97dee3cbdb6b">arm_compute::cl_gemm::CLGEMMReshapedOnlyRHSKernelConfigurationFactory::create</a></div><div class="ttdeci">static std::unique_ptr&lt; ICLGEMMKernelConfiguration &gt; create(GPUTarget arch)</div><div class="ttdoc">Static method to call the CLGEMMReshapedOnlyRHS kernel configuration class accordingly with the GPU a...</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_g_e_m_m_reshaped_only_r_h_s_kernel_configuration_8h_source.xhtml#l00046">CLGEMMReshapedOnlyRHSKernelConfiguration.h:46</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a14f46283f316e7f0fad301d5c1507e9f"><div class="ttname"><a href="namespacearm__compute.xhtml#a14f46283f316e7f0fad301d5c1507e9f">arm_compute::is_data_type_quantized_asymmetric</a></div><div class="ttdeci">bool is_data_type_quantized_asymmetric(DataType dt)</div><div class="ttdoc">Check if a given data type is of asymmetric quantized type.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_utils_8h_source.xhtml#l01139">Utils.h:1139</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_e_m_m_info_xhtml_aa7e9584d7080ca6442cec62afaff6cad"><div class="ttname"><a href="classarm__compute_1_1_g_e_m_m_info.xhtml#aa7e9584d7080ca6442cec62afaff6cad">arm_compute::GEMMInfo::is_a_reshaped</a></div><div class="ttdeci">bool is_a_reshaped() const</div><div class="ttdoc">Flag which specifies if the matrix A has been reshaped.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l02036">Types.h:2036</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_g_e_m_m_lowp_matrix_multiply_native_kernel_xhtml_a96f40eda5c40e254a6729e8bc0cb8195"><div class="ttname"><a href="classarm__compute_1_1_c_l_g_e_m_m_lowp_matrix_multiply_native_kernel.xhtml#a96f40eda5c40e254a6729e8bc0cb8195">arm_compute::CLGEMMLowpMatrixMultiplyNativeKernel::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *input0, const ITensorInfo *input1, const ITensorInfo *output, const GEMMLHSMatrixInfo &amp;lhs_info, const GEMMRHSMatrixInfo &amp;rhs_info, const GEMMReshapeInfo &amp;gemm_info)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration of CLGEMMLowpMatrixMultiply...</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_g_e_m_m_lowp_matrix_multiply_native_kernel_8cpp_source.xhtml#l00250">CLGEMMLowpMatrixMultiplyNativeKernel.cpp:250</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a34f500e941c4df30b870126ec868ebd5"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a34f500e941c4df30b870126ec868ebd5">arm_compute::DataType::QSYMM8_PER_CHANNEL</a></div><div class="ttdoc">quantized, symmetric per channel fixed-point 8-bit number</div></div>
<div class="ttc" id="namespacearm__compute_1_1misc_1_1shape__calculator_xhtml_a69f9b3191aafc4905f9d029ff9d48fea"><div class="ttname"><a href="namespacearm__compute_1_1misc_1_1shape__calculator.xhtml#a69f9b3191aafc4905f9d029ff9d48fea">arm_compute::misc::shape_calculator::compute_reductionB_shape</a></div><div class="ttdeci">TensorShape compute_reductionB_shape(const ITensorInfo &amp;a)</div><div class="ttdoc">Calculate the reductionB shape used in GEMMLowp.</div><div class="ttdef"><b>Definition:</b> <a href="_shape_calculator_8h_source.xhtml#l00374">ShapeCalculator.h:374</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_g_e_m_m_lowp_matrix_multiply_core_xhtml_a1c3a177d5a3188691c9946e1a78839d0"><div class="ttname"><a href="classarm__compute_1_1_c_l_g_e_m_m_lowp_matrix_multiply_core.xhtml#a1c3a177d5a3188691c9946e1a78839d0">arm_compute::CLGEMMLowpMatrixMultiplyCore::CLGEMMLowpMatrixMultiplyCore</a></div><div class="ttdeci">CLGEMMLowpMatrixMultiplyCore(std::shared_ptr&lt; IMemoryManager &gt; memory_manager=nullptr)</div><div class="ttdoc">Constructor.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_g_e_m_m_lowp_matrix_multiply_core_8cpp_source.xhtml#l00051">CLGEMMLowpMatrixMultiplyCore.cpp:51</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_tensor_allocator_xhtml_a6e509c2a177b0b29e9e2369535094dee"><div class="ttname"><a href="classarm__compute_1_1_c_l_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">arm_compute::CLTensorAllocator::allocate</a></div><div class="ttdeci">void allocate() override</div><div class="ttdoc">Allocate size specified by TensorInfo of OpenCL memory.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_tensor_allocator_8cpp_source.xhtml#l00127">CLTensorAllocator.cpp:127</a></div></div>
<div class="ttc" id="_c_l_g_e_m_m_lowp_matrix_multiply_core_8h_xhtml"><div class="ttname"><a href="_c_l_g_e_m_m_lowp_matrix_multiply_core_8h.xhtml">CLGEMMLowpMatrixMultiplyCore.h</a></div></div>
<div class="ttc" id="_validate_8h_xhtml_a921b705e9e3e0fe928928447869e62a5"><div class="ttname"><a href="_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_NULLPTR(...)</div><div class="ttdef"><b>Definition:</b> <a href="_validate_8h_source.xhtml#l00161">Validate.h:161</a></div></div>
<div class="ttc" id="classarm__compute_1_1_memory_group_resource_scope_xhtml"><div class="ttname"><a href="classarm__compute_1_1_memory_group_resource_scope.xhtml">arm_compute::MemoryGroupResourceScope</a></div><div class="ttdoc">Memory group resources scope handling class.</div><div class="ttdef"><b>Definition:</b> <a href="_i_memory_group_8h_source.xhtml#l00082">IMemoryGroup.h:82</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_c_l_tensor_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_c_l_tensor.xhtml">arm_compute::ICLTensor</a></div><div class="ttdoc">Interface for OpenCL tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_i_c_l_tensor_8h_source.xhtml#l00042">ICLTensor.h:42</a></div></div>
<div class="ttc" id="_i_c_l_tensor_8h_xhtml"><div class="ttname"><a href="_i_c_l_tensor_8h.xhtml">ICLTensor.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_a18064e0011c3869d884653e9e7c47b66"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a18064e0011c3869d884653e9e7c47b66">arm_compute::ITensorInfo::total_size</a></div><div class="ttdeci">virtual size_t total_size() const =0</div><div class="ttdoc">Returns the total size of the tensor in bytes.</div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a735ac6c2a02e320969625308810444f3"><div class="ttname"><a href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3">arm_compute::GPUTarget</a></div><div class="ttdeci">GPUTarget</div><div class="ttdoc">Available GPU Targets.</div><div class="ttdef"><b>Definition:</b> <a href="_g_p_u_target_8h_source.xhtml#l00034">GPUTarget.h:34</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_g_e_m_m_lowp_matrix_multiply_reshaped_only_r_h_s_kernel_xhtml_a96f40eda5c40e254a6729e8bc0cb8195"><div class="ttname"><a href="classarm__compute_1_1_c_l_g_e_m_m_lowp_matrix_multiply_reshaped_only_r_h_s_kernel.xhtml#a96f40eda5c40e254a6729e8bc0cb8195">arm_compute::CLGEMMLowpMatrixMultiplyReshapedOnlyRHSKernel::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *input0, const ITensorInfo *input1, const ITensorInfo *output, const GEMMLHSMatrixInfo &amp;lhs_info, const GEMMRHSMatrixInfo &amp;rhs_info, const GEMMReshapeInfo &amp;gemm_info)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration of CLGEMMLowpMatrixMultiply...</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_g_e_m_m_lowp_matrix_multiply_reshaped_only_r_h_s_kernel_8cpp_source.xhtml#l00257">CLGEMMLowpMatrixMultiplyReshapedOnlyRHSKernel.cpp:257</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_g_e_m_m_lowp_matrix_multiply_kernel_xhtml_a8aa57bd9c0703378b82393e8f440e9c8"><div class="ttname"><a href="classarm__compute_1_1_c_l_g_e_m_m_lowp_matrix_multiply_kernel.xhtml#a8aa57bd9c0703378b82393e8f440e9c8">arm_compute::CLGEMMLowpMatrixMultiplyKernel::configure</a></div><div class="ttdeci">void configure(const ICLTensor *input0, const ICLTensor *input1, ICLTensor *output, const GEMMReshapeInfo &amp;gemm_info=GEMMReshapeInfo())</div><div class="ttdoc">Initialise the kernel's input and output.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_g_e_m_m_lowp_matrix_multiply_kernel_8cpp_source.xhtml#l00173">CLGEMMLowpMatrixMultiplyKernel.cpp:173</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a735ac6c2a02e320969625308810444f3afa362f4daec88442a387ff7cda411a38"><div class="ttname"><a href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3afa362f4daec88442a387ff7cda411a38">arm_compute::GPUTarget::MIDGARD</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a82b8ac759c804bc1fb4e2d21e178fb6fae1c8555fcf0ea2bb648a6fd527d658c0"><div class="ttname"><a href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fae1c8555fcf0ea2bb648a6fd527d658c0">arm_compute::ConvertPolicy::WRAP</a></div><div class="ttdoc">Wrap around.</div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_g_e_m_m_reshape_r_h_s_matrix_kernel_xhtml_aa0b0eaffc9a83e1a6495d957b63bbccc"><div class="ttname"><a href="classarm__compute_1_1_c_l_g_e_m_m_reshape_r_h_s_matrix_kernel.xhtml#aa0b0eaffc9a83e1a6495d957b63bbccc">arm_compute::CLGEMMReshapeRHSMatrixKernel::configure</a></div><div class="ttdeci">void configure(const ICLTensor *input, ICLTensor *output, const GEMMRHSMatrixInfo &amp;rhs_info)</div><div class="ttdoc">Initialise the kernel's input and output.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_g_e_m_m_reshape_r_h_s_matrix_kernel_8cpp_source.xhtml#l00102">CLGEMMReshapeRHSMatrixKernel.cpp:102</a></div></div>
<div class="ttc" id="structarm__compute_1_1_uniform_quantization_info_xhtml_a97bd6c077f3c7769f575b82988b9b668"><div class="ttname"><a href="structarm__compute_1_1_uniform_quantization_info.xhtml#a97bd6c077f3c7769f575b82988b9b668">arm_compute::UniformQuantizationInfo::offset</a></div><div class="ttdeci">int32_t offset</div><div class="ttdef"><b>Definition:</b> <a href="_quantization_info_8h_source.xhtml#l00065">QuantizationInfo.h:65</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_g_e_m_m_lowp_matrix_multiply_reshaped_only_r_h_s_kernel_xhtml_aa7967bee001197b8642e30d4efaa96cc"><div class="ttname"><a href="classarm__compute_1_1_c_l_g_e_m_m_lowp_matrix_multiply_reshaped_only_r_h_s_kernel.xhtml#aa7967bee001197b8642e30d4efaa96cc">arm_compute::CLGEMMLowpMatrixMultiplyReshapedOnlyRHSKernel::configure</a></div><div class="ttdeci">void configure(const ICLTensor *input0, const ICLTensor *input1, ICLTensor *output, const GEMMLHSMatrixInfo &amp;lhs_info, const GEMMRHSMatrixInfo &amp;rhs_info, const GEMMReshapeInfo &amp;gemm_info)</div><div class="ttdoc">Initialise the kernel's input and output.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_g_e_m_m_lowp_matrix_multiply_reshaped_only_r_h_s_kernel_8cpp_source.xhtml#l00173">CLGEMMLowpMatrixMultiplyReshapedOnlyRHSKernel.cpp:173</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a1c69762a42ab8add645d0a949b6f4b1f"><div class="ttname"><a href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_MSG(cond, msg)</div><div class="ttdoc">If the condition is true, an error is returned.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00244">Error.h:244</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml">arm_compute::TensorInfo</a></div><div class="ttdoc">Store the tensor's metadata.</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_info_8h_source.xhtml#l00045">TensorInfo.h:45</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_e_m_m_info_xhtml_a4c8f9fa843de1086c27c86a6b8cf4582"><div class="ttname"><a href="classarm__compute_1_1_g_e_m_m_info.xhtml#a4c8f9fa843de1086c27c86a6b8cf4582">arm_compute::GEMMInfo::reshape_b_only_on_first_run</a></div><div class="ttdeci">bool reshape_b_only_on_first_run() const</div><div class="ttdoc">Flag which specifies if the reshape of matrix B should executed only for the first.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l02054">Types.h:2054</a></div></div>
<div class="ttc" id="arm__compute_2core_2_helpers_8h_xhtml"><div class="ttname"><a href="arm__compute_2core_2_helpers_8h.xhtml">Helpers.h</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1misc_1_1shape__calculator_xhtml"><div class="ttname"><a href="namespacearm__compute_1_1misc_1_1shape__calculator.xhtml">arm_compute::misc::shape_calculator</a></div><div class="ttdef"><b>Definition:</b> <a href="_shape_calculator_8h_source.xhtml#l00040">ShapeCalculator.h:40</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_c_l_kernel_xhtml_ad5ba9d34a3a855bf1dd2e36316ff550a"><div class="ttname"><a href="classarm__compute_1_1_i_c_l_kernel.xhtml#ad5ba9d34a3a855bf1dd2e36316ff550a">arm_compute::ICLKernel::set_target</a></div><div class="ttdeci">void set_target(GPUTarget target)</div><div class="ttdoc">Set the targeted GPU architecture.</div><div class="ttdef"><b>Definition:</b> <a href="_i_c_l_kernel_8h_source.xhtml#l00271">ICLKernel.h:271</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_e_m_m_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_g_e_m_m_info.xhtml">arm_compute::GEMMInfo</a></div><div class="ttdoc">GEMM information class.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01983">Types.h:1983</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a329f5d0c4b0c80e3474951d2c4435dd9"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a329f5d0c4b0c80e3474951d2c4435dd9">arm_compute::DataType::QASYMM8_SIGNED</a></div><div class="ttdoc">quantized, asymmetric fixed-point 8-bit number signed</div></div>
<div class="ttc" id="_asymm_helpers_8h_xhtml"><div class="ttname"><a href="_asymm_helpers_8h.xhtml">AsymmHelpers.h</a></div></div>
<div class="ttc" id="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info_xhtml_ab233758aca2751c6e71a2f79baf7b92a"><div class="ttname"><a href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml#ab233758aca2751c6e71a2f79baf7b92a">arm_compute::GEMMLowpOutputStageInfo::output_data_type</a></div><div class="ttdeci">DataType output_data_type</div><div class="ttdoc">Output tensor data type to use if the output is not initialized.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01955">Types.h:1955</a></div></div>
<div class="ttc" id="arm__compute_2core_2_types_8h_xhtml"><div class="ttname"><a href="arm__compute_2core_2_types_8h.xhtml">Types.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_tensor_xhtml_a1ffeb3b5abb3d61f62b58a391816201c"><div class="ttname"><a href="classarm__compute_1_1_c_l_tensor.xhtml#a1ffeb3b5abb3d61f62b58a391816201c">arm_compute::CLTensor::unmap</a></div><div class="ttdeci">void unmap()</div><div class="ttdoc">Enqueue an unmap operation of the allocated and mapped buffer.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_tensor_8cpp_source.xhtml#l00071">CLTensor.cpp:71</a></div></div>
<div class="ttc" id="_validate_8h_xhtml"><div class="ttname"><a href="_validate_8h.xhtml">Validate.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_g_e_m_m_lowp_matrix_b_reduction_kernel_xhtml_a21f628daa45675076fd25e46a052a53a"><div class="ttname"><a href="classarm__compute_1_1_c_l_g_e_m_m_lowp_matrix_b_reduction_kernel.xhtml#a21f628daa45675076fd25e46a052a53a">arm_compute::CLGEMMLowpMatrixBReductionKernel::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *mtx_b, const ITensorInfo *vector_sum_col)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration of CLGEMMLowpMatrixBReducti...</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_g_e_m_m_lowp_reduction_kernel_8cpp_source.xhtml#l00195">CLGEMMLowpReductionKernel.cpp:195</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_g_e_m_m_reshape_r_h_s_matrix_kernel_xhtml_aca0da52b749b54d37ff996f4b28f6762"><div class="ttname"><a href="classarm__compute_1_1_c_l_g_e_m_m_reshape_r_h_s_matrix_kernel.xhtml#aca0da52b749b54d37ff996f4b28f6762">arm_compute::CLGEMMReshapeRHSMatrixKernel::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *input, const ITensorInfo *output, const GEMMRHSMatrixInfo &amp;rhs_info)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration of CLGEMMReshapeRHSMatrixKe...</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_g_e_m_m_reshape_r_h_s_matrix_kernel_8cpp_source.xhtml#l00134">CLGEMMReshapeRHSMatrixKernel.cpp:134</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_g_e_m_m_lowp_matrix_a_reduction_kernel_xhtml_a613f25e524dbabbff55ea9d7df53c7f6"><div class="ttname"><a href="classarm__compute_1_1_c_l_g_e_m_m_lowp_matrix_a_reduction_kernel.xhtml#a613f25e524dbabbff55ea9d7df53c7f6">arm_compute::CLGEMMLowpMatrixAReductionKernel::configure</a></div><div class="ttdeci">void configure(const ICLTensor *mtx_a, ICLTensor *vector_sum_row) override</div><div class="ttdoc">Initialise the kernel's input and output.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_g_e_m_m_lowp_reduction_kernel_8cpp_source.xhtml#l00103">CLGEMMLowpReductionKernel.cpp:103</a></div></div>
<div class="ttc" id="_c_l_g_e_m_m_reshaped_only_r_h_s_kernel_configuration_8h_xhtml"><div class="ttname"><a href="_c_l_g_e_m_m_reshaped_only_r_h_s_kernel_configuration_8h.xhtml">CLGEMMReshapedOnlyRHSKernelConfiguration.h</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_bf9f26469d00835ba20ff8d80ee5a804.xhtml">runtime</a></li><li class="navelem"><a class="el" href="dir_43c3fdbf778d1fd99e2e38f09fddd920.xhtml">CL</a></li><li class="navelem"><a class="el" href="dir_0304d3529340c629ae0050036d07056a.xhtml">functions</a></li><li class="navelem"><a class="el" href="_c_l_g_e_m_m_lowp_matrix_multiply_core_8cpp.xhtml">CLGEMMLowpMatrixMultiplyCore.cpp</a></li>
    <li class="footer">Generated on Fri Feb 21 2020 11:10:16 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
