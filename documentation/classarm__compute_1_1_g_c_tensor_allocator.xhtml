<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: GCTensorAllocator Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.02.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classarm__compute_1_1_g_c_tensor_allocator.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">GCTensorAllocator Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Basic implementation of a GLES memory tensor allocator.  
 <a href="classarm__compute_1_1_g_c_tensor_allocator.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_g_c_tensor_allocator_8h_source.xhtml">GCTensorAllocator.h</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for GCTensorAllocator:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classarm__compute_1_1_g_c_tensor_allocator__coll__graph.svg" width="150" height="112"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a4f6c603c82bfab864d2cb8942374217e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_g_c_tensor_allocator.xhtml#a4f6c603c82bfab864d2cb8942374217e">GCTensorAllocator</a> (<a class="el" href="classarm__compute_1_1_i_memory_manageable.xhtml">IMemoryManageable</a> *owner=nullptr)</td></tr>
<tr class="memdesc:a4f6c603c82bfab864d2cb8942374217e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor.  <a href="#a4f6c603c82bfab864d2cb8942374217e">More...</a><br /></td></tr>
<tr class="separator:a4f6c603c82bfab864d2cb8942374217e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af8dcd8bb5e360d3ed8cc967cf35bac5e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_g_c_tensor_allocator.xhtml#af8dcd8bb5e360d3ed8cc967cf35bac5e">GCTensorAllocator</a> (const <a class="el" href="classarm__compute_1_1_g_c_tensor_allocator.xhtml">GCTensorAllocator</a> &amp;)=delete</td></tr>
<tr class="memdesc:af8dcd8bb5e360d3ed8cc967cf35bac5e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied (As this class contains pointers)  <a href="#af8dcd8bb5e360d3ed8cc967cf35bac5e">More...</a><br /></td></tr>
<tr class="separator:af8dcd8bb5e360d3ed8cc967cf35bac5e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a56164dac01e367ad6b509517cd94464a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_g_c_tensor_allocator.xhtml">GCTensorAllocator</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_g_c_tensor_allocator.xhtml#a56164dac01e367ad6b509517cd94464a">operator=</a> (const <a class="el" href="classarm__compute_1_1_g_c_tensor_allocator.xhtml">GCTensorAllocator</a> &amp;)=delete</td></tr>
<tr class="memdesc:a56164dac01e367ad6b509517cd94464a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copy assigned (As this class contains pointers)  <a href="#a56164dac01e367ad6b509517cd94464a">More...</a><br /></td></tr>
<tr class="separator:a56164dac01e367ad6b509517cd94464a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a59309185a3b64cb28d6031b94cfb711c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_g_c_tensor_allocator.xhtml#a59309185a3b64cb28d6031b94cfb711c">GCTensorAllocator</a> (<a class="el" href="classarm__compute_1_1_g_c_tensor_allocator.xhtml">GCTensorAllocator</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:a59309185a3b64cb28d6031b94cfb711c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be moved.  <a href="#a59309185a3b64cb28d6031b94cfb711c">More...</a><br /></td></tr>
<tr class="separator:a59309185a3b64cb28d6031b94cfb711c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a70d4c3ea42d68d50cc207d343173696a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_g_c_tensor_allocator.xhtml">GCTensorAllocator</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_g_c_tensor_allocator.xhtml#a70d4c3ea42d68d50cc207d343173696a">operator=</a> (<a class="el" href="classarm__compute_1_1_g_c_tensor_allocator.xhtml">GCTensorAllocator</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:a70d4c3ea42d68d50cc207d343173696a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be moved.  <a href="#a70d4c3ea42d68d50cc207d343173696a">More...</a><br /></td></tr>
<tr class="separator:a70d4c3ea42d68d50cc207d343173696a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a85db26fae980aed7beed0b6a4d8c24a3"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_g_c_tensor_allocator.xhtml#a85db26fae980aed7beed0b6a4d8c24a3">~GCTensorAllocator</a> ()=default</td></tr>
<tr class="memdesc:a85db26fae980aed7beed0b6a4d8c24a3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default destructor.  <a href="#a85db26fae980aed7beed0b6a4d8c24a3">More...</a><br /></td></tr>
<tr class="separator:a85db26fae980aed7beed0b6a4d8c24a3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a99c07c946023f413991a249db8b99ab0"><td class="memItemLeft" align="right" valign="top">uint8_t *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_g_c_tensor_allocator.xhtml#a99c07c946023f413991a249db8b99ab0">data</a> ()</td></tr>
<tr class="memdesc:a99c07c946023f413991a249db8b99ab0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Interface to be implemented by the child class to return the pointer to the mapped data.  <a href="#a99c07c946023f413991a249db8b99ab0">More...</a><br /></td></tr>
<tr class="separator:a99c07c946023f413991a249db8b99ab0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aae7e39f5c474c8bf6d4cdbef3af9b6cb"><td class="memItemLeft" align="right" valign="top">GLuint&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_g_c_tensor_allocator.xhtml#aae7e39f5c474c8bf6d4cdbef3af9b6cb">get_gl_ssbo_name</a> () const</td></tr>
<tr class="memdesc:aae7e39f5c474c8bf6d4cdbef3af9b6cb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the OpenGL ES buffer object name.  <a href="#aae7e39f5c474c8bf6d4cdbef3af9b6cb">More...</a><br /></td></tr>
<tr class="separator:aae7e39f5c474c8bf6d4cdbef3af9b6cb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7ffd0f6fedc0eb3725d601f19a164631"><td class="memItemLeft" align="right" valign="top">uint8_t *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_g_c_tensor_allocator.xhtml#a7ffd0f6fedc0eb3725d601f19a164631">map</a> (bool blocking)</td></tr>
<tr class="memdesc:a7ffd0f6fedc0eb3725d601f19a164631"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enqueue a map operation of the allocated buffer on the given queue.  <a href="#a7ffd0f6fedc0eb3725d601f19a164631">More...</a><br /></td></tr>
<tr class="separator:a7ffd0f6fedc0eb3725d601f19a164631"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1ffeb3b5abb3d61f62b58a391816201c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_g_c_tensor_allocator.xhtml#a1ffeb3b5abb3d61f62b58a391816201c">unmap</a> ()</td></tr>
<tr class="memdesc:a1ffeb3b5abb3d61f62b58a391816201c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enqueue an unmap operation of the allocated buffer on the given queue.  <a href="#a1ffeb3b5abb3d61f62b58a391816201c">More...</a><br /></td></tr>
<tr class="separator:a1ffeb3b5abb3d61f62b58a391816201c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6e509c2a177b0b29e9e2369535094dee"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_g_c_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a> () override</td></tr>
<tr class="memdesc:a6e509c2a177b0b29e9e2369535094dee"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allocate size specified by <a class="el" href="classarm__compute_1_1_tensor_info.xhtml" title="Store the tensor&#39;s metadata.">TensorInfo</a> of GLES memory.  <a href="#a6e509c2a177b0b29e9e2369535094dee">More...</a><br /></td></tr>
<tr class="separator:a6e509c2a177b0b29e9e2369535094dee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1468b0adb6ec3f9d38aa7d60b8a91974"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_g_c_tensor_allocator.xhtml#a1468b0adb6ec3f9d38aa7d60b8a91974">free</a> () override</td></tr>
<tr class="memdesc:a1468b0adb6ec3f9d38aa7d60b8a91974"><td class="mdescLeft">&#160;</td><td class="mdescRight">Free allocated GLES memory.  <a href="#a1468b0adb6ec3f9d38aa7d60b8a91974">More...</a><br /></td></tr>
<tr class="separator:a1468b0adb6ec3f9d38aa7d60b8a91974"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a34177e00ce3d627e8a6a9ca215aaddfb"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_g_c_tensor_allocator.xhtml#a34177e00ce3d627e8a6a9ca215aaddfb">set_associated_memory_group</a> (<a class="el" href="classarm__compute_1_1_i_memory_group.xhtml">IMemoryGroup</a> *associated_memory_group)</td></tr>
<tr class="memdesc:a34177e00ce3d627e8a6a9ca215aaddfb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Associates the tensor with a memory group.  <a href="#a34177e00ce3d627e8a6a9ca215aaddfb">More...</a><br /></td></tr>
<tr class="separator:a34177e00ce3d627e8a6a9ca215aaddfb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1_i_tensor_allocator"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1_i_tensor_allocator')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1_i_tensor_allocator.xhtml">ITensorAllocator</a></td></tr>
<tr class="memitem:af97d553d2aa86688c92db8ed9a67cf0e inherit pub_methods_classarm__compute_1_1_i_tensor_allocator"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_tensor_allocator.xhtml#af97d553d2aa86688c92db8ed9a67cf0e">ITensorAllocator</a> ()</td></tr>
<tr class="memdesc:af97d553d2aa86688c92db8ed9a67cf0e inherit pub_methods_classarm__compute_1_1_i_tensor_allocator"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor.  <a href="classarm__compute_1_1_i_tensor_allocator.xhtml#af97d553d2aa86688c92db8ed9a67cf0e">More...</a><br /></td></tr>
<tr class="separator:af97d553d2aa86688c92db8ed9a67cf0e inherit pub_methods_classarm__compute_1_1_i_tensor_allocator"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae82acbc677aa7d77c6a3f5e3547ef917 inherit pub_methods_classarm__compute_1_1_i_tensor_allocator"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_tensor_allocator.xhtml#ae82acbc677aa7d77c6a3f5e3547ef917">ITensorAllocator</a> (const <a class="el" href="classarm__compute_1_1_i_tensor_allocator.xhtml">ITensorAllocator</a> &amp;)=default</td></tr>
<tr class="memdesc:ae82acbc677aa7d77c6a3f5e3547ef917 inherit pub_methods_classarm__compute_1_1_i_tensor_allocator"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be copy constructed.  <a href="classarm__compute_1_1_i_tensor_allocator.xhtml#ae82acbc677aa7d77c6a3f5e3547ef917">More...</a><br /></td></tr>
<tr class="separator:ae82acbc677aa7d77c6a3f5e3547ef917 inherit pub_methods_classarm__compute_1_1_i_tensor_allocator"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a12e5f2915e2461321b130dcf84f3e268 inherit pub_methods_classarm__compute_1_1_i_tensor_allocator"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_i_tensor_allocator.xhtml">ITensorAllocator</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_tensor_allocator.xhtml#a12e5f2915e2461321b130dcf84f3e268">operator=</a> (const <a class="el" href="classarm__compute_1_1_i_tensor_allocator.xhtml">ITensorAllocator</a> &amp;)=default</td></tr>
<tr class="memdesc:a12e5f2915e2461321b130dcf84f3e268 inherit pub_methods_classarm__compute_1_1_i_tensor_allocator"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be copied.  <a href="classarm__compute_1_1_i_tensor_allocator.xhtml#a12e5f2915e2461321b130dcf84f3e268">More...</a><br /></td></tr>
<tr class="separator:a12e5f2915e2461321b130dcf84f3e268 inherit pub_methods_classarm__compute_1_1_i_tensor_allocator"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4fe09d257ff33e01defc7074ca22dc98 inherit pub_methods_classarm__compute_1_1_i_tensor_allocator"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_tensor_allocator.xhtml#a4fe09d257ff33e01defc7074ca22dc98">ITensorAllocator</a> (<a class="el" href="classarm__compute_1_1_i_tensor_allocator.xhtml">ITensorAllocator</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:a4fe09d257ff33e01defc7074ca22dc98 inherit pub_methods_classarm__compute_1_1_i_tensor_allocator"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be move constructed.  <a href="classarm__compute_1_1_i_tensor_allocator.xhtml#a4fe09d257ff33e01defc7074ca22dc98">More...</a><br /></td></tr>
<tr class="separator:a4fe09d257ff33e01defc7074ca22dc98 inherit pub_methods_classarm__compute_1_1_i_tensor_allocator"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a46277b6e964a66a9936e06f9989f0ff6 inherit pub_methods_classarm__compute_1_1_i_tensor_allocator"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_i_tensor_allocator.xhtml">ITensorAllocator</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_tensor_allocator.xhtml#a46277b6e964a66a9936e06f9989f0ff6">operator=</a> (<a class="el" href="classarm__compute_1_1_i_tensor_allocator.xhtml">ITensorAllocator</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:a46277b6e964a66a9936e06f9989f0ff6 inherit pub_methods_classarm__compute_1_1_i_tensor_allocator"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be moved.  <a href="classarm__compute_1_1_i_tensor_allocator.xhtml#a46277b6e964a66a9936e06f9989f0ff6">More...</a><br /></td></tr>
<tr class="separator:a46277b6e964a66a9936e06f9989f0ff6 inherit pub_methods_classarm__compute_1_1_i_tensor_allocator"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8378fc6c887231765b885f8033c7bb99 inherit pub_methods_classarm__compute_1_1_i_tensor_allocator"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_tensor_allocator.xhtml#a8378fc6c887231765b885f8033c7bb99">~ITensorAllocator</a> ()=default</td></tr>
<tr class="memdesc:a8378fc6c887231765b885f8033c7bb99 inherit pub_methods_classarm__compute_1_1_i_tensor_allocator"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default virtual destructor.  <a href="classarm__compute_1_1_i_tensor_allocator.xhtml#a8378fc6c887231765b885f8033c7bb99">More...</a><br /></td></tr>
<tr class="separator:a8378fc6c887231765b885f8033c7bb99 inherit pub_methods_classarm__compute_1_1_i_tensor_allocator"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af36143939a43fa124312e395975091ed inherit pub_methods_classarm__compute_1_1_i_tensor_allocator"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_tensor_allocator.xhtml#af36143939a43fa124312e395975091ed">init</a> (const <a class="el" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, size_t <a class="el" href="classarm__compute_1_1_i_tensor_allocator.xhtml#a32899157b4898866a4a58440f2f7b13f">alignment</a>=0)</td></tr>
<tr class="memdesc:af36143939a43fa124312e395975091ed inherit pub_methods_classarm__compute_1_1_i_tensor_allocator"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialize a tensor based on the passed <a class="el" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>.  <a href="classarm__compute_1_1_i_tensor_allocator.xhtml#af36143939a43fa124312e395975091ed">More...</a><br /></td></tr>
<tr class="separator:af36143939a43fa124312e395975091ed inherit pub_methods_classarm__compute_1_1_i_tensor_allocator"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a29737b25723597c9708c662c7088e6c3 inherit pub_methods_classarm__compute_1_1_i_tensor_allocator"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_tensor_allocator.xhtml#a29737b25723597c9708c662c7088e6c3">info</a> ()</td></tr>
<tr class="memdesc:a29737b25723597c9708c662c7088e6c3 inherit pub_methods_classarm__compute_1_1_i_tensor_allocator"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return a reference to the tensor's metadata.  <a href="classarm__compute_1_1_i_tensor_allocator.xhtml#a29737b25723597c9708c662c7088e6c3">More...</a><br /></td></tr>
<tr class="separator:a29737b25723597c9708c662c7088e6c3 inherit pub_methods_classarm__compute_1_1_i_tensor_allocator"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af3461a6d7c86f09c854cbb7ab5578c4e inherit pub_methods_classarm__compute_1_1_i_tensor_allocator"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_tensor_allocator.xhtml#af3461a6d7c86f09c854cbb7ab5578c4e">info</a> () const</td></tr>
<tr class="memdesc:af3461a6d7c86f09c854cbb7ab5578c4e inherit pub_methods_classarm__compute_1_1_i_tensor_allocator"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return a constant reference to the tensor's metadata.  <a href="classarm__compute_1_1_i_tensor_allocator.xhtml#af3461a6d7c86f09c854cbb7ab5578c4e">More...</a><br /></td></tr>
<tr class="separator:af3461a6d7c86f09c854cbb7ab5578c4e inherit pub_methods_classarm__compute_1_1_i_tensor_allocator"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a32899157b4898866a4a58440f2f7b13f inherit pub_methods_classarm__compute_1_1_i_tensor_allocator"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_tensor_allocator.xhtml#a32899157b4898866a4a58440f2f7b13f">alignment</a> () const</td></tr>
<tr class="memdesc:a32899157b4898866a4a58440f2f7b13f inherit pub_methods_classarm__compute_1_1_i_tensor_allocator"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return underlying's tensor buffer alignment.  <a href="classarm__compute_1_1_i_tensor_allocator.xhtml#a32899157b4898866a4a58440f2f7b13f">More...</a><br /></td></tr>
<tr class="separator:a32899157b4898866a4a58440f2f7b13f inherit pub_methods_classarm__compute_1_1_i_tensor_allocator"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Basic implementation of a GLES memory tensor allocator. </p>

<p class="definition">Definition at line <a class="el" href="_g_c_tensor_allocator_8h_source.xhtml#l00040">40</a> of file <a class="el" href="_g_c_tensor_allocator_8h_source.xhtml">GCTensorAllocator.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a4f6c603c82bfab864d2cb8942374217e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4f6c603c82bfab864d2cb8942374217e">&#9670;&nbsp;</a></span>GCTensorAllocator() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_g_c_tensor_allocator.xhtml">GCTensorAllocator</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_memory_manageable.xhtml">IMemoryManageable</a> *&#160;</td>
          <td class="paramname"><em>owner</em> = <code>nullptr</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Default constructor. </p>

<p class="definition">Definition at line <a class="el" href="_g_c_tensor_allocator_8cpp_source.xhtml#l00035">35</a> of file <a class="el" href="_g_c_tensor_allocator_8cpp_source.xhtml">GCTensorAllocator.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    : _owner(owner), _associated_memory_group(<span class="keyword">nullptr</span>), _memory(), _mapping(<span class="keyword">nullptr</span>)</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;{</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="af8dcd8bb5e360d3ed8cc967cf35bac5e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af8dcd8bb5e360d3ed8cc967cf35bac5e">&#9670;&nbsp;</a></span>GCTensorAllocator() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_g_c_tensor_allocator.xhtml">GCTensorAllocator</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_g_c_tensor_allocator.xhtml">GCTensorAllocator</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prevent instances of this class from being copied (As this class contains pointers) </p>

</div>
</div>
<a id="a59309185a3b64cb28d6031b94cfb711c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a59309185a3b64cb28d6031b94cfb711c">&#9670;&nbsp;</a></span>GCTensorAllocator() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_g_c_tensor_allocator.xhtml">GCTensorAllocator</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_g_c_tensor_allocator.xhtml">GCTensorAllocator</a> &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Allow instances of this class to be moved. </p>

</div>
</div>
<a id="a85db26fae980aed7beed0b6a4d8c24a3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a85db26fae980aed7beed0b6a4d8c24a3">&#9670;&nbsp;</a></span>~GCTensorAllocator()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="classarm__compute_1_1_g_c_tensor_allocator.xhtml">GCTensorAllocator</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Default destructor. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a6e509c2a177b0b29e9e2369535094dee"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6e509c2a177b0b29e9e2369535094dee">&#9670;&nbsp;</a></span>allocate()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void allocate </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Allocate size specified by <a class="el" href="classarm__compute_1_1_tensor_info.xhtml" title="Store the tensor&#39;s metadata.">TensorInfo</a> of GLES memory. </p>
<dl class="section note"><dt>Note</dt><dd>: The tensor must not already be allocated when calling this function. </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_tensor_allocator.xhtml#aa8a4946cd749d482dd996874d295af85">ITensorAllocator</a>.</p>

<p class="definition">Definition at line <a class="el" href="_g_c_tensor_allocator_8cpp_source.xhtml#l00045">45</a> of file <a class="el" href="_g_c_tensor_allocator_8cpp_source.xhtml">GCTensorAllocator.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;{</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <span class="keywordflow">if</span>(_associated_memory_group == <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    {</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;        _memory.<a class="code" href="classarm__compute_1_1_g_c_memory.xhtml#af2d30bc4b38a0f4703ff154a39f1b422">set_owned_region</a>(support::cpp14::make_unique&lt;GCBufferMemoryRegion&gt;(<a class="code" href="classarm__compute_1_1_i_tensor_allocator.xhtml#a29737b25723597c9708c662c7088e6c3">info</a>().total_size()));</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    }</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    {</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;        _associated_memory_group-&gt;<a class="code" href="classarm__compute_1_1_i_memory_group.xhtml#afe894be960031e036ae121a4c5111043">finalize_memory</a>(_owner, _memory, <a class="code" href="classarm__compute_1_1_i_tensor_allocator.xhtml#a29737b25723597c9708c662c7088e6c3">info</a>().total_size(), <a class="code" href="classarm__compute_1_1_i_tensor_allocator.xhtml#a32899157b4898866a4a58440f2f7b13f">alignment</a>());</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    }</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    <a class="code" href="classarm__compute_1_1_i_tensor_allocator.xhtml#a29737b25723597c9708c662c7088e6c3">info</a>().<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a78bf77b2d9b959259f77a32b9a412184">set_is_resizable</a>(<span class="keyword">false</span>);</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;}</div><div class="ttc" id="classarm__compute_1_1_i_memory_group_xhtml_afe894be960031e036ae121a4c5111043"><div class="ttname"><a href="classarm__compute_1_1_i_memory_group.xhtml#afe894be960031e036ae121a4c5111043">arm_compute::IMemoryGroup::finalize_memory</a></div><div class="ttdeci">virtual void finalize_memory(IMemoryManageable *obj, IMemory &amp;obj_memory, size_t size, size_t alignment)=0</div><div class="ttdoc">Finalizes memory for a given object.</div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_allocator_xhtml_a32899157b4898866a4a58440f2f7b13f"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_allocator.xhtml#a32899157b4898866a4a58440f2f7b13f">arm_compute::ITensorAllocator::alignment</a></div><div class="ttdeci">size_t alignment() const</div><div class="ttdoc">Return underlying's tensor buffer alignment.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_allocator_8cpp_source.xhtml#l00054">ITensorAllocator.cpp:54</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml_a78bf77b2d9b959259f77a32b9a412184"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#a78bf77b2d9b959259f77a32b9a412184">arm_compute::TensorInfo::set_is_resizable</a></div><div class="ttdeci">ITensorInfo &amp; set_is_resizable(bool is_resizable) override</div><div class="ttdoc">Set the flag whether the tensor size can be changed.</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_info_8h_source.xhtml#l00293">TensorInfo.h:293</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_allocator_xhtml_a29737b25723597c9708c662c7088e6c3"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_allocator.xhtml#a29737b25723597c9708c662c7088e6c3">arm_compute::ITensorAllocator::info</a></div><div class="ttdeci">TensorInfo &amp; info()</div><div class="ttdoc">Return a reference to the tensor's metadata.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_allocator_8cpp_source.xhtml#l00044">ITensorAllocator.cpp:44</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_c_memory_xhtml_af2d30bc4b38a0f4703ff154a39f1b422"><div class="ttname"><a href="classarm__compute_1_1_g_c_memory.xhtml#af2d30bc4b38a0f4703ff154a39f1b422">arm_compute::GCMemory::set_owned_region</a></div><div class="ttdeci">void set_owned_region(std::unique_ptr&lt; IMemoryRegion &gt; region) final</div><div class="ttdoc">Sets a memory region.</div><div class="ttdef"><b>Definition:</b> <a href="_g_c_memory_8cpp_source.xhtml#l00076">GCMemory.cpp:76</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_i_tensor_allocator_8cpp_source.xhtml#l00054">ITensorAllocator::alignment()</a>, <a class="el" href="classarm__compute_1_1_i_memory_group.xhtml#afe894be960031e036ae121a4c5111043">IMemoryGroup::finalize_memory()</a>, <a class="el" href="_i_tensor_allocator_8cpp_source.xhtml#l00044">ITensorAllocator::info()</a>, <a class="el" href="_tensor_info_8h_source.xhtml#l00293">TensorInfo::set_is_resizable()</a>, and <a class="el" href="_g_c_memory_8cpp_source.xhtml#l00076">GCMemory::set_owned_region()</a>.</p>

</div>
</div>
<a id="a99c07c946023f413991a249db8b99ab0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a99c07c946023f413991a249db8b99ab0">&#9670;&nbsp;</a></span>data()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t * data </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Interface to be implemented by the child class to return the pointer to the mapped data. </p>
<dl class="section return"><dt>Returns</dt><dd>a pointer to the data. </dd></dl>

<p class="definition">Definition at line <a class="el" href="_g_c_tensor_allocator_8cpp_source.xhtml#l00040">40</a> of file <a class="el" href="_g_c_tensor_allocator_8cpp_source.xhtml">GCTensorAllocator.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;{</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    <span class="keywordflow">return</span> _mapping;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;}</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_g_c_tensor_8cpp_source.xhtml#l00049">GCTensor::buffer()</a>.</p>

</div>
</div>
<a id="a1468b0adb6ec3f9d38aa7d60b8a91974"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1468b0adb6ec3f9d38aa7d60b8a91974">&#9670;&nbsp;</a></span>free()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void free </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Free allocated GLES memory. </p>
<dl class="section note"><dt>Note</dt><dd>The tensor must have been allocated when calling this function. </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_tensor_allocator.xhtml#a1781eecaabd2bc97d074437d01b2c683">ITensorAllocator</a>.</p>

<p class="definition">Definition at line <a class="el" href="_g_c_tensor_allocator_8cpp_source.xhtml#l00058">58</a> of file <a class="el" href="_g_c_tensor_allocator_8cpp_source.xhtml">GCTensorAllocator.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;{</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    _mapping = <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    _memory.<a class="code" href="classarm__compute_1_1_g_c_memory.xhtml#a5e343ebd0fb1c7816e7abfee53d2578b">set_region</a>(<span class="keyword">nullptr</span>);</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <a class="code" href="classarm__compute_1_1_i_tensor_allocator.xhtml#a29737b25723597c9708c662c7088e6c3">info</a>().<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a78bf77b2d9b959259f77a32b9a412184">set_is_resizable</a>(<span class="keyword">true</span>);</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;}</div><div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml_a78bf77b2d9b959259f77a32b9a412184"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#a78bf77b2d9b959259f77a32b9a412184">arm_compute::TensorInfo::set_is_resizable</a></div><div class="ttdeci">ITensorInfo &amp; set_is_resizable(bool is_resizable) override</div><div class="ttdoc">Set the flag whether the tensor size can be changed.</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_info_8h_source.xhtml#l00293">TensorInfo.h:293</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_allocator_xhtml_a29737b25723597c9708c662c7088e6c3"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_allocator.xhtml#a29737b25723597c9708c662c7088e6c3">arm_compute::ITensorAllocator::info</a></div><div class="ttdeci">TensorInfo &amp; info()</div><div class="ttdoc">Return a reference to the tensor's metadata.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_allocator_8cpp_source.xhtml#l00044">ITensorAllocator.cpp:44</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_c_memory_xhtml_a5e343ebd0fb1c7816e7abfee53d2578b"><div class="ttname"><a href="classarm__compute_1_1_g_c_memory.xhtml#a5e343ebd0fb1c7816e7abfee53d2578b">arm_compute::GCMemory::set_region</a></div><div class="ttdeci">void set_region(IMemoryRegion *region) final</div><div class="ttdoc">Sets a memory region.</div><div class="ttdef"><b>Definition:</b> <a href="_g_c_memory_8cpp_source.xhtml#l00069">GCMemory.cpp:69</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_i_tensor_allocator_8cpp_source.xhtml#l00044">ITensorAllocator::info()</a>, <a class="el" href="_tensor_info_8h_source.xhtml#l00293">TensorInfo::set_is_resizable()</a>, and <a class="el" href="_g_c_memory_8cpp_source.xhtml#l00069">GCMemory::set_region()</a>.</p>

</div>
</div>
<a id="aae7e39f5c474c8bf6d4cdbef3af9b6cb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aae7e39f5c474c8bf6d4cdbef3af9b6cb">&#9670;&nbsp;</a></span>get_gl_ssbo_name()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">GLuint get_gl_ssbo_name </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the OpenGL ES buffer object name. </p>
<dl class="section return"><dt>Returns</dt><dd>The buffer object name </dd></dl>

<p class="definition">Definition at line <a class="el" href="_g_c_tensor_allocator_8cpp_source.xhtml#l00084">84</a> of file <a class="el" href="_g_c_tensor_allocator_8cpp_source.xhtml">GCTensorAllocator.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;{</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <span class="keywordflow">return</span> (_memory.<a class="code" href="classarm__compute_1_1_g_c_memory.xhtml#a146cb960b44f4b1fb11ef4420382021a">region</a>() == <span class="keyword">nullptr</span>) ? static_cast&lt;GLuint&gt;(0) : _memory.<a class="code" href="classarm__compute_1_1_g_c_memory.xhtml#a8882f7e7c3cc7cd87799928ad2abb9b1">gc_region</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_g_c_memory_region.xhtml#a8fb30f2d054c3ad3e11edf5f9d477f87">gc_ssbo_name</a>();</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;}</div><div class="ttc" id="classarm__compute_1_1_i_g_c_memory_region_xhtml_a8fb30f2d054c3ad3e11edf5f9d477f87"><div class="ttname"><a href="classarm__compute_1_1_i_g_c_memory_region.xhtml#a8fb30f2d054c3ad3e11edf5f9d477f87">arm_compute::IGCMemoryRegion::gc_ssbo_name</a></div><div class="ttdeci">const GLuint &amp; gc_ssbo_name() const</div><div class="ttdoc">Returns the underlying CL buffer.</div><div class="ttdef"><b>Definition:</b> <a href="_g_c_memory_region_8cpp_source.xhtml#l00035">GCMemoryRegion.cpp:35</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_c_memory_xhtml_a146cb960b44f4b1fb11ef4420382021a"><div class="ttname"><a href="classarm__compute_1_1_g_c_memory.xhtml#a146cb960b44f4b1fb11ef4420382021a">arm_compute::GCMemory::region</a></div><div class="ttdeci">IMemoryRegion * region() final</div><div class="ttdoc">Region accessor.</div><div class="ttdef"><b>Definition:</b> <a href="_g_c_memory_8cpp_source.xhtml#l00059">GCMemory.cpp:59</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_c_memory_xhtml_a8882f7e7c3cc7cd87799928ad2abb9b1"><div class="ttname"><a href="classarm__compute_1_1_g_c_memory.xhtml#a8882f7e7c3cc7cd87799928ad2abb9b1">arm_compute::GCMemory::gc_region</a></div><div class="ttdeci">IGCMemoryRegion * gc_region()</div><div class="ttdoc">GLES Region accessor.</div><div class="ttdef"><b>Definition:</b> <a href="_g_c_memory_8cpp_source.xhtml#l00049">GCMemory.cpp:49</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_g_c_memory_8cpp_source.xhtml#l00049">GCMemory::gc_region()</a>, <a class="el" href="_g_c_memory_region_8cpp_source.xhtml#l00035">IGCMemoryRegion::gc_ssbo_name()</a>, and <a class="el" href="_g_c_memory_8cpp_source.xhtml#l00059">GCMemory::region()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_g_c_tensor_8cpp_source.xhtml#l00054">GCTensor::gc_buffer()</a>.</p>

</div>
</div>
<a id="a7ffd0f6fedc0eb3725d601f19a164631"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7ffd0f6fedc0eb3725d601f19a164631">&#9670;&nbsp;</a></span>map()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t * map </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>blocking</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Enqueue a map operation of the allocated buffer on the given queue. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">blocking</td><td>If true, then the mapping will be ready to use by the time this method returns, else it is the caller's responsibility to flush the queue and wait for the mapping operation to have completed before using the returned mapping pointer.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The mapping address. </dd></dl>

<p class="definition">Definition at line <a class="el" href="_g_c_tensor_allocator_8cpp_source.xhtml#l00089">89</a> of file <a class="el" href="_g_c_tensor_allocator_8cpp_source.xhtml">GCTensorAllocator.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;{</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(_mapping != <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(_memory.<a class="code" href="classarm__compute_1_1_g_c_memory.xhtml#a146cb960b44f4b1fb11ef4420382021a">region</a>() == <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    _mapping = reinterpret_cast&lt;uint8_t *&gt;(_memory.<a class="code" href="classarm__compute_1_1_g_c_memory.xhtml#a8882f7e7c3cc7cd87799928ad2abb9b1">gc_region</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_g_c_memory_region.xhtml#a5a589966a248f6e2a958f8dff2550418">map</a>(blocking));</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <span class="keywordflow">return</span> _mapping;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;}</div><div class="ttc" id="_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00466">Error.h:466</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_c_memory_xhtml_a146cb960b44f4b1fb11ef4420382021a"><div class="ttname"><a href="classarm__compute_1_1_g_c_memory.xhtml#a146cb960b44f4b1fb11ef4420382021a">arm_compute::GCMemory::region</a></div><div class="ttdeci">IMemoryRegion * region() final</div><div class="ttdoc">Region accessor.</div><div class="ttdef"><b>Definition:</b> <a href="_g_c_memory_8cpp_source.xhtml#l00059">GCMemory.cpp:59</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_c_memory_xhtml_a8882f7e7c3cc7cd87799928ad2abb9b1"><div class="ttname"><a href="classarm__compute_1_1_g_c_memory.xhtml#a8882f7e7c3cc7cd87799928ad2abb9b1">arm_compute::GCMemory::gc_region</a></div><div class="ttdeci">IGCMemoryRegion * gc_region()</div><div class="ttdoc">GLES Region accessor.</div><div class="ttdef"><b>Definition:</b> <a href="_g_c_memory_8cpp_source.xhtml#l00049">GCMemory.cpp:49</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_g_c_memory_region_xhtml_a5a589966a248f6e2a958f8dff2550418"><div class="ttname"><a href="classarm__compute_1_1_i_g_c_memory_region.xhtml#a5a589966a248f6e2a958f8dff2550418">arm_compute::IGCMemoryRegion::map</a></div><div class="ttdeci">virtual void * map(bool blocking)=0</div><div class="ttdoc">Enqueue a map operation of the allocated buffer on the given queue.</div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00466">ARM_COMPUTE_ERROR_ON</a>, <a class="el" href="_g_c_memory_8cpp_source.xhtml#l00049">GCMemory::gc_region()</a>, <a class="el" href="classarm__compute_1_1_i_g_c_memory_region.xhtml#a5a589966a248f6e2a958f8dff2550418">IGCMemoryRegion::map()</a>, and <a class="el" href="_g_c_memory_8cpp_source.xhtml#l00059">GCMemory::region()</a>.</p>

</div>
</div>
<a id="a56164dac01e367ad6b509517cd94464a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a56164dac01e367ad6b509517cd94464a">&#9670;&nbsp;</a></span>operator=() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_g_c_tensor_allocator.xhtml">GCTensorAllocator</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_g_c_tensor_allocator.xhtml">GCTensorAllocator</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prevent instances of this class from being copy assigned (As this class contains pointers) </p>

</div>
</div>
<a id="a70d4c3ea42d68d50cc207d343173696a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a70d4c3ea42d68d50cc207d343173696a">&#9670;&nbsp;</a></span>operator=() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_g_c_tensor_allocator.xhtml">GCTensorAllocator</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_g_c_tensor_allocator.xhtml">GCTensorAllocator</a> &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Allow instances of this class to be moved. </p>

</div>
</div>
<a id="a34177e00ce3d627e8a6a9ca215aaddfb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a34177e00ce3d627e8a6a9ca215aaddfb">&#9670;&nbsp;</a></span>set_associated_memory_group()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void set_associated_memory_group </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_memory_group.xhtml">IMemoryGroup</a> *&#160;</td>
          <td class="paramname"><em>associated_memory_group</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Associates the tensor with a memory group. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">associated_memory_group</td><td><a class="el" href="classarm__compute_1_1_memory.xhtml" title="CPU implementation of memory object.">Memory</a> group to associate the tensor with </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_g_c_tensor_allocator_8cpp_source.xhtml#l00065">65</a> of file <a class="el" href="_g_c_tensor_allocator_8cpp_source.xhtml">GCTensorAllocator.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;{</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(associated_memory_group == <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(_associated_memory_group != <span class="keyword">nullptr</span> &amp;&amp; _associated_memory_group != associated_memory_group);</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(_memory.<a class="code" href="classarm__compute_1_1_g_c_memory.xhtml#a146cb960b44f4b1fb11ef4420382021a">region</a>() != <span class="keyword">nullptr</span> &amp;&amp; _memory.<a class="code" href="classarm__compute_1_1_g_c_memory.xhtml#a8882f7e7c3cc7cd87799928ad2abb9b1">gc_region</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_g_c_memory_region.xhtml#a8fb30f2d054c3ad3e11edf5f9d477f87">gc_ssbo_name</a>() != 0);</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    _associated_memory_group = associated_memory_group;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;}</div><div class="ttc" id="classarm__compute_1_1_i_g_c_memory_region_xhtml_a8fb30f2d054c3ad3e11edf5f9d477f87"><div class="ttname"><a href="classarm__compute_1_1_i_g_c_memory_region.xhtml#a8fb30f2d054c3ad3e11edf5f9d477f87">arm_compute::IGCMemoryRegion::gc_ssbo_name</a></div><div class="ttdeci">const GLuint &amp; gc_ssbo_name() const</div><div class="ttdoc">Returns the underlying CL buffer.</div><div class="ttdef"><b>Definition:</b> <a href="_g_c_memory_region_8cpp_source.xhtml#l00035">GCMemoryRegion.cpp:35</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00466">Error.h:466</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_c_memory_xhtml_a146cb960b44f4b1fb11ef4420382021a"><div class="ttname"><a href="classarm__compute_1_1_g_c_memory.xhtml#a146cb960b44f4b1fb11ef4420382021a">arm_compute::GCMemory::region</a></div><div class="ttdeci">IMemoryRegion * region() final</div><div class="ttdoc">Region accessor.</div><div class="ttdef"><b>Definition:</b> <a href="_g_c_memory_8cpp_source.xhtml#l00059">GCMemory.cpp:59</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_c_memory_xhtml_a8882f7e7c3cc7cd87799928ad2abb9b1"><div class="ttname"><a href="classarm__compute_1_1_g_c_memory.xhtml#a8882f7e7c3cc7cd87799928ad2abb9b1">arm_compute::GCMemory::gc_region</a></div><div class="ttdeci">IGCMemoryRegion * gc_region()</div><div class="ttdoc">GLES Region accessor.</div><div class="ttdef"><b>Definition:</b> <a href="_g_c_memory_8cpp_source.xhtml#l00049">GCMemory.cpp:49</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00466">ARM_COMPUTE_ERROR_ON</a>, <a class="el" href="_g_c_memory_8cpp_source.xhtml#l00049">GCMemory::gc_region()</a>, <a class="el" href="_g_c_memory_region_8cpp_source.xhtml#l00035">IGCMemoryRegion::gc_ssbo_name()</a>, and <a class="el" href="_g_c_memory_8cpp_source.xhtml#l00059">GCMemory::region()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_g_c_tensor_8cpp_source.xhtml#l00059">GCTensor::associate_memory_group()</a>.</p>

</div>
</div>
<a id="a1ffeb3b5abb3d61f62b58a391816201c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1ffeb3b5abb3d61f62b58a391816201c">&#9670;&nbsp;</a></span>unmap()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void unmap </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Enqueue an unmap operation of the allocated buffer on the given queue. </p>
<dl class="section note"><dt>Note</dt><dd>This method simply enqueue the unmap operation, it is the caller's responsibility to flush the queue and make sure the unmap is finished before the memory is accessed by the device. </dd></dl>

<p class="definition">Definition at line <a class="el" href="_g_c_tensor_allocator_8cpp_source.xhtml#l00098">98</a> of file <a class="el" href="_g_c_tensor_allocator_8cpp_source.xhtml">GCTensorAllocator.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;{</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(_mapping == <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(_memory.<a class="code" href="classarm__compute_1_1_g_c_memory.xhtml#a146cb960b44f4b1fb11ef4420382021a">region</a>() == <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    _memory.<a class="code" href="classarm__compute_1_1_g_c_memory.xhtml#a8882f7e7c3cc7cd87799928ad2abb9b1">gc_region</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_g_c_memory_region.xhtml#a21164b8d700d97aa462e75e314048f46">unmap</a>();</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    _mapping = <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;}</div><div class="ttc" id="_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00466">Error.h:466</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_c_memory_xhtml_a146cb960b44f4b1fb11ef4420382021a"><div class="ttname"><a href="classarm__compute_1_1_g_c_memory.xhtml#a146cb960b44f4b1fb11ef4420382021a">arm_compute::GCMemory::region</a></div><div class="ttdeci">IMemoryRegion * region() final</div><div class="ttdoc">Region accessor.</div><div class="ttdef"><b>Definition:</b> <a href="_g_c_memory_8cpp_source.xhtml#l00059">GCMemory.cpp:59</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_g_c_memory_region_xhtml_a21164b8d700d97aa462e75e314048f46"><div class="ttname"><a href="classarm__compute_1_1_i_g_c_memory_region.xhtml#a21164b8d700d97aa462e75e314048f46">arm_compute::IGCMemoryRegion::unmap</a></div><div class="ttdeci">virtual void unmap()=0</div><div class="ttdoc">Enqueue an unmap operation of the allocated buffer on the given queue.</div></div>
<div class="ttc" id="classarm__compute_1_1_g_c_memory_xhtml_a8882f7e7c3cc7cd87799928ad2abb9b1"><div class="ttname"><a href="classarm__compute_1_1_g_c_memory.xhtml#a8882f7e7c3cc7cd87799928ad2abb9b1">arm_compute::GCMemory::gc_region</a></div><div class="ttdeci">IGCMemoryRegion * gc_region()</div><div class="ttdoc">GLES Region accessor.</div><div class="ttdef"><b>Definition:</b> <a href="_g_c_memory_8cpp_source.xhtml#l00049">GCMemory.cpp:49</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00466">ARM_COMPUTE_ERROR_ON</a>, <a class="el" href="_g_c_memory_8cpp_source.xhtml#l00049">GCMemory::gc_region()</a>, <a class="el" href="_g_c_memory_8cpp_source.xhtml#l00059">GCMemory::region()</a>, and <a class="el" href="classarm__compute_1_1_i_g_c_memory_region.xhtml#a21164b8d700d97aa462e75e314048f46">IGCMemoryRegion::unmap()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>arm_compute/runtime/GLES_COMPUTE/<a class="el" href="_g_c_tensor_allocator_8h_source.xhtml">GCTensorAllocator.h</a></li>
<li>src/runtime/GLES_COMPUTE/<a class="el" href="_g_c_tensor_allocator_8cpp_source.xhtml">GCTensorAllocator.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1_g_c_tensor_allocator.xhtml">GCTensorAllocator</a></li>
    <li class="footer">Generated on Thu Mar 5 2020 16:07:13 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
