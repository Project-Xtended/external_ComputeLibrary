<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: arm_compute/core/NEON/kernels/NEConvolutionKernel.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_n_e_convolution_kernel_8h_source.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">NEConvolutionKernel.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_n_e_convolution_kernel_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2016-2019 ARM Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#ifndef ARM_COMPUTE_NECONVOLUTIONKERNEL_H</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#define ARM_COMPUTE_NECONVOLUTIONKERNEL_H</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_i_n_e_kernel_8h.xhtml">arm_compute/core/NEON/INEKernel.h</a>&quot;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_i_n_e_simple_kernel_8h.xhtml">arm_compute/core/NEON/INESimpleKernel.h</a>&quot;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &lt;array&gt;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &lt;cstdint&gt;</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;{</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">class </span>ITensor;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="comment">/****************************************************************************************\</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="comment"> *                                    Square Convolution                                *</span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="comment">\****************************************************************************************/</span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="comment">/** Interface for the kernel to run an arbitrary size convolution on a tensor. (Currently supports 3x3, 5x5, 7x7 and 9x9).</span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="comment"> * The client can supply a convolution matrix \f$ C_{m,n} \f$.</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="comment"> * @f{eqnarray}{</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="comment"> *  k_0 &amp;=&amp; \frac{m}{2}  \\</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="comment"> *  l_0 &amp;=&amp; \frac{n}{2}  \\</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="comment"> *  sum &amp;=&amp; \sum_{k=0,l=0}^{k=m-1,l=n-1} input(x+k-k_0, y+l-l_0) C_{k,l}</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="comment"> *  @f}</span></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="comment"> * @note The above equation for this function is similar to the default OpenCV Filter2D function,</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="comment"> *       which actually computes a correlation and not a convolution.</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="comment"> *       In case of a real convolution the convolution matrix should be flipped both horizontally and vertically.</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="keyword">template</span> &lt;<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> matrix_size&gt;</div><div class="line"><a name="l00055"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_convolution_kernel.xhtml">   55</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1_n_e_convolution_kernel.xhtml">NEConvolutionKernel</a> : <span class="keyword">public</span> <a class="code" href="classarm__compute_1_1_i_c_p_p_simple_kernel.xhtml">INESimpleKernel</a></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;{</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00058"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_convolution_kernel.xhtml#ab5656bb5b6334bdbe6e606c715872828">   58</a></span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="classarm__compute_1_1_n_e_convolution_kernel.xhtml#ab5656bb5b6334bdbe6e606c715872828">name</a>()<span class="keyword"> const override</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;        <span class="keywordflow">return</span> <span class="stringliteral">&quot;NEConvolutionKernel&quot;</span>;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    }<span class="comment"></span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="comment">    /** Default constructor */</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <a class="code" href="classarm__compute_1_1_n_e_convolution_kernel.xhtml#a230a4894adf8380eca9e8c2aac03e9b8">NEConvolutionKernel</a>();<span class="comment"></span></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="comment">    /** Initialise the kernel&#39;s input, output and border mode.</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="comment">     * @param[in]  input            Source tensor. Data type supported: U8.</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="comment">     * @param[out] output           Destination tensor. Data types supported: U8, S16.</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="comment">     * @param[in]  conv             Convolution matrix to apply to the input tensor.</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="comment">     * @param[in]  scale            Scale of the convolution matrix. If 0 is passed, it will be set to the sum of the coefficients of the convolution or 1 if they add up to 0.</span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="comment">     * @param[in]  border_undefined True if the border mode is undefined. False if it&#39;s replicate or constant.</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_n_e_convolution_kernel.xhtml#a8873a8f053f3d2322e297409645c6222">configure</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *output, <span class="keyword">const</span> int16_t *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a006546051719c5fb4b20c966a26b9c76">conv</a>, uint32_t <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acec6d8ad52a28972fa74e071c1a63b6a">scale</a>, <span class="keywordtype">bool</span> border_undefined);</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <span class="comment">// Inherited methods overridden:</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_n_e_convolution_kernel.xhtml#a112b35dd205c62ea6ed1447ef226da82">run</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;<a class="code" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1_thread_info.xhtml">ThreadInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4f4125dba5283887b34f889b1c615c0c">info</a>) <span class="keyword">override</span>;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <a class="code" href="structarm__compute_1_1_border_size.xhtml">BorderSize</a> <a class="code" href="classarm__compute_1_1_n_e_convolution_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">border_size</a>() <span class="keyword">const override</span>;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> OutputType&gt;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <span class="keywordtype">void</span> convolution(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;win);</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="keyword">protected</span>:</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    uint32_t _scale;                                             <span class="comment">/**&lt; scale of the convolution */</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    std::array&lt;int16_t, matrix_size *matrix_size&gt; _convolution;  <span class="comment">/**&lt; convolution matrix */</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;};</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="comment">/** Interface for the kernel which applied a 3x3 convolution to a tensor.*/</span></div><div class="line"><a name="l00088"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#acf81639b3d33b5da654ef088e4d10520">   88</a></span>&#160;<span class="keyword">using</span> <a class="code" href="classarm__compute_1_1_n_e_convolution_kernel.xhtml">NEConvolution3x3Kernel</a> = <a class="code" href="classarm__compute_1_1_n_e_convolution_kernel.xhtml">NEConvolutionKernel&lt;3&gt;</a>;<span class="comment"></span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="comment">/** Interface for the kernel which applied a 5x5 convolution to a tensor.*/</span></div><div class="line"><a name="l00090"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#a21898b2d2e31ab9af8933c66ff82c8c6">   90</a></span>&#160;<span class="keyword">using</span> <a class="code" href="classarm__compute_1_1_n_e_convolution_kernel.xhtml">NEConvolution5x5Kernel</a> = <a class="code" href="classarm__compute_1_1_n_e_convolution_kernel.xhtml">NEConvolutionKernel&lt;5&gt;</a>;<span class="comment"></span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="comment">/** Interface for the kernel which applied a 7x7 convolution to a tensor.*/</span></div><div class="line"><a name="l00092"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#ae46cbbe03d31c6c8e7eba7b58999842d">   92</a></span>&#160;<span class="keyword">using</span> <a class="code" href="classarm__compute_1_1_n_e_convolution_kernel.xhtml">NEConvolution7x7Kernel</a> = <a class="code" href="classarm__compute_1_1_n_e_convolution_kernel.xhtml">NEConvolutionKernel&lt;7&gt;</a>;<span class="comment"></span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="comment">///** Interface for the kernel which applied a 9x9 convolution to a tensor.*/</span></div><div class="line"><a name="l00094"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#a1025306f820a9e76df7e5891caacff7b">   94</a></span>&#160;<span class="comment"></span><span class="keyword">using</span> <a class="code" href="classarm__compute_1_1_n_e_convolution_kernel.xhtml">NEConvolution9x9Kernel</a> = <a class="code" href="classarm__compute_1_1_n_e_convolution_kernel.xhtml">NEConvolutionKernel&lt;9&gt;</a>;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="comment">/****************************************************************************************\</span></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="comment"> *                              Separable Square Convolution                            *</span></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="comment">\****************************************************************************************/</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="comment">/** Kernel for the Horizontal pass of a Separable Convolution */</span></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="keyword">template</span> &lt;<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> matrix_size&gt;</div><div class="line"><a name="l00102"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_separable_convolution_hor_kernel.xhtml">  102</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1_n_e_separable_convolution_hor_kernel.xhtml">NESeparableConvolutionHorKernel</a> : <span class="keyword">public</span> <a class="code" href="classarm__compute_1_1_i_c_p_p_simple_kernel.xhtml">INESimpleKernel</a></div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;{</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00105"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_separable_convolution_hor_kernel.xhtml#ab5656bb5b6334bdbe6e606c715872828">  105</a></span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="classarm__compute_1_1_n_e_separable_convolution_hor_kernel.xhtml#ab5656bb5b6334bdbe6e606c715872828">name</a>()<span class="keyword"> const override</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        <span class="keywordflow">return</span> <span class="stringliteral">&quot;NESeparableConvolutionHorKernel&quot;</span>;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    }<span class="comment"></span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="comment">    /** Default constructor */</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    <a class="code" href="classarm__compute_1_1_n_e_separable_convolution_hor_kernel.xhtml#a965a154580e00968b45aa6268986cd51">NESeparableConvolutionHorKernel</a>();</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="comment">    /** Initialise the kernel&#39;s input, output and border mode.</span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="comment">     * @param[in]  input            Source tensor. Data type supported: U8.</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="comment">     * @param[out] output           Destination tensor. Data types supported: U16, S16, S32.</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="comment">     * @param[in]  conv_row         Convolution matrix to apply to the input tensor.</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="comment">     * @param[in]  border_undefined True if the border mode is undefined. False if it&#39;s replicate or constant.</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_n_e_separable_convolution_hor_kernel.xhtml#a2047b01f2cdd57602126cccb6bd08625">configure</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *output, <span class="keyword">const</span> int16_t *conv_row, <span class="keywordtype">bool</span> border_undefined);</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    <span class="comment">// Inherited methods overridden:</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_n_e_separable_convolution_hor_kernel.xhtml#a112b35dd205c62ea6ed1447ef226da82">run</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;<a class="code" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1_thread_info.xhtml">ThreadInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4f4125dba5283887b34f889b1c615c0c">info</a>) <span class="keyword">override</span>;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    <a class="code" href="structarm__compute_1_1_border_size.xhtml">BorderSize</a> <a class="code" href="classarm__compute_1_1_n_e_separable_convolution_hor_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">border_size</a>() <span class="keyword">const override</span>;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="keyword">private</span>:<span class="comment"></span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="comment">    /** Apply the object&#39;s convolution to the given window of the input tensor..</span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="comment">     * @param[in] window Window to apply the convolution on.</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> OutputType&gt;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    <span class="keywordtype">void</span> convolve(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;<a class="code" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>);</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    std::array&lt;int16_t, matrix_size&gt; _conv_row; <span class="comment">/**&lt; Convolution coefficients */</span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <a class="code" href="structarm__compute_1_1_border_size.xhtml">BorderSize</a> _border_size;                    <span class="comment">/**&lt; Border size */</span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;};</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="comment">/** Interface for the kernel which applied a 5x1 horizontal convolution to a tensor.*/</span></div><div class="line"><a name="l00138"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#ac78a7593874c21cff86478c1ba6df27b">  138</a></span>&#160;<span class="keyword">using</span> <a class="code" href="classarm__compute_1_1_n_e_separable_convolution_hor_kernel.xhtml">NESeparableConvolution5x5HorKernel</a> = <a class="code" href="classarm__compute_1_1_n_e_separable_convolution_hor_kernel.xhtml">NESeparableConvolutionHorKernel&lt;5&gt;</a>;<span class="comment"></span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="comment">/** Interface for the kernel which applied a 7x1 horizontal convolution to a tensor.*/</span></div><div class="line"><a name="l00140"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#aca4adbcd292c26b0e392c59875c1e926">  140</a></span>&#160;<span class="keyword">using</span> <a class="code" href="classarm__compute_1_1_n_e_separable_convolution_hor_kernel.xhtml">NESeparableConvolution7x7HorKernel</a> = <a class="code" href="classarm__compute_1_1_n_e_separable_convolution_hor_kernel.xhtml">NESeparableConvolutionHorKernel&lt;7&gt;</a>;<span class="comment"></span></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="comment">/** Interface for the kernel which applied a 9x1 horizontal convolution to a tensor.*/</span></div><div class="line"><a name="l00142"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#a4ba5f6b7cd6b70b75e42149f3bc08f38">  142</a></span>&#160;<span class="keyword">using</span> <a class="code" href="classarm__compute_1_1_n_e_separable_convolution_hor_kernel.xhtml">NESeparableConvolution9x9HorKernel</a> = <a class="code" href="classarm__compute_1_1_n_e_separable_convolution_hor_kernel.xhtml">NESeparableConvolutionHorKernel&lt;9&gt;</a>;</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;<span class="comment">/** Kernel for the Vertical pass of a Separable Convolution */</span></div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="keyword">template</span> &lt;<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> matrix_size&gt;</div><div class="line"><a name="l00146"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_separable_convolution_vert_kernel.xhtml">  146</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1_n_e_separable_convolution_vert_kernel.xhtml">NESeparableConvolutionVertKernel</a> : <span class="keyword">public</span> <a class="code" href="classarm__compute_1_1_i_c_p_p_simple_kernel.xhtml">INESimpleKernel</a></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;{</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00149"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_separable_convolution_vert_kernel.xhtml#ab5656bb5b6334bdbe6e606c715872828">  149</a></span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="classarm__compute_1_1_n_e_separable_convolution_vert_kernel.xhtml#ab5656bb5b6334bdbe6e606c715872828">name</a>()<span class="keyword"> const override</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;        <span class="keywordflow">return</span> <span class="stringliteral">&quot;NESeparableConvolutionVertKernel&quot;</span>;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    }<span class="comment"></span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="comment">    /** Default constructor */</span></div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    <a class="code" href="classarm__compute_1_1_n_e_separable_convolution_vert_kernel.xhtml#ac3aaa23fc2c41fdb7a6de14841631fbd">NESeparableConvolutionVertKernel</a>();</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="comment">    /** Initialise the kernel&#39;s input, output and border mode.</span></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;<span class="comment">     * @param[in]  input            Source tensor. Data type supported: U16, S16, S32.</span></div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;<span class="comment">     * @param[out] output           Destination tensor, Data types supported: U8, S16.</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="comment">     * @param[in]  conv_col         Convolution matrix to apply to the input tensor.</span></div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;<span class="comment">     * @param[in]  scale            Scale of the convolution matrix</span></div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="comment">     * @param[in]  border_undefined True if the border mode is undefined. False if it&#39;s replicate or constant.</span></div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_n_e_separable_convolution_vert_kernel.xhtml#ad5b2a12ea8d073422e0615efca68ee22">configure</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *output, <span class="keyword">const</span> int16_t *conv_col, uint32_t <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acec6d8ad52a28972fa74e071c1a63b6a">scale</a>, <span class="keywordtype">bool</span> border_undefined);</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    <span class="comment">// Inherited methods overridden:</span></div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_n_e_separable_convolution_vert_kernel.xhtml#a112b35dd205c62ea6ed1447ef226da82">run</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;<a class="code" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1_thread_info.xhtml">ThreadInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4f4125dba5283887b34f889b1c615c0c">info</a>) <span class="keyword">override</span>;</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    <a class="code" href="structarm__compute_1_1_border_size.xhtml">BorderSize</a> <a class="code" href="classarm__compute_1_1_n_e_separable_convolution_vert_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">border_size</a>() <span class="keyword">const override</span>;</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;<span class="keyword">private</span>:<span class="comment"></span></div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;<span class="comment">    /** Apply the object&#39;s convolution to the given window of the input tensor.</span></div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;<span class="comment">     *  This function is used if the intermediate values have been stored as U16.</span></div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;<span class="comment">     * @param[in] win Window to apply the convolution on.</span></div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> OutputType&gt;</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    <span class="keywordtype">void</span> convolution_u16(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;win);<span class="comment"></span></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<span class="comment">    /** Apply the object&#39;s convolution to the given window of the input tensor.</span></div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="comment">     *  This function is used if the intermediate values have been stored as S16.</span></div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="comment">     * @param[in] win Window to apply the convolution on.</span></div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> OutputType&gt;</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    <span class="keywordtype">void</span> convolution_s16(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;win);<span class="comment"></span></div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;<span class="comment">    /** Apply the object&#39;s convolution to the given window of the input tensor.</span></div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<span class="comment">     *  This function is used if the intermediate values have been stored as S32.</span></div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;<span class="comment">     * @param[in] win Window to apply the convolution on.</span></div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> OutputType&gt;</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    <span class="keywordtype">void</span> convolution_s32(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;win);</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    std::array&lt;int16_t, matrix_size&gt; _conv_col; <span class="comment">/**&lt; Convolution coefficients */</span></div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    uint32_t _scale;                            <span class="comment">/**&lt; Convolution&#39;s scale */</span></div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;};</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<span class="comment">/** Interface for the kernel which applied a 1x5 vertical convolution to a tensor.*/</span></div><div class="line"><a name="l00198"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#ae4152320657df499674ed64b16c28a7b">  198</a></span>&#160;<span class="keyword">using</span> <a class="code" href="classarm__compute_1_1_n_e_separable_convolution_vert_kernel.xhtml">NESeparableConvolution5x5VertKernel</a> = <a class="code" href="classarm__compute_1_1_n_e_separable_convolution_vert_kernel.xhtml">NESeparableConvolutionVertKernel&lt;5&gt;</a>;<span class="comment"></span></div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;<span class="comment">/** Interface for the kernel which applied a 1x7 vertical convolution to a tensor.*/</span></div><div class="line"><a name="l00200"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#a0f952bd0821b506e18514a3f4dbc6c39">  200</a></span>&#160;<span class="keyword">using</span> <a class="code" href="classarm__compute_1_1_n_e_separable_convolution_vert_kernel.xhtml">NESeparableConvolution7x7VertKernel</a> = <a class="code" href="classarm__compute_1_1_n_e_separable_convolution_vert_kernel.xhtml">NESeparableConvolutionVertKernel&lt;7&gt;</a>;<span class="comment"></span></div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;<span class="comment">/** Interface for the kernel which applied a 1x9 vertical convolution to a tensor.*/</span></div><div class="line"><a name="l00202"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#a6310d21f215fface41df4cde725a62b9">  202</a></span>&#160;<span class="keyword">using</span> <a class="code" href="classarm__compute_1_1_n_e_separable_convolution_vert_kernel.xhtml">NESeparableConvolution9x9VertKernel</a> = <a class="code" href="classarm__compute_1_1_n_e_separable_convolution_vert_kernel.xhtml">NESeparableConvolutionVertKernel&lt;9&gt;</a>;</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<span class="comment">/****************************************************************************************\</span></div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;<span class="comment"> *                                 Rectangle Convolution                                *</span></div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;<span class="comment">\****************************************************************************************/</span></div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;<span class="comment">/** Kernel for the running convolution on a rectangle matrix.</span></div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;<span class="comment"> * @note Supports combinations of 3,5,7 and 9.</span></div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00212"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_convolution_rectangle_kernel.xhtml">  212</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1_n_e_convolution_rectangle_kernel.xhtml">NEConvolutionRectangleKernel</a> : <span class="keyword">public</span> <a class="code" href="classarm__compute_1_1_i_c_p_p_kernel.xhtml">INEKernel</a></div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;{</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00215"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_convolution_rectangle_kernel.xhtml#ab5656bb5b6334bdbe6e606c715872828">  215</a></span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="classarm__compute_1_1_n_e_convolution_rectangle_kernel.xhtml#ab5656bb5b6334bdbe6e606c715872828">name</a>()<span class="keyword"> const override</span></div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;        <span class="keywordflow">return</span> <span class="stringliteral">&quot;NEConvolutionRectangleKernel&quot;</span>;</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;    }<span class="comment"></span></div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;<span class="comment">    /** Default constructor */</span></div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;    <a class="code" href="classarm__compute_1_1_n_e_convolution_rectangle_kernel.xhtml#a437bfa972bdb089215368c344cce05d3">NEConvolutionRectangleKernel</a>();<span class="comment"></span></div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;<span class="comment">    /** Prevent instances of this class from being copied (As this class contains pointers) */</span></div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;    <a class="code" href="classarm__compute_1_1_n_e_convolution_rectangle_kernel.xhtml#a437bfa972bdb089215368c344cce05d3">NEConvolutionRectangleKernel</a>(<a class="code" href="classarm__compute_1_1_n_e_convolution_rectangle_kernel.xhtml">NEConvolutionRectangleKernel</a> &amp;) = <span class="keyword">delete</span>;<span class="comment"></span></div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;<span class="comment">    /** Prevent instances of this class from being copied (As this class contains pointers) */</span></div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;    <a class="code" href="classarm__compute_1_1_n_e_convolution_rectangle_kernel.xhtml">NEConvolutionRectangleKernel</a> &amp;<a class="code" href="classarm__compute_1_1_n_e_convolution_rectangle_kernel.xhtml#a346f0286bbc7dc19e4aa25ae6acd57e8">operator=</a>(<a class="code" href="classarm__compute_1_1_n_e_convolution_rectangle_kernel.xhtml">NEConvolutionRectangleKernel</a> &amp;) = <span class="keyword">delete</span>;<span class="comment"></span></div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;<span class="comment">    /** Allow instances of this class to be moved */</span></div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;    <a class="code" href="classarm__compute_1_1_n_e_convolution_rectangle_kernel.xhtml#a437bfa972bdb089215368c344cce05d3">NEConvolutionRectangleKernel</a>(<a class="code" href="classarm__compute_1_1_n_e_convolution_rectangle_kernel.xhtml">NEConvolutionRectangleKernel</a> &amp;&amp;) = <span class="keywordflow">default</span>;<span class="comment"></span></div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;<span class="comment">    /** Allow instances of this class to be moved */</span></div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;    <a class="code" href="classarm__compute_1_1_n_e_convolution_rectangle_kernel.xhtml">NEConvolutionRectangleKernel</a> &amp;<a class="code" href="classarm__compute_1_1_n_e_convolution_rectangle_kernel.xhtml#a346f0286bbc7dc19e4aa25ae6acd57e8">operator=</a>(<a class="code" href="classarm__compute_1_1_n_e_convolution_rectangle_kernel.xhtml">NEConvolutionRectangleKernel</a> &amp;&amp;) = <span class="keywordflow">default</span>;<span class="comment"></span></div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;<span class="comment">    /** Initialise the kernel&#39;s input, output and border mode.</span></div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;<span class="comment">     * @param[in]  input            Source tensor. Data type supported: U8.</span></div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;<span class="comment">     * @param[out] output           Destination tensor, Data types supported: U8, S16.</span></div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;<span class="comment">     * @param[in]  conv             Convolution matrix to apply to the input tensor.</span></div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;<span class="comment">     * @param[in]  width            Width of convolution matrix (Number of columns)</span></div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;<span class="comment">     * @param[in]  height           Height of convolution matrix (Number of rows)</span></div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;<span class="comment">     * @param[in]  scale            Scale of the convolution matrix. If 0 is passed, it will be set to the sum of the coefficients of the convolution or 1 if they add up to 0.</span></div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;<span class="comment">     * @param[in]  border_undefined True if the border mode is undefined. False if it&#39;s replicate or constant.</span></div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_n_e_convolution_rectangle_kernel.xhtml#a3bb75d0640105ec72239550ec8a086b9">configure</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *output, <span class="keyword">const</span> int16_t *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a006546051719c5fb4b20c966a26b9c76">conv</a>, uint32_t width, uint32_t height, uint32_t <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acec6d8ad52a28972fa74e071c1a63b6a">scale</a>, <span class="keywordtype">bool</span> border_undefined);</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;    <span class="comment">// Inherited methods overridden:</span></div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_n_e_convolution_rectangle_kernel.xhtml#a112b35dd205c62ea6ed1447ef226da82">run</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;<a class="code" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1_thread_info.xhtml">ThreadInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4f4125dba5283887b34f889b1c615c0c">info</a>) <span class="keyword">override</span>;</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;    <a class="code" href="structarm__compute_1_1_border_size.xhtml">BorderSize</a> <a class="code" href="classarm__compute_1_1_n_e_convolution_rectangle_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">border_size</a>() <span class="keyword">const override</span>;</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> get_index(uint32_t val);<span class="comment"></span></div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;<span class="comment">    /** Apply the object&#39;s convolution to the given window of the input tensor.</span></div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;<span class="comment">     * @param[in] win Window to apply the convolution on.</span></div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> OutputType, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> rows, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> cols&gt;</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;    <span class="keywordtype">void</span> convolution(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;win);</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;<span class="keyword">protected</span>:</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a>            *_input;       <span class="comment">/**&lt; Input tensor */</span></div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;    <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a>                  *_output;      <span class="comment">/**&lt; Output tensor */</span></div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;    uint32_t                  _scale;       <span class="comment">/**&lt; Scale of the convolution */</span></div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;    std::vector&lt;int16_t&gt;      _convolution; <span class="comment">/**&lt; Convolution matrix */</span></div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;    <a class="code" href="structarm__compute_1_1_border_size.xhtml">BorderSize</a>                _border_size; <span class="comment">/**&lt; Calculated border width */</span></div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;    uint32_t                  _func_idx;    <span class="comment">/**&lt; Index used to specify convolution function to be used */</span></div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;    <span class="keyword">const</span> <span class="keyword">static</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> _nr_supported_sizes</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;    {</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;        4</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;    }; <span class="comment">/**&lt; Number of supported permutations */</span></div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;};</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;} <span class="comment">// namespace arm_compute</span></div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/*ARM_COMPUTE_NECONVOLUTIONKERNEL_H */</span><span class="preprocessor"></span></div><div class="ttc" id="classarm__compute_1_1_i_kernel_xhtml_ad34a46f53686c12a5c5e717cc9617fb6"><div class="ttname"><a href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">arm_compute::IKernel::window</a></div><div class="ttdeci">const Window &amp; window() const</div><div class="ttdoc">The maximum window the kernel can be executed on.</div><div class="ttdef"><b>Definition:</b> <a href="_i_kernel_8cpp_source.xhtml#l00028">IKernel.cpp:28</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_separable_convolution_vert_kernel_xhtml"><div class="ttname"><a href="classarm__compute_1_1_n_e_separable_convolution_vert_kernel.xhtml">arm_compute::NESeparableConvolutionVertKernel</a></div><div class="ttdoc">Kernel for the Vertical pass of a Separable Convolution.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_convolution_kernel_8h_source.xhtml#l00146">NEConvolutionKernel.h:146</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_convolution_kernel_xhtml"><div class="ttname"><a href="classarm__compute_1_1_n_e_convolution_kernel.xhtml">arm_compute::NEConvolutionKernel</a></div><div class="ttdoc">Interface for the kernel to run an arbitrary size convolution on a tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_convolution_kernel_8h_source.xhtml#l00055">NEConvolutionKernel.h:55</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_separable_convolution_vert_kernel_xhtml_ab5656bb5b6334bdbe6e606c715872828"><div class="ttname"><a href="classarm__compute_1_1_n_e_separable_convolution_vert_kernel.xhtml#ab5656bb5b6334bdbe6e606c715872828">arm_compute::NESeparableConvolutionVertKernel::name</a></div><div class="ttdeci">const char * name() const override</div><div class="ttdoc">Name of the kernel.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_convolution_kernel_8h_source.xhtml#l00149">NEConvolutionKernel.h:149</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_convolution_kernel_xhtml_a8873a8f053f3d2322e297409645c6222"><div class="ttname"><a href="classarm__compute_1_1_n_e_convolution_kernel.xhtml#a8873a8f053f3d2322e297409645c6222">arm_compute::NEConvolutionKernel::configure</a></div><div class="ttdeci">void configure(const ITensor *input, ITensor *output, const int16_t *conv, uint32_t scale, bool border_undefined)</div><div class="ttdoc">Initialise the kernel's input, output and border mode.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_convolution_kernel_8cpp_source.xhtml#l00324">NEConvolutionKernel.cpp:324</a></div></div>
<div class="ttc" id="_i_n_e_simple_kernel_8h_xhtml"><div class="ttname"><a href="_i_n_e_simple_kernel_8h.xhtml">INESimpleKernel.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_separable_convolution_hor_kernel_xhtml_a423f9a45a52983b4de5e2b347f4369c7"><div class="ttname"><a href="classarm__compute_1_1_n_e_separable_convolution_hor_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">arm_compute::NESeparableConvolutionHorKernel::border_size</a></div><div class="ttdeci">BorderSize border_size() const override</div><div class="ttdoc">The size of the border for that kernel.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_convolution_kernel_8cpp_source.xhtml#l00660">NEConvolutionKernel.cpp:660</a></div></div>
<div class="ttc" id="structarm__compute_1_1_border_size_xhtml"><div class="ttname"><a href="structarm__compute_1_1_border_size.xhtml">arm_compute::BorderSize</a></div><div class="ttdoc">Container for 2D border size.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00269">Types.h:269</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_c_p_p_kernel_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_c_p_p_kernel.xhtml">arm_compute::ICPPKernel</a></div><div class="ttdoc">Common interface for all kernels implemented in C++.</div><div class="ttdef"><b>Definition:</b> <a href="_i_c_p_p_kernel_8h_source.xhtml#l00035">ICPPKernel.h:35</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_convolution_kernel_xhtml_ab5656bb5b6334bdbe6e606c715872828"><div class="ttname"><a href="classarm__compute_1_1_n_e_convolution_kernel.xhtml#ab5656bb5b6334bdbe6e606c715872828">arm_compute::NEConvolutionKernel::name</a></div><div class="ttdeci">const char * name() const override</div><div class="ttdoc">Name of the kernel.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_convolution_kernel_8h_source.xhtml#l00058">NEConvolutionKernel.h:58</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_separable_convolution_vert_kernel_xhtml_a112b35dd205c62ea6ed1447ef226da82"><div class="ttname"><a href="classarm__compute_1_1_n_e_separable_convolution_vert_kernel.xhtml#a112b35dd205c62ea6ed1447ef226da82">arm_compute::NESeparableConvolutionVertKernel::run</a></div><div class="ttdeci">void run(const Window &amp;window, const ThreadInfo &amp;info) override</div><div class="ttdoc">Execute the kernel on the passed window.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_convolution_kernel_8cpp_source.xhtml#l01137">NEConvolutionKernel.cpp:1137</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_separable_convolution_hor_kernel_xhtml_a112b35dd205c62ea6ed1447ef226da82"><div class="ttname"><a href="classarm__compute_1_1_n_e_separable_convolution_hor_kernel.xhtml#a112b35dd205c62ea6ed1447ef226da82">arm_compute::NESeparableConvolutionHorKernel::run</a></div><div class="ttdeci">void run(const Window &amp;window, const ThreadInfo &amp;info) override</div><div class="ttdoc">Execute the kernel on the passed window.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_convolution_kernel_8cpp_source.xhtml#l00699">NEConvolutionKernel.cpp:699</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_convolution_rectangle_kernel_xhtml_a437bfa972bdb089215368c344cce05d3"><div class="ttname"><a href="classarm__compute_1_1_n_e_convolution_rectangle_kernel.xhtml#a437bfa972bdb089215368c344cce05d3">arm_compute::NEConvolutionRectangleKernel::NEConvolutionRectangleKernel</a></div><div class="ttdeci">NEConvolutionRectangleKernel()</div><div class="ttdoc">Default constructor.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_convolution_kernel_8cpp_source.xhtml#l01417">NEConvolutionKernel.cpp:1417</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_separable_convolution_hor_kernel_xhtml"><div class="ttname"><a href="classarm__compute_1_1_n_e_separable_convolution_hor_kernel.xhtml">arm_compute::NESeparableConvolutionHorKernel</a></div><div class="ttdoc">Kernel for the Horizontal pass of a Separable Convolution.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_convolution_kernel_8h_source.xhtml#l00102">NEConvolutionKernel.h:102</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_c_p_p_simple_kernel_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_c_p_p_simple_kernel.xhtml">arm_compute::ICPPSimpleKernel</a></div><div class="ttdoc">Interface for simple C++ kernels having 1 tensor input and 1 tensor output.</div><div class="ttdef"><b>Definition:</b> <a href="_i_c_p_p_simple_kernel_8h_source.xhtml#l00034">ICPPSimpleKernel.h:34</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor.xhtml">arm_compute::ITensor</a></div><div class="ttdoc">Interface for NEON tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_8h_source.xhtml#l00036">ITensor.h:36</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_convolution_rectangle_kernel_xhtml_a423f9a45a52983b4de5e2b347f4369c7"><div class="ttname"><a href="classarm__compute_1_1_n_e_convolution_rectangle_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">arm_compute::NEConvolutionRectangleKernel::border_size</a></div><div class="ttdeci">BorderSize border_size() const override</div><div class="ttdoc">The size of the border for that kernel.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_convolution_kernel_8cpp_source.xhtml#l01422">NEConvolutionKernel.cpp:1422</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_convolution_rectangle_kernel_xhtml_a346f0286bbc7dc19e4aa25ae6acd57e8"><div class="ttname"><a href="classarm__compute_1_1_n_e_convolution_rectangle_kernel.xhtml#a346f0286bbc7dc19e4aa25ae6acd57e8">arm_compute::NEConvolutionRectangleKernel::operator=</a></div><div class="ttdeci">NEConvolutionRectangleKernel &amp; operator=(NEConvolutionRectangleKernel &amp;)=delete</div><div class="ttdoc">Prevent instances of this class from being copied (As this class contains pointers)</div></div>
<div class="ttc" id="namespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2020 ARM Limited.</div><div class="ttdef"><b>Definition:</b> <a href="00__introduction_8dox_source.xhtml#l00024">00_introduction.dox:24</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_convolution_rectangle_kernel_xhtml_ab5656bb5b6334bdbe6e606c715872828"><div class="ttname"><a href="classarm__compute_1_1_n_e_convolution_rectangle_kernel.xhtml#ab5656bb5b6334bdbe6e606c715872828">arm_compute::NEConvolutionRectangleKernel::name</a></div><div class="ttdeci">const char * name() const override</div><div class="ttdoc">Name of the kernel.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_convolution_kernel_8h_source.xhtml#l00215">NEConvolutionKernel.h:215</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a8fcf2ddd9a1d58b1b280f5c0aed71845"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">arm_compute::test::validation::input</a></div><div class="ttdeci">auto input</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00487">LSTMLayerQuantized.cpp:487</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a006546051719c5fb4b20c966a26b9c76"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a006546051719c5fb4b20c966a26b9c76">arm_compute::test::validation::conv</a></div><div class="ttdeci">std::array&lt; int16_t, 25 &gt; conv</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_convolution_8cpp_source.xhtml#l00125">Convolution.cpp:125</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_convolution_rectangle_kernel_xhtml_a3bb75d0640105ec72239550ec8a086b9"><div class="ttname"><a href="classarm__compute_1_1_n_e_convolution_rectangle_kernel.xhtml#a3bb75d0640105ec72239550ec8a086b9">arm_compute::NEConvolutionRectangleKernel::configure</a></div><div class="ttdeci">void configure(const ITensor *input, ITensor *output, const int16_t *conv, uint32_t width, uint32_t height, uint32_t scale, bool border_undefined)</div><div class="ttdoc">Initialise the kernel's input, output and border mode.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_convolution_kernel_8cpp_source.xhtml#l01427">NEConvolutionKernel.cpp:1427</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_convolution_rectangle_kernel_xhtml"><div class="ttname"><a href="classarm__compute_1_1_n_e_convolution_rectangle_kernel.xhtml">arm_compute::NEConvolutionRectangleKernel</a></div><div class="ttdoc">Kernel for the running convolution on a rectangle matrix.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_convolution_kernel_8h_source.xhtml#l00212">NEConvolutionKernel.h:212</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_convolution_kernel_xhtml_a112b35dd205c62ea6ed1447ef226da82"><div class="ttname"><a href="classarm__compute_1_1_n_e_convolution_kernel.xhtml#a112b35dd205c62ea6ed1447ef226da82">arm_compute::NEConvolutionKernel::run</a></div><div class="ttdeci">void run(const Window &amp;window, const ThreadInfo &amp;info) override</div><div class="ttdoc">Execute the kernel on the passed window.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_convolution_kernel_8cpp_source.xhtml#l00624">NEConvolutionKernel.cpp:624</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_convolution_kernel_xhtml_a423f9a45a52983b4de5e2b347f4369c7"><div class="ttname"><a href="classarm__compute_1_1_n_e_convolution_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">arm_compute::NEConvolutionKernel::border_size</a></div><div class="ttdeci">BorderSize border_size() const override</div><div class="ttdoc">The size of the border for that kernel.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_convolution_kernel_8cpp_source.xhtml#l00318">NEConvolutionKernel.cpp:318</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_separable_convolution_hor_kernel_xhtml_a965a154580e00968b45aa6268986cd51"><div class="ttname"><a href="classarm__compute_1_1_n_e_separable_convolution_hor_kernel.xhtml#a965a154580e00968b45aa6268986cd51">arm_compute::NESeparableConvolutionHorKernel::NESeparableConvolutionHorKernel</a></div><div class="ttdeci">NESeparableConvolutionHorKernel()</div><div class="ttdoc">Default constructor.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_convolution_kernel_8cpp_source.xhtml#l00654">NEConvolutionKernel.cpp:654</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_separable_convolution_hor_kernel_xhtml_ab5656bb5b6334bdbe6e606c715872828"><div class="ttname"><a href="classarm__compute_1_1_n_e_separable_convolution_hor_kernel.xhtml#ab5656bb5b6334bdbe6e606c715872828">arm_compute::NESeparableConvolutionHorKernel::name</a></div><div class="ttdeci">const char * name() const override</div><div class="ttdoc">Name of the kernel.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_convolution_kernel_8h_source.xhtml#l00105">NEConvolutionKernel.h:105</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_convolution_kernel_xhtml_a230a4894adf8380eca9e8c2aac03e9b8"><div class="ttname"><a href="classarm__compute_1_1_n_e_convolution_kernel.xhtml#a230a4894adf8380eca9e8c2aac03e9b8">arm_compute::NEConvolutionKernel::NEConvolutionKernel</a></div><div class="ttdeci">NEConvolutionKernel()</div><div class="ttdoc">Default constructor.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_convolution_kernel_8cpp_source.xhtml#l00312">NEConvolutionKernel.cpp:312</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_separable_convolution_vert_kernel_xhtml_ad5b2a12ea8d073422e0615efca68ee22"><div class="ttname"><a href="classarm__compute_1_1_n_e_separable_convolution_vert_kernel.xhtml#ad5b2a12ea8d073422e0615efca68ee22">arm_compute::NESeparableConvolutionVertKernel::configure</a></div><div class="ttdeci">void configure(const ITensor *input, ITensor *output, const int16_t *conv_col, uint32_t scale, bool border_undefined)</div><div class="ttdoc">Initialise the kernel's input, output and border mode.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_convolution_kernel_8cpp_source.xhtml#l01103">NEConvolutionKernel.cpp:1103</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_separable_convolution_vert_kernel_xhtml_ac3aaa23fc2c41fdb7a6de14841631fbd"><div class="ttname"><a href="classarm__compute_1_1_n_e_separable_convolution_vert_kernel.xhtml#ac3aaa23fc2c41fdb7a6de14841631fbd">arm_compute::NESeparableConvolutionVertKernel::NESeparableConvolutionVertKernel</a></div><div class="ttdeci">NESeparableConvolutionVertKernel()</div><div class="ttdoc">Default constructor.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_convolution_kernel_8cpp_source.xhtml#l01091">NEConvolutionKernel.cpp:1091</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_acec6d8ad52a28972fa74e071c1a63b6a"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#acec6d8ad52a28972fa74e071c1a63b6a">arm_compute::test::validation::scale</a></div><div class="ttdeci">scale</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_o_n_2_pixel_wise_multiplication_8cpp_source.xhtml#l00375">PixelWiseMultiplication.cpp:375</a></div></div>
<div class="ttc" id="structarm__compute_1_1_thread_info_xhtml"><div class="ttname"><a href="structarm__compute_1_1_thread_info.xhtml">arm_compute::ThreadInfo</a></div><div class="ttdoc">Information about executing thread and CPU.</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_types_8h_source.xhtml#l00225">CPPTypes.h:225</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_separable_convolution_hor_kernel_xhtml_a2047b01f2cdd57602126cccb6bd08625"><div class="ttname"><a href="classarm__compute_1_1_n_e_separable_convolution_hor_kernel.xhtml#a2047b01f2cdd57602126cccb6bd08625">arm_compute::NESeparableConvolutionHorKernel::configure</a></div><div class="ttdeci">void configure(const ITensor *input, ITensor *output, const int16_t *conv_row, bool border_undefined)</div><div class="ttdoc">Initialise the kernel's input, output and border mode.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_convolution_kernel_8cpp_source.xhtml#l00666">NEConvolutionKernel.cpp:666</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_separable_convolution_vert_kernel_xhtml_a423f9a45a52983b4de5e2b347f4369c7"><div class="ttname"><a href="classarm__compute_1_1_n_e_separable_convolution_vert_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">arm_compute::NESeparableConvolutionVertKernel::border_size</a></div><div class="ttdeci">BorderSize border_size() const override</div><div class="ttdoc">The size of the border for that kernel.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_convolution_kernel_8cpp_source.xhtml#l01097">NEConvolutionKernel.cpp:1097</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_convolution_rectangle_kernel_xhtml_a112b35dd205c62ea6ed1447ef226da82"><div class="ttname"><a href="classarm__compute_1_1_n_e_convolution_rectangle_kernel.xhtml#a112b35dd205c62ea6ed1447ef226da82">arm_compute::NEConvolutionRectangleKernel::run</a></div><div class="ttdeci">void run(const Window &amp;window, const ThreadInfo &amp;info) override</div><div class="ttdoc">Execute the kernel on the passed window.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_convolution_kernel_8cpp_source.xhtml#l01471">NEConvolutionKernel.cpp:1471</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a4f4125dba5283887b34f889b1c615c0c"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a4f4125dba5283887b34f889b1c615c0c">arm_compute::test::validation::info</a></div><div class="ttdeci">info</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_convolution_layer_8cpp_source.xhtml#l00182">ConvolutionLayer.cpp:182</a></div></div>
<div class="ttc" id="_i_n_e_kernel_8h_xhtml"><div class="ttname"><a href="_i_n_e_kernel_8h.xhtml">INEKernel.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml">arm_compute::Window</a></div><div class="ttdoc">Describe a multidimensional execution window.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00039">Window.h:39</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_214608ef36d61442cb2b0c1c4e9a7def.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="dir_1fb090f0c6070330bfaccc4236d3ca0d.xhtml">core</a></li><li class="navelem"><a class="el" href="dir_315f6cf1ec0b2df3ae747ff8286a19f5.xhtml">NEON</a></li><li class="navelem"><a class="el" href="dir_2c3c4cb85e732569e2614ad40a451d53.xhtml">kernels</a></li><li class="navelem"><a class="el" href="_n_e_convolution_kernel_8h.xhtml">NEConvolutionKernel.h</a></li>
    <li class="footer">Generated on Fri Feb 21 2020 11:10:09 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
