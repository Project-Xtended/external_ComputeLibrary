<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/core/NEON/kernels/NEReductionOperationKernel.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.02.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_n_e_reduction_operation_kernel_8cpp_source.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">NEReductionOperationKernel.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_n_e_reduction_operation_kernel_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2017-2020 ARM Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_n_e_reduction_operation_kernel_8h.xhtml">arm_compute/core/NEON/kernels/NEReductionOperationKernel.h</a>&quot;</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_c_p_p_2_validate_8h.xhtml">arm_compute/core/CPP/Validate.h</a>&quot;</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_coordinates_8h.xhtml">arm_compute/core/Coordinates.h</a>&quot;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2core_2_helpers_8h.xhtml">arm_compute/core/Helpers.h</a>&quot;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_i_access_window_8h.xhtml">arm_compute/core/IAccessWindow.h</a>&quot;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_i_tensor_8h.xhtml">arm_compute/core/ITensor.h</a>&quot;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_i_n_e_kernel_8h.xhtml">arm_compute/core/NEON/INEKernel.h</a>&quot;</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_n_e_math_8h.xhtml">arm_compute/core/NEON/NEMath.h</a>&quot;</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_tensor_info_8h.xhtml">arm_compute/core/TensorInfo.h</a>&quot;</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_validate_8h.xhtml">arm_compute/core/Validate.h</a>&quot;</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_saturate_cast_8h.xhtml">arm_compute/core/utils/misc/SaturateCast.h</a>&quot;</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_shape_calculator_8h.xhtml">arm_compute/core/utils/misc/ShapeCalculator.h</a>&quot;</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="wrapper_8h.xhtml">arm_compute/core/NEON/wrapper/wrapper.h</a>&quot;</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="preprocessor">#include &lt;arm_neon.h&gt;</span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;{</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="keyword">namespace</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;{</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;uint32x4x4_t calculate_index(uint32_t idx, T a, T <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>, uint32x4x4_t c, <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45b">ReductionOperation</a> op, <span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#accc088009d44c521706aa98d6387ee21">axis</a>)</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;{</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    uint32x4_t mask{ 0 };</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <span class="keywordflow">if</span>(op == <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba39102811589b9a0d7a6aa8721663b4d1">ReductionOperation::ARG_IDX_MIN</a>)</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    {</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;        mask = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a7eedba29396b0db728bffdf5f202d85c">wrapper::vcgt</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>, a);</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    }</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    {</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;        mask = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a0d7eabdb6566ec547d8ce0a42ab0efd8">wrapper::vclt</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>, a);</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    }</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    uint32x4_t vec_idx = { idx, idx + 1, idx + 2, idx + 3 };</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <span class="keywordflow">if</span>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#accc088009d44c521706aa98d6387ee21">axis</a> != 0)</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    {</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;        vec_idx = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a39e87435be178fba49b76f49426ef873">wrapper::vdup_n</a>(idx, wrapper::traits::vector_128_tag{});</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    }</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    uint32x4x4_t res = { { <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8e5924674eee0f441d54eb75d656700f">wrapper::vbsl</a>(mask, vec_idx, c.val[0]), 0, 0, 0 } };</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <span class="keywordflow">return</span> res;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;}</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="keyword">template</span> &lt;&gt;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;uint32x4x4_t calculate_index(uint32_t idx, uint8x16_t a, uint8x16_t <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>, uint32x4x4_t c, <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45b">ReductionOperation</a> op, <span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#accc088009d44c521706aa98d6387ee21">axis</a>)</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;{</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    uint32x4x4_t mask{ { 0 } };</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    uint8x16_t   mask_u8{ 0 };</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <span class="keywordflow">if</span>(op == <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba39102811589b9a0d7a6aa8721663b4d1">ReductionOperation::ARG_IDX_MIN</a>)</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    {</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        mask_u8 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a7eedba29396b0db728bffdf5f202d85c">wrapper::vcgt</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>, a);</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    }</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    {</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        mask_u8 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a0d7eabdb6566ec547d8ce0a42ab0efd8">wrapper::vclt</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>, a);</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    }</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <span class="keyword">auto</span> wide_u16_1 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#afd68f4669bdf3bfe0ec26c6a1825e248">wrapper::vorr</a>(vshll_n_u8(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a2902775707bc7bf7d6da1bda1cc15783">wrapper::vgetlow</a>(mask_u8), 8), <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8dbba1731c32d176ae6635be1c65cbd6">wrapper::vmovl</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a2902775707bc7bf7d6da1bda1cc15783">wrapper::vgetlow</a>(mask_u8)));</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <span class="keyword">auto</span> wide_u16_2 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#afd68f4669bdf3bfe0ec26c6a1825e248">wrapper::vorr</a>(vshll_n_u8(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a95ee388aa7c5bccab918235dc538a6b3">wrapper::vgethigh</a>(mask_u8), 8), <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8dbba1731c32d176ae6635be1c65cbd6">wrapper::vmovl</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a95ee388aa7c5bccab918235dc538a6b3">wrapper::vgethigh</a>(mask_u8)));</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    mask.val[0]     = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#afd68f4669bdf3bfe0ec26c6a1825e248">wrapper::vorr</a>(vshll_n_u16(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a2902775707bc7bf7d6da1bda1cc15783">wrapper::vgetlow</a>(wide_u16_1), 16), <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8dbba1731c32d176ae6635be1c65cbd6">wrapper::vmovl</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a2902775707bc7bf7d6da1bda1cc15783">wrapper::vgetlow</a>(wide_u16_1)));</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    mask.val[1]     = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#afd68f4669bdf3bfe0ec26c6a1825e248">wrapper::vorr</a>(vshll_n_u16(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a95ee388aa7c5bccab918235dc538a6b3">wrapper::vgethigh</a>(wide_u16_1), 16), <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8dbba1731c32d176ae6635be1c65cbd6">wrapper::vmovl</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a95ee388aa7c5bccab918235dc538a6b3">wrapper::vgethigh</a>(wide_u16_1)));</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    mask.val[2]     = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#afd68f4669bdf3bfe0ec26c6a1825e248">wrapper::vorr</a>(vshll_n_u16(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a2902775707bc7bf7d6da1bda1cc15783">wrapper::vgetlow</a>(wide_u16_2), 16), <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8dbba1731c32d176ae6635be1c65cbd6">wrapper::vmovl</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a2902775707bc7bf7d6da1bda1cc15783">wrapper::vgetlow</a>(wide_u16_2)));</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    mask.val[3]     = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#afd68f4669bdf3bfe0ec26c6a1825e248">wrapper::vorr</a>(vshll_n_u16(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a95ee388aa7c5bccab918235dc538a6b3">wrapper::vgethigh</a>(wide_u16_2), 16), <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8dbba1731c32d176ae6635be1c65cbd6">wrapper::vmovl</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a95ee388aa7c5bccab918235dc538a6b3">wrapper::vgethigh</a>(wide_u16_2)));</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    uint32x4x4_t vec_idx = { { { idx + 0, idx + 1, idx + 2, idx + 3 },</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;            { idx + 4, idx + 5, idx + 6, idx + 7 },</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;            { idx + 8, idx + 9, idx + 10, idx + 11 },</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;            { idx + 12, idx + 13, idx + 14, idx + 15 }</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        }</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    };</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <span class="keywordflow">if</span>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#accc088009d44c521706aa98d6387ee21">axis</a> != 0)</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    {</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        vec_idx.val[0] = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a39e87435be178fba49b76f49426ef873">wrapper::vdup_n</a>(idx, wrapper::traits::vector_128_tag{});</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        vec_idx.val[1] = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a39e87435be178fba49b76f49426ef873">wrapper::vdup_n</a>(idx, wrapper::traits::vector_128_tag{});</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        vec_idx.val[2] = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a39e87435be178fba49b76f49426ef873">wrapper::vdup_n</a>(idx, wrapper::traits::vector_128_tag{});</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        vec_idx.val[3] = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a39e87435be178fba49b76f49426ef873">wrapper::vdup_n</a>(idx, wrapper::traits::vector_128_tag{});</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    }</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    uint32x4x4_t res =</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    {</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        {</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;            vbslq_u32(mask.val[0], vec_idx.val[0], c.val[0]),</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;            vbslq_u32(mask.val[1], vec_idx.val[1], c.val[1]),</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;            vbslq_u32(mask.val[2], vec_idx.val[2], c.val[2]),</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;            vbslq_u32(mask.val[3], vec_idx.val[3], c.val[3])</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        }</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    };</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    <span class="keywordflow">return</span> res;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;}</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="comment">// Helper function to calculate the minimum value of the input vector. All the elements in the output vector contain the min value.</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;float32x2_t calculate_min(float32x4_t in)</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;{</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    <span class="keyword">auto</span> pmin = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ab82845d16e532ba6603e1b960a79384b">wrapper::vpmin</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a95ee388aa7c5bccab918235dc538a6b3">wrapper::vgethigh</a>(in), <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a2902775707bc7bf7d6da1bda1cc15783">wrapper::vgetlow</a>(in));</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ab82845d16e532ba6603e1b960a79384b">wrapper::vpmin</a>(pmin, pmin);</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;}</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="comment">// Helper function to calculate the maximum value of the input vector. All the elements in the output vector contain the max value.</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;float32x2_t calculate_max(float32x4_t in)</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;{</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    <span class="keyword">auto</span> pmax = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ab799fd9cd5fc5989593e69c55bc400f9">wrapper::vpmax</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a95ee388aa7c5bccab918235dc538a6b3">wrapper::vgethigh</a>(in), <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a2902775707bc7bf7d6da1bda1cc15783">wrapper::vgetlow</a>(in));</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ab799fd9cd5fc5989593e69c55bc400f9">wrapper::vpmax</a>(pmax, pmax);</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;}</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="comment">// Helper function to calculate the minimum value of the input vector. All the elements in the output vector contain the min value.</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;int32x2_t calculate_min(int32x4_t in)</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;{</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    <span class="keyword">auto</span> pmin = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ab82845d16e532ba6603e1b960a79384b">wrapper::vpmin</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a95ee388aa7c5bccab918235dc538a6b3">wrapper::vgethigh</a>(in), <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a2902775707bc7bf7d6da1bda1cc15783">wrapper::vgetlow</a>(in));</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ab82845d16e532ba6603e1b960a79384b">wrapper::vpmin</a>(pmin, pmin);</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;}</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="comment">// Helper function to calculate the maximum value of the input vector. All the elements in the output vector contain the max value.</span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;int32x2_t calculate_max(int32x4_t in)</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;{</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    <span class="keyword">auto</span> pmax = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ab799fd9cd5fc5989593e69c55bc400f9">wrapper::vpmax</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a95ee388aa7c5bccab918235dc538a6b3">wrapper::vgethigh</a>(in), <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a2902775707bc7bf7d6da1bda1cc15783">wrapper::vgetlow</a>(in));</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ab799fd9cd5fc5989593e69c55bc400f9">wrapper::vpmax</a>(pmax, pmax);</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;}</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;uint32_t calculate_vector_index(uint32x4x4_t vec_res_idx, T vec_res_value, <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45b">ReductionOperation</a> op)</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;{</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    uint32x4_t res_idx_mask{ 0 };</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    uint32x4_t mask_ones = vdupq_n_u32(0xFFFFFFFF);</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    <span class="keywordflow">if</span>(op == <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba39102811589b9a0d7a6aa8721663b4d1">ReductionOperation::ARG_IDX_MIN</a>)</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    {</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;        <span class="keyword">auto</span> pmin    = calculate_min(vec_res_value);</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;        <span class="keyword">auto</span> mask    = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#aa7ccd655f600847f9d471604ed47e810">wrapper::vceq</a>(vec_res_value, <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a1598e7eb12a58fc53559332cd0c3ab6f">wrapper::vcombine</a>(pmin, pmin));</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;        res_idx_mask = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ac071623f14587f7cc6c4aea757d4378b">wrapper::vand</a>(vec_res_idx.val[0], mask);</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    }</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    {</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;        <span class="keyword">auto</span> pmax    = calculate_max(vec_res_value);</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;        <span class="keyword">auto</span> mask    = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#aa7ccd655f600847f9d471604ed47e810">wrapper::vceq</a>(vec_res_value, <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a1598e7eb12a58fc53559332cd0c3ab6f">wrapper::vcombine</a>(pmax, pmax));</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;        res_idx_mask = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ac071623f14587f7cc6c4aea757d4378b">wrapper::vand</a>(vec_res_idx.val[0], mask);</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    }</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    res_idx_mask = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a1894e825a225f3b2013f594cbffdae73">wrapper::vadd</a>(res_idx_mask, mask_ones);</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    <span class="keyword">auto</span> pmin    = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ab82845d16e532ba6603e1b960a79384b">wrapper::vpmin</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a95ee388aa7c5bccab918235dc538a6b3">wrapper::vgethigh</a>(res_idx_mask), <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a2902775707bc7bf7d6da1bda1cc15783">wrapper::vgetlow</a>(res_idx_mask));</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    pmin         = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ab82845d16e532ba6603e1b960a79384b">wrapper::vpmin</a>(pmin, pmin);</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    uint32_t res = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#aa16ace001ab8287faa46d6962f369219">wrapper::vgetlane</a>(pmin, 0);</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    <span class="keywordflow">return</span> (res - 0xFFFFFFFF);</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;}</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;<span class="comment">// Helper function to calculate the minimum value of the input vector. All the elements in the output vector contain the min value.</span></div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;<span class="keyword">inline</span> uint8x8_t calculate_min(uint8x16_t in)</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;{</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    <span class="keyword">auto</span> pmin = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ab82845d16e532ba6603e1b960a79384b">wrapper::vpmin</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a95ee388aa7c5bccab918235dc538a6b3">wrapper::vgethigh</a>(in), <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a2902775707bc7bf7d6da1bda1cc15783">wrapper::vgetlow</a>(in));</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    pmin      = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ab82845d16e532ba6603e1b960a79384b">wrapper::vpmin</a>(pmin, pmin);</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    pmin      = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ab82845d16e532ba6603e1b960a79384b">wrapper::vpmin</a>(pmin, pmin);</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ab82845d16e532ba6603e1b960a79384b">wrapper::vpmin</a>(pmin, pmin);</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;}</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;<span class="comment">// Helper function to calculate the maximum value of the input vector. All the elements in the output vector contain the max value.</span></div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;<span class="keyword">inline</span> uint8x8_t calculate_max(uint8x16_t in)</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;{</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    <span class="keyword">auto</span> pmax = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ab799fd9cd5fc5989593e69c55bc400f9">wrapper::vpmax</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a95ee388aa7c5bccab918235dc538a6b3">wrapper::vgethigh</a>(in), <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a2902775707bc7bf7d6da1bda1cc15783">wrapper::vgetlow</a>(in));</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    pmax      = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ab799fd9cd5fc5989593e69c55bc400f9">wrapper::vpmax</a>(pmax, pmax);</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    pmax      = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ab799fd9cd5fc5989593e69c55bc400f9">wrapper::vpmax</a>(pmax, pmax);</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ab799fd9cd5fc5989593e69c55bc400f9">wrapper::vpmax</a>(pmax, pmax);</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;}</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;<span class="keyword">template</span> &lt;&gt;</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;uint32_t calculate_vector_index(uint32x4x4_t vec_res_idx, uint8x16_t vec_res_value, <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45b">ReductionOperation</a> op)</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;{</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    uint32x4x4_t res_idx_mask{ { 0 } };</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    uint32x4_t   mask_ones = vdupq_n_u32(0xFFFFFFFF);</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    uint8x16_t   mask_u8{ 0 };</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    <span class="keywordflow">if</span>(op == <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba39102811589b9a0d7a6aa8721663b4d1">ReductionOperation::ARG_IDX_MIN</a>)</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    {</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;        <span class="keyword">auto</span> pmin = calculate_min(vec_res_value);</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;        mask_u8   = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#aa7ccd655f600847f9d471604ed47e810">wrapper::vceq</a>(vec_res_value, <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a1598e7eb12a58fc53559332cd0c3ab6f">wrapper::vcombine</a>(pmin, pmin));</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    }</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    {</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;        <span class="keyword">auto</span> pmax = calculate_max(vec_res_value);</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;        mask_u8   = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#aa7ccd655f600847f9d471604ed47e810">wrapper::vceq</a>(vec_res_value, <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a1598e7eb12a58fc53559332cd0c3ab6f">wrapper::vcombine</a>(pmax, pmax));</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    }</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    <span class="comment">// Widen vectors</span></div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    <span class="keyword">auto</span> wide_u16_1     = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#afd68f4669bdf3bfe0ec26c6a1825e248">wrapper::vorr</a>(vshll_n_u8(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a2902775707bc7bf7d6da1bda1cc15783">wrapper::vgetlow</a>(mask_u8), 8), <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8dbba1731c32d176ae6635be1c65cbd6">wrapper::vmovl</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a2902775707bc7bf7d6da1bda1cc15783">wrapper::vgetlow</a>(mask_u8)));</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    <span class="keyword">auto</span> wide_u16_2     = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#afd68f4669bdf3bfe0ec26c6a1825e248">wrapper::vorr</a>(vshll_n_u8(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a95ee388aa7c5bccab918235dc538a6b3">wrapper::vgethigh</a>(mask_u8), 8), <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8dbba1731c32d176ae6635be1c65cbd6">wrapper::vmovl</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a95ee388aa7c5bccab918235dc538a6b3">wrapper::vgethigh</a>(mask_u8)));</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    <span class="keyword">auto</span> wide_u32_1     = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#afd68f4669bdf3bfe0ec26c6a1825e248">wrapper::vorr</a>(vshll_n_u16(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a2902775707bc7bf7d6da1bda1cc15783">wrapper::vgetlow</a>(wide_u16_1), 16), <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8dbba1731c32d176ae6635be1c65cbd6">wrapper::vmovl</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a2902775707bc7bf7d6da1bda1cc15783">wrapper::vgetlow</a>(wide_u16_1)));</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    <span class="keyword">auto</span> wide_u32_2     = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#afd68f4669bdf3bfe0ec26c6a1825e248">wrapper::vorr</a>(vshll_n_u16(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a95ee388aa7c5bccab918235dc538a6b3">wrapper::vgethigh</a>(wide_u16_1), 16), <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8dbba1731c32d176ae6635be1c65cbd6">wrapper::vmovl</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a95ee388aa7c5bccab918235dc538a6b3">wrapper::vgethigh</a>(wide_u16_1)));</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    <span class="keyword">auto</span> wide_u32_3     = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#afd68f4669bdf3bfe0ec26c6a1825e248">wrapper::vorr</a>(vshll_n_u16(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a2902775707bc7bf7d6da1bda1cc15783">wrapper::vgetlow</a>(wide_u16_2), 16), <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8dbba1731c32d176ae6635be1c65cbd6">wrapper::vmovl</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a2902775707bc7bf7d6da1bda1cc15783">wrapper::vgetlow</a>(wide_u16_2)));</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;    <span class="keyword">auto</span> wide_u32_4     = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#afd68f4669bdf3bfe0ec26c6a1825e248">wrapper::vorr</a>(vshll_n_u16(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a95ee388aa7c5bccab918235dc538a6b3">wrapper::vgethigh</a>(wide_u16_2), 16), <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8dbba1731c32d176ae6635be1c65cbd6">wrapper::vmovl</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a95ee388aa7c5bccab918235dc538a6b3">wrapper::vgethigh</a>(wide_u16_2)));</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    res_idx_mask.val[0] = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ac071623f14587f7cc6c4aea757d4378b">wrapper::vand</a>(vec_res_idx.val[0], wide_u32_1);</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    res_idx_mask.val[1] = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ac071623f14587f7cc6c4aea757d4378b">wrapper::vand</a>(vec_res_idx.val[1], wide_u32_2);</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    res_idx_mask.val[2] = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ac071623f14587f7cc6c4aea757d4378b">wrapper::vand</a>(vec_res_idx.val[2], wide_u32_3);</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;    res_idx_mask.val[3] = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ac071623f14587f7cc6c4aea757d4378b">wrapper::vand</a>(vec_res_idx.val[3], wide_u32_4);</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;    res_idx_mask.val[0] = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a1894e825a225f3b2013f594cbffdae73">wrapper::vadd</a>(res_idx_mask.val[0], mask_ones);</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;    res_idx_mask.val[1] = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a1894e825a225f3b2013f594cbffdae73">wrapper::vadd</a>(res_idx_mask.val[1], mask_ones);</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    res_idx_mask.val[2] = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a1894e825a225f3b2013f594cbffdae73">wrapper::vadd</a>(res_idx_mask.val[2], mask_ones);</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    res_idx_mask.val[3] = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a1894e825a225f3b2013f594cbffdae73">wrapper::vadd</a>(res_idx_mask.val[3], mask_ones);</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;    uint32_t res  = 0xFFFFFFFF;</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;    <span class="keywordtype">int</span>      iter = 0;</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;    <span class="keywordflow">do</span></div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;    {</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;        <span class="keyword">auto</span> pmin = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ab82845d16e532ba6603e1b960a79384b">wrapper::vpmin</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a95ee388aa7c5bccab918235dc538a6b3">wrapper::vgethigh</a>(res_idx_mask.val[iter]), <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a2902775707bc7bf7d6da1bda1cc15783">wrapper::vgetlow</a>(res_idx_mask.val[iter]));</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;        pmin      = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ab82845d16e532ba6603e1b960a79384b">wrapper::vpmin</a>(pmin, pmin);</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;        res       = std::min(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#aa16ace001ab8287faa46d6962f369219">wrapper::vgetlane</a>(pmin, 0), res);</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;        iter++;</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;    }</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;    <span class="keywordflow">while</span>(iter &lt; 4);</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;    <span class="keywordflow">return</span> (res - 0xFFFFFFFF);</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;}</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;<span class="preprocessor">#ifdef __ARM_FEATURE_FP16_VECTOR_ARITHMETIC</span></div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;<span class="keyword">template</span> &lt;&gt;</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;uint32x4x4_t calculate_index(uint32_t idx, float16x8_t a, float16x8_t <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>, uint32x4x4_t c, <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45b">ReductionOperation</a> op, <span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#accc088009d44c521706aa98d6387ee21">axis</a>)</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;{</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;    uint32x4x2_t mask{ 0 };</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;    uint16x8_t   mask_u16{ 0 };</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;    <span class="keywordflow">if</span>(op == <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba39102811589b9a0d7a6aa8721663b4d1">ReductionOperation::ARG_IDX_MIN</a>)</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;    {</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;        mask_u16 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a7eedba29396b0db728bffdf5f202d85c">wrapper::vcgt</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>, a);</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;    }</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;    {</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;        mask_u16 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a0d7eabdb6566ec547d8ce0a42ab0efd8">wrapper::vclt</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>, a);</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;    }</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;    mask.val[0]          = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8dbba1731c32d176ae6635be1c65cbd6">wrapper::vmovl</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a2902775707bc7bf7d6da1bda1cc15783">wrapper::vgetlow</a>(mask_u16));</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;    mask.val[1]          = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8dbba1731c32d176ae6635be1c65cbd6">wrapper::vmovl</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a95ee388aa7c5bccab918235dc538a6b3">wrapper::vgethigh</a>(mask_u16));</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;    uint32x4x2_t vec_idx = { { { idx + 0, idx + 1, idx + 2, idx + 3 },</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;            { idx + 4, idx + 5, idx + 6, idx + 7 }</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;        }</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;    };</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;    <span class="keywordflow">if</span>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#accc088009d44c521706aa98d6387ee21">axis</a> != 0)</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;    {</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;        vec_idx.val[0] = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a39e87435be178fba49b76f49426ef873">wrapper::vdup_n</a>(idx, wrapper::traits::vector_128_tag{});</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;        vec_idx.val[1] = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a39e87435be178fba49b76f49426ef873">wrapper::vdup_n</a>(idx, wrapper::traits::vector_128_tag{});</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    }</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;    uint32x4x4_t res = { <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8e5924674eee0f441d54eb75d656700f">wrapper::vbsl</a>(mask.val[0], vec_idx.val[0], c.val[0]),</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;                         <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8e5924674eee0f441d54eb75d656700f">wrapper::vbsl</a>(mask.val[1], vec_idx.val[1], c.val[1]),</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;                         0, 0</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;                       };</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;    <span class="keywordflow">return</span> res;</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;}</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;<span class="comment">// Helper function to calculate the minimum value of the input vector. All the elements in the output vector contain the min value.</span></div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;<span class="keyword">inline</span> float16x4_t calculate_min(float16x8_t in)</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;{</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;    <span class="keyword">auto</span> pmin = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ab82845d16e532ba6603e1b960a79384b">wrapper::vpmin</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a95ee388aa7c5bccab918235dc538a6b3">wrapper::vgethigh</a>(in), <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a2902775707bc7bf7d6da1bda1cc15783">wrapper::vgetlow</a>(in));</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;    pmin      = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ab82845d16e532ba6603e1b960a79384b">wrapper::vpmin</a>(pmin, pmin);</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ab82845d16e532ba6603e1b960a79384b">wrapper::vpmin</a>(pmin, pmin);</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;}</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;<span class="comment">// Helper function to calculate the maximum value of the input vector. All the elements in the output vector contain the max value.</span></div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;<span class="keyword">inline</span> float16x4_t calculate_max(float16x8_t in)</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;{</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;    <span class="keyword">auto</span> pmax = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ab799fd9cd5fc5989593e69c55bc400f9">wrapper::vpmax</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a95ee388aa7c5bccab918235dc538a6b3">wrapper::vgethigh</a>(in), <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a2902775707bc7bf7d6da1bda1cc15783">wrapper::vgetlow</a>(in));</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;    pmax      = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ab799fd9cd5fc5989593e69c55bc400f9">wrapper::vpmax</a>(pmax, pmax);</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ab799fd9cd5fc5989593e69c55bc400f9">wrapper::vpmax</a>(pmax, pmax);</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;}</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;<span class="keyword">template</span> &lt;&gt;</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;uint32_t calculate_vector_index(uint32x4x4_t vec_res_idx, float16x8_t vec_res_value, <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45b">ReductionOperation</a> op)</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;{</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;    uint32x4x2_t res_idx_mask{ 0 };</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;    uint32x4_t   mask_ones = vdupq_n_u32(0xFFFFFFFF);</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;    uint16x8_t   mask_u16;</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;    <span class="keywordflow">if</span>(op == <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba39102811589b9a0d7a6aa8721663b4d1">ReductionOperation::ARG_IDX_MIN</a>)</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;    {</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;        <span class="keyword">auto</span> pmin = calculate_min(vec_res_value);</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;        mask_u16  = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#aa7ccd655f600847f9d471604ed47e810">wrapper::vceq</a>(vec_res_value, <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a1598e7eb12a58fc53559332cd0c3ab6f">wrapper::vcombine</a>(pmin, pmin));</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;    }</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;    {</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;        <span class="keyword">auto</span> pmax = calculate_max(vec_res_value);</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;        mask_u16  = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#aa7ccd655f600847f9d471604ed47e810">wrapper::vceq</a>(vec_res_value, <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a1598e7eb12a58fc53559332cd0c3ab6f">wrapper::vcombine</a>(pmax, pmax));</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;    }</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;    <span class="comment">// Widen vectors</span></div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;    <span class="keyword">auto</span> wide_u32_1     = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#afd68f4669bdf3bfe0ec26c6a1825e248">wrapper::vorr</a>(vshll_n_u16(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a2902775707bc7bf7d6da1bda1cc15783">wrapper::vgetlow</a>(mask_u16), 8), <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8dbba1731c32d176ae6635be1c65cbd6">wrapper::vmovl</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a2902775707bc7bf7d6da1bda1cc15783">wrapper::vgetlow</a>(mask_u16)));</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;    <span class="keyword">auto</span> wide_u32_2     = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#afd68f4669bdf3bfe0ec26c6a1825e248">wrapper::vorr</a>(vshll_n_u16(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a95ee388aa7c5bccab918235dc538a6b3">wrapper::vgethigh</a>(mask_u16), 8), <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8dbba1731c32d176ae6635be1c65cbd6">wrapper::vmovl</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a95ee388aa7c5bccab918235dc538a6b3">wrapper::vgethigh</a>(mask_u16)));</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;    res_idx_mask.val[0] = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ac071623f14587f7cc6c4aea757d4378b">wrapper::vand</a>(vec_res_idx.val[0], wide_u32_1);</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;    res_idx_mask.val[1] = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ac071623f14587f7cc6c4aea757d4378b">wrapper::vand</a>(vec_res_idx.val[1], wide_u32_2);</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;    res_idx_mask.val[0] = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a1894e825a225f3b2013f594cbffdae73">wrapper::vadd</a>(res_idx_mask.val[0], mask_ones);</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;    res_idx_mask.val[1] = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a1894e825a225f3b2013f594cbffdae73">wrapper::vadd</a>(res_idx_mask.val[1], mask_ones);</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;    uint32_t res  = 0xFFFFFFFF;</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;    <span class="keywordtype">int</span>      iter = 0;</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;    <span class="keywordflow">do</span></div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;    {</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;        <span class="keyword">auto</span> pmin = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ab82845d16e532ba6603e1b960a79384b">wrapper::vpmin</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a95ee388aa7c5bccab918235dc538a6b3">wrapper::vgethigh</a>(res_idx_mask.val[iter]), <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a2902775707bc7bf7d6da1bda1cc15783">wrapper::vgetlow</a>(res_idx_mask.val[iter]));</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;        pmin      = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ab82845d16e532ba6603e1b960a79384b">wrapper::vpmin</a>(pmin, pmin);</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;        res       = std::min(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#aa16ace001ab8287faa46d6962f369219">wrapper::vgetlane</a>(pmin, 0), res);</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;        iter++;</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;    }</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;    <span class="keywordflow">while</span>(iter &lt; 2);</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;    <span class="keywordflow">return</span> (res - 0xFFFFFFFF);</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;}</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;<span class="preprocessor">#endif // __ARM_FEATURE_FP16_VECTOR_ARITHMETIC</span></div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> F&gt;</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;<span class="keyword">class </span>Reducer</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;{</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;    <span class="keyword">static</span> <span class="keywordtype">void</span> reduceX(<span class="keyword">const</span> Window &amp;window, <span class="keyword">const</span> ITensor *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, ITensor *output, F f, <span class="keyword">const</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45b">ReductionOperation</a> op)</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;    {</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;        <span class="comment">// Set out window</span></div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;        Window out_window(window);</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;        out_window.set(<a class="code" href="classarm__compute_1_1_window.xhtml#aa96e81276ee4f87ab386cd05a5539a7d">Window::DimX</a>, Window::Dimension(0, 0, 0));</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;        <span class="comment">// Get first input and output slices</span></div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;        Window in_slice  = window.first_slice_window_1D();</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;        Window out_slice = out_window.first_slice_window_1D();</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;        <span class="keywordflow">do</span></div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;        {</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;            Iterator in(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, in_slice);</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;            Iterator out(output, out_slice);</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;            f(in, out, in_slice, out_slice, *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;info(), op);</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;        }</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;        <span class="keywordflow">while</span>(window.slide_window_slice_1D(in_slice) &amp;&amp; out_window.slide_window_slice_1D(out_slice));</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;    }</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;    <span class="keyword">static</span> <span class="keywordtype">void</span> reduceY(<span class="keyword">const</span> Window &amp;window, <span class="keyword">const</span> ITensor *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, ITensor *output, F f, <span class="keyword">const</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45b">ReductionOperation</a> op)</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;    {</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;        <span class="comment">// Set in window</span></div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;        Window in_window(window);</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;        Window out_window(window);</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;        in_window.set(<a class="code" href="classarm__compute_1_1_window.xhtml#ad2d402364fa822b0b7775081291eeca9">Window::DimY</a>, Window::Dimension(0, 1, 1));</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;        out_window.set(<a class="code" href="classarm__compute_1_1_window.xhtml#ad2d402364fa822b0b7775081291eeca9">Window::DimY</a>, Window::Dimension(0, output-&gt;info()-&gt;dimension(1), output-&gt;info()-&gt;dimension(1)));</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;        <span class="comment">// Get first input and output slices</span></div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;        Window in_slice  = in_window.first_slice_window_2D();</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;        Window out_slice = out_window.first_slice_window_2D();</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;        <span class="keywordflow">do</span></div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;        {</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;            Iterator in(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, in_slice);</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;            Iterator out(output, out_slice);</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;            f(in, out, in_slice, out_slice, *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;info(), 1, op);</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;        }</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;        <span class="keywordflow">while</span>(in_window.slide_window_slice_2D(in_slice) &amp;&amp; out_window.slide_window_slice_2D(out_slice));</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;    }</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;    <span class="keyword">static</span> <span class="keywordtype">void</span> reduceZ(<span class="keyword">const</span> Window &amp;window, <span class="keyword">const</span> ITensor *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, ITensor *output, F f, <span class="keyword">const</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45b">ReductionOperation</a> op)</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;    {</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;        <span class="comment">// Set in window</span></div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;        Window in_window(window);</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;        Window out_window(window);</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;        in_window.set(<a class="code" href="classarm__compute_1_1_window.xhtml#a893d17b56b9abc4423ce26e9a24ac5dc">Window::DimZ</a>, Window::Dimension(0, 1, 1));</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;        out_window.set(<a class="code" href="classarm__compute_1_1_window.xhtml#a893d17b56b9abc4423ce26e9a24ac5dc">Window::DimZ</a>, Window::Dimension(0, output-&gt;info()-&gt;dimension(2), output-&gt;info()-&gt;dimension(2)));</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;        <span class="comment">// Get first input and output slices</span></div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;        Window in_slice  = in_window.first_slice_window_3D();</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;        Window out_slice = out_window.first_slice_window_3D();</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;        <span class="keywordflow">do</span></div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;        {</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;            Iterator in(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, in_slice);</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;            Iterator out(output, out_slice);</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;            f(in, out, in_slice, out_slice, *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;info(), 2, op);</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;        }</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;        <span class="keywordflow">while</span>(in_window.slide_window_slice_3D(in_slice) &amp;&amp; out_window.slide_window_slice_3D(out_slice));</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;    }</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;    <span class="keyword">static</span> <span class="keywordtype">void</span> reduceW(<span class="keyword">const</span> Window &amp;window, <span class="keyword">const</span> ITensor *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, ITensor *output, F f, <span class="keyword">const</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45b">ReductionOperation</a> op)</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;    {</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;        <span class="comment">// Set in/out window</span></div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;        Window in_window(window);</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;        Window out_window(window);</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;        in_window.set(3, Window::Dimension(0, 1, 1));</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;        out_window.set(3, Window::Dimension(0, 1, 1));</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;        <span class="comment">// Get first input and output slices</span></div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;        Window in_slice  = in_window.first_slice_window_4D();</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;        Window out_slice = out_window.first_slice_window_4D();</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;        <span class="keywordflow">do</span></div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;        {</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;            Iterator in(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, in_slice);</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;            Iterator out(output, out_slice);</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;            f(in, out, in_slice, out_slice, *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;info(), 3, op);</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;        }</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;        <span class="keywordflow">while</span>(in_window.slide_window_slice_4D(in_slice) &amp;&amp; out_window.slide_window_slice_4D(out_slice));</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;    }</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;};</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keywordtype">int</span> S&gt;</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;<span class="keyword">struct </span>RedOpX</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;{<span class="comment"></span></div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;<span class="comment">    /** NEON vector tag type. */</span></div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;    <span class="keyword">using</span> ExactTagType = <span class="keyword">typename</span> wrapper::traits::neon_vector&lt;T, S&gt;::tag_type;</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;    <span class="keyword">inline</span> <span class="keywordtype">void</span> operator()(Iterator &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, Iterator &amp;output, Window &amp;in_slice, Window &amp;out_slice, <span class="keyword">const</span> TensorInfo &amp;in_info, <span class="keyword">const</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45b">ReductionOperation</a> op)</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;    {</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;        <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(out_slice);</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;        <span class="keyword">auto</span> init_res_value = static_cast&lt;T&gt;(0.f);</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;        <span class="keywordflow">switch</span>(op)</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;        {</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;            <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba654fed6e9b6c154d04bcaa439e32d0d5">ReductionOperation::ARG_IDX_MAX</a>:</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;            <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba39102811589b9a0d7a6aa8721663b4d1">ReductionOperation::ARG_IDX_MIN</a>:</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;            <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#adf2ced65e536375a1c96425d9fced858ace31e2a082d17e038fcc6e3006166653">ReductionOperation::MIN</a>:</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;            <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#adf2ced65e536375a1c96425d9fced858a26a4b44a837bf97b972628509912b4a5">ReductionOperation::MAX</a>:</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;            {</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;                init_res_value = *reinterpret_cast&lt;T *&gt;(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>.ptr());</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;                <span class="keywordflow">break</span>;</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;            }</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;            <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45bac8074bb318fb85693233e64acc64c1ed">ReductionOperation::PROD</a>:</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;            {</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;                init_res_value = static_cast&lt;T&gt;(1.f);</div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;                <span class="keywordflow">break</span>;</div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;            }</div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;            <span class="keywordflow">default</span>:</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;                <span class="keywordflow">break</span>;</div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;        }</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;        <span class="keyword">auto</span>         vec_res_value = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a39e87435be178fba49b76f49426ef873">wrapper::vdup_n</a>(init_res_value, ExactTagType{});</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;        uint32x4x4_t vec_res_idx{ { 0 } };</div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;        <a class="code" href="namespacearm__compute.xhtml#a5002bf7ec46d52971f9526e94172cfee">execute_window_loop</a>(in_slice, [&amp;](<span class="keyword">const</span> Coordinates &amp; <span class="keywordtype">id</span>)</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;        {</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;            <span class="keyword">const</span> <span class="keyword">auto</span> in_ptr       = reinterpret_cast&lt;const T *&gt;(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>.ptr());</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;            <span class="keyword">const</span> <span class="keyword">auto</span> vec_elements = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a77f54eded7fef436d3a4f21ad5a00da6">wrapper::vloadq</a>(in_ptr);</div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;            <span class="keywordflow">switch</span>(op)</div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;            {</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba2ce6e134b828b72fad160fa17c8d1b64">ReductionOperation::SUM_SQUARE</a>:</div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;                    vec_res_value = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a1894e825a225f3b2013f594cbffdae73">wrapper::vadd</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(vec_elements, vec_elements), vec_res_value);</div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45bafc54513dae613e117ffc4169e48bfce5">ReductionOperation::MEAN_SUM</a>:</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba6970bdc2201030b9c03fbdcf3973858a">ReductionOperation::SUM</a>:</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;                    vec_res_value = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a1894e825a225f3b2013f594cbffdae73">wrapper::vadd</a>(vec_elements, vec_res_value);</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45bac8074bb318fb85693233e64acc64c1ed">ReductionOperation::PROD</a>:</div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;                    vec_res_value = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(vec_elements, vec_res_value);</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba39102811589b9a0d7a6aa8721663b4d1">ReductionOperation::ARG_IDX_MIN</a>:</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;                {</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;                    <span class="keyword">auto</span> temp_vec_res_value = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ab026a1aeec48074092f548c130c323f4">wrapper::vmin</a>(vec_elements, vec_res_value);</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;                    vec_res_idx             = calculate_index&lt;decltype(vec_res_value)&gt;(<span class="keywordtype">id</span>.x(), temp_vec_res_value, vec_res_value, vec_res_idx, op, 0);</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;                    vec_res_value           = temp_vec_res_value;</div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;                }</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba654fed6e9b6c154d04bcaa439e32d0d5">ReductionOperation::ARG_IDX_MAX</a>:</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;                {</div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;                    <span class="keyword">auto</span> temp_vec_res_value = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8d1d14000c959f1146a8a64e1dafae5f">wrapper::vmax</a>(vec_elements, vec_res_value);</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;                    vec_res_idx             = calculate_index&lt;decltype(vec_res_value)&gt;(<span class="keywordtype">id</span>.x(), temp_vec_res_value, vec_res_value, vec_res_idx, op, 0);</div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;                    vec_res_value           = temp_vec_res_value;</div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;                }</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#adf2ced65e536375a1c96425d9fced858ace31e2a082d17e038fcc6e3006166653">ReductionOperation::MIN</a>:</div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;                {</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;                    vec_res_value = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ab026a1aeec48074092f548c130c323f4">wrapper::vmin</a>(vec_elements, vec_res_value);</div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;                }</div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#adf2ced65e536375a1c96425d9fced858a26a4b44a837bf97b972628509912b4a5">ReductionOperation::MAX</a>:</div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;                {</div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;                    vec_res_value = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8d1d14000c959f1146a8a64e1dafae5f">wrapper::vmax</a>(vec_elements, vec_res_value);</div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;                }</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;                <span class="keywordflow">default</span>:</div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;                    <a class="code" href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;Not supported&quot;</span>);</div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;            }</div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;        },</div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;        <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>);</div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;</div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;        <span class="keywordflow">switch</span>(op)</div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;        {</div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;            <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba6970bdc2201030b9c03fbdcf3973858a">ReductionOperation::SUM</a>:</div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;            <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba2ce6e134b828b72fad160fa17c8d1b64">ReductionOperation::SUM_SQUARE</a>:</div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;            <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45bafc54513dae613e117ffc4169e48bfce5">ReductionOperation::MEAN_SUM</a>:</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;            {</div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;                <span class="keyword">auto</span> carry_res = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a475ee3c8ef70a2e4f18effd1d527a63a">wrapper::vpadd</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a95ee388aa7c5bccab918235dc538a6b3">wrapper::vgethigh</a>(vec_res_value), <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a2902775707bc7bf7d6da1bda1cc15783">wrapper::vgetlow</a>(vec_res_value));</div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;                <span class="keywordflow">for</span>(<span class="keywordtype">int</span> i = 0; i &lt; S / 4; ++i)</div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;                {</div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;                    carry_res = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a475ee3c8ef70a2e4f18effd1d527a63a">wrapper::vpadd</a>(carry_res, carry_res);</div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;                }</div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;                <span class="keyword">auto</span> res = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#aa16ace001ab8287faa46d6962f369219">wrapper::vgetlane</a>(carry_res, 0);</div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;</div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;                <span class="keywordflow">if</span>(op == <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45bafc54513dae613e117ffc4169e48bfce5">ReductionOperation::MEAN_SUM</a>)</div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;                {</div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;                    res /= in_info.dimension(0);</div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;                }</div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;</div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;                *(reinterpret_cast&lt;T *&gt;(output.ptr())) = res;</div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;                <span class="keywordflow">break</span>;</div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;            }</div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;            <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45bac8074bb318fb85693233e64acc64c1ed">ReductionOperation::PROD</a>:</div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;            {</div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;                <span class="keyword">auto</span> carry_res = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a95ee388aa7c5bccab918235dc538a6b3">wrapper::vgethigh</a>(vec_res_value), <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a2902775707bc7bf7d6da1bda1cc15783">wrapper::vgetlow</a>(vec_res_value));</div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;                T    res       = 1;</div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;                <span class="keywordflow">for</span>(<span class="keywordtype">int</span> i = 0; i &lt; S / 2; ++i)</div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;                {</div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;                    res *= <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#aa16ace001ab8287faa46d6962f369219">wrapper::vgetlane</a>(carry_res, i);</div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;                }</div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;                *(reinterpret_cast&lt;T *&gt;(output.ptr())) = res;</div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;                <span class="keywordflow">break</span>;</div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;            }</div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;            <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba39102811589b9a0d7a6aa8721663b4d1">ReductionOperation::ARG_IDX_MIN</a>:</div><div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;            <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba654fed6e9b6c154d04bcaa439e32d0d5">ReductionOperation::ARG_IDX_MAX</a>:</div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;            {</div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;                <span class="keyword">auto</span> res                                      = calculate_vector_index&lt;decltype(vec_res_value)&gt;(vec_res_idx, vec_res_value, op);</div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;                *(reinterpret_cast&lt;uint32_t *&gt;(output.ptr())) = res;</div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;                <span class="keywordflow">break</span>;</div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;            }</div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;            <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#adf2ced65e536375a1c96425d9fced858ace31e2a082d17e038fcc6e3006166653">ReductionOperation::MIN</a>:</div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;            {</div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;                *(reinterpret_cast&lt;T *&gt;(output.ptr())) = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#aa16ace001ab8287faa46d6962f369219">wrapper::vgetlane</a>(calculate_min(vec_res_value), 0);</div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;                <span class="keywordflow">break</span>;</div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;            }</div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;            <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#adf2ced65e536375a1c96425d9fced858a26a4b44a837bf97b972628509912b4a5">ReductionOperation::MAX</a>:</div><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;            {</div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;                *(reinterpret_cast&lt;T *&gt;(output.ptr())) = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#aa16ace001ab8287faa46d6962f369219">wrapper::vgetlane</a>(calculate_max(vec_res_value), 0);</div><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;                <span class="keywordflow">break</span>;</div><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;            }</div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;            <span class="keywordflow">default</span>:</div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;                <a class="code" href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;Not supported&quot;</span>);</div><div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;        }</div><div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;    }</div><div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;};</div><div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;</div><div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;<span class="keyword">struct </span>RedOpX_qasymm8</div><div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;{</div><div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;    <span class="keyword">inline</span> <span class="keywordtype">void</span> operator()(Iterator &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, Iterator &amp;output, Window &amp;in_slice, Window &amp;out_slice, <span class="keyword">const</span> TensorInfo &amp;in_info, <span class="keyword">const</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45b">ReductionOperation</a> op)</div><div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;    {</div><div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;        <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(out_slice);</div><div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;</div><div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;        <span class="keyword">const</span> UniformQuantizationInfo iq_info = in_info.quantization_info().uniform();</div><div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;</div><div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;        <span class="keyword">auto</span> vec_res_value1 = vdupq_n_u32(static_cast&lt;uint32_t&gt;(0.f));</div><div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;        <span class="keyword">auto</span> vec_res_value2 = vdupq_n_u32(static_cast&lt;uint32_t&gt;(0.f));</div><div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;        <span class="keyword">auto</span> vec_res_value3 = vdupq_n_u32(static_cast&lt;uint32_t&gt;(0.f));</div><div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;        <span class="keyword">auto</span> vec_res_value4 = vdupq_n_u32(static_cast&lt;uint32_t&gt;(0.f));</div><div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;</div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;        <span class="keyword">auto</span> vec_res_value1_f = vdupq_n_f32(static_cast&lt;float&gt;(1.f));</div><div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;        <span class="keyword">auto</span> vec_res_value2_f = vdupq_n_f32(static_cast&lt;float&gt;(1.f));</div><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;        <span class="keyword">auto</span> vec_res_value3_f = vdupq_n_f32(static_cast&lt;float&gt;(1.f));</div><div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;        <span class="keyword">auto</span> vec_res_value4_f = vdupq_n_f32(static_cast&lt;float&gt;(1.f));</div><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;</div><div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;        uint8x16_t vec_res_value = { 0 };</div><div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;</div><div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;        <span class="keywordflow">if</span>(op == <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba654fed6e9b6c154d04bcaa439e32d0d5">ReductionOperation::ARG_IDX_MAX</a> || op == <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba39102811589b9a0d7a6aa8721663b4d1">ReductionOperation::ARG_IDX_MIN</a> || op == <a class="code" href="namespacearm__compute.xhtml#adf2ced65e536375a1c96425d9fced858ace31e2a082d17e038fcc6e3006166653">ReductionOperation::MIN</a> || op == <a class="code" href="namespacearm__compute.xhtml#adf2ced65e536375a1c96425d9fced858a26a4b44a837bf97b972628509912b4a5">ReductionOperation::MAX</a>)</div><div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;        {</div><div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;            vec_res_value = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a39e87435be178fba49b76f49426ef873">wrapper::vdup_n</a>(*<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>.ptr(), wrapper::traits::vector_128_tag{});</div><div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;        }</div><div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;</div><div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;        uint32x4x4_t vec_res_idx{ { 0 } };</div><div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;        <a class="code" href="namespacearm__compute.xhtml#a5002bf7ec46d52971f9526e94172cfee">execute_window_loop</a>(in_slice, [&amp;](<span class="keyword">const</span> Coordinates &amp; <span class="keywordtype">id</span>)</div><div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;        {</div><div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;            <span class="keyword">const</span> <span class="keyword">auto</span> vec_elements = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a77f54eded7fef436d3a4f21ad5a00da6">wrapper::vloadq</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>.ptr());</div><div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;            <span class="keywordflow">switch</span>(op)</div><div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;            {</div><div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba6970bdc2201030b9c03fbdcf3973858a">ReductionOperation::SUM</a>:</div><div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45bafc54513dae613e117ffc4169e48bfce5">ReductionOperation::MEAN_SUM</a>:</div><div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;                {</div><div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;                    <span class="keyword">const</span> <span class="keyword">auto</span> temp16x8t_1 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8dbba1731c32d176ae6635be1c65cbd6">wrapper::vmovl</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a2902775707bc7bf7d6da1bda1cc15783">wrapper::vgetlow</a>(vec_elements));</div><div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;                    <span class="keyword">const</span> <span class="keyword">auto</span> temp16x8t_2 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8dbba1731c32d176ae6635be1c65cbd6">wrapper::vmovl</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a95ee388aa7c5bccab918235dc538a6b3">wrapper::vgethigh</a>(vec_elements));</div><div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;</div><div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;                    <span class="keyword">const</span> <span class="keyword">auto</span> temp32x4t_1 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8dbba1731c32d176ae6635be1c65cbd6">wrapper::vmovl</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a2902775707bc7bf7d6da1bda1cc15783">wrapper::vgetlow</a>(temp16x8t_1));</div><div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;                    <span class="keyword">const</span> <span class="keyword">auto</span> temp32x4t_2 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8dbba1731c32d176ae6635be1c65cbd6">wrapper::vmovl</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a95ee388aa7c5bccab918235dc538a6b3">wrapper::vgethigh</a>(temp16x8t_1));</div><div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;                    <span class="keyword">const</span> <span class="keyword">auto</span> temp32x4t_3 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8dbba1731c32d176ae6635be1c65cbd6">wrapper::vmovl</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a2902775707bc7bf7d6da1bda1cc15783">wrapper::vgetlow</a>(temp16x8t_2));</div><div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;                    <span class="keyword">const</span> <span class="keyword">auto</span> temp32x4t_4 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8dbba1731c32d176ae6635be1c65cbd6">wrapper::vmovl</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a95ee388aa7c5bccab918235dc538a6b3">wrapper::vgethigh</a>(temp16x8t_2));</div><div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;</div><div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;                    vec_res_value1 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a1894e825a225f3b2013f594cbffdae73">wrapper::vadd</a>(temp32x4t_1, vec_res_value1);</div><div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;                    vec_res_value2 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a1894e825a225f3b2013f594cbffdae73">wrapper::vadd</a>(temp32x4t_2, vec_res_value2);</div><div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;                    vec_res_value3 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a1894e825a225f3b2013f594cbffdae73">wrapper::vadd</a>(temp32x4t_3, vec_res_value3);</div><div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;                    vec_res_value4 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a1894e825a225f3b2013f594cbffdae73">wrapper::vadd</a>(temp32x4t_4, vec_res_value4);</div><div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;                }</div><div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45bac8074bb318fb85693233e64acc64c1ed">ReductionOperation::PROD</a>:</div><div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;                {</div><div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;                    <span class="keyword">const</span> <span class="keyword">auto</span> offset32x4f_4 = vdupq_n_f32(iq_info.offset);</div><div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;                    <span class="keyword">const</span> <span class="keyword">auto</span> scale32x4f_4  = vdupq_n_f32(iq_info.scale);</div><div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;</div><div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;                    <span class="keyword">const</span> <span class="keyword">auto</span> temp16x8t_1 = vmovl_u8(vget_low_u8(vec_elements));</div><div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;                    <span class="keyword">const</span> <span class="keyword">auto</span> temp16x8t_2 = vmovl_u8(vget_high_u8(vec_elements));</div><div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;</div><div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;                    <span class="keyword">const</span> <span class="keyword">auto</span> temp32x4t_1 = vmovl_u16(vget_low_u16(temp16x8t_1));</div><div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;                    <span class="keyword">const</span> <span class="keyword">auto</span> temp32x4t_2 = vmovl_u16(vget_high_u16(temp16x8t_1));</div><div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;                    <span class="keyword">const</span> <span class="keyword">auto</span> temp32x4t_3 = vmovl_u16(vget_low_u16(temp16x8t_2));</div><div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;                    <span class="keyword">const</span> <span class="keyword">auto</span> temp32x4t_4 = vmovl_u16(vget_high_u16(temp16x8t_2));</div><div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;</div><div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;                    <span class="keyword">auto</span> temp32x4f_1 = vcvtq_f32_u32(temp32x4t_1);</div><div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;                    <span class="keyword">auto</span> temp32x4f_2 = vcvtq_f32_u32(temp32x4t_2);</div><div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;                    <span class="keyword">auto</span> temp32x4f_3 = vcvtq_f32_u32(temp32x4t_3);</div><div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;                    <span class="keyword">auto</span> temp32x4f_4 = vcvtq_f32_u32(temp32x4t_4);</div><div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;</div><div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;                    <span class="comment">//de-quantize vec_elements</span></div><div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;                    temp32x4f_1 = vmulq_f32(vsubq_f32(temp32x4f_1, offset32x4f_4), scale32x4f_4);</div><div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;                    temp32x4f_2 = vmulq_f32(vsubq_f32(temp32x4f_2, offset32x4f_4), scale32x4f_4);</div><div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;                    temp32x4f_3 = vmulq_f32(vsubq_f32(temp32x4f_3, offset32x4f_4), scale32x4f_4);</div><div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;                    temp32x4f_4 = vmulq_f32(vsubq_f32(temp32x4f_4, offset32x4f_4), scale32x4f_4);</div><div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;</div><div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;                    vec_res_value1_f = vmulq_f32(temp32x4f_1, vec_res_value1_f);</div><div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;                    vec_res_value2_f = vmulq_f32(temp32x4f_2, vec_res_value2_f);</div><div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;                    vec_res_value3_f = vmulq_f32(temp32x4f_3, vec_res_value3_f);</div><div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;                    vec_res_value4_f = vmulq_f32(temp32x4f_4, vec_res_value4_f);</div><div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;                }</div><div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba39102811589b9a0d7a6aa8721663b4d1">ReductionOperation::ARG_IDX_MIN</a>:</div><div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;                {</div><div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;                    <span class="keyword">auto</span> temp_vec_res_value = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ab026a1aeec48074092f548c130c323f4">wrapper::vmin</a>(vec_elements, vec_res_value);</div><div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;                    vec_res_idx             = calculate_index(<span class="keywordtype">id</span>.x(), temp_vec_res_value, vec_res_value, vec_res_idx, op, 0);</div><div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;                    vec_res_value           = temp_vec_res_value;</div><div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;                }</div><div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba654fed6e9b6c154d04bcaa439e32d0d5">ReductionOperation::ARG_IDX_MAX</a>:</div><div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;                {</div><div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;                    <span class="keyword">auto</span> temp_vec_res_value = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8d1d14000c959f1146a8a64e1dafae5f">wrapper::vmax</a>(vec_elements, vec_res_value);</div><div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;                    vec_res_idx             = calculate_index(<span class="keywordtype">id</span>.x(), temp_vec_res_value, vec_res_value, vec_res_idx, op, 0);</div><div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;                    vec_res_value           = temp_vec_res_value;</div><div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;                }</div><div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#adf2ced65e536375a1c96425d9fced858ace31e2a082d17e038fcc6e3006166653">ReductionOperation::MIN</a>:</div><div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;                {</div><div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;                    vec_res_value = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ab026a1aeec48074092f548c130c323f4">wrapper::vmin</a>(vec_elements, vec_res_value);</div><div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;                }</div><div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#adf2ced65e536375a1c96425d9fced858a26a4b44a837bf97b972628509912b4a5">ReductionOperation::MAX</a>:</div><div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;                {</div><div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;                    vec_res_value = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8d1d14000c959f1146a8a64e1dafae5f">wrapper::vmax</a>(vec_elements, vec_res_value);</div><div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;                }</div><div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;                <span class="keywordflow">default</span>:</div><div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;                    <a class="code" href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;Not supported&quot;</span>);</div><div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;            }</div><div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;        },</div><div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;        <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>);</div><div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;</div><div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;        <span class="keywordflow">switch</span>(op)</div><div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;        {</div><div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;            <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba39102811589b9a0d7a6aa8721663b4d1">ReductionOperation::ARG_IDX_MIN</a>:</div><div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;            <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba654fed6e9b6c154d04bcaa439e32d0d5">ReductionOperation::ARG_IDX_MAX</a>:</div><div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;            {</div><div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;                <span class="keyword">auto</span> res                                      = calculate_vector_index(vec_res_idx, vec_res_value, op);</div><div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;                *(reinterpret_cast&lt;uint32_t *&gt;(output.ptr())) = res;</div><div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;                <span class="keywordflow">break</span>;</div><div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;            }</div><div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;            <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#adf2ced65e536375a1c96425d9fced858ace31e2a082d17e038fcc6e3006166653">ReductionOperation::MIN</a>:</div><div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;            {</div><div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;                *(output.ptr()) = static_cast&lt;uint8_t&gt;(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#aa16ace001ab8287faa46d6962f369219">wrapper::vgetlane</a>(calculate_min(vec_res_value), 0));</div><div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;                <span class="keywordflow">break</span>;</div><div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;            }</div><div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;            <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#adf2ced65e536375a1c96425d9fced858a26a4b44a837bf97b972628509912b4a5">ReductionOperation::MAX</a>:</div><div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;            {</div><div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;                *(output.ptr()) = static_cast&lt;uint8_t&gt;(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#aa16ace001ab8287faa46d6962f369219">wrapper::vgetlane</a>(calculate_max(vec_res_value), 0));</div><div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;                <span class="keywordflow">break</span>;</div><div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;            }</div><div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;            <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45bac8074bb318fb85693233e64acc64c1ed">ReductionOperation::PROD</a>:</div><div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;            {</div><div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;                <span class="keyword">auto</span> carry_res = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(vec_res_value1_f, vec_res_value2_f);</div><div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;                carry_res      = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(carry_res, vec_res_value3_f);</div><div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;                carry_res      = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(carry_res, vec_res_value4_f);</div><div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;</div><div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;                <span class="keywordtype">float</span> res = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#aa16ace001ab8287faa46d6962f369219">wrapper::vgetlane</a>(carry_res, 0);</div><div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;                res *= <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#aa16ace001ab8287faa46d6962f369219">wrapper::vgetlane</a>(carry_res, 1);</div><div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;                res *= <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#aa16ace001ab8287faa46d6962f369219">wrapper::vgetlane</a>(carry_res, 2);</div><div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;                res *= <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#aa16ace001ab8287faa46d6962f369219">wrapper::vgetlane</a>(carry_res, 3);</div><div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;</div><div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;                <span class="comment">//re-quantize result</span></div><div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;                res             = <a class="code" href="namespacearm__compute.xhtml#ab8cef8b31b552b532a14ab8815e06285">quantize_qasymm8</a>(res, iq_info);</div><div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;                *(output.ptr()) = static_cast&lt;uint8_t&gt;(res);</div><div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;                <span class="keywordflow">break</span>;</div><div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;            }</div><div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;            <span class="keywordflow">default</span>:</div><div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;            {</div><div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;                <span class="keyword">auto</span> carry_res = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a1894e825a225f3b2013f594cbffdae73">wrapper::vadd</a>(vec_res_value1, vec_res_value2);</div><div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;                carry_res      = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a1894e825a225f3b2013f594cbffdae73">wrapper::vadd</a>(carry_res, vec_res_value3);</div><div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;                carry_res      = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a1894e825a225f3b2013f594cbffdae73">wrapper::vadd</a>(carry_res, vec_res_value4);</div><div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;</div><div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;                <span class="keyword">auto</span> carry_paddition = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a475ee3c8ef70a2e4f18effd1d527a63a">wrapper::vpadd</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a95ee388aa7c5bccab918235dc538a6b3">wrapper::vgethigh</a>(carry_res), <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a2902775707bc7bf7d6da1bda1cc15783">wrapper::vgetlow</a>(carry_res));</div><div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;                carry_paddition      = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a475ee3c8ef70a2e4f18effd1d527a63a">wrapper::vpadd</a>(carry_paddition, carry_paddition);</div><div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;                <span class="keyword">auto</span> res             = static_cast&lt;int32_t&gt;(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#aa16ace001ab8287faa46d6962f369219">wrapper::vgetlane</a>(carry_paddition, 0));</div><div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;</div><div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;                <span class="keywordflow">if</span>(op == <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45bafc54513dae613e117ffc4169e48bfce5">ReductionOperation::MEAN_SUM</a>)</div><div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;                {</div><div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;                    res /= in_info.dimension(0);</div><div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;                }</div><div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;                <span class="keywordflow">else</span></div><div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;                {</div><div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;                    <span class="comment">// Subtract accumulated offsets</span></div><div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;                    res -= (in_info.dimension(0) - 1) * iq_info.offset;</div><div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;                }</div><div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;</div><div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;                *(output.ptr()) = utils::cast::saturate_cast&lt;uint8_t&gt;(res);</div><div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;            }</div><div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;        }</div><div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;    }</div><div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;};</div><div class="line"><a name="l00711"></a><span class="lineno">  711</span>&#160;</div><div class="line"><a name="l00712"></a><span class="lineno">  712</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keywordtype">int</span> S&gt;</div><div class="line"><a name="l00713"></a><span class="lineno">  713</span>&#160;<span class="keyword">struct </span>RedOpYZW</div><div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160;{<span class="comment"></span></div><div class="line"><a name="l00715"></a><span class="lineno">  715</span>&#160;<span class="comment">    /** NEON vector tag type. */</span></div><div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160;    <span class="keyword">using</span> ExactTagType = <span class="keyword">typename</span> wrapper::traits::neon_vector&lt;T, S&gt;::tag_type;</div><div class="line"><a name="l00717"></a><span class="lineno">  717</span>&#160;    <span class="keyword">using</span> neon_vector  = <span class="keyword">typename</span> <a class="code" href="namespace_gemm_tuner.xhtml#a7aead736a07eaf25623ad7bfa1f0ee2d">wrapper::traits::neon_vector&lt;T, S&gt;::type</a>;</div><div class="line"><a name="l00718"></a><span class="lineno">  718</span>&#160;</div><div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;    <span class="keyword">inline</span> <span class="keywordtype">void</span> operator()(Iterator &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, Iterator &amp;output, Window &amp;in_slice, Window &amp;out_slice, <span class="keyword">const</span> TensorInfo &amp;in_info, <span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#accc088009d44c521706aa98d6387ee21">axis</a>, <span class="keyword">const</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45b">ReductionOperation</a> op)</div><div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;    {</div><div class="line"><a name="l00721"></a><span class="lineno">  721</span>&#160;        <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(out_slice);</div><div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;</div><div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160;        <a class="code" href="namespacearm__compute.xhtml#a5002bf7ec46d52971f9526e94172cfee">execute_window_loop</a>(in_slice, [&amp;](<span class="keyword">const</span> Coordinates &amp;)</div><div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160;        {</div><div class="line"><a name="l00725"></a><span class="lineno">  725</span>&#160;            neon_vector vec_res_value = { 0 };</div><div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;            <span class="keywordflow">switch</span>(op)</div><div class="line"><a name="l00727"></a><span class="lineno">  727</span>&#160;            {</div><div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba654fed6e9b6c154d04bcaa439e32d0d5">ReductionOperation::ARG_IDX_MAX</a>:</div><div class="line"><a name="l00729"></a><span class="lineno">  729</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba39102811589b9a0d7a6aa8721663b4d1">ReductionOperation::ARG_IDX_MIN</a>:</div><div class="line"><a name="l00730"></a><span class="lineno">  730</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#adf2ced65e536375a1c96425d9fced858ace31e2a082d17e038fcc6e3006166653">ReductionOperation::MIN</a>:</div><div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#adf2ced65e536375a1c96425d9fced858a26a4b44a837bf97b972628509912b4a5">ReductionOperation::MAX</a>:</div><div class="line"><a name="l00732"></a><span class="lineno">  732</span>&#160;                {</div><div class="line"><a name="l00733"></a><span class="lineno">  733</span>&#160;                    vec_res_value = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a77f54eded7fef436d3a4f21ad5a00da6">wrapper::vloadq</a>(reinterpret_cast&lt;T *&gt;(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>.ptr()));</div><div class="line"><a name="l00734"></a><span class="lineno">  734</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00735"></a><span class="lineno">  735</span>&#160;                }</div><div class="line"><a name="l00736"></a><span class="lineno">  736</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45bac8074bb318fb85693233e64acc64c1ed">ReductionOperation::PROD</a>:</div><div class="line"><a name="l00737"></a><span class="lineno">  737</span>&#160;                {</div><div class="line"><a name="l00738"></a><span class="lineno">  738</span>&#160;                    vec_res_value = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a39e87435be178fba49b76f49426ef873">wrapper::vdup_n</a>(static_cast&lt;T&gt;(1.f), ExactTagType{});</div><div class="line"><a name="l00739"></a><span class="lineno">  739</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;                }</div><div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160;                <span class="keywordflow">default</span>:</div><div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160;                {</div><div class="line"><a name="l00743"></a><span class="lineno">  743</span>&#160;                    vec_res_value = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a39e87435be178fba49b76f49426ef873">wrapper::vdup_n</a>(static_cast&lt;T&gt;(0.f), ExactTagType{});</div><div class="line"><a name="l00744"></a><span class="lineno">  744</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00745"></a><span class="lineno">  745</span>&#160;                }</div><div class="line"><a name="l00746"></a><span class="lineno">  746</span>&#160;            }</div><div class="line"><a name="l00747"></a><span class="lineno">  747</span>&#160;            uint32x4x4_t vec_res_idx{ { 0 } };</div><div class="line"><a name="l00748"></a><span class="lineno">  748</span>&#160;</div><div class="line"><a name="l00749"></a><span class="lineno">  749</span>&#160;            <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> dim = 0; dim &lt; in_info.dimension(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#accc088009d44c521706aa98d6387ee21">axis</a>); ++dim)</div><div class="line"><a name="l00750"></a><span class="lineno">  750</span>&#160;            {</div><div class="line"><a name="l00751"></a><span class="lineno">  751</span>&#160;                <span class="keyword">const</span> T   *in_ptr       = reinterpret_cast&lt;T *&gt;(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>.ptr() + in_info.strides_in_bytes()[<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#accc088009d44c521706aa98d6387ee21">axis</a>] * dim);</div><div class="line"><a name="l00752"></a><span class="lineno">  752</span>&#160;                <span class="keyword">const</span> <span class="keyword">auto</span> vec_elements = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a77f54eded7fef436d3a4f21ad5a00da6">wrapper::vloadq</a>(in_ptr);</div><div class="line"><a name="l00753"></a><span class="lineno">  753</span>&#160;                <span class="keywordflow">switch</span>(op)</div><div class="line"><a name="l00754"></a><span class="lineno">  754</span>&#160;                {</div><div class="line"><a name="l00755"></a><span class="lineno">  755</span>&#160;                    <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba6970bdc2201030b9c03fbdcf3973858a">ReductionOperation::SUM</a>:</div><div class="line"><a name="l00756"></a><span class="lineno">  756</span>&#160;                    <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45bafc54513dae613e117ffc4169e48bfce5">ReductionOperation::MEAN_SUM</a>:</div><div class="line"><a name="l00757"></a><span class="lineno">  757</span>&#160;                        vec_res_value = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a1894e825a225f3b2013f594cbffdae73">wrapper::vadd</a>(vec_elements, vec_res_value);</div><div class="line"><a name="l00758"></a><span class="lineno">  758</span>&#160;                        <span class="keywordflow">break</span>;</div><div class="line"><a name="l00759"></a><span class="lineno">  759</span>&#160;                    <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba2ce6e134b828b72fad160fa17c8d1b64">ReductionOperation::SUM_SQUARE</a>:</div><div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;                        vec_res_value = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a1894e825a225f3b2013f594cbffdae73">wrapper::vadd</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(vec_elements, vec_elements), vec_res_value);</div><div class="line"><a name="l00761"></a><span class="lineno">  761</span>&#160;                        <span class="keywordflow">break</span>;</div><div class="line"><a name="l00762"></a><span class="lineno">  762</span>&#160;                    <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45bac8074bb318fb85693233e64acc64c1ed">ReductionOperation::PROD</a>:</div><div class="line"><a name="l00763"></a><span class="lineno">  763</span>&#160;                        vec_res_value = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(vec_elements, vec_res_value);</div><div class="line"><a name="l00764"></a><span class="lineno">  764</span>&#160;                        <span class="keywordflow">break</span>;</div><div class="line"><a name="l00765"></a><span class="lineno">  765</span>&#160;                    <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba39102811589b9a0d7a6aa8721663b4d1">ReductionOperation::ARG_IDX_MIN</a>:</div><div class="line"><a name="l00766"></a><span class="lineno">  766</span>&#160;                    {</div><div class="line"><a name="l00767"></a><span class="lineno">  767</span>&#160;                        <span class="keyword">auto</span> temp_vec_res_value = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ab026a1aeec48074092f548c130c323f4">wrapper::vmin</a>(vec_elements, vec_res_value);</div><div class="line"><a name="l00768"></a><span class="lineno">  768</span>&#160;                        vec_res_idx             = calculate_index(dim, temp_vec_res_value, vec_res_value, vec_res_idx, op, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#accc088009d44c521706aa98d6387ee21">axis</a>);</div><div class="line"><a name="l00769"></a><span class="lineno">  769</span>&#160;                        vec_res_value           = temp_vec_res_value;</div><div class="line"><a name="l00770"></a><span class="lineno">  770</span>&#160;                        <span class="keywordflow">break</span>;</div><div class="line"><a name="l00771"></a><span class="lineno">  771</span>&#160;                    }</div><div class="line"><a name="l00772"></a><span class="lineno">  772</span>&#160;                    <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba654fed6e9b6c154d04bcaa439e32d0d5">ReductionOperation::ARG_IDX_MAX</a>:</div><div class="line"><a name="l00773"></a><span class="lineno">  773</span>&#160;                    {</div><div class="line"><a name="l00774"></a><span class="lineno">  774</span>&#160;                        <span class="keyword">auto</span> temp_vec_res_value = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8d1d14000c959f1146a8a64e1dafae5f">wrapper::vmax</a>(vec_elements, vec_res_value);</div><div class="line"><a name="l00775"></a><span class="lineno">  775</span>&#160;                        vec_res_idx             = calculate_index(dim, temp_vec_res_value, vec_res_value, vec_res_idx, op, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#accc088009d44c521706aa98d6387ee21">axis</a>);</div><div class="line"><a name="l00776"></a><span class="lineno">  776</span>&#160;                        vec_res_value           = temp_vec_res_value;</div><div class="line"><a name="l00777"></a><span class="lineno">  777</span>&#160;                        <span class="keywordflow">break</span>;</div><div class="line"><a name="l00778"></a><span class="lineno">  778</span>&#160;                    }</div><div class="line"><a name="l00779"></a><span class="lineno">  779</span>&#160;                    <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#adf2ced65e536375a1c96425d9fced858ace31e2a082d17e038fcc6e3006166653">ReductionOperation::MIN</a>:</div><div class="line"><a name="l00780"></a><span class="lineno">  780</span>&#160;                    {</div><div class="line"><a name="l00781"></a><span class="lineno">  781</span>&#160;                        vec_res_value = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ab026a1aeec48074092f548c130c323f4">wrapper::vmin</a>(vec_elements, vec_res_value);</div><div class="line"><a name="l00782"></a><span class="lineno">  782</span>&#160;                        <span class="keywordflow">break</span>;</div><div class="line"><a name="l00783"></a><span class="lineno">  783</span>&#160;                    }</div><div class="line"><a name="l00784"></a><span class="lineno">  784</span>&#160;                    <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#adf2ced65e536375a1c96425d9fced858a26a4b44a837bf97b972628509912b4a5">ReductionOperation::MAX</a>:</div><div class="line"><a name="l00785"></a><span class="lineno">  785</span>&#160;                    {</div><div class="line"><a name="l00786"></a><span class="lineno">  786</span>&#160;                        vec_res_value = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8d1d14000c959f1146a8a64e1dafae5f">wrapper::vmax</a>(vec_elements, vec_res_value);</div><div class="line"><a name="l00787"></a><span class="lineno">  787</span>&#160;                        <span class="keywordflow">break</span>;</div><div class="line"><a name="l00788"></a><span class="lineno">  788</span>&#160;                    }</div><div class="line"><a name="l00789"></a><span class="lineno">  789</span>&#160;                    <span class="keywordflow">default</span>:</div><div class="line"><a name="l00790"></a><span class="lineno">  790</span>&#160;                        <a class="code" href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;Not supported&quot;</span>);</div><div class="line"><a name="l00791"></a><span class="lineno">  791</span>&#160;                }</div><div class="line"><a name="l00792"></a><span class="lineno">  792</span>&#160;            }</div><div class="line"><a name="l00793"></a><span class="lineno">  793</span>&#160;</div><div class="line"><a name="l00794"></a><span class="lineno">  794</span>&#160;            <span class="keywordflow">if</span>(op == <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45bafc54513dae613e117ffc4169e48bfce5">ReductionOperation::MEAN_SUM</a>)</div><div class="line"><a name="l00795"></a><span class="lineno">  795</span>&#160;            {</div><div class="line"><a name="l00796"></a><span class="lineno">  796</span>&#160;                <span class="keyword">auto</span> vec_width_inv = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a5ac8135a2c0a60f10448be0057543ed7">wrapper::vinv</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a39e87435be178fba49b76f49426ef873">wrapper::vdup_n</a>(static_cast&lt;T&gt;(in_info.dimension(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#accc088009d44c521706aa98d6387ee21">axis</a>)), ExactTagType{}));</div><div class="line"><a name="l00797"></a><span class="lineno">  797</span>&#160;                vec_res_value      = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(vec_res_value, vec_width_inv);</div><div class="line"><a name="l00798"></a><span class="lineno">  798</span>&#160;            }</div><div class="line"><a name="l00799"></a><span class="lineno">  799</span>&#160;</div><div class="line"><a name="l00800"></a><span class="lineno">  800</span>&#160;            <span class="keywordflow">if</span>(op == <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba39102811589b9a0d7a6aa8721663b4d1">ReductionOperation::ARG_IDX_MIN</a> || op == <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba654fed6e9b6c154d04bcaa439e32d0d5">ReductionOperation::ARG_IDX_MAX</a>)</div><div class="line"><a name="l00801"></a><span class="lineno">  801</span>&#160;            {</div><div class="line"><a name="l00802"></a><span class="lineno">  802</span>&#160;                <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ae7943ea9c1f74dc72c62d4cc3966a459">wrapper::vstore</a>(reinterpret_cast&lt;uint32_t *&gt;(output.ptr()), vec_res_idx.val[0]);</div><div class="line"><a name="l00803"></a><span class="lineno">  803</span>&#160;<span class="preprocessor">#ifdef __ARM_FEATURE_FP16_VECTOR_ARITHMETIC</span></div><div class="line"><a name="l00804"></a><span class="lineno">  804</span>&#160;                <span class="keywordflow">if</span>(std::is_same&lt;T, float16_t&gt;::value)</div><div class="line"><a name="l00805"></a><span class="lineno">  805</span>&#160;                {</div><div class="line"><a name="l00806"></a><span class="lineno">  806</span>&#160;                    <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ae7943ea9c1f74dc72c62d4cc3966a459">wrapper::vstore</a>(reinterpret_cast&lt;uint32_t *&gt;(output.ptr()) + 4, vec_res_idx.val[1]);</div><div class="line"><a name="l00807"></a><span class="lineno">  807</span>&#160;                }</div><div class="line"><a name="l00808"></a><span class="lineno">  808</span>&#160;<span class="preprocessor">#endif // __ARM_FEATURE_FP16_VECTOR_ARITHMETIC</span></div><div class="line"><a name="l00809"></a><span class="lineno">  809</span>&#160;            }</div><div class="line"><a name="l00810"></a><span class="lineno">  810</span>&#160;            <span class="keywordflow">else</span></div><div class="line"><a name="l00811"></a><span class="lineno">  811</span>&#160;            {</div><div class="line"><a name="l00812"></a><span class="lineno">  812</span>&#160;                <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ae7943ea9c1f74dc72c62d4cc3966a459">wrapper::vstore</a>(reinterpret_cast&lt;T *&gt;(output.ptr()), vec_res_value);</div><div class="line"><a name="l00813"></a><span class="lineno">  813</span>&#160;            }</div><div class="line"><a name="l00814"></a><span class="lineno">  814</span>&#160;        },</div><div class="line"><a name="l00815"></a><span class="lineno">  815</span>&#160;        <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, output);</div><div class="line"><a name="l00816"></a><span class="lineno">  816</span>&#160;    }</div><div class="line"><a name="l00817"></a><span class="lineno">  817</span>&#160;};</div><div class="line"><a name="l00818"></a><span class="lineno">  818</span>&#160;</div><div class="line"><a name="l00819"></a><span class="lineno">  819</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keywordtype">int</span> S, <span class="keywordtype">int</span> axis, ReductionOperation op&gt;</div><div class="line"><a name="l00820"></a><span class="lineno">  820</span>&#160;<span class="keyword">struct </span>RedOpYZW_complex</div><div class="line"><a name="l00821"></a><span class="lineno">  821</span>&#160;{<span class="comment"></span></div><div class="line"><a name="l00822"></a><span class="lineno">  822</span>&#160;<span class="comment">    /** NEON vector tag type. */</span></div><div class="line"><a name="l00823"></a><span class="lineno">  823</span>&#160;    <span class="keyword">using</span> ExactTagType = <span class="keyword">typename</span> wrapper::traits::neon_vector&lt;T, S&gt;::tag_type;</div><div class="line"><a name="l00824"></a><span class="lineno">  824</span>&#160;    <span class="keyword">using</span> neon_vector  = <span class="keyword">typename</span> <a class="code" href="namespace_gemm_tuner.xhtml#a7aead736a07eaf25623ad7bfa1f0ee2d">wrapper::traits::neon_vector&lt;T, S&gt;::type</a>;</div><div class="line"><a name="l00825"></a><span class="lineno">  825</span>&#160;</div><div class="line"><a name="l00826"></a><span class="lineno">  826</span>&#160;    <span class="keyword">inline</span> <span class="keywordtype">void</span> operator()(Iterator &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, Iterator &amp;output, Window &amp;in_slice, Window &amp;out_slice, <span class="keyword">const</span> TensorInfo &amp;in_info, <span class="keywordtype">int</span>, <span class="keyword">const</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45b">ReductionOperation</a>)</div><div class="line"><a name="l00827"></a><span class="lineno">  827</span>&#160;    {</div><div class="line"><a name="l00828"></a><span class="lineno">  828</span>&#160;        <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(out_slice);</div><div class="line"><a name="l00829"></a><span class="lineno">  829</span>&#160;        <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#accc088009d44c521706aa98d6387ee21">axis</a> != 2);</div><div class="line"><a name="l00830"></a><span class="lineno">  830</span>&#160;</div><div class="line"><a name="l00831"></a><span class="lineno">  831</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">size_t</span> stride_z = in_info.strides_in_bytes()[<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#accc088009d44c521706aa98d6387ee21">axis</a>];</div><div class="line"><a name="l00832"></a><span class="lineno">  832</span>&#160;</div><div class="line"><a name="l00833"></a><span class="lineno">  833</span>&#160;        <a class="code" href="namespacearm__compute.xhtml#a5002bf7ec46d52971f9526e94172cfee">execute_window_loop</a>(in_slice, [&amp;](<span class="keyword">const</span> Coordinates &amp;)</div><div class="line"><a name="l00834"></a><span class="lineno">  834</span>&#160;        {</div><div class="line"><a name="l00835"></a><span class="lineno">  835</span>&#160;            neon_vector vec_res_value_0 = { 0 };</div><div class="line"><a name="l00836"></a><span class="lineno">  836</span>&#160;            neon_vector vec_res_value_1 = { 0 };</div><div class="line"><a name="l00837"></a><span class="lineno">  837</span>&#160;</div><div class="line"><a name="l00838"></a><span class="lineno">  838</span>&#160;            vec_res_value_0 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a39e87435be178fba49b76f49426ef873">wrapper::vdup_n</a>(static_cast&lt;T&gt;(0.f), ExactTagType{});</div><div class="line"><a name="l00839"></a><span class="lineno">  839</span>&#160;            vec_res_value_1 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a39e87435be178fba49b76f49426ef873">wrapper::vdup_n</a>(static_cast&lt;T&gt;(0.f), ExactTagType{});</div><div class="line"><a name="l00840"></a><span class="lineno">  840</span>&#160;</div><div class="line"><a name="l00841"></a><span class="lineno">  841</span>&#160;            <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> dim = 0; dim &lt; in_info.dimension(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#accc088009d44c521706aa98d6387ee21">axis</a>); ++dim)</div><div class="line"><a name="l00842"></a><span class="lineno">  842</span>&#160;            {</div><div class="line"><a name="l00843"></a><span class="lineno">  843</span>&#160;                T *in_ptr_0;</div><div class="line"><a name="l00844"></a><span class="lineno">  844</span>&#160;                T *in_ptr_1;</div><div class="line"><a name="l00845"></a><span class="lineno">  845</span>&#160;                <span class="keywordflow">switch</span>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#accc088009d44c521706aa98d6387ee21">axis</a>)</div><div class="line"><a name="l00846"></a><span class="lineno">  846</span>&#160;                {</div><div class="line"><a name="l00847"></a><span class="lineno">  847</span>&#160;                    <span class="keywordflow">case</span> 2:</div><div class="line"><a name="l00848"></a><span class="lineno">  848</span>&#160;                        in_ptr_0 = reinterpret_cast&lt;T *&gt;(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>.ptr() + stride_z * dim);</div><div class="line"><a name="l00849"></a><span class="lineno">  849</span>&#160;                        in_ptr_1 = reinterpret_cast&lt;T *&gt;(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>.ptr() + 16 + stride_z * dim);</div><div class="line"><a name="l00850"></a><span class="lineno">  850</span>&#160;                        <span class="keywordflow">break</span>;</div><div class="line"><a name="l00851"></a><span class="lineno">  851</span>&#160;                    <span class="keywordflow">default</span>:</div><div class="line"><a name="l00852"></a><span class="lineno">  852</span>&#160;                        <a class="code" href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;Not supported&quot;</span>);</div><div class="line"><a name="l00853"></a><span class="lineno">  853</span>&#160;                }</div><div class="line"><a name="l00854"></a><span class="lineno">  854</span>&#160;                <span class="keyword">const</span> <span class="keyword">auto</span> vec_elements_0 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a77f54eded7fef436d3a4f21ad5a00da6">wrapper::vloadq</a>(in_ptr_0);</div><div class="line"><a name="l00855"></a><span class="lineno">  855</span>&#160;                <span class="keyword">const</span> <span class="keyword">auto</span> vec_elements_1 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a77f54eded7fef436d3a4f21ad5a00da6">wrapper::vloadq</a>(in_ptr_1);</div><div class="line"><a name="l00856"></a><span class="lineno">  856</span>&#160;</div><div class="line"><a name="l00857"></a><span class="lineno">  857</span>&#160;                <span class="keywordflow">switch</span>(op)</div><div class="line"><a name="l00858"></a><span class="lineno">  858</span>&#160;                {</div><div class="line"><a name="l00859"></a><span class="lineno">  859</span>&#160;                    <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba6970bdc2201030b9c03fbdcf3973858a">ReductionOperation::SUM</a>:</div><div class="line"><a name="l00860"></a><span class="lineno">  860</span>&#160;                        vec_res_value_0 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a1894e825a225f3b2013f594cbffdae73">wrapper::vadd</a>(vec_elements_0, vec_res_value_0);</div><div class="line"><a name="l00861"></a><span class="lineno">  861</span>&#160;                        vec_res_value_1 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a1894e825a225f3b2013f594cbffdae73">wrapper::vadd</a>(vec_elements_1, vec_res_value_1);</div><div class="line"><a name="l00862"></a><span class="lineno">  862</span>&#160;                        <span class="keywordflow">break</span>;</div><div class="line"><a name="l00863"></a><span class="lineno">  863</span>&#160;                    <span class="keywordflow">default</span>:</div><div class="line"><a name="l00864"></a><span class="lineno">  864</span>&#160;                        <a class="code" href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;Not supported&quot;</span>);</div><div class="line"><a name="l00865"></a><span class="lineno">  865</span>&#160;                }</div><div class="line"><a name="l00866"></a><span class="lineno">  866</span>&#160;            }</div><div class="line"><a name="l00867"></a><span class="lineno">  867</span>&#160;</div><div class="line"><a name="l00868"></a><span class="lineno">  868</span>&#160;            <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ae7943ea9c1f74dc72c62d4cc3966a459">wrapper::vstore</a>(reinterpret_cast&lt;T *&gt;(output.ptr()), vec_res_value_0);</div><div class="line"><a name="l00869"></a><span class="lineno">  869</span>&#160;            <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ae7943ea9c1f74dc72c62d4cc3966a459">wrapper::vstore</a>(reinterpret_cast&lt;T *&gt;(output.ptr() + 16), vec_res_value_1);</div><div class="line"><a name="l00870"></a><span class="lineno">  870</span>&#160;</div><div class="line"><a name="l00871"></a><span class="lineno">  871</span>&#160;        },</div><div class="line"><a name="l00872"></a><span class="lineno">  872</span>&#160;        <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, output);</div><div class="line"><a name="l00873"></a><span class="lineno">  873</span>&#160;    }</div><div class="line"><a name="l00874"></a><span class="lineno">  874</span>&#160;};</div><div class="line"><a name="l00875"></a><span class="lineno">  875</span>&#160;</div><div class="line"><a name="l00876"></a><span class="lineno">  876</span>&#160;<span class="keyword">struct </span>RedOpYZW_qasymm8</div><div class="line"><a name="l00877"></a><span class="lineno">  877</span>&#160;{</div><div class="line"><a name="l00878"></a><span class="lineno">  878</span>&#160;    <span class="keyword">inline</span> <span class="keywordtype">void</span> operator()(Iterator &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, Iterator &amp;output, Window &amp;in_slice, Window &amp;out_slice, <span class="keyword">const</span> TensorInfo &amp;in_info, <span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#accc088009d44c521706aa98d6387ee21">axis</a>, <span class="keyword">const</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45b">ReductionOperation</a> op)</div><div class="line"><a name="l00879"></a><span class="lineno">  879</span>&#160;    {</div><div class="line"><a name="l00880"></a><span class="lineno">  880</span>&#160;        <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(out_slice);</div><div class="line"><a name="l00881"></a><span class="lineno">  881</span>&#160;</div><div class="line"><a name="l00882"></a><span class="lineno">  882</span>&#160;        <span class="keyword">const</span> UniformQuantizationInfo iq_info = in_info.quantization_info().uniform();</div><div class="line"><a name="l00883"></a><span class="lineno">  883</span>&#160;</div><div class="line"><a name="l00884"></a><span class="lineno">  884</span>&#160;        <a class="code" href="namespacearm__compute.xhtml#a5002bf7ec46d52971f9526e94172cfee">execute_window_loop</a>(in_slice, [&amp;](<span class="keyword">const</span> Coordinates &amp;)</div><div class="line"><a name="l00885"></a><span class="lineno">  885</span>&#160;        {</div><div class="line"><a name="l00886"></a><span class="lineno">  886</span>&#160;            uint32x4x4_t vec_res_idx{ { 0 } };</div><div class="line"><a name="l00887"></a><span class="lineno">  887</span>&#160;            <span class="keyword">auto</span>         vec_res_value1 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a39e87435be178fba49b76f49426ef873">wrapper::vdup_n</a>(static_cast&lt;uint32_t&gt;(0), wrapper::traits::vector_128_tag{});</div><div class="line"><a name="l00888"></a><span class="lineno">  888</span>&#160;            <span class="keyword">auto</span>         vec_res_value2 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a39e87435be178fba49b76f49426ef873">wrapper::vdup_n</a>(static_cast&lt;uint32_t&gt;(0), wrapper::traits::vector_128_tag{});</div><div class="line"><a name="l00889"></a><span class="lineno">  889</span>&#160;            <span class="keyword">auto</span>         vec_res_value3 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a39e87435be178fba49b76f49426ef873">wrapper::vdup_n</a>(static_cast&lt;uint32_t&gt;(0), wrapper::traits::vector_128_tag{});</div><div class="line"><a name="l00890"></a><span class="lineno">  890</span>&#160;            <span class="keyword">auto</span>         vec_res_value4 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a39e87435be178fba49b76f49426ef873">wrapper::vdup_n</a>(static_cast&lt;uint32_t&gt;(0), wrapper::traits::vector_128_tag{});</div><div class="line"><a name="l00891"></a><span class="lineno">  891</span>&#160;</div><div class="line"><a name="l00892"></a><span class="lineno">  892</span>&#160;            <span class="keyword">auto</span> vec_res_value1_f = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a39e87435be178fba49b76f49426ef873">wrapper::vdup_n</a>(static_cast&lt;float&gt;(1), wrapper::traits::vector_128_tag{});</div><div class="line"><a name="l00893"></a><span class="lineno">  893</span>&#160;            <span class="keyword">auto</span> vec_res_value2_f = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a39e87435be178fba49b76f49426ef873">wrapper::vdup_n</a>(static_cast&lt;float&gt;(1), wrapper::traits::vector_128_tag{});</div><div class="line"><a name="l00894"></a><span class="lineno">  894</span>&#160;            <span class="keyword">auto</span> vec_res_value3_f = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a39e87435be178fba49b76f49426ef873">wrapper::vdup_n</a>(static_cast&lt;float&gt;(1), wrapper::traits::vector_128_tag{});</div><div class="line"><a name="l00895"></a><span class="lineno">  895</span>&#160;            <span class="keyword">auto</span> vec_res_value4_f = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a39e87435be178fba49b76f49426ef873">wrapper::vdup_n</a>(static_cast&lt;float&gt;(1), wrapper::traits::vector_128_tag{});</div><div class="line"><a name="l00896"></a><span class="lineno">  896</span>&#160;</div><div class="line"><a name="l00897"></a><span class="lineno">  897</span>&#160;            <span class="keyword">auto</span> vec_res_value = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a77f54eded7fef436d3a4f21ad5a00da6">wrapper::vloadq</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>.ptr());</div><div class="line"><a name="l00898"></a><span class="lineno">  898</span>&#160;</div><div class="line"><a name="l00899"></a><span class="lineno">  899</span>&#160;            <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> index_dim = 0; index_dim &lt; in_info.dimension(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#accc088009d44c521706aa98d6387ee21">axis</a>); ++index_dim)</div><div class="line"><a name="l00900"></a><span class="lineno">  900</span>&#160;            {</div><div class="line"><a name="l00901"></a><span class="lineno">  901</span>&#160;                <span class="keyword">const</span> uint8_t *in_ptr       = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>.ptr() + in_info.strides_in_bytes()[<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#accc088009d44c521706aa98d6387ee21">axis</a>] * index_dim;</div><div class="line"><a name="l00902"></a><span class="lineno">  902</span>&#160;                <span class="keyword">const</span> <span class="keyword">auto</span>     vec_elements = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a77f54eded7fef436d3a4f21ad5a00da6">wrapper::vloadq</a>(in_ptr);</div><div class="line"><a name="l00903"></a><span class="lineno">  903</span>&#160;                <span class="keywordflow">switch</span>(op)</div><div class="line"><a name="l00904"></a><span class="lineno">  904</span>&#160;                {</div><div class="line"><a name="l00905"></a><span class="lineno">  905</span>&#160;                    <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba6970bdc2201030b9c03fbdcf3973858a">ReductionOperation::SUM</a>:</div><div class="line"><a name="l00906"></a><span class="lineno">  906</span>&#160;                    <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45bafc54513dae613e117ffc4169e48bfce5">ReductionOperation::MEAN_SUM</a>:</div><div class="line"><a name="l00907"></a><span class="lineno">  907</span>&#160;                    {</div><div class="line"><a name="l00908"></a><span class="lineno">  908</span>&#160;                        <span class="keyword">const</span> <span class="keyword">auto</span> temp16x8t_1 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8dbba1731c32d176ae6635be1c65cbd6">wrapper::vmovl</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a2902775707bc7bf7d6da1bda1cc15783">wrapper::vgetlow</a>(vec_elements));</div><div class="line"><a name="l00909"></a><span class="lineno">  909</span>&#160;                        <span class="keyword">const</span> <span class="keyword">auto</span> temp16x8t_2 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8dbba1731c32d176ae6635be1c65cbd6">wrapper::vmovl</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a95ee388aa7c5bccab918235dc538a6b3">wrapper::vgethigh</a>(vec_elements));</div><div class="line"><a name="l00910"></a><span class="lineno">  910</span>&#160;</div><div class="line"><a name="l00911"></a><span class="lineno">  911</span>&#160;                        <span class="keyword">const</span> <span class="keyword">auto</span> temp32x4t_1 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8dbba1731c32d176ae6635be1c65cbd6">wrapper::vmovl</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a2902775707bc7bf7d6da1bda1cc15783">wrapper::vgetlow</a>(temp16x8t_1));</div><div class="line"><a name="l00912"></a><span class="lineno">  912</span>&#160;                        <span class="keyword">const</span> <span class="keyword">auto</span> temp32x4t_2 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8dbba1731c32d176ae6635be1c65cbd6">wrapper::vmovl</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a95ee388aa7c5bccab918235dc538a6b3">wrapper::vgethigh</a>(temp16x8t_1));</div><div class="line"><a name="l00913"></a><span class="lineno">  913</span>&#160;                        <span class="keyword">const</span> <span class="keyword">auto</span> temp32x4t_3 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8dbba1731c32d176ae6635be1c65cbd6">wrapper::vmovl</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a2902775707bc7bf7d6da1bda1cc15783">wrapper::vgetlow</a>(temp16x8t_2));</div><div class="line"><a name="l00914"></a><span class="lineno">  914</span>&#160;                        <span class="keyword">const</span> <span class="keyword">auto</span> temp32x4t_4 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8dbba1731c32d176ae6635be1c65cbd6">wrapper::vmovl</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a95ee388aa7c5bccab918235dc538a6b3">wrapper::vgethigh</a>(temp16x8t_2));</div><div class="line"><a name="l00915"></a><span class="lineno">  915</span>&#160;</div><div class="line"><a name="l00916"></a><span class="lineno">  916</span>&#160;                        vec_res_value1 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a1894e825a225f3b2013f594cbffdae73">wrapper::vadd</a>(temp32x4t_1, vec_res_value1);</div><div class="line"><a name="l00917"></a><span class="lineno">  917</span>&#160;                        vec_res_value2 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a1894e825a225f3b2013f594cbffdae73">wrapper::vadd</a>(temp32x4t_2, vec_res_value2);</div><div class="line"><a name="l00918"></a><span class="lineno">  918</span>&#160;                        vec_res_value3 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a1894e825a225f3b2013f594cbffdae73">wrapper::vadd</a>(temp32x4t_3, vec_res_value3);</div><div class="line"><a name="l00919"></a><span class="lineno">  919</span>&#160;                        vec_res_value4 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a1894e825a225f3b2013f594cbffdae73">wrapper::vadd</a>(temp32x4t_4, vec_res_value4);</div><div class="line"><a name="l00920"></a><span class="lineno">  920</span>&#160;                        <span class="keywordflow">break</span>;</div><div class="line"><a name="l00921"></a><span class="lineno">  921</span>&#160;                    }</div><div class="line"><a name="l00922"></a><span class="lineno">  922</span>&#160;                    <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45bac8074bb318fb85693233e64acc64c1ed">ReductionOperation::PROD</a>:</div><div class="line"><a name="l00923"></a><span class="lineno">  923</span>&#160;                    {</div><div class="line"><a name="l00924"></a><span class="lineno">  924</span>&#160;                        <span class="keyword">const</span> <span class="keyword">auto</span> offset32x4f_4 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a39e87435be178fba49b76f49426ef873">wrapper::vdup_n</a>(static_cast&lt;float&gt;(iq_info.offset), wrapper::traits::vector_128_tag{});</div><div class="line"><a name="l00925"></a><span class="lineno">  925</span>&#160;                        <span class="keyword">const</span> <span class="keyword">auto</span> scale32x4f_4  = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a39e87435be178fba49b76f49426ef873">wrapper::vdup_n</a>(iq_info.scale, wrapper::traits::vector_128_tag{});</div><div class="line"><a name="l00926"></a><span class="lineno">  926</span>&#160;</div><div class="line"><a name="l00927"></a><span class="lineno">  927</span>&#160;                        <span class="keyword">const</span> <span class="keyword">auto</span> temp16x8t_1 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8dbba1731c32d176ae6635be1c65cbd6">wrapper::vmovl</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a2902775707bc7bf7d6da1bda1cc15783">wrapper::vgetlow</a>(vec_elements));</div><div class="line"><a name="l00928"></a><span class="lineno">  928</span>&#160;                        <span class="keyword">const</span> <span class="keyword">auto</span> temp16x8t_2 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8dbba1731c32d176ae6635be1c65cbd6">wrapper::vmovl</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a95ee388aa7c5bccab918235dc538a6b3">wrapper::vgethigh</a>(vec_elements));</div><div class="line"><a name="l00929"></a><span class="lineno">  929</span>&#160;</div><div class="line"><a name="l00930"></a><span class="lineno">  930</span>&#160;                        <span class="keyword">const</span> <span class="keyword">auto</span> temp32x4t_1 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8dbba1731c32d176ae6635be1c65cbd6">wrapper::vmovl</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a2902775707bc7bf7d6da1bda1cc15783">wrapper::vgetlow</a>(temp16x8t_1));</div><div class="line"><a name="l00931"></a><span class="lineno">  931</span>&#160;                        <span class="keyword">const</span> <span class="keyword">auto</span> temp32x4t_2 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8dbba1731c32d176ae6635be1c65cbd6">wrapper::vmovl</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a95ee388aa7c5bccab918235dc538a6b3">wrapper::vgethigh</a>(temp16x8t_1));</div><div class="line"><a name="l00932"></a><span class="lineno">  932</span>&#160;                        <span class="keyword">const</span> <span class="keyword">auto</span> temp32x4t_3 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8dbba1731c32d176ae6635be1c65cbd6">wrapper::vmovl</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a2902775707bc7bf7d6da1bda1cc15783">wrapper::vgetlow</a>(temp16x8t_2));</div><div class="line"><a name="l00933"></a><span class="lineno">  933</span>&#160;                        <span class="keyword">const</span> <span class="keyword">auto</span> temp32x4t_4 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8dbba1731c32d176ae6635be1c65cbd6">wrapper::vmovl</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a95ee388aa7c5bccab918235dc538a6b3">wrapper::vgethigh</a>(temp16x8t_2));</div><div class="line"><a name="l00934"></a><span class="lineno">  934</span>&#160;</div><div class="line"><a name="l00935"></a><span class="lineno">  935</span>&#160;                        <span class="keyword">auto</span> temp32x4f_1 = vcvtq_f32_u32(temp32x4t_1);</div><div class="line"><a name="l00936"></a><span class="lineno">  936</span>&#160;                        <span class="keyword">auto</span> temp32x4f_2 = vcvtq_f32_u32(temp32x4t_2);</div><div class="line"><a name="l00937"></a><span class="lineno">  937</span>&#160;                        <span class="keyword">auto</span> temp32x4f_3 = vcvtq_f32_u32(temp32x4t_3);</div><div class="line"><a name="l00938"></a><span class="lineno">  938</span>&#160;                        <span class="keyword">auto</span> temp32x4f_4 = vcvtq_f32_u32(temp32x4t_4);</div><div class="line"><a name="l00939"></a><span class="lineno">  939</span>&#160;</div><div class="line"><a name="l00940"></a><span class="lineno">  940</span>&#160;                        <span class="comment">//de-quantize vec_elements</span></div><div class="line"><a name="l00941"></a><span class="lineno">  941</span>&#160;                        temp32x4f_1 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#acae4ec59246f93845fa78120d83d7c1e">wrapper::vsub</a>(temp32x4f_1, offset32x4f_4), scale32x4f_4);</div><div class="line"><a name="l00942"></a><span class="lineno">  942</span>&#160;                        temp32x4f_2 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#acae4ec59246f93845fa78120d83d7c1e">wrapper::vsub</a>(temp32x4f_2, offset32x4f_4), scale32x4f_4);</div><div class="line"><a name="l00943"></a><span class="lineno">  943</span>&#160;                        temp32x4f_3 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#acae4ec59246f93845fa78120d83d7c1e">wrapper::vsub</a>(temp32x4f_3, offset32x4f_4), scale32x4f_4);</div><div class="line"><a name="l00944"></a><span class="lineno">  944</span>&#160;                        temp32x4f_4 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#acae4ec59246f93845fa78120d83d7c1e">wrapper::vsub</a>(temp32x4f_4, offset32x4f_4), scale32x4f_4);</div><div class="line"><a name="l00945"></a><span class="lineno">  945</span>&#160;</div><div class="line"><a name="l00946"></a><span class="lineno">  946</span>&#160;                        vec_res_value1_f = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(temp32x4f_1, vec_res_value1_f);</div><div class="line"><a name="l00947"></a><span class="lineno">  947</span>&#160;                        vec_res_value2_f = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(temp32x4f_2, vec_res_value2_f);</div><div class="line"><a name="l00948"></a><span class="lineno">  948</span>&#160;                        vec_res_value3_f = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(temp32x4f_3, vec_res_value3_f);</div><div class="line"><a name="l00949"></a><span class="lineno">  949</span>&#160;                        vec_res_value4_f = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(temp32x4f_4, vec_res_value4_f);</div><div class="line"><a name="l00950"></a><span class="lineno">  950</span>&#160;                        <span class="keywordflow">break</span>;</div><div class="line"><a name="l00951"></a><span class="lineno">  951</span>&#160;                    }</div><div class="line"><a name="l00952"></a><span class="lineno">  952</span>&#160;                    <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba39102811589b9a0d7a6aa8721663b4d1">ReductionOperation::ARG_IDX_MIN</a>:</div><div class="line"><a name="l00953"></a><span class="lineno">  953</span>&#160;                    {</div><div class="line"><a name="l00954"></a><span class="lineno">  954</span>&#160;                        <span class="keyword">auto</span> temp_vec_res_value = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ab026a1aeec48074092f548c130c323f4">wrapper::vmin</a>(vec_elements, vec_res_value);</div><div class="line"><a name="l00955"></a><span class="lineno">  955</span>&#160;                        vec_res_idx             = calculate_index(index_dim, temp_vec_res_value, vec_res_value, vec_res_idx, op, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#accc088009d44c521706aa98d6387ee21">axis</a>);</div><div class="line"><a name="l00956"></a><span class="lineno">  956</span>&#160;                        vec_res_value           = temp_vec_res_value;</div><div class="line"><a name="l00957"></a><span class="lineno">  957</span>&#160;                        <span class="keywordflow">break</span>;</div><div class="line"><a name="l00958"></a><span class="lineno">  958</span>&#160;                    }</div><div class="line"><a name="l00959"></a><span class="lineno">  959</span>&#160;                    <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba654fed6e9b6c154d04bcaa439e32d0d5">ReductionOperation::ARG_IDX_MAX</a>:</div><div class="line"><a name="l00960"></a><span class="lineno">  960</span>&#160;                    {</div><div class="line"><a name="l00961"></a><span class="lineno">  961</span>&#160;                        <span class="keyword">auto</span> temp_vec_res_value = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8d1d14000c959f1146a8a64e1dafae5f">wrapper::vmax</a>(vec_elements, vec_res_value);</div><div class="line"><a name="l00962"></a><span class="lineno">  962</span>&#160;                        vec_res_idx             = calculate_index(index_dim, temp_vec_res_value, vec_res_value, vec_res_idx, op, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#accc088009d44c521706aa98d6387ee21">axis</a>);</div><div class="line"><a name="l00963"></a><span class="lineno">  963</span>&#160;                        vec_res_value           = temp_vec_res_value;</div><div class="line"><a name="l00964"></a><span class="lineno">  964</span>&#160;                        <span class="keywordflow">break</span>;</div><div class="line"><a name="l00965"></a><span class="lineno">  965</span>&#160;                    }</div><div class="line"><a name="l00966"></a><span class="lineno">  966</span>&#160;                    <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#adf2ced65e536375a1c96425d9fced858ace31e2a082d17e038fcc6e3006166653">ReductionOperation::MIN</a>:</div><div class="line"><a name="l00967"></a><span class="lineno">  967</span>&#160;                    {</div><div class="line"><a name="l00968"></a><span class="lineno">  968</span>&#160;                        vec_res_value = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ab026a1aeec48074092f548c130c323f4">wrapper::vmin</a>(vec_elements, vec_res_value);</div><div class="line"><a name="l00969"></a><span class="lineno">  969</span>&#160;                        <span class="keywordflow">break</span>;</div><div class="line"><a name="l00970"></a><span class="lineno">  970</span>&#160;                    }</div><div class="line"><a name="l00971"></a><span class="lineno">  971</span>&#160;                    <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#adf2ced65e536375a1c96425d9fced858a26a4b44a837bf97b972628509912b4a5">ReductionOperation::MAX</a>:</div><div class="line"><a name="l00972"></a><span class="lineno">  972</span>&#160;                    {</div><div class="line"><a name="l00973"></a><span class="lineno">  973</span>&#160;                        vec_res_value = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8d1d14000c959f1146a8a64e1dafae5f">wrapper::vmax</a>(vec_elements, vec_res_value);</div><div class="line"><a name="l00974"></a><span class="lineno">  974</span>&#160;                        <span class="keywordflow">break</span>;</div><div class="line"><a name="l00975"></a><span class="lineno">  975</span>&#160;                    }</div><div class="line"><a name="l00976"></a><span class="lineno">  976</span>&#160;                    <span class="keywordflow">default</span>:</div><div class="line"><a name="l00977"></a><span class="lineno">  977</span>&#160;                        <a class="code" href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;Not supported&quot;</span>);</div><div class="line"><a name="l00978"></a><span class="lineno">  978</span>&#160;                }</div><div class="line"><a name="l00979"></a><span class="lineno">  979</span>&#160;            }</div><div class="line"><a name="l00980"></a><span class="lineno">  980</span>&#160;</div><div class="line"><a name="l00981"></a><span class="lineno">  981</span>&#160;            <span class="keywordflow">if</span>(op == <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45bafc54513dae613e117ffc4169e48bfce5">ReductionOperation::MEAN_SUM</a>)</div><div class="line"><a name="l00982"></a><span class="lineno">  982</span>&#160;            {</div><div class="line"><a name="l00983"></a><span class="lineno">  983</span>&#160;                <span class="keyword">const</span> <span class="keyword">auto</span> vec_width_inv = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a5ac8135a2c0a60f10448be0057543ed7">wrapper::vinv</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a39e87435be178fba49b76f49426ef873">wrapper::vdup_n</a>(static_cast&lt;float&gt;(in_info.dimension(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#accc088009d44c521706aa98d6387ee21">axis</a>)), wrapper::traits::vector_128_tag{}));</div><div class="line"><a name="l00984"></a><span class="lineno">  984</span>&#160;                vec_res_value1_f         = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(vcvtq_f32_u32(vec_res_value1), vec_width_inv);</div><div class="line"><a name="l00985"></a><span class="lineno">  985</span>&#160;                vec_res_value2_f         = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(vcvtq_f32_u32(vec_res_value2), vec_width_inv);</div><div class="line"><a name="l00986"></a><span class="lineno">  986</span>&#160;                vec_res_value3_f         = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(vcvtq_f32_u32(vec_res_value3), vec_width_inv);</div><div class="line"><a name="l00987"></a><span class="lineno">  987</span>&#160;                vec_res_value4_f         = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(vcvtq_f32_u32(vec_res_value4), vec_width_inv);</div><div class="line"><a name="l00988"></a><span class="lineno">  988</span>&#160;</div><div class="line"><a name="l00989"></a><span class="lineno">  989</span>&#160;                vec_res_value1 = vcvtq_u32_f32(vec_res_value1_f);</div><div class="line"><a name="l00990"></a><span class="lineno">  990</span>&#160;                vec_res_value2 = vcvtq_u32_f32(vec_res_value2_f);</div><div class="line"><a name="l00991"></a><span class="lineno">  991</span>&#160;                vec_res_value3 = vcvtq_u32_f32(vec_res_value3_f);</div><div class="line"><a name="l00992"></a><span class="lineno">  992</span>&#160;                vec_res_value4 = vcvtq_u32_f32(vec_res_value4_f);</div><div class="line"><a name="l00993"></a><span class="lineno">  993</span>&#160;            }</div><div class="line"><a name="l00994"></a><span class="lineno">  994</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">if</span>(op == <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45bac8074bb318fb85693233e64acc64c1ed">ReductionOperation::PROD</a>)</div><div class="line"><a name="l00995"></a><span class="lineno">  995</span>&#160;            {</div><div class="line"><a name="l00996"></a><span class="lineno">  996</span>&#160;                <span class="keyword">const</span> <span class="keyword">auto</span> offset32x4f_4 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a39e87435be178fba49b76f49426ef873">wrapper::vdup_n</a>(static_cast&lt;float&gt;(iq_info.offset), wrapper::traits::vector_128_tag{});</div><div class="line"><a name="l00997"></a><span class="lineno">  997</span>&#160;                <span class="keyword">const</span> <span class="keyword">auto</span> iscale32x4f_4 = <a class="code" href="namespacearm__compute.xhtml#a2e0f2412b4d1302272d1aeb85d21ab25">vinvq_f32</a>(vdupq_n_f32(iq_info.scale));</div><div class="line"><a name="l00998"></a><span class="lineno">  998</span>&#160;</div><div class="line"><a name="l00999"></a><span class="lineno">  999</span>&#160;                <span class="comment">//re-quantize</span></div><div class="line"><a name="l01000"></a><span class="lineno"> 1000</span>&#160;                vec_res_value1_f = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a1894e825a225f3b2013f594cbffdae73">wrapper::vadd</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(vec_res_value1_f, iscale32x4f_4), offset32x4f_4);</div><div class="line"><a name="l01001"></a><span class="lineno"> 1001</span>&#160;                vec_res_value2_f = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a1894e825a225f3b2013f594cbffdae73">wrapper::vadd</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(vec_res_value2_f, iscale32x4f_4), offset32x4f_4);</div><div class="line"><a name="l01002"></a><span class="lineno"> 1002</span>&#160;                vec_res_value3_f = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a1894e825a225f3b2013f594cbffdae73">wrapper::vadd</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(vec_res_value3_f, iscale32x4f_4), offset32x4f_4);</div><div class="line"><a name="l01003"></a><span class="lineno"> 1003</span>&#160;                vec_res_value4_f = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a1894e825a225f3b2013f594cbffdae73">wrapper::vadd</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(vec_res_value4_f, iscale32x4f_4), offset32x4f_4);</div><div class="line"><a name="l01004"></a><span class="lineno"> 1004</span>&#160;</div><div class="line"><a name="l01005"></a><span class="lineno"> 1005</span>&#160;                vec_res_value1 = vcvtq_u32_f32(vec_res_value1_f);</div><div class="line"><a name="l01006"></a><span class="lineno"> 1006</span>&#160;                vec_res_value2 = vcvtq_u32_f32(vec_res_value2_f);</div><div class="line"><a name="l01007"></a><span class="lineno"> 1007</span>&#160;                vec_res_value3 = vcvtq_u32_f32(vec_res_value3_f);</div><div class="line"><a name="l01008"></a><span class="lineno"> 1008</span>&#160;                vec_res_value4 = vcvtq_u32_f32(vec_res_value4_f);</div><div class="line"><a name="l01009"></a><span class="lineno"> 1009</span>&#160;            }</div><div class="line"><a name="l01010"></a><span class="lineno"> 1010</span>&#160;</div><div class="line"><a name="l01011"></a><span class="lineno"> 1011</span>&#160;            <span class="keywordflow">if</span>(op == <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba39102811589b9a0d7a6aa8721663b4d1">ReductionOperation::ARG_IDX_MIN</a> || op == <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba654fed6e9b6c154d04bcaa439e32d0d5">ReductionOperation::ARG_IDX_MAX</a>)</div><div class="line"><a name="l01012"></a><span class="lineno"> 1012</span>&#160;            {</div><div class="line"><a name="l01013"></a><span class="lineno"> 1013</span>&#160;                <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ae7943ea9c1f74dc72c62d4cc3966a459">wrapper::vstore</a>(reinterpret_cast&lt;uint32_t *&gt;(output.ptr()), vec_res_idx.val[0]);</div><div class="line"><a name="l01014"></a><span class="lineno"> 1014</span>&#160;                <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ae7943ea9c1f74dc72c62d4cc3966a459">wrapper::vstore</a>(reinterpret_cast&lt;uint32_t *&gt;(output.ptr()) + 4, vec_res_idx.val[1]);</div><div class="line"><a name="l01015"></a><span class="lineno"> 1015</span>&#160;                <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ae7943ea9c1f74dc72c62d4cc3966a459">wrapper::vstore</a>(reinterpret_cast&lt;uint32_t *&gt;(output.ptr()) + 8, vec_res_idx.val[2]);</div><div class="line"><a name="l01016"></a><span class="lineno"> 1016</span>&#160;                <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ae7943ea9c1f74dc72c62d4cc3966a459">wrapper::vstore</a>(reinterpret_cast&lt;uint32_t *&gt;(output.ptr()) + 12, vec_res_idx.val[3]);</div><div class="line"><a name="l01017"></a><span class="lineno"> 1017</span>&#160;            }</div><div class="line"><a name="l01018"></a><span class="lineno"> 1018</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">if</span>(op == <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba39102811589b9a0d7a6aa8721663b4d1">ReductionOperation::ARG_IDX_MIN</a>)</div><div class="line"><a name="l01019"></a><span class="lineno"> 1019</span>&#160;            {</div><div class="line"><a name="l01020"></a><span class="lineno"> 1020</span>&#160;                <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ae7943ea9c1f74dc72c62d4cc3966a459">wrapper::vstore</a>(output.ptr(), vec_res_value);</div><div class="line"><a name="l01021"></a><span class="lineno"> 1021</span>&#160;            }</div><div class="line"><a name="l01022"></a><span class="lineno"> 1022</span>&#160;            <span class="keywordflow">else</span></div><div class="line"><a name="l01023"></a><span class="lineno"> 1023</span>&#160;            {</div><div class="line"><a name="l01024"></a><span class="lineno"> 1024</span>&#160;                <span class="keywordflow">if</span>(op == <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba6970bdc2201030b9c03fbdcf3973858a">ReductionOperation::SUM</a>)</div><div class="line"><a name="l01025"></a><span class="lineno"> 1025</span>&#160;                {</div><div class="line"><a name="l01026"></a><span class="lineno"> 1026</span>&#160;                    <span class="comment">// Subtract offsets</span></div><div class="line"><a name="l01027"></a><span class="lineno"> 1027</span>&#160;                    <span class="keyword">auto</span> offsets = vdupq_n_s32((in_info.dimension(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#accc088009d44c521706aa98d6387ee21">axis</a>) - 1) * iq_info.offset);</div><div class="line"><a name="l01028"></a><span class="lineno"> 1028</span>&#160;</div><div class="line"><a name="l01029"></a><span class="lineno"> 1029</span>&#160;                    <span class="keyword">auto</span> vec_res_s_value1 = vreinterpretq_s32_u32(vec_res_value1);</div><div class="line"><a name="l01030"></a><span class="lineno"> 1030</span>&#160;                    <span class="keyword">auto</span> vec_res_s_value2 = vreinterpretq_s32_u32(vec_res_value2);</div><div class="line"><a name="l01031"></a><span class="lineno"> 1031</span>&#160;                    <span class="keyword">auto</span> vec_res_s_value3 = vreinterpretq_s32_u32(vec_res_value3);</div><div class="line"><a name="l01032"></a><span class="lineno"> 1032</span>&#160;                    <span class="keyword">auto</span> vec_res_s_value4 = vreinterpretq_s32_u32(vec_res_value4);</div><div class="line"><a name="l01033"></a><span class="lineno"> 1033</span>&#160;</div><div class="line"><a name="l01034"></a><span class="lineno"> 1034</span>&#160;                    vec_res_s_value1 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#acae4ec59246f93845fa78120d83d7c1e">wrapper::vsub</a>(vec_res_s_value1, offsets);</div><div class="line"><a name="l01035"></a><span class="lineno"> 1035</span>&#160;                    vec_res_s_value2 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#acae4ec59246f93845fa78120d83d7c1e">wrapper::vsub</a>(vec_res_s_value2, offsets);</div><div class="line"><a name="l01036"></a><span class="lineno"> 1036</span>&#160;                    vec_res_s_value3 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#acae4ec59246f93845fa78120d83d7c1e">wrapper::vsub</a>(vec_res_s_value3, offsets);</div><div class="line"><a name="l01037"></a><span class="lineno"> 1037</span>&#160;                    vec_res_s_value4 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#acae4ec59246f93845fa78120d83d7c1e">wrapper::vsub</a>(vec_res_s_value4, offsets);</div><div class="line"><a name="l01038"></a><span class="lineno"> 1038</span>&#160;</div><div class="line"><a name="l01039"></a><span class="lineno"> 1039</span>&#160;                    <span class="keyword">const</span> <span class="keyword">auto</span> temp16x8t_1 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a1598e7eb12a58fc53559332cd0c3ab6f">wrapper::vcombine</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a55bc37be5f14e4c561d3ca93b2a34aa9">wrapper::vqmovn</a>(vec_res_s_value1), <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a55bc37be5f14e4c561d3ca93b2a34aa9">wrapper::vqmovn</a>(vec_res_s_value2));</div><div class="line"><a name="l01040"></a><span class="lineno"> 1040</span>&#160;                    <span class="keyword">const</span> <span class="keyword">auto</span> temp16x8t_2 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a1598e7eb12a58fc53559332cd0c3ab6f">wrapper::vcombine</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a55bc37be5f14e4c561d3ca93b2a34aa9">wrapper::vqmovn</a>(vec_res_s_value3), <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a55bc37be5f14e4c561d3ca93b2a34aa9">wrapper::vqmovn</a>(vec_res_s_value4));</div><div class="line"><a name="l01041"></a><span class="lineno"> 1041</span>&#160;                    <span class="keyword">auto</span>       res         = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a1598e7eb12a58fc53559332cd0c3ab6f">wrapper::vcombine</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#aaf3df57c0d3884368a0da2a6e306e4bc">wrapper::vqmovun</a>(temp16x8t_1), <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#aaf3df57c0d3884368a0da2a6e306e4bc">wrapper::vqmovun</a>(temp16x8t_2));</div><div class="line"><a name="l01042"></a><span class="lineno"> 1042</span>&#160;                    <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ae7943ea9c1f74dc72c62d4cc3966a459">wrapper::vstore</a>(output.ptr(), res);</div><div class="line"><a name="l01043"></a><span class="lineno"> 1043</span>&#160;                }</div><div class="line"><a name="l01044"></a><span class="lineno"> 1044</span>&#160;                <span class="keywordflow">else</span></div><div class="line"><a name="l01045"></a><span class="lineno"> 1045</span>&#160;                {</div><div class="line"><a name="l01046"></a><span class="lineno"> 1046</span>&#160;                    <span class="keyword">const</span> <span class="keyword">auto</span> temp16x8t_1 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a1598e7eb12a58fc53559332cd0c3ab6f">wrapper::vcombine</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a55bc37be5f14e4c561d3ca93b2a34aa9">wrapper::vqmovn</a>(vec_res_value1), <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a55bc37be5f14e4c561d3ca93b2a34aa9">wrapper::vqmovn</a>(vec_res_value2));</div><div class="line"><a name="l01047"></a><span class="lineno"> 1047</span>&#160;                    <span class="keyword">const</span> <span class="keyword">auto</span> temp16x8t_2 = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a1598e7eb12a58fc53559332cd0c3ab6f">wrapper::vcombine</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a55bc37be5f14e4c561d3ca93b2a34aa9">wrapper::vqmovn</a>(vec_res_value3), <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a55bc37be5f14e4c561d3ca93b2a34aa9">wrapper::vqmovn</a>(vec_res_value4));</div><div class="line"><a name="l01048"></a><span class="lineno"> 1048</span>&#160;                    <span class="keyword">auto</span>       res         = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a1598e7eb12a58fc53559332cd0c3ab6f">wrapper::vcombine</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a55bc37be5f14e4c561d3ca93b2a34aa9">wrapper::vqmovn</a>(temp16x8t_1), <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a55bc37be5f14e4c561d3ca93b2a34aa9">wrapper::vqmovn</a>(temp16x8t_2));</div><div class="line"><a name="l01049"></a><span class="lineno"> 1049</span>&#160;                    <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ae7943ea9c1f74dc72c62d4cc3966a459">wrapper::vstore</a>(output.ptr(), res);</div><div class="line"><a name="l01050"></a><span class="lineno"> 1050</span>&#160;                }</div><div class="line"><a name="l01051"></a><span class="lineno"> 1051</span>&#160;            }</div><div class="line"><a name="l01052"></a><span class="lineno"> 1052</span>&#160;</div><div class="line"><a name="l01053"></a><span class="lineno"> 1053</span>&#160;        },</div><div class="line"><a name="l01054"></a><span class="lineno"> 1054</span>&#160;        <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, output);</div><div class="line"><a name="l01055"></a><span class="lineno"> 1055</span>&#160;    }</div><div class="line"><a name="l01056"></a><span class="lineno"> 1056</span>&#160;};</div><div class="line"><a name="l01057"></a><span class="lineno"> 1057</span>&#160;</div><div class="line"><a name="l01058"></a><span class="lineno"> 1058</span>&#160;<span class="keywordtype">void</span> reduce_op(<span class="keyword">const</span> Window &amp;window, <span class="keyword">const</span> ITensor *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, ITensor *output, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#accc088009d44c521706aa98d6387ee21">axis</a>, <span class="keyword">const</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45b">ReductionOperation</a> op)</div><div class="line"><a name="l01059"></a><span class="lineno"> 1059</span>&#160;{</div><div class="line"><a name="l01060"></a><span class="lineno"> 1060</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">bool</span> is_complex = (<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;info()-&gt;num_channels() == 2);</div><div class="line"><a name="l01061"></a><span class="lineno"> 1061</span>&#160;</div><div class="line"><a name="l01062"></a><span class="lineno"> 1062</span>&#160;    <span class="keywordflow">if</span>(is_complex)</div><div class="line"><a name="l01063"></a><span class="lineno"> 1063</span>&#160;    {</div><div class="line"><a name="l01064"></a><span class="lineno"> 1064</span>&#160;        <span class="keywordflow">switch</span>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#accc088009d44c521706aa98d6387ee21">axis</a>)</div><div class="line"><a name="l01065"></a><span class="lineno"> 1065</span>&#160;        {</div><div class="line"><a name="l01066"></a><span class="lineno"> 1066</span>&#160;            <span class="keywordflow">case</span> 2:</div><div class="line"><a name="l01067"></a><span class="lineno"> 1067</span>&#160;                <span class="keywordflow">switch</span>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;info()-&gt;data_type())</div><div class="line"><a name="l01068"></a><span class="lineno"> 1068</span>&#160;                {</div><div class="line"><a name="l01069"></a><span class="lineno"> 1069</span>&#160;                    <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>:</div><div class="line"><a name="l01070"></a><span class="lineno"> 1070</span>&#160;                        <span class="keywordflow">switch</span>(op)</div><div class="line"><a name="l01071"></a><span class="lineno"> 1071</span>&#160;                        {</div><div class="line"><a name="l01072"></a><span class="lineno"> 1072</span>&#160;                            <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba6970bdc2201030b9c03fbdcf3973858a">ReductionOperation::SUM</a>:</div><div class="line"><a name="l01073"></a><span class="lineno"> 1073</span>&#160;                                <span class="keywordflow">return</span> Reducer&lt;RedOpYZW_complex&lt;float, 4, 2, ReductionOperation::SUM&gt;&gt;::reduceZ(window, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, output, RedOpYZW_complex&lt;float, 4, 2, ReductionOperation::SUM&gt;(), op);</div><div class="line"><a name="l01074"></a><span class="lineno"> 1074</span>&#160;                            <span class="keywordflow">default</span>:</div><div class="line"><a name="l01075"></a><span class="lineno"> 1075</span>&#160;                                <a class="code" href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;Not supported&quot;</span>);</div><div class="line"><a name="l01076"></a><span class="lineno"> 1076</span>&#160;                        }</div><div class="line"><a name="l01077"></a><span class="lineno"> 1077</span>&#160;                    <span class="keywordflow">default</span>:</div><div class="line"><a name="l01078"></a><span class="lineno"> 1078</span>&#160;                        <a class="code" href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;Not supported&quot;</span>);</div><div class="line"><a name="l01079"></a><span class="lineno"> 1079</span>&#160;                }</div><div class="line"><a name="l01080"></a><span class="lineno"> 1080</span>&#160;            <span class="keywordflow">default</span>:</div><div class="line"><a name="l01081"></a><span class="lineno"> 1081</span>&#160;                <a class="code" href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;Not supported&quot;</span>);</div><div class="line"><a name="l01082"></a><span class="lineno"> 1082</span>&#160;        }</div><div class="line"><a name="l01083"></a><span class="lineno"> 1083</span>&#160;    }</div><div class="line"><a name="l01084"></a><span class="lineno"> 1084</span>&#160;</div><div class="line"><a name="l01085"></a><span class="lineno"> 1085</span>&#160;    <span class="keywordflow">switch</span>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#accc088009d44c521706aa98d6387ee21">axis</a>)</div><div class="line"><a name="l01086"></a><span class="lineno"> 1086</span>&#160;    {</div><div class="line"><a name="l01087"></a><span class="lineno"> 1087</span>&#160;        <span class="keywordflow">case</span> 0:</div><div class="line"><a name="l01088"></a><span class="lineno"> 1088</span>&#160;            <span class="keywordflow">switch</span>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;info()-&gt;data_type())</div><div class="line"><a name="l01089"></a><span class="lineno"> 1089</span>&#160;            {</div><div class="line"><a name="l01090"></a><span class="lineno"> 1090</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">DataType::QASYMM8</a>:</div><div class="line"><a name="l01091"></a><span class="lineno"> 1091</span>&#160;                    <span class="keywordflow">return</span> Reducer&lt;RedOpX_qasymm8&gt;::reduceX(window, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, output, RedOpX_qasymm8(), op);</div><div class="line"><a name="l01092"></a><span class="lineno"> 1092</span>&#160;<span class="preprocessor">#ifdef __ARM_FEATURE_FP16_VECTOR_ARITHMETIC</span></div><div class="line"><a name="l01093"></a><span class="lineno"> 1093</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a56d8353718e6fdc78b8d69078a2cdb94">DataType::F16</a>:</div><div class="line"><a name="l01094"></a><span class="lineno"> 1094</span>&#160;                    <span class="keywordflow">return</span> Reducer&lt;RedOpX&lt;float16_t, 8&gt;&gt;::reduceX(window, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, output, RedOpX&lt;float16_t, 8&gt;(), op);</div><div class="line"><a name="l01095"></a><span class="lineno"> 1095</span>&#160;<span class="preprocessor">#endif // __ARM_FEATURE_FP16_VECTOR_ARITHMETIC</span></div><div class="line"><a name="l01096"></a><span class="lineno"> 1096</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>:</div><div class="line"><a name="l01097"></a><span class="lineno"> 1097</span>&#160;                    <span class="keywordflow">return</span> Reducer&lt;RedOpX&lt;float, 4&gt;&gt;::reduceX(window, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, output, RedOpX&lt;float, 4&gt;(), op);</div><div class="line"><a name="l01098"></a><span class="lineno"> 1098</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58aa1e28eee0339658d39a8b4d325b56e9c">DataType::S32</a>:</div><div class="line"><a name="l01099"></a><span class="lineno"> 1099</span>&#160;                    <span class="keywordflow">return</span> Reducer&lt;RedOpX&lt;int32_t, 4&gt;&gt;::reduceX(window, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, output, RedOpX&lt;int32_t, 4&gt;(), op);</div><div class="line"><a name="l01100"></a><span class="lineno"> 1100</span>&#160;                <span class="keywordflow">default</span>:</div><div class="line"><a name="l01101"></a><span class="lineno"> 1101</span>&#160;                    <a class="code" href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;Not supported&quot;</span>);</div><div class="line"><a name="l01102"></a><span class="lineno"> 1102</span>&#160;            }</div><div class="line"><a name="l01103"></a><span class="lineno"> 1103</span>&#160;        <span class="keywordflow">case</span> 1:</div><div class="line"><a name="l01104"></a><span class="lineno"> 1104</span>&#160;            <span class="keywordflow">switch</span>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;info()-&gt;data_type())</div><div class="line"><a name="l01105"></a><span class="lineno"> 1105</span>&#160;            {</div><div class="line"><a name="l01106"></a><span class="lineno"> 1106</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">DataType::QASYMM8</a>:</div><div class="line"><a name="l01107"></a><span class="lineno"> 1107</span>&#160;                    <span class="keywordflow">return</span> Reducer&lt;RedOpYZW_qasymm8&gt;::reduceY(window, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, output, RedOpYZW_qasymm8(), op);</div><div class="line"><a name="l01108"></a><span class="lineno"> 1108</span>&#160;<span class="preprocessor">#ifdef __ARM_FEATURE_FP16_VECTOR_ARITHMETIC</span></div><div class="line"><a name="l01109"></a><span class="lineno"> 1109</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a56d8353718e6fdc78b8d69078a2cdb94">DataType::F16</a>:</div><div class="line"><a name="l01110"></a><span class="lineno"> 1110</span>&#160;                    <span class="keywordflow">return</span> Reducer&lt;RedOpYZW&lt;float16_t, 8&gt;&gt;::reduceY(window, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, output, RedOpYZW&lt;float16_t, 8&gt;(), op);</div><div class="line"><a name="l01111"></a><span class="lineno"> 1111</span>&#160;<span class="preprocessor">#endif // __ARM_FEATURE_FP16_VECTOR_ARITHMETIC</span></div><div class="line"><a name="l01112"></a><span class="lineno"> 1112</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>:</div><div class="line"><a name="l01113"></a><span class="lineno"> 1113</span>&#160;                    <span class="keywordflow">return</span> Reducer&lt;RedOpYZW&lt;float, 4&gt;&gt;::reduceY(window, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, output, RedOpYZW&lt;float, 4&gt;(), op);</div><div class="line"><a name="l01114"></a><span class="lineno"> 1114</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58aa1e28eee0339658d39a8b4d325b56e9c">DataType::S32</a>:</div><div class="line"><a name="l01115"></a><span class="lineno"> 1115</span>&#160;                    <span class="keywordflow">return</span> Reducer&lt;RedOpYZW&lt;int32_t, 4&gt;&gt;::reduceY(window, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, output, RedOpYZW&lt;int32_t, 4&gt;(), op);</div><div class="line"><a name="l01116"></a><span class="lineno"> 1116</span>&#160;                <span class="keywordflow">default</span>:</div><div class="line"><a name="l01117"></a><span class="lineno"> 1117</span>&#160;                    <a class="code" href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;Not supported&quot;</span>);</div><div class="line"><a name="l01118"></a><span class="lineno"> 1118</span>&#160;            }</div><div class="line"><a name="l01119"></a><span class="lineno"> 1119</span>&#160;        <span class="keywordflow">case</span> 2:</div><div class="line"><a name="l01120"></a><span class="lineno"> 1120</span>&#160;            <span class="keywordflow">switch</span>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;info()-&gt;data_type())</div><div class="line"><a name="l01121"></a><span class="lineno"> 1121</span>&#160;            {</div><div class="line"><a name="l01122"></a><span class="lineno"> 1122</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">DataType::QASYMM8</a>:</div><div class="line"><a name="l01123"></a><span class="lineno"> 1123</span>&#160;                    <span class="keywordflow">return</span> Reducer&lt;RedOpYZW_qasymm8&gt;::reduceZ(window, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, output, RedOpYZW_qasymm8(), op);</div><div class="line"><a name="l01124"></a><span class="lineno"> 1124</span>&#160;<span class="preprocessor">#ifdef __ARM_FEATURE_FP16_VECTOR_ARITHMETIC</span></div><div class="line"><a name="l01125"></a><span class="lineno"> 1125</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a56d8353718e6fdc78b8d69078a2cdb94">DataType::F16</a>:</div><div class="line"><a name="l01126"></a><span class="lineno"> 1126</span>&#160;                    <span class="keywordflow">return</span> Reducer&lt;RedOpYZW&lt;float16_t, 8&gt;&gt;::reduceZ(window, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, output, RedOpYZW&lt;float16_t, 8&gt;(), op);</div><div class="line"><a name="l01127"></a><span class="lineno"> 1127</span>&#160;<span class="preprocessor">#endif // __ARM_FEATURE_FP16_VECTOR_ARITHMETIC</span></div><div class="line"><a name="l01128"></a><span class="lineno"> 1128</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>:</div><div class="line"><a name="l01129"></a><span class="lineno"> 1129</span>&#160;                    <span class="keywordflow">return</span> Reducer&lt;RedOpYZW&lt;float, 4&gt;&gt;::reduceZ(window, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, output, RedOpYZW&lt;float, 4&gt;(), op);</div><div class="line"><a name="l01130"></a><span class="lineno"> 1130</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58aa1e28eee0339658d39a8b4d325b56e9c">DataType::S32</a>:</div><div class="line"><a name="l01131"></a><span class="lineno"> 1131</span>&#160;                    <span class="keywordflow">return</span> Reducer&lt;RedOpYZW&lt;int32_t, 4&gt;&gt;::reduceZ(window, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, output, RedOpYZW&lt;int32_t, 4&gt;(), op);</div><div class="line"><a name="l01132"></a><span class="lineno"> 1132</span>&#160;                <span class="keywordflow">default</span>:</div><div class="line"><a name="l01133"></a><span class="lineno"> 1133</span>&#160;                    <a class="code" href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;Not supported&quot;</span>);</div><div class="line"><a name="l01134"></a><span class="lineno"> 1134</span>&#160;            }</div><div class="line"><a name="l01135"></a><span class="lineno"> 1135</span>&#160;        <span class="keywordflow">case</span> 3:</div><div class="line"><a name="l01136"></a><span class="lineno"> 1136</span>&#160;            <span class="keywordflow">switch</span>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;info()-&gt;data_type())</div><div class="line"><a name="l01137"></a><span class="lineno"> 1137</span>&#160;            {</div><div class="line"><a name="l01138"></a><span class="lineno"> 1138</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">DataType::QASYMM8</a>:</div><div class="line"><a name="l01139"></a><span class="lineno"> 1139</span>&#160;                    <span class="keywordflow">return</span> Reducer&lt;RedOpYZW_qasymm8&gt;::reduceW(window, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, output, RedOpYZW_qasymm8(), op);</div><div class="line"><a name="l01140"></a><span class="lineno"> 1140</span>&#160;<span class="preprocessor">#ifdef __ARM_FEATURE_FP16_VECTOR_ARITHMETIC</span></div><div class="line"><a name="l01141"></a><span class="lineno"> 1141</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a56d8353718e6fdc78b8d69078a2cdb94">DataType::F16</a>:</div><div class="line"><a name="l01142"></a><span class="lineno"> 1142</span>&#160;                    <span class="keywordflow">return</span> Reducer&lt;RedOpYZW&lt;float16_t, 8&gt;&gt;::reduceW(window, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, output, RedOpYZW&lt;float16_t, 8&gt;(), op);</div><div class="line"><a name="l01143"></a><span class="lineno"> 1143</span>&#160;<span class="preprocessor">#endif // __ARM_FEATURE_FP16_VECTOR_ARITHMETIC</span></div><div class="line"><a name="l01144"></a><span class="lineno"> 1144</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>:</div><div class="line"><a name="l01145"></a><span class="lineno"> 1145</span>&#160;                    <span class="keywordflow">return</span> Reducer&lt;RedOpYZW&lt;float, 4&gt;&gt;::reduceW(window, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, output, RedOpYZW&lt;float, 4&gt;(), op);</div><div class="line"><a name="l01146"></a><span class="lineno"> 1146</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58aa1e28eee0339658d39a8b4d325b56e9c">DataType::S32</a>:</div><div class="line"><a name="l01147"></a><span class="lineno"> 1147</span>&#160;                    <span class="keywordflow">return</span> Reducer&lt;RedOpYZW&lt;int32_t, 4&gt;&gt;::reduceW(window, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, output, RedOpYZW&lt;int32_t, 4&gt;(), op);</div><div class="line"><a name="l01148"></a><span class="lineno"> 1148</span>&#160;                <span class="keywordflow">default</span>:</div><div class="line"><a name="l01149"></a><span class="lineno"> 1149</span>&#160;                    <a class="code" href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;Not supported&quot;</span>);</div><div class="line"><a name="l01150"></a><span class="lineno"> 1150</span>&#160;            }</div><div class="line"><a name="l01151"></a><span class="lineno"> 1151</span>&#160;        <span class="keywordflow">default</span>:</div><div class="line"><a name="l01152"></a><span class="lineno"> 1152</span>&#160;            <a class="code" href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;Unsupported reduction axis&quot;</span>);</div><div class="line"><a name="l01153"></a><span class="lineno"> 1153</span>&#160;    }</div><div class="line"><a name="l01154"></a><span class="lineno"> 1154</span>&#160;}</div><div class="line"><a name="l01155"></a><span class="lineno"> 1155</span>&#160;</div><div class="line"><a name="l01156"></a><span class="lineno"> 1156</span>&#160;Status validate_arguments(<span class="keyword">const</span> ITensorInfo *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, <span class="keyword">const</span> ITensorInfo *output, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#accc088009d44c521706aa98d6387ee21">axis</a>, <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45b">ReductionOperation</a> op)</div><div class="line"><a name="l01157"></a><span class="lineno"> 1157</span>&#160;{</div><div class="line"><a name="l01158"></a><span class="lineno"> 1158</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(op);</div><div class="line"><a name="l01159"></a><span class="lineno"> 1159</span>&#160;</div><div class="line"><a name="l01160"></a><span class="lineno"> 1160</span>&#160;    <a class="code" href="_validate_8h.xhtml#aff911654521523937ff24372a870b89f">ARM_COMPUTE_RETURN_ERROR_ON_NULLPTR</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, output);</div><div class="line"><a name="l01161"></a><span class="lineno"> 1161</span>&#160;    <a class="code" href="_c_p_p_2_validate_8h.xhtml#ad2633f3560322e1f8d926949dec1b730">ARM_COMPUTE_RETURN_ERROR_ON_CPU_F16_UNSUPPORTED</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>);</div><div class="line"><a name="l01162"></a><span class="lineno"> 1162</span>&#160;</div><div class="line"><a name="l01163"></a><span class="lineno"> 1163</span>&#160;    <span class="keywordflow">if</span>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;num_channels() == 1)</div><div class="line"><a name="l01164"></a><span class="lineno"> 1164</span>&#160;    {</div><div class="line"><a name="l01165"></a><span class="lineno"> 1165</span>&#160;        <a class="code" href="_validate_8h.xhtml#ae7eed178dac535c6e727061b1f5bc6eb">ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">DataType::QASYMM8</a>, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58aa1e28eee0339658d39a8b4d325b56e9c">DataType::S32</a>, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a56d8353718e6fdc78b8d69078a2cdb94">DataType::F16</a>, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>);</div><div class="line"><a name="l01166"></a><span class="lineno"> 1166</span>&#160;    }</div><div class="line"><a name="l01167"></a><span class="lineno"> 1167</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l01168"></a><span class="lineno"> 1168</span>&#160;    {</div><div class="line"><a name="l01169"></a><span class="lineno"> 1169</span>&#160;        <a class="code" href="_validate_8h.xhtml#ae7eed178dac535c6e727061b1f5bc6eb">ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, 2, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>);</div><div class="line"><a name="l01170"></a><span class="lineno"> 1170</span>&#160;        <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(op != <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba6970bdc2201030b9c03fbdcf3973858a">ReductionOperation::SUM</a>);</div><div class="line"><a name="l01171"></a><span class="lineno"> 1171</span>&#160;        <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#accc088009d44c521706aa98d6387ee21">axis</a> != 2);</div><div class="line"><a name="l01172"></a><span class="lineno"> 1172</span>&#160;    }</div><div class="line"><a name="l01173"></a><span class="lineno"> 1173</span>&#160;</div><div class="line"><a name="l01174"></a><span class="lineno"> 1174</span>&#160;    <a class="code" href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#accc088009d44c521706aa98d6387ee21">axis</a> &gt;= <a class="code" href="classarm__compute_1_1_dimensions.xhtml#a1b67d5b720119d50faa286c774579ecc">TensorShape::num_max_dimensions</a>, <span class="stringliteral">&quot;Reduction axis greater than max number of dimensions&quot;</span>);</div><div class="line"><a name="l01175"></a><span class="lineno"> 1175</span>&#160;    <a class="code" href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#accc088009d44c521706aa98d6387ee21">axis</a> &gt; 3, <span class="stringliteral">&quot;Unsupported reduction axis&quot;</span>);</div><div class="line"><a name="l01176"></a><span class="lineno"> 1176</span>&#160;</div><div class="line"><a name="l01177"></a><span class="lineno"> 1177</span>&#160;    <span class="keywordflow">if</span>(output-&gt;total_size() != 0)</div><div class="line"><a name="l01178"></a><span class="lineno"> 1178</span>&#160;    {</div><div class="line"><a name="l01179"></a><span class="lineno"> 1179</span>&#160;        <span class="keywordtype">bool</span> is_arg_min_max = (op == <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba654fed6e9b6c154d04bcaa439e32d0d5">ReductionOperation::ARG_IDX_MAX</a> || op == <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba39102811589b9a0d7a6aa8721663b4d1">ReductionOperation::ARG_IDX_MIN</a>);</div><div class="line"><a name="l01180"></a><span class="lineno"> 1180</span>&#160;        <span class="keywordflow">if</span>(!is_arg_min_max)</div><div class="line"><a name="l01181"></a><span class="lineno"> 1181</span>&#160;        {</div><div class="line"><a name="l01182"></a><span class="lineno"> 1182</span>&#160;            <a class="code" href="_validate_8h.xhtml#a8f3ff7da485ff7e75dab07baadf5b4bd">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, output);</div><div class="line"><a name="l01183"></a><span class="lineno"> 1183</span>&#160;            <a class="code" href="_validate_8h.xhtml#aba910b683652be1f65437ef37a9da2a9">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_QUANTIZATION_INFO</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, output);</div><div class="line"><a name="l01184"></a><span class="lineno"> 1184</span>&#160;            <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;num_channels() != output-&gt;num_channels());</div><div class="line"><a name="l01185"></a><span class="lineno"> 1185</span>&#160;        }</div><div class="line"><a name="l01186"></a><span class="lineno"> 1186</span>&#160;        <span class="keywordflow">else</span></div><div class="line"><a name="l01187"></a><span class="lineno"> 1187</span>&#160;        {</div><div class="line"><a name="l01188"></a><span class="lineno"> 1188</span>&#160;            <a class="code" href="_validate_8h.xhtml#ae7eed178dac535c6e727061b1f5bc6eb">ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN</a>(output, 1, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58ac8bd5bedff8ef192d39a962afc0e19ee">DataType::U32</a>, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58aa1e28eee0339658d39a8b4d325b56e9c">DataType::S32</a>);</div><div class="line"><a name="l01189"></a><span class="lineno"> 1189</span>&#160;        }</div><div class="line"><a name="l01190"></a><span class="lineno"> 1190</span>&#160;</div><div class="line"><a name="l01191"></a><span class="lineno"> 1191</span>&#160;        <span class="keyword">const</span> TensorShape <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ab1806bf0c5a41f674fb9d2dc6af644f5">output_shape</a>         = <a class="code" href="namespacearm__compute_1_1misc_1_1shape__calculator.xhtml#aff7ab3043f63660295d229ebc9e6c2b1">arm_compute::misc::shape_calculator::compute_reduced_shape</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;tensor_shape(), <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#accc088009d44c521706aa98d6387ee21">axis</a>);</div><div class="line"><a name="l01192"></a><span class="lineno"> 1192</span>&#160;        <span class="keyword">const</span> TensorInfo  tensor_info_reshaped = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;clone()-&gt;set_tensor_shape(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ab1806bf0c5a41f674fb9d2dc6af644f5">output_shape</a>);</div><div class="line"><a name="l01193"></a><span class="lineno"> 1193</span>&#160;        <a class="code" href="_validate_8h.xhtml#a27e4638546c88b8916f967e6e54480a9">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_SHAPES</a>(output, &amp;tensor_info_reshaped);</div><div class="line"><a name="l01194"></a><span class="lineno"> 1194</span>&#160;    }</div><div class="line"><a name="l01195"></a><span class="lineno"> 1195</span>&#160;</div><div class="line"><a name="l01196"></a><span class="lineno"> 1196</span>&#160;    <span class="keywordflow">return</span> Status{};</div><div class="line"><a name="l01197"></a><span class="lineno"> 1197</span>&#160;}</div><div class="line"><a name="l01198"></a><span class="lineno"> 1198</span>&#160;</div><div class="line"><a name="l01199"></a><span class="lineno"> 1199</span>&#160;std::tuple&lt;Status, Window&gt; validate_and_configure_window(ITensorInfo *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, ITensorInfo *output, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#accc088009d44c521706aa98d6387ee21">axis</a>, <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45b">ReductionOperation</a> op)</div><div class="line"><a name="l01200"></a><span class="lineno"> 1200</span>&#160;{</div><div class="line"><a name="l01201"></a><span class="lineno"> 1201</span>&#160;    <span class="comment">// Calculate output shape and set if empty</span></div><div class="line"><a name="l01202"></a><span class="lineno"> 1202</span>&#160;    <span class="keyword">const</span> TensorShape <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ab1806bf0c5a41f674fb9d2dc6af644f5">output_shape</a> = <a class="code" href="namespacearm__compute_1_1misc_1_1shape__calculator.xhtml#aff7ab3043f63660295d229ebc9e6c2b1">arm_compute::misc::shape_calculator::compute_reduced_shape</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;tensor_shape(), <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#accc088009d44c521706aa98d6387ee21">axis</a>);</div><div class="line"><a name="l01203"></a><span class="lineno"> 1203</span>&#160;</div><div class="line"><a name="l01204"></a><span class="lineno"> 1204</span>&#160;    <span class="comment">// Output auto initialization if not yet initialized</span></div><div class="line"><a name="l01205"></a><span class="lineno"> 1205</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">bool</span> is_arg_min_max   = (op == <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba39102811589b9a0d7a6aa8721663b4d1">ReductionOperation::ARG_IDX_MIN</a> || op == <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba654fed6e9b6c154d04bcaa439e32d0d5">ReductionOperation::ARG_IDX_MAX</a>);</div><div class="line"><a name="l01206"></a><span class="lineno"> 1206</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</a>   <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa30f40707893f8201695a2c20e2d8c7d">output_data_type</a> = is_arg_min_max ? <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58aa1e28eee0339658d39a8b4d325b56e9c">DataType::S32</a> : <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;data_type();</div><div class="line"><a name="l01207"></a><span class="lineno"> 1207</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a47be6fa38308d0003c25b60b7dbc45ce">auto_init_if_empty</a>(*output, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;clone()-&gt;set_tensor_shape(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ab1806bf0c5a41f674fb9d2dc6af644f5">output_shape</a>).set_data_type(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa30f40707893f8201695a2c20e2d8c7d">output_data_type</a>).reset_padding().set_is_resizable(<span class="keyword">true</span>));</div><div class="line"><a name="l01208"></a><span class="lineno"> 1208</span>&#160;</div><div class="line"><a name="l01209"></a><span class="lineno"> 1209</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="_c_l_im2_col_kernel_8cpp.xhtml#a4e45c1f5e4280813a78a77dda71d8799">num_elems_processed_per_iteration</a> = 16 / <a class="code" href="namespacearm__compute.xhtml#abb7e0f23a4f2e63f39433f158dad47ab">data_size_from_type</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;data_type());</div><div class="line"><a name="l01210"></a><span class="lineno"> 1210</span>&#160;</div><div class="line"><a name="l01211"></a><span class="lineno"> 1211</span>&#160;    <span class="comment">// Configure kernel window</span></div><div class="line"><a name="l01212"></a><span class="lineno"> 1212</span>&#160;    Window                 win = <a class="code" href="namespacearm__compute.xhtml#ab7980fa5ee693e3282a76da047a1c3b5">calculate_max_window</a>(*<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, Steps(<a class="code" href="_c_l_im2_col_kernel_8cpp.xhtml#a4e45c1f5e4280813a78a77dda71d8799">num_elems_processed_per_iteration</a>));</div><div class="line"><a name="l01213"></a><span class="lineno"> 1213</span>&#160;    AccessWindowHorizontal input_access(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, 0, <a class="code" href="_c_l_im2_col_kernel_8cpp.xhtml#a4e45c1f5e4280813a78a77dda71d8799">num_elems_processed_per_iteration</a>);</div><div class="line"><a name="l01214"></a><span class="lineno"> 1214</span>&#160;    AccessWindowHorizontal output_access(output, 0, <a class="code" href="_c_l_im2_col_kernel_8cpp.xhtml#a4e45c1f5e4280813a78a77dda71d8799">num_elems_processed_per_iteration</a>);</div><div class="line"><a name="l01215"></a><span class="lineno"> 1215</span>&#160;</div><div class="line"><a name="l01216"></a><span class="lineno"> 1216</span>&#160;    <span class="keywordtype">bool</span> window_changed = <a class="code" href="namespacearm__compute.xhtml#afc4bd8e872567d9c4c57d89eb0bb3da1">update_window_and_padding</a>(win, input_access, output_access);</div><div class="line"><a name="l01217"></a><span class="lineno"> 1217</span>&#160;    output_access.set_valid_region(win, ValidRegion(Coordinates(), output-&gt;tensor_shape()));</div><div class="line"><a name="l01218"></a><span class="lineno"> 1218</span>&#160;</div><div class="line"><a name="l01219"></a><span class="lineno"> 1219</span>&#160;    Status err = (window_changed) ? <a class="code" href="_error_8h.xhtml#af1b8ff8eb557a2ad11272f1505f45d34">ARM_COMPUTE_CREATE_ERROR</a>(<a class="code" href="namespacearm__compute.xhtml#a59e56af19e754a6aa26a612ebf91d05fa62be47fdd89da032cf78dfce82239579">ErrorCode::RUNTIME_ERROR</a>, <span class="stringliteral">&quot;Insufficient Padding!&quot;</span>) : Status{};</div><div class="line"><a name="l01220"></a><span class="lineno"> 1220</span>&#160;</div><div class="line"><a name="l01221"></a><span class="lineno"> 1221</span>&#160;    <span class="keywordflow">return</span> std::make_tuple(err, win);</div><div class="line"><a name="l01222"></a><span class="lineno"> 1222</span>&#160;}</div><div class="line"><a name="l01223"></a><span class="lineno"> 1223</span>&#160;} <span class="comment">// namespace</span></div><div class="line"><a name="l01224"></a><span class="lineno"> 1224</span>&#160;</div><div class="line"><a name="l01225"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_reduction_operation_kernel.xhtml#a2a4e88f09df046635e88b16c8ec387a7"> 1225</a></span>&#160;<a class="code" href="classarm__compute_1_1_n_e_reduction_operation_kernel.xhtml#a2a4e88f09df046635e88b16c8ec387a7">NEReductionOperationKernel::NEReductionOperationKernel</a>()</div><div class="line"><a name="l01226"></a><span class="lineno"> 1226</span>&#160;    : _input(nullptr), _output(nullptr), _reduction_axis(0), _op(<a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45b">ReductionOperation</a>::<a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba2ce6e134b828b72fad160fa17c8d1b64">SUM_SQUARE</a>), _border_size()</div><div class="line"><a name="l01227"></a><span class="lineno"> 1227</span>&#160;{</div><div class="line"><a name="l01228"></a><span class="lineno"> 1228</span>&#160;}</div><div class="line"><a name="l01229"></a><span class="lineno"> 1229</span>&#160;</div><div class="line"><a name="l01230"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_reduction_operation_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7"> 1230</a></span>&#160;<a class="code" href="structarm__compute_1_1_border_size.xhtml">BorderSize</a> <a class="code" href="classarm__compute_1_1_n_e_reduction_operation_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">NEReductionOperationKernel::border_size</a>()<span class="keyword"> const</span></div><div class="line"><a name="l01231"></a><span class="lineno"> 1231</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l01232"></a><span class="lineno"> 1232</span>&#160;    <span class="keywordflow">return</span> _border_size;</div><div class="line"><a name="l01233"></a><span class="lineno"> 1233</span>&#160;}</div><div class="line"><a name="l01234"></a><span class="lineno"> 1234</span>&#160;</div><div class="line"><a name="l01235"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_reduction_operation_kernel.xhtml#a84481fca3a7ab8e4b5035ba8b8170de3"> 1235</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_n_e_reduction_operation_kernel.xhtml#a84481fca3a7ab8e4b5035ba8b8170de3">NEReductionOperationKernel::configure</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *output, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#accc088009d44c521706aa98d6387ee21">axis</a>, <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45b">ReductionOperation</a> op)</div><div class="line"><a name="l01236"></a><span class="lineno"> 1236</span>&#160;{</div><div class="line"><a name="l01237"></a><span class="lineno"> 1237</span>&#160;    <a class="code" href="_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, output);</div><div class="line"><a name="l01238"></a><span class="lineno"> 1238</span>&#160;</div><div class="line"><a name="l01239"></a><span class="lineno"> 1239</span>&#160;    <a class="code" href="_error_8h.xhtml#a938dcd406ce611ef5345ad2531cdb948">ARM_COMPUTE_ERROR_THROW_ON</a>(validate_arguments(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;info(), output-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>(), <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#accc088009d44c521706aa98d6387ee21">axis</a>, op));</div><div class="line"><a name="l01240"></a><span class="lineno"> 1240</span>&#160;</div><div class="line"><a name="l01241"></a><span class="lineno"> 1241</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="_c_l_im2_col_kernel_8cpp.xhtml#a4e45c1f5e4280813a78a77dda71d8799">num_elems_processed_per_iteration</a> = 16 / <a class="code" href="namespacearm__compute.xhtml#abb7e0f23a4f2e63f39433f158dad47ab">data_size_from_type</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;info()-&gt;data_type());</div><div class="line"><a name="l01242"></a><span class="lineno"> 1242</span>&#160;</div><div class="line"><a name="l01243"></a><span class="lineno"> 1243</span>&#160;    _input          = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>;</div><div class="line"><a name="l01244"></a><span class="lineno"> 1244</span>&#160;    _output         = output;</div><div class="line"><a name="l01245"></a><span class="lineno"> 1245</span>&#160;    _border_size    = (<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#accc088009d44c521706aa98d6387ee21">axis</a> == 0) ? <a class="code" href="structarm__compute_1_1_border_size.xhtml">BorderSize</a>(0, <a class="code" href="_c_l_im2_col_kernel_8cpp.xhtml#a4e45c1f5e4280813a78a77dda71d8799">num_elems_processed_per_iteration</a> - (<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;info()-&gt;dimension(0) % <a class="code" href="_c_l_im2_col_kernel_8cpp.xhtml#a4e45c1f5e4280813a78a77dda71d8799">num_elems_processed_per_iteration</a>), 0, 0) : <a class="code" href="structarm__compute_1_1_border_size.xhtml">BorderSize</a>();</div><div class="line"><a name="l01246"></a><span class="lineno"> 1246</span>&#160;    _op             = op;</div><div class="line"><a name="l01247"></a><span class="lineno"> 1247</span>&#160;    _reduction_axis = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#accc088009d44c521706aa98d6387ee21">axis</a>;</div><div class="line"><a name="l01248"></a><span class="lineno"> 1248</span>&#160;</div><div class="line"><a name="l01249"></a><span class="lineno"> 1249</span>&#160;    <span class="comment">// Configure kernel window</span></div><div class="line"><a name="l01250"></a><span class="lineno"> 1250</span>&#160;    <span class="keyword">auto</span> win_config = validate_and_configure_window(_input-&gt;info(), _output-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>(), <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#accc088009d44c521706aa98d6387ee21">axis</a>, op);</div><div class="line"><a name="l01251"></a><span class="lineno"> 1251</span>&#160;</div><div class="line"><a name="l01252"></a><span class="lineno"> 1252</span>&#160;    <a class="code" href="_error_8h.xhtml#a938dcd406ce611ef5345ad2531cdb948">ARM_COMPUTE_ERROR_THROW_ON</a>(std::get&lt;0&gt;(win_config));</div><div class="line"><a name="l01253"></a><span class="lineno"> 1253</span>&#160;</div><div class="line"><a name="l01254"></a><span class="lineno"> 1254</span>&#160;    INEKernel::configure(std::get&lt;1&gt;(win_config));</div><div class="line"><a name="l01255"></a><span class="lineno"> 1255</span>&#160;}</div><div class="line"><a name="l01256"></a><span class="lineno"> 1256</span>&#160;</div><div class="line"><a name="l01257"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_reduction_operation_kernel.xhtml#a358b25909dda0c7c6f49d40f91cd1112"> 1257</a></span>&#160;<a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> <a class="code" href="classarm__compute_1_1_n_e_reduction_operation_kernel.xhtml#a358b25909dda0c7c6f49d40f91cd1112">NEReductionOperationKernel::validate</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *output, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#accc088009d44c521706aa98d6387ee21">axis</a>, <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45b">ReductionOperation</a> op)</div><div class="line"><a name="l01258"></a><span class="lineno"> 1258</span>&#160;{</div><div class="line"><a name="l01259"></a><span class="lineno"> 1259</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(validate_arguments(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, output, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#accc088009d44c521706aa98d6387ee21">axis</a>, op));</div><div class="line"><a name="l01260"></a><span class="lineno"> 1260</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(std::get&lt;0&gt;(validate_and_configure_window(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;clone().get(), output-&gt;<a class="code" href="classarm__compute_1_1misc_1_1_i_cloneable.xhtml#a4d10e5012a872e7f78f2b539b673049d">clone</a>().get(), <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#accc088009d44c521706aa98d6387ee21">axis</a>, op)));</div><div class="line"><a name="l01261"></a><span class="lineno"> 1261</span>&#160;</div><div class="line"><a name="l01262"></a><span class="lineno"> 1262</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_status.xhtml">Status</a>{};</div><div class="line"><a name="l01263"></a><span class="lineno"> 1263</span>&#160;}</div><div class="line"><a name="l01264"></a><span class="lineno"> 1264</span>&#160;</div><div class="line"><a name="l01265"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_reduction_operation_kernel.xhtml#a112b35dd205c62ea6ed1447ef226da82"> 1265</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_n_e_reduction_operation_kernel.xhtml#a112b35dd205c62ea6ed1447ef226da82">NEReductionOperationKernel::run</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;window, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1_thread_info.xhtml">ThreadInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4f4125dba5283887b34f889b1c615c0c">info</a>)</div><div class="line"><a name="l01266"></a><span class="lineno"> 1266</span>&#160;{</div><div class="line"><a name="l01267"></a><span class="lineno"> 1267</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4f4125dba5283887b34f889b1c615c0c">info</a>);</div><div class="line"><a name="l01268"></a><span class="lineno"> 1268</span>&#160;    <a class="code" href="_validate_8h.xhtml#a1b35b0d258183cf9ef36adf684d0b88c">ARM_COMPUTE_ERROR_ON_UNCONFIGURED_KERNEL</a>(<span class="keyword">this</span>);</div><div class="line"><a name="l01269"></a><span class="lineno"> 1269</span>&#160;    <a class="code" href="_validate_8h.xhtml#a6eb9ce82815fe429250189da7592ba75">ARM_COMPUTE_ERROR_ON_INVALID_SUBWINDOW</a>(<a class="code" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">INEKernel::window</a>(), <a class="code" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>);</div><div class="line"><a name="l01270"></a><span class="lineno"> 1270</span>&#160;</div><div class="line"><a name="l01271"></a><span class="lineno"> 1271</span>&#160;    reduce_op(<a class="code" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>, _input, _output, _reduction_axis, _op);</div><div class="line"><a name="l01272"></a><span class="lineno"> 1272</span>&#160;}</div><div class="line"><a name="l01273"></a><span class="lineno"> 1273</span>&#160;} <span class="comment">// namespace arm_compute</span></div><div class="ttc" id="classarm__compute_1_1_i_kernel_xhtml_ad34a46f53686c12a5c5e717cc9617fb6"><div class="ttname"><a href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">arm_compute::IKernel::window</a></div><div class="ttdeci">const Window &amp; window() const</div><div class="ttdoc">The maximum window the kernel can be executed on.</div><div class="ttdef"><b>Definition:</b> <a href="_i_kernel_8cpp_source.xhtml#l00028">IKernel.cpp:28</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1wrapper_xhtml_afd68f4669bdf3bfe0ec26c6a1825e248"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#afd68f4669bdf3bfe0ec26c6a1825e248">arm_compute::wrapper::vorr</a></div><div class="ttdeci">uint8x8_t vorr(const uint8x8_t &amp;a, const uint8x8_t &amp;b)</div><div class="ttdef"><b>Definition:</b> <a href="orr_8h_source.xhtml#l00039">orr.h:39</a></div></div>
<div class="ttc" id="_i_tensor_8h_xhtml"><div class="ttname"><a href="_i_tensor_8h.xhtml">ITensor.h</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a5827eb9cb394e74af87f74bd354fb45b"><div class="ttname"><a href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45b">arm_compute::ReductionOperation</a></div><div class="ttdeci">ReductionOperation</div><div class="ttdoc">Available reduction operations.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00495">Types.h:495</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_aa76b4a6e74940dabc5b7fc6b2dab3545"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">arm_compute::test::validation::b</a></div><div class="ttdeci">SimpleTensor&lt; float &gt; b</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00157">DFT.cpp:157</a></div></div>
<div class="ttc" id="structarm__compute_1_1_border_size_xhtml"><div class="ttname"><a href="structarm__compute_1_1_border_size.xhtml">arm_compute::BorderSize</a></div><div class="ttdoc">Container for 2D border size.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00269">Types.h:269</a></div></div>
<div class="ttc" id="_validate_8h_xhtml_a8f3ff7da485ff7e75dab07baadf5b4bd"><div class="ttname"><a href="_validate_8h.xhtml#a8f3ff7da485ff7e75dab07baadf5b4bd">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES(...)</div><div class="ttdef"><b>Definition:</b> <a href="_validate_8h_source.xhtml#l00545">Validate.h:545</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab8cef8b31b552b532a14ab8815e06285"><div class="ttname"><a href="namespacearm__compute.xhtml#ab8cef8b31b552b532a14ab8815e06285">arm_compute::quantize_qasymm8</a></div><div class="ttdeci">uint8_t quantize_qasymm8(float value, const INFO_TYPE &amp;qinfo, RoundingPolicy rounding_policy=RoundingPolicy::TO_NEAREST_UP)</div><div class="ttdoc">Quantize a value given an unsigned 8-bit asymmetric quantization scheme.</div><div class="ttdef"><b>Definition:</b> <a href="_quantization_info_8h_source.xhtml#l00282">QuantizationInfo.h:282</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a7cf8d8b669b8f7b05680230be30d60f4"><div class="ttname"><a href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR(msg)</div><div class="ttdoc">Print the given message then throw an std::runtime_error.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00352">Error.h:352</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a5827eb9cb394e74af87f74bd354fb45ba2ce6e134b828b72fad160fa17c8d1b64"><div class="ttname"><a href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba2ce6e134b828b72fad160fa17c8d1b64">arm_compute::ReductionOperation::SUM_SQUARE</a></div><div class="ttdoc">Sum of squares.</div></div>
<div class="ttc" id="namespacearm__compute_1_1wrapper_xhtml_a77f54eded7fef436d3a4f21ad5a00da6"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#a77f54eded7fef436d3a4f21ad5a00da6">arm_compute::wrapper::vloadq</a></div><div class="ttdeci">uint8x16_t vloadq(const uint8_t *ptr)</div><div class="ttdef"><b>Definition:</b> <a href="load_8h_source.xhtml#l00058">load.h:58</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a8a1e1c105f0bdaf37db408c7cfcb77a4"><div class="ttname"><a href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ON_ERROR(status)</div><div class="ttdoc">Checks if a status contains an error and returns it.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00204">Error.h:204</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1wrapper_xhtml_a1894e825a225f3b2013f594cbffdae73"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#a1894e825a225f3b2013f594cbffdae73">arm_compute::wrapper::vadd</a></div><div class="ttdeci">uint8x8_t vadd(const uint8x8_t &amp;a, const uint8x8_t &amp;b)</div><div class="ttdef"><b>Definition:</b> <a href="intrinsics_2add_8h_source.xhtml#l00039">add.h:39</a></div></div>
<div class="ttc" id="_validate_8h_xhtml_ae7eed178dac535c6e727061b1f5bc6eb"><div class="ttname"><a href="_validate_8h.xhtml#ae7eed178dac535c6e727061b1f5bc6eb">ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN(t, c,...)</div><div class="ttdef"><b>Definition:</b> <a href="_validate_8h_source.xhtml#l00792">Validate.h:792</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">arm_compute::Format::F32</a></div><div class="ttdoc">1 channel, 1 F32 per channel</div></div>
<div class="ttc" id="_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00466">Error.h:466</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml">arm_compute::ITensorInfo</a></div><div class="ttdoc">Store the tensor's metadata.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_info_8h_source.xhtml#l00040">ITensorInfo.h:40</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1wrapper_xhtml_a5ac8135a2c0a60f10448be0057543ed7"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#a5ac8135a2c0a60f10448be0057543ed7">arm_compute::wrapper::vinv</a></div><div class="ttdeci">float32x2_t vinv(const float32x2_t &amp;a)</div><div class="ttdef"><b>Definition:</b> <a href="inv_8h_source.xhtml#l00047">inv.h:47</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a5827eb9cb394e74af87f74bd354fb45ba39102811589b9a0d7a6aa8721663b4d1"><div class="ttname"><a href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba39102811589b9a0d7a6aa8721663b4d1">arm_compute::ReductionOperation::ARG_IDX_MIN</a></div><div class="ttdoc">Index of the min value.</div></div>
<div class="ttc" id="_error_8h_xhtml_a938dcd406ce611ef5345ad2531cdb948"><div class="ttname"><a href="_error_8h.xhtml#a938dcd406ce611ef5345ad2531cdb948">ARM_COMPUTE_ERROR_THROW_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_THROW_ON(status)</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00455">Error.h:455</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1wrapper_xhtml_acae4ec59246f93845fa78120d83d7c1e"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#acae4ec59246f93845fa78120d83d7c1e">arm_compute::wrapper::vsub</a></div><div class="ttdeci">uint8x8_t vsub(const uint8x8_t &amp;a, const uint8x8_t &amp;b)</div><div class="ttdef"><b>Definition:</b> <a href="sub_8h_source.xhtml#l00039">sub.h:39</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_reduction_operation_kernel_xhtml_a2a4e88f09df046635e88b16c8ec387a7"><div class="ttname"><a href="classarm__compute_1_1_n_e_reduction_operation_kernel.xhtml#a2a4e88f09df046635e88b16c8ec387a7">arm_compute::NEReductionOperationKernel::NEReductionOperationKernel</a></div><div class="ttdeci">NEReductionOperationKernel()</div><div class="ttdoc">Default constructor.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_reduction_operation_kernel_8cpp_source.xhtml#l01225">NEReductionOperationKernel.cpp:1225</a></div></div>
<div class="ttc" id="classarm__compute_1_1_status_xhtml"><div class="ttname"><a href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a></div><div class="ttdoc">Status class.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00052">Error.h:52</a></div></div>
<div class="ttc" id="_tensor_info_8h_xhtml"><div class="ttname"><a href="_tensor_info_8h.xhtml">TensorInfo.h</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a206d6e247e0957ac3dee45d27756fc25"><div class="ttname"><a href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true, an error is returned.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00296">Error.h:296</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor.xhtml">arm_compute::ITensor</a></div><div class="ttdoc">Interface for NEON tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_8h_source.xhtml#l00036">ITensor.h:36</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab7980fa5ee693e3282a76da047a1c3b5"><div class="ttname"><a href="namespacearm__compute.xhtml#ab7980fa5ee693e3282a76da047a1c3b5">arm_compute::calculate_max_window</a></div><div class="ttdeci">Window calculate_max_window(const ValidRegion &amp;valid_region, const Steps &amp;steps=Steps(), bool skip_border=false, BorderSize border_size=BorderSize())</div><div class="ttdoc">Calculate the maximum window for a given tensor shape and border setting.</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_helpers_8cpp_source.xhtml#l00028">Helpers.cpp:28</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2020 ARM Limited.</div><div class="ttdef"><b>Definition:</b> <a href="00__introduction_8dox_source.xhtml#l00024">00_introduction.dox:24</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a47be6fa38308d0003c25b60b7dbc45ce"><div class="ttname"><a href="namespacearm__compute.xhtml#a47be6fa38308d0003c25b60b7dbc45ce">arm_compute::auto_init_if_empty</a></div><div class="ttdeci">bool auto_init_if_empty(ITensorInfo &amp;info, const TensorShape &amp;shape, int num_channels, DataType data_type, QuantizationInfo quantization_info=QuantizationInfo())</div><div class="ttdoc">Auto initialize the tensor info (shape, number of channels and data type) if the current assignment i...</div><div class="ttdef"><b>Definition:</b> <a href="_helpers_8inl_source.xhtml#l00202">Helpers.inl:202</a></div></div>
<div class="ttc" id="_c_p_p_2_validate_8h_xhtml_ad2633f3560322e1f8d926949dec1b730"><div class="ttname"><a href="_c_p_p_2_validate_8h.xhtml#ad2633f3560322e1f8d926949dec1b730">ARM_COMPUTE_RETURN_ERROR_ON_CPU_F16_UNSUPPORTED</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_CPU_F16_UNSUPPORTED(tensor)</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_validate_8h_source.xhtml#l00071">Validate.h:71</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58a56d8353718e6fdc78b8d69078a2cdb94"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a56d8353718e6fdc78b8d69078a2cdb94">arm_compute::Format::F16</a></div><div class="ttdoc">1 channel, 1 F16 per channel</div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_reduction_operation_kernel_xhtml_a112b35dd205c62ea6ed1447ef226da82"><div class="ttname"><a href="classarm__compute_1_1_n_e_reduction_operation_kernel.xhtml#a112b35dd205c62ea6ed1447ef226da82">arm_compute::NEReductionOperationKernel::run</a></div><div class="ttdeci">void run(const Window &amp;window, const ThreadInfo &amp;info) override</div><div class="ttdoc">Execute the kernel on the passed window.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_reduction_operation_kernel_8cpp_source.xhtml#l01265">NEReductionOperationKernel.cpp:1265</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a8fcf2ddd9a1d58b1b280f5c0aed71845"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">arm_compute::test::validation::input</a></div><div class="ttdeci">auto input</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00487">LSTMLayerQuantized.cpp:487</a></div></div>
<div class="ttc" id="_saturate_cast_8h_xhtml"><div class="ttname"><a href="_saturate_cast_8h.xhtml">SaturateCast.h</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58aa1e28eee0339658d39a8b4d325b56e9c"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58aa1e28eee0339658d39a8b4d325b56e9c">arm_compute::Format::S32</a></div><div class="ttdoc">1 channel, 1 S32 per channel</div></div>
<div class="ttc" id="namespacearm__compute_1_1wrapper_xhtml_a55bc37be5f14e4c561d3ca93b2a34aa9"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#a55bc37be5f14e4c561d3ca93b2a34aa9">arm_compute::wrapper::vqmovn</a></div><div class="ttdeci">uint32x2_t vqmovn(const uint64x2_t &amp;a)</div><div class="ttdef"><b>Definition:</b> <a href="movn_8h_source.xhtml#l00052">movn.h:52</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_reduction_operation_kernel_xhtml_a358b25909dda0c7c6f49d40f91cd1112"><div class="ttname"><a href="classarm__compute_1_1_n_e_reduction_operation_kernel.xhtml#a358b25909dda0c7c6f49d40f91cd1112">arm_compute::NEReductionOperationKernel::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *input, const ITensorInfo *output, unsigned int axis, ReductionOperation op)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration of NEReductionOperationKern...</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_reduction_operation_kernel_8cpp_source.xhtml#l01257">NEReductionOperationKernel.cpp:1257</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a5827eb9cb394e74af87f74bd354fb45ba6970bdc2201030b9c03fbdcf3973858a"><div class="ttname"><a href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba6970bdc2201030b9c03fbdcf3973858a">arm_compute::ReductionOperation::SUM</a></div><div class="ttdoc">Sum.</div></div>
<div class="ttc" id="namespacearm__compute_1_1wrapper_xhtml_a475ee3c8ef70a2e4f18effd1d527a63a"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#a475ee3c8ef70a2e4f18effd1d527a63a">arm_compute::wrapper::vpadd</a></div><div class="ttdeci">uint8x8_t vpadd(const uint8x8_t &amp;a, const uint8x8_t &amp;b)</div><div class="ttdef"><b>Definition:</b> <a href="intrinsics_2add_8h_source.xhtml#l00187">add.h:187</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1wrapper_xhtml_aa16ace001ab8287faa46d6962f369219"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#aa16ace001ab8287faa46d6962f369219">arm_compute::wrapper::vgetlane</a></div><div class="ttdeci">uint8_t vgetlane(const uint8x8_t vector, const unsigned int lane)</div><div class="ttdef"><b>Definition:</b> <a href="getlane_8h_source.xhtml#l00091">getlane.h:91</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_aa96e81276ee4f87ab386cd05a5539a7d"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#aa96e81276ee4f87ab386cd05a5539a7d">arm_compute::Window::DimX</a></div><div class="ttdeci">static constexpr size_t DimX</div><div class="ttdoc">Alias for dimension 0 also known as X dimension.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00043">Window.h:43</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_afc4bd8e872567d9c4c57d89eb0bb3da1"><div class="ttname"><a href="namespacearm__compute.xhtml#afc4bd8e872567d9c4c57d89eb0bb3da1">arm_compute::update_window_and_padding</a></div><div class="ttdeci">bool update_window_and_padding(Window &amp;win, Ts &amp;&amp;... patterns)</div><div class="ttdoc">Update window and padding size for each of the access patterns.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_helpers_8h_source.xhtml#l00402">Helpers.h:402</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a6dc630a6ae9cc063b3924bcea8dee9d6"><div class="ttname"><a href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a></div><div class="ttdeci">#define ARM_COMPUTE_UNUSED(...)</div><div class="ttdoc">To avoid unused variables warnings.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00152">Error.h:152</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a5827eb9cb394e74af87f74bd354fb45ba654fed6e9b6c154d04bcaa439e32d0d5"><div class="ttname"><a href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba654fed6e9b6c154d04bcaa439e32d0d5">arm_compute::ReductionOperation::ARG_IDX_MAX</a></div><div class="ttdoc">Index of the max value.</div></div>
<div class="ttc" id="_c_p_p_2_validate_8h_xhtml"><div class="ttname"><a href="_c_p_p_2_validate_8h.xhtml">Validate.h</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_aa30f40707893f8201695a2c20e2d8c7d"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#aa30f40707893f8201695a2c20e2d8c7d">arm_compute::test::validation::output_data_type</a></div><div class="ttdeci">output_data_type</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_absolute_difference_8cpp_source.xhtml#l00098">AbsoluteDifference.cpp:98</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58ac8bd5bedff8ef192d39a962afc0e19ee"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58ac8bd5bedff8ef192d39a962afc0e19ee">arm_compute::Format::U32</a></div><div class="ttdoc">1 channel, 1 U32 per channel</div></div>
<div class="ttc" id="_validate_8h_xhtml_a27e4638546c88b8916f967e6e54480a9"><div class="ttname"><a href="_validate_8h.xhtml#a27e4638546c88b8916f967e6e54480a9">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_SHAPES</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_SHAPES(...)</div><div class="ttdef"><b>Definition:</b> <a href="_validate_8h_source.xhtml#l00443">Validate.h:443</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">arm_compute::DataType::QASYMM8</a></div><div class="ttdoc">quantized, asymmetric fixed-point 8-bit number unsigned</div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_reduction_operation_kernel_xhtml_a423f9a45a52983b4de5e2b347f4369c7"><div class="ttname"><a href="classarm__compute_1_1_n_e_reduction_operation_kernel.xhtml#a423f9a45a52983b4de5e2b347f4369c7">arm_compute::NEReductionOperationKernel::border_size</a></div><div class="ttdeci">BorderSize border_size() const override</div><div class="ttdoc">The size of the border for that kernel.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_reduction_operation_kernel_8cpp_source.xhtml#l01230">NEReductionOperationKernel.cpp:1230</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1wrapper_xhtml_ab026a1aeec48074092f548c130c323f4"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#ab026a1aeec48074092f548c130c323f4">arm_compute::wrapper::vmin</a></div><div class="ttdeci">uint8x8_t vmin(const uint8x8_t &amp;a, const uint8x8_t &amp;b)</div><div class="ttdef"><b>Definition:</b> <a href="min_8h_source.xhtml#l00039">min.h:39</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1wrapper_xhtml_ac071623f14587f7cc6c4aea757d4378b"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#ac071623f14587f7cc6c4aea757d4378b">arm_compute::wrapper::vand</a></div><div class="ttdeci">uint8x8_t vand(const uint8x8_t &amp;a, const uint8x8_t &amp;b)</div><div class="ttdef"><b>Definition:</b> <a href="and_8h_source.xhtml#l00039">and.h:39</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1misc_1_1shape__calculator_xhtml_aff7ab3043f63660295d229ebc9e6c2b1"><div class="ttname"><a href="namespacearm__compute_1_1misc_1_1shape__calculator.xhtml#aff7ab3043f63660295d229ebc9e6c2b1">arm_compute::misc::shape_calculator::compute_reduced_shape</a></div><div class="ttdeci">TensorShape compute_reduced_shape(const TensorShape &amp;input, unsigned int axis, bool keep_dims=true)</div><div class="ttdoc">Calculate the reduced shape of a tensor given an axis.</div><div class="ttdef"><b>Definition:</b> <a href="_shape_calculator_8h_source.xhtml#l01224">ShapeCalculator.h:1224</a></div></div>
<div class="ttc" id="_shape_calculator_8h_xhtml"><div class="ttname"><a href="_shape_calculator_8h.xhtml">ShapeCalculator.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1misc_1_1_i_cloneable_xhtml_a4d10e5012a872e7f78f2b539b673049d"><div class="ttname"><a href="classarm__compute_1_1misc_1_1_i_cloneable.xhtml#a4d10e5012a872e7f78f2b539b673049d">arm_compute::misc::ICloneable::clone</a></div><div class="ttdeci">virtual std::unique_ptr&lt; T &gt; clone() const =0</div><div class="ttdoc">Provide a clone of the current object of class T.</div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_xhtml_a0e95dc1e53c361348314873b168ae237"><div class="ttname"><a href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">arm_compute::ITensor::info</a></div><div class="ttdeci">virtual ITensorInfo * info() const =0</div><div class="ttdoc">Interface to be implemented by the child class to return the tensor's metadata.</div></div>
<div class="ttc" id="namespacearm__compute_xhtml_abb7e0f23a4f2e63f39433f158dad47ab"><div class="ttname"><a href="namespacearm__compute.xhtml#abb7e0f23a4f2e63f39433f158dad47ab">arm_compute::data_size_from_type</a></div><div class="ttdeci">size_t data_size_from_type(DataType data_type)</div><div class="ttdoc">The size in bytes of the data type.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_utils_8h_source.xhtml#l00109">Utils.h:109</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1wrapper_xhtml_a2902775707bc7bf7d6da1bda1cc15783"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#a2902775707bc7bf7d6da1bda1cc15783">arm_compute::wrapper::vgetlow</a></div><div class="ttdeci">uint8x8_t vgetlow(const uint8x16_t val)</div><div class="ttdef"><b>Definition:</b> <a href="getlow_8h_source.xhtml#l00039">getlow.h:39</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1wrapper_xhtml_a1598e7eb12a58fc53559332cd0c3ab6f"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#a1598e7eb12a58fc53559332cd0c3ab6f">arm_compute::wrapper::vcombine</a></div><div class="ttdeci">uint8x16_t vcombine(const uint8x8_t &amp;a, const uint8x8_t &amp;b)</div><div class="ttdef"><b>Definition:</b> <a href="combine_8h_source.xhtml#l00039">combine.h:39</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a59e56af19e754a6aa26a612ebf91d05fa62be47fdd89da032cf78dfce82239579"><div class="ttname"><a href="namespacearm__compute.xhtml#a59e56af19e754a6aa26a612ebf91d05fa62be47fdd89da032cf78dfce82239579">arm_compute::ErrorCode::RUNTIME_ERROR</a></div><div class="ttdoc">Generic runtime error.</div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a5827eb9cb394e74af87f74bd354fb45bac8074bb318fb85693233e64acc64c1ed"><div class="ttname"><a href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45bac8074bb318fb85693233e64acc64c1ed">arm_compute::ReductionOperation::PROD</a></div><div class="ttdoc">Product.</div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_reduction_operation_kernel_xhtml_a84481fca3a7ab8e4b5035ba8b8170de3"><div class="ttname"><a href="classarm__compute_1_1_n_e_reduction_operation_kernel.xhtml#a84481fca3a7ab8e4b5035ba8b8170de3">arm_compute::NEReductionOperationKernel::configure</a></div><div class="ttdeci">void configure(const ITensor *input, ITensor *output, unsigned int axis, ReductionOperation op)</div><div class="ttdoc">Set the source, destination of the kernel.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_reduction_operation_kernel_8cpp_source.xhtml#l01235">NEReductionOperationKernel.cpp:1235</a></div></div>
<div class="ttc" id="_validate_8h_xhtml_aba910b683652be1f65437ef37a9da2a9"><div class="ttname"><a href="_validate_8h.xhtml#aba910b683652be1f65437ef37a9da2a9">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_QUANTIZATION_INFO</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_QUANTIZATION_INFO(...)</div><div class="ttdef"><b>Definition:</b> <a href="_validate_8h_source.xhtml#l00610">Validate.h:610</a></div></div>
<div class="ttc" id="_n_e_reduction_operation_kernel_8h_xhtml"><div class="ttname"><a href="_n_e_reduction_operation_kernel_8h.xhtml">NEReductionOperationKernel.h</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1wrapper_xhtml_a95ee388aa7c5bccab918235dc538a6b3"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#a95ee388aa7c5bccab918235dc538a6b3">arm_compute::wrapper::vgethigh</a></div><div class="ttdeci">uint8x8_t vgethigh(const uint8x16_t val)</div><div class="ttdef"><b>Definition:</b> <a href="gethigh_8h_source.xhtml#l00039">gethigh.h:39</a></div></div>
<div class="ttc" id="_validate_8h_xhtml_aff911654521523937ff24372a870b89f"><div class="ttname"><a href="_validate_8h.xhtml#aff911654521523937ff24372a870b89f">ARM_COMPUTE_RETURN_ERROR_ON_NULLPTR</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_NULLPTR(...)</div><div class="ttdef"><b>Definition:</b> <a href="_validate_8h_source.xhtml#l00163">Validate.h:163</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_ad2d402364fa822b0b7775081291eeca9"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#ad2d402364fa822b0b7775081291eeca9">arm_compute::Window::DimY</a></div><div class="ttdeci">static constexpr size_t DimY</div><div class="ttdoc">Alias for dimension 1 also known as Y dimension.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00045">Window.h:45</a></div></div>
<div class="ttc" id="_validate_8h_xhtml_a921b705e9e3e0fe928928447869e62a5"><div class="ttname"><a href="_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_NULLPTR(...)</div><div class="ttdef"><b>Definition:</b> <a href="_validate_8h_source.xhtml#l00161">Validate.h:161</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1wrapper_xhtml_a7eedba29396b0db728bffdf5f202d85c"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#a7eedba29396b0db728bffdf5f202d85c">arm_compute::wrapper::vcgt</a></div><div class="ttdeci">uint8x8_t vcgt(const uint8x8_t &amp;a, const uint8x8_t &amp;b)</div><div class="ttdef"><b>Definition:</b> <a href="cgt_8h_source.xhtml#l00039">cgt.h:39</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1wrapper_xhtml_a66c8dd218a4863a14fec363e3dd13dc4"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">arm_compute::wrapper::vmul</a></div><div class="ttdeci">uint8x8_t vmul(const uint8x8_t &amp;a, const uint8x8_t &amp;b)</div><div class="ttdef"><b>Definition:</b> <a href="mul_8h_source.xhtml#l00039">mul.h:39</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1wrapper_xhtml_a8e5924674eee0f441d54eb75d656700f"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#a8e5924674eee0f441d54eb75d656700f">arm_compute::wrapper::vbsl</a></div><div class="ttdeci">uint8x8_t vbsl(const uint8x8_t &amp;a, const uint8x8_t &amp;b, const uint8x8_t &amp;c)</div><div class="ttdef"><b>Definition:</b> <a href="bsl_8h_source.xhtml#l00039">bsl.h:39</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_accc088009d44c521706aa98d6387ee21"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#accc088009d44c521706aa98d6387ee21">arm_compute::test::validation::axis</a></div><div class="ttdeci">axis</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_o_n_2_stack_layer_8cpp_source.xhtml#l00226">StackLayer.cpp:226</a></div></div>
<div class="ttc" id="structarm__compute_1_1_thread_info_xhtml"><div class="ttname"><a href="structarm__compute_1_1_thread_info.xhtml">arm_compute::ThreadInfo</a></div><div class="ttdoc">Information about executing thread and CPU.</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_types_8h_source.xhtml#l00225">CPPTypes.h:225</a></div></div>
<div class="ttc" id="_error_8h_xhtml_af1b8ff8eb557a2ad11272f1505f45d34"><div class="ttname"><a href="_error_8h.xhtml#af1b8ff8eb557a2ad11272f1505f45d34">ARM_COMPUTE_CREATE_ERROR</a></div><div class="ttdeci">#define ARM_COMPUTE_CREATE_ERROR(error_code, msg)</div><div class="ttdoc">Creates an error with a given message.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00159">Error.h:159</a></div></div>
<div class="ttc" id="_coordinates_8h_xhtml"><div class="ttname"><a href="_coordinates_8h.xhtml">Coordinates.h</a></div></div>
<div class="ttc" id="namespace_gemm_tuner_xhtml_a7aead736a07eaf25623ad7bfa1f0ee2d"><div class="ttname"><a href="namespace_gemm_tuner.xhtml#a7aead736a07eaf25623ad7bfa1f0ee2d">GemmTuner.type</a></div><div class="ttdeci">type</div><div class="ttdef"><b>Definition:</b> <a href="_gemm_tuner_8py_source.xhtml#l00527">GemmTuner.py:527</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_a893d17b56b9abc4423ce26e9a24ac5dc"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#a893d17b56b9abc4423ce26e9a24ac5dc">arm_compute::Window::DimZ</a></div><div class="ttdeci">static constexpr size_t DimZ</div><div class="ttdoc">Alias for dimension 2 also known as Z dimension.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00047">Window.h:47</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a5827eb9cb394e74af87f74bd354fb45bafc54513dae613e117ffc4169e48bfce5"><div class="ttname"><a href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45bafc54513dae613e117ffc4169e48bfce5">arm_compute::ReductionOperation::MEAN_SUM</a></div><div class="ttdoc">Mean of sum.</div></div>
<div class="ttc" id="_n_e_math_8h_xhtml"><div class="ttname"><a href="_n_e_math_8h.xhtml">NEMath.h</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a2e0f2412b4d1302272d1aeb85d21ab25"><div class="ttname"><a href="namespacearm__compute.xhtml#a2e0f2412b4d1302272d1aeb85d21ab25">arm_compute::vinvq_f32</a></div><div class="ttdeci">float32x4_t vinvq_f32(float32x4_t x)</div><div class="ttdoc">Calculate reciprocal.</div></div>
<div class="ttc" id="namespacearm__compute_1_1wrapper_xhtml_ae7943ea9c1f74dc72c62d4cc3966a459"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#ae7943ea9c1f74dc72c62d4cc3966a459">arm_compute::wrapper::vstore</a></div><div class="ttdeci">void vstore(uint8_t *ptr, uint8x8_t val)</div><div class="ttdef"><b>Definition:</b> <a href="store_8h_source.xhtml#l00039">store.h:39</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_ab1806bf0c5a41f674fb9d2dc6af644f5"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ab1806bf0c5a41f674fb9d2dc6af644f5">arm_compute::test::validation::output_shape</a></div><div class="ttdeci">output_shape</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_convolution_layer_8cpp_source.xhtml#l00182">ConvolutionLayer.cpp:182</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1wrapper_xhtml_a0d7eabdb6566ec547d8ce0a42ab0efd8"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#a0d7eabdb6566ec547d8ce0a42ab0efd8">arm_compute::wrapper::vclt</a></div><div class="ttdeci">uint8x8_t vclt(const uint8x8_t &amp;a, const uint8x8_t &amp;b)</div><div class="ttdef"><b>Definition:</b> <a href="clt_8h_source.xhtml#l00039">clt.h:39</a></div></div>
<div class="ttc" id="_c_l_im2_col_kernel_8cpp_xhtml_a4e45c1f5e4280813a78a77dda71d8799"><div class="ttname"><a href="_c_l_im2_col_kernel_8cpp.xhtml#a4e45c1f5e4280813a78a77dda71d8799">num_elems_processed_per_iteration</a></div><div class="ttdeci">unsigned int num_elems_processed_per_iteration</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_im2_col_kernel_8cpp_source.xhtml#l00054">CLIm2ColKernel.cpp:54</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a1c69762a42ab8add645d0a949b6f4b1f"><div class="ttname"><a href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_MSG(cond, msg)</div><div class="ttdoc">If the condition is true, an error is returned.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00244">Error.h:244</a></div></div>
<div class="ttc" id="arm__compute_2core_2_helpers_8h_xhtml"><div class="ttname"><a href="arm__compute_2core_2_helpers_8h.xhtml">Helpers.h</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1wrapper_xhtml_a39e87435be178fba49b76f49426ef873"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#a39e87435be178fba49b76f49426ef873">arm_compute::wrapper::vdup_n</a></div><div class="ttdeci">uint8x8_t vdup_n(uint8_t value, traits::vector_64_tag)</div><div class="ttdef"><b>Definition:</b> <a href="dup__n_8h_source.xhtml#l00041">dup_n.h:41</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a5002bf7ec46d52971f9526e94172cfee"><div class="ttname"><a href="namespacearm__compute.xhtml#a5002bf7ec46d52971f9526e94172cfee">arm_compute::execute_window_loop</a></div><div class="ttdeci">void execute_window_loop(const Window &amp;w, L &amp;&amp;lambda_function, Ts &amp;&amp;... iterators)</div><div class="ttdoc">Iterate through the passed window, automatically adjusting the iterators and calling the lambda_funct...</div><div class="ttdef"><b>Definition:</b> <a href="_helpers_8inl_source.xhtml#l00123">Helpers.inl:123</a></div></div>
<div class="ttc" id="wrapper_8h_xhtml"><div class="ttname"><a href="wrapper_8h.xhtml">wrapper.h</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1wrapper_xhtml_ab799fd9cd5fc5989593e69c55bc400f9"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#ab799fd9cd5fc5989593e69c55bc400f9">arm_compute::wrapper::vpmax</a></div><div class="ttdeci">uint8x8_t vpmax(const uint8x8_t &amp;a, const uint8x8_t &amp;b)</div><div class="ttdef"><b>Definition:</b> <a href="pmax_8h_source.xhtml#l00039">pmax.h:39</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_adf2ced65e536375a1c96425d9fced858a26a4b44a837bf97b972628509912b4a5"><div class="ttname"><a href="namespacearm__compute.xhtml#adf2ced65e536375a1c96425d9fced858a26a4b44a837bf97b972628509912b4a5">arm_compute::NonLinearFilterFunction::MAX</a></div><div class="ttdoc">Non linear dilate.</div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a4f4125dba5283887b34f889b1c615c0c"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a4f4125dba5283887b34f889b1c615c0c">arm_compute::test::validation::info</a></div><div class="ttdeci">info</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_convolution_layer_8cpp_source.xhtml#l00182">ConvolutionLayer.cpp:182</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1wrapper_xhtml_ab82845d16e532ba6603e1b960a79384b"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#ab82845d16e532ba6603e1b960a79384b">arm_compute::wrapper::vpmin</a></div><div class="ttdeci">uint8x8_t vpmin(const uint8x8_t &amp;a, const uint8x8_t &amp;b)</div><div class="ttdef"><b>Definition:</b> <a href="pmin_8h_source.xhtml#l00039">pmin.h:39</a></div></div>
<div class="ttc" id="classarm__compute_1_1_dimensions_xhtml_a1b67d5b720119d50faa286c774579ecc"><div class="ttname"><a href="classarm__compute_1_1_dimensions.xhtml#a1b67d5b720119d50faa286c774579ecc">arm_compute::Dimensions&lt; uint32_t &gt;::num_max_dimensions</a></div><div class="ttdeci">static constexpr size_t num_max_dimensions</div><div class="ttdoc">Number of dimensions the tensor has.</div><div class="ttdef"><b>Definition:</b> <a href="_dimensions_8h_source.xhtml#l00045">Dimensions.h:45</a></div></div>
<div class="ttc" id="_i_n_e_kernel_8h_xhtml"><div class="ttname"><a href="_i_n_e_kernel_8h.xhtml">INEKernel.h</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_adf2ced65e536375a1c96425d9fced858ace31e2a082d17e038fcc6e3006166653"><div class="ttname"><a href="namespacearm__compute.xhtml#adf2ced65e536375a1c96425d9fced858ace31e2a082d17e038fcc6e3006166653">arm_compute::NonLinearFilterFunction::MIN</a></div><div class="ttdoc">Non linear erode.</div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">arm_compute::DataType</a></div><div class="ttdeci">DataType</div><div class="ttdoc">Available data types.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00075">Types.h:75</a></div></div>
<div class="ttc" id="_validate_8h_xhtml_a6eb9ce82815fe429250189da7592ba75"><div class="ttname"><a href="_validate_8h.xhtml#a6eb9ce82815fe429250189da7592ba75">ARM_COMPUTE_ERROR_ON_INVALID_SUBWINDOW</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_INVALID_SUBWINDOW(f, s)</div><div class="ttdef"><b>Definition:</b> <a href="_validate_8h_source.xhtml#l00205">Validate.h:205</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1wrapper_xhtml_a8dbba1731c32d176ae6635be1c65cbd6"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#a8dbba1731c32d176ae6635be1c65cbd6">arm_compute::wrapper::vmovl</a></div><div class="ttdeci">uint16x8_t vmovl(const uint8x8_t &amp;a)</div><div class="ttdef"><b>Definition:</b> <a href="movl_8h_source.xhtml#l00039">movl.h:39</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1wrapper_xhtml_a8d1d14000c959f1146a8a64e1dafae5f"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#a8d1d14000c959f1146a8a64e1dafae5f">arm_compute::wrapper::vmax</a></div><div class="ttdeci">uint8x8_t vmax(const uint8x8_t &amp;a, const uint8x8_t &amp;b)</div><div class="ttdef"><b>Definition:</b> <a href="max_8h_source.xhtml#l00039">max.h:39</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml">arm_compute::Window</a></div><div class="ttdoc">Describe a multidimensional execution window.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00039">Window.h:39</a></div></div>
<div class="ttc" id="_validate_8h_xhtml_a1b35b0d258183cf9ef36adf684d0b88c"><div class="ttname"><a href="_validate_8h.xhtml#a1b35b0d258183cf9ef36adf684d0b88c">ARM_COMPUTE_ERROR_ON_UNCONFIGURED_KERNEL</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_UNCONFIGURED_KERNEL(k)</div><div class="ttdef"><b>Definition:</b> <a href="_validate_8h_source.xhtml#l00941">Validate.h:941</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1wrapper_xhtml_aa7ccd655f600847f9d471604ed47e810"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#aa7ccd655f600847f9d471604ed47e810">arm_compute::wrapper::vceq</a></div><div class="ttdeci">uint8x8_t vceq(const uint8x8_t &amp;a, const uint8x8_t &amp;b)</div><div class="ttdef"><b>Definition:</b> <a href="ceq_8h_source.xhtml#l00039">ceq.h:39</a></div></div>
<div class="ttc" id="_i_access_window_8h_xhtml"><div class="ttname"><a href="_i_access_window_8h.xhtml">IAccessWindow.h</a></div></div>
<div class="ttc" id="_validate_8h_xhtml"><div class="ttname"><a href="_validate_8h.xhtml">Validate.h</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1wrapper_xhtml_aaf3df57c0d3884368a0da2a6e306e4bc"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#aaf3df57c0d3884368a0da2a6e306e4bc">arm_compute::wrapper::vqmovun</a></div><div class="ttdeci">uint32x2_t vqmovun(const int64x2_t &amp;a)</div><div class="ttdef"><b>Definition:</b> <a href="qmovun_8h_source.xhtml#l00039">qmovun.h:39</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_aebb8dcc11953d78e620bbef0b9e2183.xhtml">core</a></li><li class="navelem"><a class="el" href="dir_d91e1966cc57df4f49d1e07be7697713.xhtml">NEON</a></li><li class="navelem"><a class="el" href="dir_1ce938f580a6f304b99685e2c1dd19db.xhtml">kernels</a></li><li class="navelem"><a class="el" href="_n_e_reduction_operation_kernel_8cpp.xhtml">NEReductionOperationKernel.cpp</a></li>
    <li class="footer">Generated on Thu Mar 5 2020 16:07:01 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
