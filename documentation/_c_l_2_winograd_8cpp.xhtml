<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: tests/validation/CL/Winograd.cpp File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_c_l_2_winograd_8cpp.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#namespaces">Namespaces</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">Winograd.cpp File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &quot;<a class="el" href="_c_l_winograd_filter_transform_kernel_8h_source.xhtml">arm_compute/core/CL/kernels/CLWinogradFilterTransformKernel.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_c_l_winograd_output_transform_kernel_8h_source.xhtml">arm_compute/core/CL/kernels/CLWinogradOutputTransformKernel.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="arm__compute_2core_2_helpers_8h_source.xhtml">arm_compute/core/Helpers.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">arm_compute/core/Types.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_shape_calculator_8h_source.xhtml">arm_compute/core/utils/misc/ShapeCalculator.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_c_l_tensor_8h_source.xhtml">arm_compute/runtime/CL/CLTensor.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_c_l_tensor_allocator_8h_source.xhtml">arm_compute/runtime/CL/CLTensorAllocator.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_c_l_winograd_convolution_layer_8h_source.xhtml">arm_compute/runtime/CL/functions/CLWinogradConvolutionLayer.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_c_l_winograd_input_transform_8h_source.xhtml">arm_compute/runtime/CL/functions/CLWinogradInputTransform.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_c_l_accessor_8h_source.xhtml">tests/CL/CLAccessor.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_c_l_2_helper_8h_source.xhtml">tests/CL/Helper.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_padding_calculator_8h_source.xhtml">tests/PaddingCalculator.h</a>&quot;</code><br />
<code>#include &quot;tests/datasets/LargeConvolutionLayerDataset.h&quot;</code><br />
<code>#include &quot;tests/datasets/ShapeDatasets.h&quot;</code><br />
<code>#include &quot;tests/datasets/SmallConvolutionLayerDataset.h&quot;</code><br />
<code>#include &quot;tests/datasets/WinogradInputTransformDataset.h&quot;</code><br />
<code>#include &quot;tests/datasets/WinogradOutputTransformDataset.h&quot;</code><br />
<code>#include &quot;<a class="el" href="_asserts_8h_source.xhtml">tests/framework/Asserts.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="tests_2framework_2_macros_8h_source.xhtml">tests/framework/Macros.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_datasets_8h_source.xhtml">tests/framework/datasets/Datasets.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_validation_8h_source.xhtml">tests/validation/Validation.h</a>&quot;</code><br />
<code>#include &quot;tests/validation/fixtures/WinogradConvolutionLayerFixture.h&quot;</code><br />
</div>
<p><a href="_c_l_2_winograd_8cpp_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"></a>
Namespaces</h2></td></tr>
<tr class="memitem:namespacearm__compute"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></td></tr>
<tr class="memdesc:namespacearm__compute"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copyright (c) 2017-2020 ARM Limited. <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespacearm__compute_1_1test"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test.xhtml">arm_compute::test</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespacearm__compute_1_1test_1_1validation"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml">arm_compute::test::validation</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:ac5006f4ae83f95b92ff1d606c7f0e547"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac5006f4ae83f95b92ff1d606c7f0e547">CLWinogradInputTransformFixtureFP32</a> = WinogradInputTransformValidationFixture&lt; CLTensor, CLAccessor, CLWinogradInputTransform, float &gt;</td></tr>
<tr class="separator:ac5006f4ae83f95b92ff1d606c7f0e547"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a74b319af2169434f5ac911f04e7561af"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a74b319af2169434f5ac911f04e7561af">CLWinogradInputTransformFixtureFP16</a> = WinogradInputTransformValidationFixture&lt; CLTensor, CLAccessor, CLWinogradInputTransform, half &gt;</td></tr>
<tr class="separator:a74b319af2169434f5ac911f04e7561af"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a054857a13b43100f3d48e98e7a4cb626"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a054857a13b43100f3d48e98e7a4cb626">CLWinogradFilterTransform</a> = CLSynthetizeFunctionWithZeroConstantBorder&lt; CLWinogradFilterTransformKernel, 0 &gt;</td></tr>
<tr class="separator:a054857a13b43100f3d48e98e7a4cb626"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa42123491a5d11058a2029923a46a526"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa42123491a5d11058a2029923a46a526">CLWinogradFilterTransformFixtureFP32</a> = WinogradFilterTransformValidationFixture&lt; CLTensor, CLAccessor, CLWinogradFilterTransform, float &gt;</td></tr>
<tr class="separator:aa42123491a5d11058a2029923a46a526"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0f2f853980da09ef049d1e04764ba325"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a0f2f853980da09ef049d1e04764ba325">CLWinogradFilterTransformFixtureFP16</a> = WinogradFilterTransformValidationFixture&lt; CLTensor, CLAccessor, CLWinogradFilterTransform, half &gt;</td></tr>
<tr class="separator:a0f2f853980da09ef049d1e04764ba325"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2dd717bab37b161a6c1e63a76549d024"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a2dd717bab37b161a6c1e63a76549d024">CLWinogradOutputTransform</a> = CLSynthetizeFunctionWithZeroConstantBorder&lt; CLWinogradOutputTransformKernel, 0 &gt;</td></tr>
<tr class="separator:a2dd717bab37b161a6c1e63a76549d024"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa0c30cd627b86f144191c17519e3ba2a"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa0c30cd627b86f144191c17519e3ba2a">CLWinogradOutputTransformFixtureFP32</a> = WinogradOutputTransformValidationFixture&lt; CLTensor, CLAccessor, CLWinogradOutputTransform, float &gt;</td></tr>
<tr class="separator:aa0c30cd627b86f144191c17519e3ba2a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aad28e54b6547276f5fc9b9a628e3c830"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aad28e54b6547276f5fc9b9a628e3c830">CLWinogradOutputTransformFixtureFP16</a> = WinogradOutputTransformValidationFixture&lt; CLTensor, CLAccessor, CLWinogradOutputTransform, half &gt;</td></tr>
<tr class="separator:aad28e54b6547276f5fc9b9a628e3c830"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4aa7763717f234371acad168e9ed5e5f"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4aa7763717f234371acad168e9ed5e5f">CLWinogradConvolutionLayerFastMathFixture</a> = WinogradConvolutionLayerFastMathValidationFixture&lt; CLTensor, CLAccessor, CLWinogradConvolutionLayer, float &gt;</td></tr>
<tr class="separator:a4aa7763717f234371acad168e9ed5e5f"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:aefe657be35a4c7ad0cd478735e9ced36"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aefe657be35a4c7ad0cd478735e9ced36">DATA_TEST_CASE</a> (Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;,{ TensorInfo(TensorShape(53U, 21U, 5U, 3U), 1, DataType::F16), TensorInfo(TensorShape(53U, 21U, 5U, 3U), 1, DataType::QASYMM8), TensorInfo(TensorShape(53U, 21U, 5U, 3U), 1, DataType::F32), TensorInfo(TensorShape(53U, 21U, 5U, 3U), 1, DataType::F32), TensorInfo(TensorShape(53U, 33U, 4U), 1, DataType::F32), TensorInfo(TensorShape(34U, 42U, 7U, 3U), 1, DataType::F32), TensorInfo(TensorShape(31U, 37U, 37U), 1, DataType::F32) }), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(5U, 5U, 16U, 3U), 1, DataType::F16), TensorInfo(TensorShape(5U, 5U, 16U, 3U), 1, DataType::QASYMM8), TensorInfo(TensorShape(5U, 5U, 16U, 3U), 1, DataType::F32), TensorInfo(TensorShape(5U, 1U, 16U, 3U), 1, DataType::F32), TensorInfo(TensorShape(4U, 442U, 16U), 1, DataType::F32), TensorInfo(TensorShape(7U, 320U, 16U, 3U), 1, DataType::F32), TensorInfo(TensorShape(37U, 304U, 16U), 1, DataType::F32) })), framework::dataset::make(&quot;WinogradInfo&quot;, { WinogradInfo(Size2D(2, 2), Size2D(3, 3), Size2D(53U, 21U), PadStrideInfo(1, 1, 1, 0), DataLayout::NCHW), WinogradInfo(Size2D(2, 2), Size2D(3, 3), Size2D(53U, 21U), PadStrideInfo(1, 1, 0, 0), DataLayout::NCHW), WinogradInfo(Size2D(2, 2), Size2D(3, 3), Size2D(53U, 21U), PadStrideInfo(1, 1, 1, 1), DataLayout::NCHW), WinogradInfo(Size2D(2, 2), Size2D(3, 3), Size2D(53U, 21U), PadStrideInfo(2, 1, 1, 1), DataLayout::NCHW), WinogradInfo(Size2D(2, 2), Size2D(3, 3), Size2D(53U, 33U), PadStrideInfo(1, 1, 0, 1), DataLayout::NCHW), WinogradInfo(Size2D(2, 2), Size2D(3, 3), Size2D(34U, 42U), PadStrideInfo(1, 1, 0, 0), DataLayout::NCHW), WinogradInfo(Size2D(2, 2), Size2D(3, 3), Size2D(31U, 37U), PadStrideInfo(1, 1, 1, 1), DataLayout::NCHW) })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, false, false, false })), input_info, output_info, winograd_info, expected)</td></tr>
<tr class="separator:aefe657be35a4c7ad0cd478735e9ced36"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a77f364f7181fc652389116e6fada0391"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a77f364f7181fc652389116e6fada0391">FIXTURE_DATA_TEST_CASE</a> (RunSmall, CLWinogradInputTransformFixtureFP32, framework::DatasetMode::PRECOMMIT, combine(combine(SmallWinogradInputTransformDatasetNCHW, framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW })), framework::dataset::make(&quot;DataType&quot;, { DataType::F32 })))</td></tr>
<tr class="separator:a77f364f7181fc652389116e6fada0391"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0c74bfd3b6fcde5b0b065fa5608b7a8c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a0c74bfd3b6fcde5b0b065fa5608b7a8c">FIXTURE_DATA_TEST_CASE</a> (RunLarge, CLWinogradInputTransformFixtureFP32, framework::DatasetMode::NIGHTLY, combine(combine(LargeWinogradInputTransformDatasetNCHW, framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW })), framework::dataset::make(&quot;DataType&quot;, { DataType::F32 })))</td></tr>
<tr class="separator:a0c74bfd3b6fcde5b0b065fa5608b7a8c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac2ed31007ae463a3cec24a581f3651f6"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac2ed31007ae463a3cec24a581f3651f6">TEST_SUITE_END</a> () const auto Int16QuantizedActivationFunctionsDataset = ActivationValidationQuantizedFixture&lt;CLTensor, CLAccessor, CLActivationLayer, T&gt;</td></tr>
<tr class="memdesc:ac2ed31007ae463a3cec24a581f3651f6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Input data sets.  <a href="namespacearm__compute_1_1test_1_1validation.xhtml#ac2ed31007ae463a3cec24a581f3651f6">More...</a><br /></td></tr>
<tr class="separator:ac2ed31007ae463a3cec24a581f3651f6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9bee4ca70ee3abf47597a70b6ca62c87"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a9bee4ca70ee3abf47597a70b6ca62c87">combine</a> (combine(SmallWinogradInputTransformDatasetNCHW, framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW })), framework::dataset::make(&quot;DataType&quot;, { DataType::F16 })))</td></tr>
<tr class="separator:a9bee4ca70ee3abf47597a70b6ca62c87"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae192d52538c7d8489bbea389574efdae"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae192d52538c7d8489bbea389574efdae">FIXTURE_DATA_TEST_CASE</a> (RunLarge, CLWinogradInputTransformFixtureFP16, framework::DatasetMode::NIGHTLY, combine(combine(LargeWinogradInputTransformDatasetNCHW, framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW })), framework::dataset::make(&quot;DataType&quot;, { DataType::F16 })))</td></tr>
<tr class="separator:ae192d52538c7d8489bbea389574efdae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8d0be8bc8237790230e8f4f95c413e63"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8d0be8bc8237790230e8f4f95c413e63">combine</a> (combine(SmallWinogradInputTransformDatasetNHWC, framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NHWC })), framework::dataset::make(&quot;DataType&quot;, { DataType::F16 })))</td></tr>
<tr class="separator:a8d0be8bc8237790230e8f4f95c413e63"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9b977f1cf3826e736ee3aa61cc3edb5d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a9b977f1cf3826e736ee3aa61cc3edb5d">FIXTURE_DATA_TEST_CASE</a> (RunLarge, CLWinogradInputTransformFixtureFP16, framework::DatasetMode::NIGHTLY, combine(combine(LargeWinogradInputTransformDatasetNHWC, framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NHWC })), framework::dataset::make(&quot;DataType&quot;, { DataType::F16 })))</td></tr>
<tr class="separator:a9b977f1cf3826e736ee3aa61cc3edb5d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af876d6357d27427467dc9ed1ce0e24f1"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#af876d6357d27427467dc9ed1ce0e24f1">combine</a> (combine(SmallWinogradInputTransformDatasetNHWC_FP32, framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NHWC })), framework::dataset::make(&quot;DataType&quot;, { DataType::F32 })))</td></tr>
<tr class="separator:af876d6357d27427467dc9ed1ce0e24f1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac12a360ad789682db7e76f68f5eb4f49"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac12a360ad789682db7e76f68f5eb4f49">FIXTURE_DATA_TEST_CASE</a> (RunLarge, CLWinogradInputTransformFixtureFP32, framework::DatasetMode::NIGHTLY, combine(combine(LargeWinogradInputTransformDatasetNHWC_FP32, framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NHWC })), framework::dataset::make(&quot;DataType&quot;, { DataType::F32 })))</td></tr>
<tr class="separator:ac12a360ad789682db7e76f68f5eb4f49"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8b21582e176d7bf27d350e5a10e8e554"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8b21582e176d7bf27d350e5a10e8e554">zip</a> (zip(zip(framework::dataset::make(&quot;InputInfo&quot;,{ TensorInfo(TensorShape(3U, 3U, 5U, 3U), 1, DataType::F16), TensorInfo(TensorShape(3U, 3U, 5U, 3U), 1, DataType::QASYMM8), TensorInfo(TensorShape(5U, 5U, 5U, 3U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 5U, 3U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 37U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 37U, 22U), 1, DataType::F32) }), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(3U, 5U, 16U), 1, DataType::F16), TensorInfo(TensorShape(3U, 5U, 16U), 1, DataType::QASYMM8), TensorInfo(TensorShape(3U, 5U, 16U), 1, DataType::F32), TensorInfo(TensorShape(1U, 1U, 16U), 1, DataType::F32), TensorInfo(TensorShape(3U, 5U, 16U), 1, DataType::F32), TensorInfo(TensorShape(2U, 37U, 16U), 1, DataType::F32), TensorInfo(TensorShape(22U, 37U, 36U), 1, DataType::F32) })), framework::dataset::make(&quot;WinogradInfo&quot;, { WinogradInfo(Size2D(2U, 2U), Size2D(3U, 3U), Size2D(), PadStrideInfo(), DataLayout::NCHW), WinogradInfo(Size2D(2U, 2U), Size2D(3U, 3U), Size2D(), PadStrideInfo(), DataLayout::NCHW), WinogradInfo(Size2D(2U, 2U), Size2D(3U, 3U), Size2D(), PadStrideInfo(), DataLayout::NCHW), WinogradInfo(Size2D(3U, 3U), Size2D(3U, 3U), Size2D(), PadStrideInfo(), DataLayout::NCHW), WinogradInfo(Size2D(2U, 2U), Size2D(3U, 3U), Size2D(), PadStrideInfo(), DataLayout::NCHW), WinogradInfo(Size2D(2U, 2U), Size2D(3U, 3U), Size2D(), PadStrideInfo(), DataLayout::NCHW), WinogradInfo(Size2D(4U, 4U), Size2D(3U, 3U), Size2D(), PadStrideInfo(), DataLayout::NCHW) })), framework::dataset::make(&quot;Expected&quot;, { true, false, false, false, true, true, true }))</td></tr>
<tr class="separator:a8b21582e176d7bf27d350e5a10e8e554"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aebb47427829a9b7656e48f1201f8cc52"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aebb47427829a9b7656e48f1201f8cc52">FIXTURE_DATA_TEST_CASE</a> (RunSmall, CLWinogradFilterTransformFixtureFP32, framework::DatasetMode::PRECOMMIT, combine(combine(SmallWinogradFilterTransformDatasetNCHW, framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW })), framework::dataset::make(&quot;DataType&quot;, { DataType::F32 })))</td></tr>
<tr class="separator:aebb47427829a9b7656e48f1201f8cc52"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa06c6feba12c92f2227d43172e4e3265"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa06c6feba12c92f2227d43172e4e3265">FIXTURE_DATA_TEST_CASE</a> (RunLarge, CLWinogradFilterTransformFixtureFP32, framework::DatasetMode::NIGHTLY, combine(combine(LargeWinogradFilterTransformDatasetNCHW, framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW })), framework::dataset::make(&quot;DataType&quot;, { DataType::F32 })))</td></tr>
<tr class="separator:aa06c6feba12c92f2227d43172e4e3265"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6021ee102520188db2a83ec2f12dee82"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6021ee102520188db2a83ec2f12dee82">combine</a> (combine(SmallWinogradFilterTransformDatasetNCHW, framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW })), framework::dataset::make(&quot;DataType&quot;, { DataType::F16 })))</td></tr>
<tr class="separator:a6021ee102520188db2a83ec2f12dee82"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a260df7797684b78568d4767603bca11c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a260df7797684b78568d4767603bca11c">FIXTURE_DATA_TEST_CASE</a> (RunLarge, CLWinogradFilterTransformFixtureFP16, framework::DatasetMode::NIGHTLY, combine(combine(LargeWinogradFilterTransformDatasetNCHW, framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW })), framework::dataset::make(&quot;DataType&quot;, { DataType::F16 })))</td></tr>
<tr class="separator:a260df7797684b78568d4767603bca11c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac99b79d76a389134a770ef84123c8e7f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac99b79d76a389134a770ef84123c8e7f">combine</a> (combine(SmallWinogradFilterTransformDatasetNHWC_F16, framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NHWC })), framework::dataset::make(&quot;DataType&quot;, { DataType::F16 })))</td></tr>
<tr class="separator:ac99b79d76a389134a770ef84123c8e7f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae88b51711658b7a86841468fcb52c3b0"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae88b51711658b7a86841468fcb52c3b0">FIXTURE_DATA_TEST_CASE</a> (RunLarge, CLWinogradFilterTransformFixtureFP16, framework::DatasetMode::NIGHTLY, combine(combine(LargeWinogradFilterTransformDatasetNHWC_F16, framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NHWC })), framework::dataset::make(&quot;DataType&quot;, { DataType::F16 })))</td></tr>
<tr class="separator:ae88b51711658b7a86841468fcb52c3b0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a92c954cae4fba05b9289379457fdeb53"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a92c954cae4fba05b9289379457fdeb53">combine</a> (combine(SmallWinogradFilterTransformDatasetNHWC_F32, framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NHWC })), framework::dataset::make(&quot;DataType&quot;, { DataType::F32 })))</td></tr>
<tr class="separator:a92c954cae4fba05b9289379457fdeb53"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a822f5d584969c12c48787f95d589f79f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a822f5d584969c12c48787f95d589f79f">FIXTURE_DATA_TEST_CASE</a> (RunLarge, CLWinogradFilterTransformFixtureFP32, framework::DatasetMode::NIGHTLY, combine(combine(LargeWinogradFilterTransformDatasetNHWC_F32, framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NHWC })), framework::dataset::make(&quot;DataType&quot;, { DataType::F32 })))</td></tr>
<tr class="separator:a822f5d584969c12c48787f95d589f79f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a83c3f26a5c463cb91f9f39fc47fe02fd"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a83c3f26a5c463cb91f9f39fc47fe02fd">zip</a> (zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;,{ TensorInfo(TensorShape(512U, 49U, 16U, 5U), 1, DataType::F16), TensorInfo(TensorShape(512U, 49U, 16U, 5U), 1, DataType::QASYMM8), TensorInfo(TensorShape(512U, 49U, 16U, 5U), 1, DataType::F32), TensorInfo(TensorShape(512U, 49U, 16U, 5U), 1, DataType::F32), TensorInfo(TensorShape(13U, 108U, 16U, 4U), 1, DataType::F32), TensorInfo(TensorShape(7U, 20U, 16U, 7U), 1, DataType::F32), TensorInfo(TensorShape(7U, 20U, 16U, 7U), 1, DataType::F32), TensorInfo(TensorShape(7U, 256U, 36U, 3U), 1, DataType::F32), TensorInfo(TensorShape(7U, 256U, 16U, 3U), 1, DataType::F32) }), framework::dataset::make(&quot;BiasInfo&quot;, { TensorInfo(TensorShape(512U), 1, DataType::F16), TensorInfo(TensorShape(512U), 1, DataType::QASYMM8), TensorInfo(TensorShape(512U), 1, DataType::F32), TensorInfo(TensorShape(512U), 1, DataType::F32), TensorInfo(TensorShape(13U), 1, DataType::F32), TensorInfo(TensorShape(7U), 1, DataType::F32), TensorInfo(TensorShape(7U), 1, DataType::F32), TensorInfo(TensorShape(7U), 1, DataType::F32), TensorInfo(TensorShape(7U), 1, DataType::F32) })), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(14U, 14U, 512U, 5U), 1, DataType::F16), TensorInfo(TensorShape(14U, 14U, 512U, 5U), 1, DataType::QASYMM8), TensorInfo(TensorShape(14U, 14U, 512U, 5U), 1, DataType::F32), TensorInfo(TensorShape(14U, 14U, 512U, 5U), 1, DataType::F32), TensorInfo(TensorShape(17U, 23U, 13U, 4U), 1, DataType::F32), TensorInfo(TensorShape(8U, 10U, 7U, 7U), 1, DataType::F32), TensorInfo(TensorShape(7U, 9U, 7U, 7U), 1, DataType::F32), TensorInfo(TensorShape(64U, 64U, 7U, 3U), 1, DataType::F32), TensorInfo(TensorShape(64U, 64U, 7U, 3U), 1, DataType::F32) })), framework::dataset::make(&quot;WinogradInfo&quot;, { WinogradInfo(Size2D(2U, 2U), Size2D(3U, 3U), Size2D(14U, 14U), PadStrideInfo(1, 1, 1, 1), DataLayout::NCHW), WinogradInfo(Size2D(2U, 2U), Size2D(3U, 3U), Size2D(14U, 14U), PadStrideInfo(1, 1, 1, 1), DataLayout::NCHW), WinogradInfo(Size2D(2U, 2U), Size2D(5U, 5U), Size2D(14U, 14U), PadStrideInfo(1, 1, 1, 1), DataLayout::NCHW), WinogradInfo(Size2D(2U, 2U), Size2D(3U, 3U), Size2D(14U, 14U), PadStrideInfo(1, 1, 1, 1), DataLayout::NCHW), WinogradInfo(Size2D(2U, 2U), Size2D(3U, 3U), Size2D(17U, 23U), PadStrideInfo(1, 1, 1, 1), DataLayout::NCHW), WinogradInfo(Size2D(2U, 2U), Size2D(3U, 3U), Size2D(8U, 10U), PadStrideInfo(1, 1, 1, 1), DataLayout::NCHW), WinogradInfo(Size2D(2U, 3U), Size2D(3U, 3U), Size2D(8U, 10U), PadStrideInfo(1, 1, 0, 0), DataLayout::NCHW), WinogradInfo(Size2D(4U, 4U), Size2D(3U, 3U), Size2D(64U, 64U), PadStrideInfo(1, 1, 1, 1), DataLayout::NCHW), WinogradInfo(Size2D(4U, 4U), Size2D(3U, 3U), Size2D(64U, 64U), PadStrideInfo(1, 1, 1, 1), DataLayout::NCHW) })), framework::dataset::make(&quot;Expected&quot;, { true, false, false, true, false, true, false, true, false }))</td></tr>
<tr class="separator:a83c3f26a5c463cb91f9f39fc47fe02fd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3964fb992b6261c49fa64cee9f703aea"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3964fb992b6261c49fa64cee9f703aea">FIXTURE_DATA_TEST_CASE</a> (RunSmall, CLWinogradOutputTransformFixtureFP16, framework::DatasetMode::ALL, combine(combine(SmallWinogradOutputTransformDatasetNCHW, framework::dataset::make(&quot;DataType&quot;, { DataType::F16 })), framework::dataset::make(&quot;ActivationInfo&quot;,{ ActivationLayerInfo() })))</td></tr>
<tr class="separator:a3964fb992b6261c49fa64cee9f703aea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad36747868db135bfe6ec2612b950e192"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad36747868db135bfe6ec2612b950e192">FIXTURE_DATA_TEST_CASE</a> (RunLarge, CLWinogradOutputTransformFixtureFP16, framework::DatasetMode::NIGHTLY, combine(combine(LargeWinogradOutputTransformDatasetNCHW, framework::dataset::make(&quot;DataType&quot;, { DataType::F16 })), framework::dataset::make(&quot;ActivationInfo&quot;,{ ActivationLayerInfo() })))</td></tr>
<tr class="separator:ad36747868db135bfe6ec2612b950e192"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a635a4ed7493013bf8d4234f72baf301a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a635a4ed7493013bf8d4234f72baf301a">combine</a> (combine(SmallWinogradOutputTransformDatasetNCHW, framework::dataset::make(&quot;DataType&quot;, { DataType::F32 })), framework::dataset::make(&quot;ActivationInfo&quot;,{ ActivationLayerInfo() })))</td></tr>
<tr class="separator:a635a4ed7493013bf8d4234f72baf301a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3551fb034bd6c289e86ef940d49044c1"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3551fb034bd6c289e86ef940d49044c1">FIXTURE_DATA_TEST_CASE</a> (RunLarge, CLWinogradOutputTransformFixtureFP32, framework::DatasetMode::NIGHTLY, combine(combine(LargeWinogradOutputTransformDatasetNCHW, framework::dataset::make(&quot;DataType&quot;, { DataType::F32 })), framework::dataset::make(&quot;ActivationInfo&quot;,{ ActivationLayerInfo() })))</td></tr>
<tr class="separator:a3551fb034bd6c289e86ef940d49044c1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acb0f9e3857ddd59f91ac6a4b5696d2e0"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#acb0f9e3857ddd59f91ac6a4b5696d2e0">combine</a> (combine(SmallWinogradOutputTransformDatasetNHWC_F16, framework::dataset::make(&quot;DataType&quot;, { DataType::F16 })), framework::dataset::make(&quot;ActivationInfo&quot;,{ ActivationLayerInfo() })))</td></tr>
<tr class="separator:acb0f9e3857ddd59f91ac6a4b5696d2e0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6c5944c79af51fc58216e8cac2ae7d5e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6c5944c79af51fc58216e8cac2ae7d5e">FIXTURE_DATA_TEST_CASE</a> (RunLarge, CLWinogradOutputTransformFixtureFP16, framework::DatasetMode::NIGHTLY, combine(combine(LargeWinogradOutputTransformDatasetNHWC_F16, framework::dataset::make(&quot;DataType&quot;, { DataType::F16 })), framework::dataset::make(&quot;ActivationInfo&quot;,{ ActivationLayerInfo() })))</td></tr>
<tr class="separator:a6c5944c79af51fc58216e8cac2ae7d5e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a24a29d81b247687c9412a726af8e516c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a24a29d81b247687c9412a726af8e516c">combine</a> (combine(SmallWinogradOutputTransformDatasetNHWC_F32, framework::dataset::make(&quot;DataType&quot;, { DataType::F32 })), framework::dataset::make(&quot;ActivationInfo&quot;,{ ActivationLayerInfo() })))</td></tr>
<tr class="separator:a24a29d81b247687c9412a726af8e516c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a782147e448ee1e98b5ac8c9855899937"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a782147e448ee1e98b5ac8c9855899937">FIXTURE_DATA_TEST_CASE</a> (RunLarge, CLWinogradOutputTransformFixtureFP32, framework::DatasetMode::NIGHTLY, combine(combine(LargeWinogradOutputTransformDatasetNHWC_F32, framework::dataset::make(&quot;DataType&quot;, { DataType::F32 })), framework::dataset::make(&quot;ActivationInfo&quot;,{ ActivationLayerInfo() })))</td></tr>
<tr class="separator:a782147e448ee1e98b5ac8c9855899937"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af94bf82577407bd38165f4e84c4c360a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#af94bf82577407bd38165f4e84c4c360a">zip</a> (zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(17U, 31U, 2U), 1, DataType::F16), TensorInfo(TensorShape(17U, 31U, 2U), 1, DataType::F32), TensorInfo(TensorShape(23U, 27U, 5U, 4U), 1, DataType::F32), TensorInfo(TensorShape(16U, 16U, 8U), 1, DataType::F32), TensorInfo(TensorShape(33U, 27U, 7U, 4U), 1, DataType::F32) }), framework::dataset::make(&quot;WeightsInfo&quot;, { TensorInfo(TensorShape(3U, 3U, 2U, 19U), 1, DataType::F16), TensorInfo(TensorShape(3U, 3U, 2U, 19U), 1, DataType::QASYMM8), TensorInfo(TensorShape(3U, 3U, 5U, 21U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 8U, 16U), 1, DataType::F32), TensorInfo(TensorShape(5U, 5U, 7U, 16U), 1, DataType::F16) })), framework::dataset::make(&quot;BiasesInfo&quot;, { TensorInfo(TensorShape(19U), 1, DataType::F16), TensorInfo(TensorShape(19U), 1, DataType::F32), TensorInfo(TensorShape(21U), 1, DataType::F32), TensorInfo(TensorShape(16U), 1, DataType::F32), TensorInfo(TensorShape(16U), 1, DataType::F32) })), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(17U, 31U, 19U), 1, DataType::F16), TensorInfo(TensorShape(15U, 15U, 19U), 1, DataType::F32), TensorInfo(TensorShape(21U, 25U, 21U, 4U), 1, DataType::F32), TensorInfo(TensorShape(16U, 16U, 16U), 1, DataType::F32), TensorInfo(TensorShape(11U, 12U, 16U, 4U), 1, DataType::F32) })), framework::dataset::make(&quot;ConvInfo&quot;, { PadStrideInfo(1, 1, 1, 1), PadStrideInfo(1, 1, 1, 1), PadStrideInfo(1, 2, 0, 0), PadStrideInfo(1, 1, 1, 1), PadStrideInfo(1, 1, 1, 0) })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, false }))</td></tr>
<tr class="separator:af94bf82577407bd38165f4e84c4c360a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aea5f1a4f1c500cbb5a19b73cebee80b4"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aea5f1a4f1c500cbb5a19b73cebee80b4">FIXTURE_DATA_TEST_CASE</a> (RunSmall, CLWinogradConvolutionLayerFastMathFixture, framework::DatasetMode::PRECOMMIT, combine(combine(combine(datasets::SmallWinogradConvolutionLayer3x3Dataset(), framework::dataset::make(&quot;DataType&quot;, { DataType::F32 })), ActivationFunctionsSmallDataset), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })))</td></tr>
<tr class="separator:aea5f1a4f1c500cbb5a19b73cebee80b4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a510c741b806778da951c9461e400ea66"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a510c741b806778da951c9461e400ea66">FIXTURE_DATA_TEST_CASE</a> (RunLarge, CLWinogradConvolutionLayerFastMathFixture, framework::DatasetMode::NIGHTLY, combine(combine(combine(datasets::LargeWinogradConvolutionLayer3x3Dataset(), framework::dataset::make(&quot;DataType&quot;, { DataType::F32 })), ActivationFunctionsDataset), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })))</td></tr>
<tr class="separator:a510c741b806778da951c9461e400ea66"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afc58e7b1ccb8c9b0abb9bcfa6e592c0c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#afc58e7b1ccb8c9b0abb9bcfa6e592c0c">combine</a> (combine(combine(datasets::SmallWinogradConvolutionLayer3x1Dataset(), framework::dataset::make(&quot;DataType&quot;, { DataType::F32 })), ActivationFunctionsSmallDataset), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })))</td></tr>
<tr class="separator:afc58e7b1ccb8c9b0abb9bcfa6e592c0c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4306d5a9d8a4719add50ba5be6df069b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4306d5a9d8a4719add50ba5be6df069b">FIXTURE_DATA_TEST_CASE</a> (RunLarge, CLWinogradConvolutionLayerFastMathFixture, framework::DatasetMode::NIGHTLY, combine(combine(combine(datasets::LargeWinogradConvolutionLayer3x1Dataset(), framework::dataset::make(&quot;DataType&quot;, { DataType::F32 })), ActivationFunctionsDataset), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })))</td></tr>
<tr class="separator:a4306d5a9d8a4719add50ba5be6df069b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9a6f542aa33954cc0c391ebc079bc0ef"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a9a6f542aa33954cc0c391ebc079bc0ef">combine</a> (combine(combine(datasets::SmallWinogradConvolutionLayer1x3Dataset(), framework::dataset::make(&quot;DataType&quot;, { DataType::F32 })), ActivationFunctionsSmallDataset), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })))</td></tr>
<tr class="separator:a9a6f542aa33954cc0c391ebc079bc0ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a86dab0f898d801a593d95623ff272e86"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a86dab0f898d801a593d95623ff272e86">FIXTURE_DATA_TEST_CASE</a> (RunLarge, CLWinogradConvolutionLayerFastMathFixture, framework::DatasetMode::NIGHTLY, combine(combine(combine(datasets::LargeWinogradConvolutionLayer1x3Dataset(), framework::dataset::make(&quot;DataType&quot;, { DataType::F32 })), ActivationFunctionsDataset), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })))</td></tr>
<tr class="separator:a86dab0f898d801a593d95623ff272e86"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2bd84a2e27e9d1d931b54acdc1643bda"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a2bd84a2e27e9d1d931b54acdc1643bda">combine</a> (combine(combine(datasets::SmallWinogradConvolutionLayer5x5Dataset(), framework::dataset::make(&quot;DataType&quot;, { DataType::F32 })), ActivationFunctionsSmallDataset), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })))</td></tr>
<tr class="separator:a2bd84a2e27e9d1d931b54acdc1643bda"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0dbffe87f2179ce2814d7b023279115a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a0dbffe87f2179ce2814d7b023279115a">FIXTURE_DATA_TEST_CASE</a> (RunLarge, CLWinogradConvolutionLayerFastMathFixture, framework::DatasetMode::NIGHTLY, combine(combine(combine(datasets::LargeWinogradConvolutionLayer5x5Dataset(), framework::dataset::make(&quot;DataType&quot;, { DataType::F32 })), ActivationFunctionsDataset), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })))</td></tr>
<tr class="separator:a0dbffe87f2179ce2814d7b023279115a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa4e091bdcad717b20f789c709baee90d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa4e091bdcad717b20f789c709baee90d">combine</a> (combine(combine(datasets::SmallWinogradConvolutionLayer5x1Dataset(), framework::dataset::make(&quot;DataType&quot;, { DataType::F32 })), ActivationFunctionsSmallDataset), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })))</td></tr>
<tr class="separator:aa4e091bdcad717b20f789c709baee90d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a733f89d4143bb9b6823a7f2019842c9d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a733f89d4143bb9b6823a7f2019842c9d">FIXTURE_DATA_TEST_CASE</a> (RunLarge, CLWinogradConvolutionLayerFastMathFixture, framework::DatasetMode::NIGHTLY, combine(combine(combine(datasets::LargeWinogradConvolutionLayer5x1Dataset(), framework::dataset::make(&quot;DataType&quot;, { DataType::F32 })), ActivationFunctionsDataset), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })))</td></tr>
<tr class="separator:a733f89d4143bb9b6823a7f2019842c9d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa6ac34c117469a1fea4f3749223fa00a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa6ac34c117469a1fea4f3749223fa00a">combine</a> (combine(combine(datasets::SmallWinogradConvolutionLayer1x5Dataset(), framework::dataset::make(&quot;DataType&quot;, { DataType::F32 })), ActivationFunctionsSmallDataset), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })))</td></tr>
<tr class="separator:aa6ac34c117469a1fea4f3749223fa00a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa3d3f69e3800e4033c4442fbc87bcd21"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa3d3f69e3800e4033c4442fbc87bcd21">FIXTURE_DATA_TEST_CASE</a> (RunLarge, CLWinogradConvolutionLayerFastMathFixture, framework::DatasetMode::NIGHTLY, combine(combine(combine(datasets::LargeWinogradConvolutionLayer1x5Dataset(), framework::dataset::make(&quot;DataType&quot;, { DataType::F32 })), ActivationFunctionsDataset), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })))</td></tr>
<tr class="separator:aa3d3f69e3800e4033c4442fbc87bcd21"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aff759ab62872584f67270633e84e5aed"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aff759ab62872584f67270633e84e5aed">FIXTURE_DATA_TEST_CASE</a> (RunSmall, CLWinogradConvolutionLayerFastMathFixture16, framework::DatasetMode::PRECOMMIT, combine(combine(combine(datasets::SmallWinogradConvolutionLayer3x3Dataset(), framework::dataset::make(&quot;DataType&quot;, { DataType::F16 })), ActivationFunctionsSmallDataset), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })))</td></tr>
<tr class="separator:aff759ab62872584f67270633e84e5aed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a777c352be768ee425910acfed9931d93"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a777c352be768ee425910acfed9931d93">FIXTURE_DATA_TEST_CASE</a> (RunLarge, CLWinogradConvolutionLayerFastMathFixture16, framework::DatasetMode::NIGHTLY, combine(combine(combine(datasets::LargeWinogradConvolutionLayer3x3Dataset(), framework::dataset::make(&quot;DataType&quot;, { DataType::F16 })), ActivationFunctionsDataset), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })))</td></tr>
<tr class="separator:a777c352be768ee425910acfed9931d93"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac782f10cf3f2d5e09d893218d5849e8e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac782f10cf3f2d5e09d893218d5849e8e">combine</a> (combine(combine(datasets::SmallWinogradConvolutionLayer3x1Dataset(), framework::dataset::make(&quot;DataType&quot;, { DataType::F16 })), ActivationFunctionsSmallDataset), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })))</td></tr>
<tr class="separator:ac782f10cf3f2d5e09d893218d5849e8e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa18071fe6e7745469937e92be084e8aa"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa18071fe6e7745469937e92be084e8aa">FIXTURE_DATA_TEST_CASE</a> (RunLarge, CLWinogradConvolutionLayerFastMathFixture16, framework::DatasetMode::NIGHTLY, combine(combine(combine(datasets::LargeWinogradConvolutionLayer3x1Dataset(), framework::dataset::make(&quot;DataType&quot;, { DataType::F16 })), ActivationFunctionsDataset), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })))</td></tr>
<tr class="separator:aa18071fe6e7745469937e92be084e8aa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0b374452891e5a2e155ae7801d032da7"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a0b374452891e5a2e155ae7801d032da7">combine</a> (combine(combine(datasets::SmallWinogradConvolutionLayer1x3Dataset(), framework::dataset::make(&quot;DataType&quot;, { DataType::F16 })), ActivationFunctionsSmallDataset), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })))</td></tr>
<tr class="separator:a0b374452891e5a2e155ae7801d032da7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af7a5c2ad3fc736a6e26d776f62fb53ae"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#af7a5c2ad3fc736a6e26d776f62fb53ae">FIXTURE_DATA_TEST_CASE</a> (RunLarge, CLWinogradConvolutionLayerFastMathFixture16, framework::DatasetMode::NIGHTLY, combine(combine(combine(datasets::LargeWinogradConvolutionLayer1x3Dataset(), framework::dataset::make(&quot;DataType&quot;, { DataType::F16 })), ActivationFunctionsDataset), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })))</td></tr>
<tr class="separator:af7a5c2ad3fc736a6e26d776f62fb53ae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac4c16ee2840b5b6fdad9101c4332ad14"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac4c16ee2840b5b6fdad9101c4332ad14">combine</a> (combine(combine(datasets::SmallWinogradConvolutionLayer5x5Dataset(), framework::dataset::make(&quot;DataType&quot;, { DataType::F16 })), ActivationFunctionsSmallDataset), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })))</td></tr>
<tr class="separator:ac4c16ee2840b5b6fdad9101c4332ad14"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adce25b8f486e9fb7a9bd665d0dc748eb"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#adce25b8f486e9fb7a9bd665d0dc748eb">FIXTURE_DATA_TEST_CASE</a> (RunLarge, CLWinogradConvolutionLayerFastMathFixture16, framework::DatasetMode::NIGHTLY, combine(combine(combine(datasets::LargeWinogradConvolutionLayer5x5Dataset(), framework::dataset::make(&quot;DataType&quot;, { DataType::F16 })), ActivationFunctionsDataset), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })))</td></tr>
<tr class="separator:adce25b8f486e9fb7a9bd665d0dc748eb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab8cf8d715ef18d45732ebcfc216ac405"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ab8cf8d715ef18d45732ebcfc216ac405">combine</a> (combine(combine(datasets::SmallWinogradConvolutionLayer5x1Dataset(), framework::dataset::make(&quot;DataType&quot;, { DataType::F16 })), ActivationFunctionsSmallDataset), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })))</td></tr>
<tr class="separator:ab8cf8d715ef18d45732ebcfc216ac405"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8be4116648e92b15bfd506010433bfee"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8be4116648e92b15bfd506010433bfee">FIXTURE_DATA_TEST_CASE</a> (RunLarge, CLWinogradConvolutionLayerFastMathFixture16, framework::DatasetMode::NIGHTLY, combine(combine(combine(datasets::LargeWinogradConvolutionLayer5x1Dataset(), framework::dataset::make(&quot;DataType&quot;, { DataType::F16 })), ActivationFunctionsDataset), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })))</td></tr>
<tr class="separator:a8be4116648e92b15bfd506010433bfee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a92ea6ac2e4c17a8b8cb61325165e6d52"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a92ea6ac2e4c17a8b8cb61325165e6d52">combine</a> (combine(combine(datasets::SmallWinogradConvolutionLayer1x5Dataset(), framework::dataset::make(&quot;DataType&quot;, { DataType::F16 })), ActivationFunctionsSmallDataset), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })))</td></tr>
<tr class="separator:a92ea6ac2e4c17a8b8cb61325165e6d52"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3ac58b06396ca30913df4fe49cda47b7"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3ac58b06396ca30913df4fe49cda47b7">FIXTURE_DATA_TEST_CASE</a> (RunLarge, CLWinogradConvolutionLayerFastMathFixture16, framework::DatasetMode::NIGHTLY, combine(combine(combine(datasets::LargeWinogradConvolutionLayer1x5Dataset(), framework::dataset::make(&quot;DataType&quot;, { DataType::F16 })), ActivationFunctionsDataset), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })))</td></tr>
<tr class="separator:a3ac58b06396ca30913df4fe49cda47b7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aef554aa97e83764c6914288c18309a00"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aef554aa97e83764c6914288c18309a00">combine</a> (combine(combine(datasets::SmallWinogradConvolutionLayer1x7Dataset(), framework::dataset::make(&quot;DataType&quot;, { DataType::F16 })), ActivationFunctionsSmallDataset), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NHWC })))</td></tr>
<tr class="separator:aef554aa97e83764c6914288c18309a00"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5383ca2486debad82a6ae5fb52f15ce2"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5383ca2486debad82a6ae5fb52f15ce2">FIXTURE_DATA_TEST_CASE</a> (RunLarge, CLWinogradConvolutionLayerFastMathFixture16, framework::DatasetMode::NIGHTLY, combine(combine(combine(datasets::LargeWinogradConvolutionLayer1x7Dataset(), framework::dataset::make(&quot;DataType&quot;, { DataType::F16 })), ActivationFunctionsDataset), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NHWC })))</td></tr>
<tr class="separator:a5383ca2486debad82a6ae5fb52f15ce2"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:ae008e90eb6906fa3526213bc860f6cc5"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae008e90eb6906fa3526213bc860f6cc5">input_info</a></td></tr>
<tr class="separator:ae008e90eb6906fa3526213bc860f6cc5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a25cae7166733a51d1354f3f395652782"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a25cae7166733a51d1354f3f395652782">output_info</a></td></tr>
<tr class="separator:a25cae7166733a51d1354f3f395652782"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a809d18ccde99d938a68cb90ef53aa749"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a809d18ccde99d938a68cb90ef53aa749">winograd_info</a></td></tr>
<tr class="separator:a809d18ccde99d938a68cb90ef53aa749"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a43c38c81ff3058e36ceb9904a944d1ea"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a43c38c81ff3058e36ceb9904a944d1ea">bias_info</a></td></tr>
<tr class="separator:a43c38c81ff3058e36ceb9904a944d1ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a00525ff582f16038a1d3819aa44a23a3"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a></td></tr>
<tr class="separator:a00525ff582f16038a1d3819aa44a23a3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1016f3f9a608db04ae19147571d7ae9d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1016f3f9a608db04ae19147571d7ae9d">CLWinogradConvolutionLayerFastMathFixture16</a></td></tr>
<tr class="separator:a1016f3f9a608db04ae19147571d7ae9d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_59425e443f801f1f2fd8bbe4959a3ccf.xhtml">tests</a></li><li class="navelem"><a class="el" href="dir_e7c7b16542faa38cb4655ff1750d3604.xhtml">validation</a></li><li class="navelem"><a class="el" href="dir_f7024513cd67abef53e86ee9382ac5ce.xhtml">CL</a></li><li class="navelem"><a class="el" href="_c_l_2_winograd_8cpp.xhtml">Winograd.cpp</a></li>
    <li class="footer">Generated on Fri Feb 21 2020 11:10:22 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
