var searchData=
[
  ['data',['data',['../classarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file.xhtml#a3884d6c46a68636a526bdfd8ab131895',1,'arm_compute::utils::mmap_io::MMappedFile::data()'],['../classarm__compute_1_1_c_l_lut_allocator.xhtml#a99c07c946023f413991a249db8b99ab0',1,'arm_compute::CLLutAllocator::data()'],['../classarm__compute_1_1_c_l_tensor_allocator.xhtml#a99c07c946023f413991a249db8b99ab0',1,'arm_compute::CLTensorAllocator::data()'],['../classarm__compute_1_1_g_c_tensor_allocator.xhtml#a99c07c946023f413991a249db8b99ab0',1,'arm_compute::GCTensorAllocator::data()'],['../classarm__compute_1_1_lut_allocator.xhtml#a344325f71f51323330de47f307ebecfd',1,'arm_compute::LutAllocator::data()'],['../classarm__compute_1_1_tensor_allocator.xhtml#a344325f71f51323330de47f307ebecfd',1,'arm_compute::TensorAllocator::data()'],['../classarm__compute_1_1test_1_1_c_l_accessor.xhtml#a332a750ed35277f0bc297fbfecce598f',1,'arm_compute::test::CLAccessor::data() const'],['../classarm__compute_1_1test_1_1_c_l_accessor.xhtml#a0189be0971a32a0171c51b90a1ab1020',1,'arm_compute::test::CLAccessor::data()'],['../classarm__compute_1_1test_1_1_accessor.xhtml#a332a750ed35277f0bc297fbfecce598f',1,'arm_compute::test::Accessor::data() const'],['../classarm__compute_1_1test_1_1_accessor.xhtml#a0189be0971a32a0171c51b90a1ab1020',1,'arm_compute::test::Accessor::data()'],['../classarm__compute_1_1test_1_1_simple_tensor.xhtml#a4ae7e1f6885eb47c11062cc74e6a6e19',1,'arm_compute::test::SimpleTensor::data() const'],['../classarm__compute_1_1test_1_1_simple_tensor.xhtml#adc1e16b293a89a9ccc9541058b5ca560',1,'arm_compute::test::SimpleTensor::data()'],['../classarm__compute_1_1test_1_1_simple_tensor_accessor.xhtml#a332a750ed35277f0bc297fbfecce598f',1,'arm_compute::test::SimpleTensorAccessor::data() const'],['../classarm__compute_1_1test_1_1_simple_tensor_accessor.xhtml#a0189be0971a32a0171c51b90a1ab1020',1,'arm_compute::test::SimpleTensorAccessor::data()']]],
  ['data_5flayout',['data_layout',['../classarm__compute_1_1_i_tensor_info.xhtml#a367b5090ab432bc7de2c32369e087ab1',1,'arm_compute::ITensorInfo::data_layout()'],['../classarm__compute_1_1_sub_tensor_info.xhtml#a5f63b63606dbbbe54474e6e970a6738c',1,'arm_compute::SubTensorInfo::data_layout()'],['../classarm__compute_1_1_tensor_info.xhtml#a5f63b63606dbbbe54474e6e970a6738c',1,'arm_compute::TensorInfo::data_layout()'],['../classarm__compute_1_1test_1_1_c_l_accessor.xhtml#a5f63b63606dbbbe54474e6e970a6738c',1,'arm_compute::test::CLAccessor::data_layout()'],['../classarm__compute_1_1test_1_1_g_c_accessor.xhtml#a5f63b63606dbbbe54474e6e970a6738c',1,'arm_compute::test::GCAccessor::data_layout()'],['../classarm__compute_1_1test_1_1_i_accessor.xhtml#a367b5090ab432bc7de2c32369e087ab1',1,'arm_compute::test::IAccessor::data_layout()'],['../classarm__compute_1_1test_1_1_accessor.xhtml#a5f63b63606dbbbe54474e6e970a6738c',1,'arm_compute::test::Accessor::data_layout()'],['../classarm__compute_1_1test_1_1_simple_tensor.xhtml#a5f63b63606dbbbe54474e6e970a6738c',1,'arm_compute::test::SimpleTensor::data_layout()'],['../classarm__compute_1_1test_1_1_simple_tensor_accessor.xhtml#a5f63b63606dbbbe54474e6e970a6738c',1,'arm_compute::test::SimpleTensorAccessor::data_layout()']]],
  ['data_5flayout_5ffrom_5fname',['data_layout_from_name',['../namespacearm__compute.xhtml#a834b76c7d21af898f39def3b787d7530',1,'arm_compute']]],
  ['data_5fsize_5ffrom_5ftype',['data_size_from_type',['../namespacearm__compute.xhtml#abb7e0f23a4f2e63f39433f158dad47ab',1,'arm_compute']]],
  ['data_5ftest_5fcase',['DATA_TEST_CASE',['../namespacearm__compute_1_1test_1_1validation.xhtml#a1f1266d183bfb4d479ec334fed85dc27',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(datasets::SmallShapes(), AbsoluteDifferenceU8Dataset), shape, data_type0, data_type1, output_data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a7ece0381b862c0380738c6a20ba6fa9f',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(datasets::SmallShapes(), AccumulateS16Dataset), shape, data_type, output_data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a6cf751456bb23643402494b0d60e896c',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(datasets::SmallShapes(), AccumulateU8Dataset), shape, data_type, output_data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#aaa7953698326d53bf5c662c6c3f53347',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(datasets::SmallShapes(), CNNDataTypes), framework::dataset::make(&quot;InPlace&quot;, { false, true })), shape, data_type, in_place)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a1c04e3cd35406e97c777d74dc2118ecb',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QSYMM16), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QSYMM16), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QSYMM16), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F16), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(30U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QSYMM16, QuantizationInfo(1.f/32768.f, 0)), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QSYMM16, QuantizationInfo(1.f/32768.f, 0)), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QSYMM16, QuantizationInfo(1.f/32768.f, 0)), })), framework::dataset::make(&quot;ActivationInfo&quot;, { ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::LU_BOUNDED_RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::TANH), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::TANH), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::LOGISTIC), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::SQRT), })), framework::dataset::make(&quot;Expected&quot;, { false, false, true, true, false, false, true, true, false })), input_info, output_info, act_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a18d4b3db59b5a48e882653468bbaad13',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 3U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 3U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 16U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 16U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 16U, 16U, 2U), 1, DataType::F32) }), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(27U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 16U, 2U), 1, DataType::S32), TensorInfo(TensorShape(32U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 16U, 1U, 2U), 1, DataType::U32) })), framework::dataset::make(&quot;Axis&quot;, { 4, 0, 2, 0, 2 })), framework::dataset::make(&quot;Operation&quot;, { ReductionOperation::ARG_IDX_MAX, ReductionOperation::ARG_IDX_MAX, ReductionOperation::ARG_IDX_MAX, ReductionOperation::MEAN_SUM, ReductionOperation::ARG_IDX_MAX })), framework::dataset::make(&quot;Expected&quot;, { false, false, true, false, false })), input_info, output_info, axis, operation, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a7bcdcdf3e14fa211e3df60f1bcb8bc36',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;Input1Info&quot;, { TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), }), framework::dataset::make(&quot;Input2Info&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S16), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S16), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;Expected&quot;, { true, true, false, false, false})), input1_info, input2_info, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ae87c36e25c2842550c96bcd0c2ae64b8',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(datasets::SmallShapes(), framework::dataset::make(&quot;ConvertPolicy&quot;, { ConvertPolicy::SATURATE, ConvertPolicy::WRAP })), shape, policy)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#aa29210cacff5006d9560a699fa064fbc',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(datasets::SmallShapes(), framework::dataset::make(&quot;ConvertPolicy&quot;, { ConvertPolicy::SATURATE })), shape, policy)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#af704b1c4e364329320f5aab76722a5e9',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;Input1Info&quot;, { TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), }), framework::dataset::make(&quot;Input2Info&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F16), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S16), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;Expected&quot;, { true, false, false, false, false})), input1_info, input2_info, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a3bf71df22cf01e4368b66a37c47cc1bd',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, datasets::SmallShapes(), shape)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ae13b3bd20d4afa4999be1526b77c89f6',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo1&quot;, { TensorInfo(TensorShape(23U, 27U, 5U, 4U), 1, DataType::F32), TensorInfo(TensorShape(20U, 27U, 4U, 4U), 1, DataType::F32), TensorInfo(TensorShape(23U, 26U, 4U, 3U), 1, DataType::F32), TensorInfo(TensorShape(23U, 27U, 4U, 3U), 1, DataType::F32), TensorInfo(TensorShape(16U, 27U, 3U, 6U), 1, DataType::F32) }), framework::dataset::make(&quot;InputInfo2&quot;, { TensorInfo(TensorShape(23U, 27U, 5U, 4U), 1, DataType::F32), TensorInfo(TensorShape(23U, 27U, 4U, 4U), 1, DataType::F32), TensorInfo(TensorShape(23U, 27U, 4U, 4U), 1, DataType::F32), TensorInfo(TensorShape(23U, 27U, 3U, 3U), 1, DataType::F32), TensorInfo(TensorShape(16U, 27U, 3U, 6U), 1, DataType::F32) })), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(23U, 27U, 5U, 4U), 1, DataType::F16), TensorInfo(TensorShape(23U, 12U, 4U, 4U), 1, DataType::F32), TensorInfo(TensorShape(23U, 27U, 4U, 4U), 1, DataType::F32), TensorInfo(TensorShape(23U, 20U, 4U, 3U), 1, DataType::F32), TensorInfo(TensorShape(16U, 27U, 3U, 12U), 1, DataType::F32) })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, true })), input_info1, input_info2, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#aee8fff2abe7ddefd3ec1df377eea2c84',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(combine(datasets::SmallRandomBatchNormalizationLayerDataset(), combine(framework::dataset::make(&quot;UseBeta&quot;, { false, true }), framework::dataset::make(&quot;UseGamma&quot;, { false, true }))), framework::dataset::make(&quot;DataType&quot;, { DataType::F16, DataType::F32 })), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), shape0, shape1, epsilon, use_gamma, use_beta, dt, data_layout)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ac25e2030754af10983828182e0deaeed',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F16), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;MVBGInfo&quot;,{ TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F16), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(5U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), })), framework::dataset::make(&quot;ActivationLayerInfo&quot;,{ ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::BOUNDED_RELU, 6.f), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::BOUNDED_RELU, 6.f), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::LU_BOUNDED_RELU, 6.f), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::TANH), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::LU_BOUNDED_RELU, 2.f, 6.f), })), framework::dataset::make(&quot;Expected&quot;, { true, false, false, false, false, false, false})), input_info, output_info, mvbg_info, act_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#abd882221d3e19c8d42c07fa2090e90b8',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(32U, 13U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(16U, 8U, 2U, 16U), 1, DataType::F32), TensorInfo(TensorShape(16U, 8U, 2U, 16U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U, 2U, 4U), 1, DataType::F32), }), framework::dataset::make(&quot;BlockShapeInfo&quot;,{ TensorInfo(TensorShape(2U, 2U), 1, DataType::S32), TensorInfo(TensorShape(2U, 4U), 1, DataType::S32), TensorInfo(TensorShape(4U, 2U), 1, DataType::S32), TensorInfo(TensorShape(2U, 2U), 1, DataType::S32), TensorInfo(TensorShape(2U, 2U), 1, DataType::F16), TensorInfo(TensorShape(2U, 2U), 1, DataType::S32), })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(64U, 16U, 2U, 1U), 1, DataType::F32), TensorInfo(TensorShape(32U, 32U, 2U, 1U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U, 2U), 1, DataType::F16), TensorInfo(TensorShape(32U, 13U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;Expected&quot;, { true, true, true, false, false, false})), input_info, block_shape_info, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#acd3373f5012f4cd375600dafb843c965',1,'arm_compute::test::validation::DATA_TEST_CASE(ValidateStatic, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(16U, 8U, 2U, 4U), 1, DataType::F32), TensorInfo(TensorShape(16U, 8U, 2U, 16U), 1, DataType::F32), TensorInfo(TensorShape(16U, 8U, 2U, 16U), 1, DataType::F32), TensorInfo(TensorShape(16U, 8U, 2U, 4U), 1, DataType::F32), TensorInfo(TensorShape(16U, 8U, 2U, 4U), 1, DataType::F32), TensorInfo(TensorShape(32U, 16U, 2U, 4U, 4U), 1, DataType::F32), }), framework::dataset::make(&quot;BlockShapeX&quot;, { 2, 4, 2, 2, 2, 2 })), framework::dataset::make(&quot;BlockShapeY&quot;, { 2, 2, 4, 2, -2, 2 })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(32U, 16U, 2U, 1U), 1, DataType::F32), TensorInfo(TensorShape(64U, 16U, 2U, 1U), 1, DataType::F32), TensorInfo(TensorShape(32U, 32U, 2U, 1U), 1, DataType::F32), TensorInfo(TensorShape(32U, 16U, 2U, 1U), 1, DataType::F16), TensorInfo(TensorShape(32U, 16U, 2U, 1U), 1, DataType::F32), TensorInfo(TensorShape(32U, 8U, 2U, 1U), 1, DataType::F32), })), framework::dataset::make(&quot;Expected&quot;, { true, true, true, false, false, false})), input_info, block_shape_x, block_shape_y, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a984b5038e80bd536684ca2ae23cc567d',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(datasets::SmallShapes(), framework::dataset::make(&quot;DataType&quot;, DataType::U8)), shape, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a60102ab0c50068c455a6769f188c274b',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;BoxesInfo&quot;, { TensorInfo(TensorShape(4U, 128U), 1, DataType::F32), TensorInfo(TensorShape(5U, 128U), 1, DataType::F32), TensorInfo(TensorShape(4U, 128U), 1, DataType::F16), TensorInfo(TensorShape(4U, 128U), 1, DataType::F32), TensorInfo(TensorShape(4U, 128U), 1, DataType::F32), TensorInfo(TensorShape(4U, 128U), 1, DataType::F32)}), framework::dataset::make(&quot;PredBoxesInfo&quot;,{ TensorInfo(TensorShape(128U, 128U), 1, DataType::F32), TensorInfo(TensorShape(128U, 128U), 1, DataType::F32), TensorInfo(TensorShape(127U, 128U), 1, DataType::F32), TensorInfo(TensorShape(128U, 100U), 1, DataType::F32), TensorInfo(TensorShape(128U, 100U), 1, DataType::F32), TensorInfo(TensorShape(128U, 128U), 1, DataType::F32)})), framework::dataset::make(&quot;DeltasInfo&quot;, { TensorInfo(TensorShape(128U, 128U), 1, DataType::F32), TensorInfo(TensorShape(128U, 128U), 1, DataType::F32), TensorInfo(TensorShape(127U, 128U), 1, DataType::F32), TensorInfo(TensorShape(128U, 100U), 1, DataType::F32), TensorInfo(TensorShape(128U, 128U), 1, DataType::F32), TensorInfo(TensorShape(128U, 128U), 1, DataType::F32)})), framework::dataset::make(&quot;BoundingBoxTransofmInfo&quot;, { BoundingBoxTransformInfo(800.f, 600.f, 1.f), BoundingBoxTransformInfo(800.f, 600.f, 1.f), BoundingBoxTransformInfo(800.f, 600.f, 1.f), BoundingBoxTransformInfo(800.f, 600.f, 1.f), BoundingBoxTransformInfo(800.f, 600.f, 0.f)})), framework::dataset::make(&quot;Expected&quot;, { true, false, false, false, false, false})), boxes_info, pred_boxes_info, deltas_info, bbox_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#aebb226ba1db8489dcf15c6af89835f61',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(datasets::SmallShapes(), framework::dataset::make(&quot;DataType&quot;, DataType::U8)), datasets::BorderModes()), shape, data_type, border_mode)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a04582bdd10e46245471f749ce701a35b',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(datasets::Small2DShapes(), data), framework::dataset::make(&quot;Format&quot;, Format::U8)), shape, gradient_size, normalization, border_mode, format)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a17a8f5af696f2a516279c6a9ed7c8c82',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(4U, 4U, 4U), 1, DataType::F32), TensorInfo(TensorShape(4U, 4U, 4U), 1, DataType::U8), TensorInfo(TensorShape(4U, 5U, 4U), 1, DataType::F32), TensorInfo(TensorShape(4U, 4U, 4U), 1, DataType::F32), TensorInfo(TensorShape(4U, 4U, 4U), 1, DataType::F32), TensorInfo(TensorShape(4U, 4U, 4U), 1, DataType::F32), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(4U, 4U, 4U), 1, DataType::F32), TensorInfo(TensorShape(4U, 4U, 4U), 1, DataType::F32), TensorInfo(TensorShape(4U, 4U, 4U), 1, DataType::F32), TensorInfo(TensorShape(4U, 4U, 4U), 1, DataType::F32), TensorInfo(TensorShape(4U, 4U, 4U), 1, DataType::F32), TensorInfo(TensorShape(4U, 4U, 4U), 1, DataType::F32), })), framework::dataset::make(&quot;NumGroups&quot;,{ 1, 2, 2, 4, 3, 2, })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, false, true})), input_info, output_info, num_groups, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#af01e7379b497c6925355012544f57008',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(datasets::SmallRandomChannelShuffleLayerDataset(), framework::dataset::make(&quot;DataType&quot;, { DataType::S8, DataType::U8, DataType::S16, DataType::U16, DataType::U32, DataType::S32, DataType::F16, DataType::F32 })), shape, num_groups, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a89dea49d6442ce20e618d1a736c8f854',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(10U, 12U, 1U, 2U), 1, DataType::S64), TensorInfo(TensorShape(10U, 12U, 1U, 2U), 1, DataType::F32), TensorInfo(TensorShape(10U, 12U, 1U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 12U, 4U, 2U), 1, DataType::F32), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(3U, 4U, 10U, 2U), 1, DataType::F16), TensorInfo(TensorShape(3U, 4U, 10U, 2U), 1, DataType::F16), TensorInfo(TensorShape(3U, 3U, 10U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 4U, 12U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;ConvolvedWidth&quot;, { 3, 3, 3, 3 })), framework::dataset::make(&quot;ConvolvedHeight&quot;, { 4, 4, 4, 4 })), framework::dataset::make(&quot;NumGroups&quot;, { 1, 1, 1, 4 })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, true })), input_info, output_info, convolved_width, convolved_height, num_groups, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a63e53b554dd67e816487c7313f7a0b99',1,'arm_compute::test::validation::DATA_TEST_CASE(RGBA, framework::DatasetMode::ALL, combine(datasets::Small2DShapes(), ColorConvert_RGBA_to_RGB), shape, src_format, dst_format)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a2c6e504f8c7a20e65a54ec87fb1a6587',1,'arm_compute::test::validation::DATA_TEST_CASE(RGB, framework::DatasetMode::ALL, combine(datasets::Small2DShapes(), ColorConvert_RGB_to_RGBA), shape, src_format, dst_format)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a8ff15f7408a55dffbf9aa6c956805cf0',1,'arm_compute::test::validation::DATA_TEST_CASE(RGBtoU8, framework::DatasetMode::ALL, combine(datasets::Small2DShapes(), ColorConvert_RGB_to_U8), shape, src_format, dst_format)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ac65df939da2cfd7e0afd5f8c69e24cc9',1,'arm_compute::test::validation::DATA_TEST_CASE(YUV, framework::DatasetMode::ALL, combine(datasets::Small2DShapes(), ColorConvert_YUYV_to_RGBDataset), shape, src_format, dst_format)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#af3672b13658f3d8fc31be77f9c121fc3',1,'arm_compute::test::validation::DATA_TEST_CASE(YUVPlanar, framework::DatasetMode::ALL, combine(datasets::Small2DShapes(), ColorConvert_YUVPlanar_to_RGBDataset), shape, src_format, dst_format)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a1cb6baaad52a436770c6e1fe25443b33',1,'arm_compute::test::validation::DATA_TEST_CASE(NV, framework::DatasetMode::ALL, combine(datasets::Small2DShapes(), ColorConvert_RGBDataset_to_NVDataset), shape, src_format, dst_format)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#afbb8b943e957bb805a291dfab75617c6',1,'arm_compute::test::validation::DATA_TEST_CASE(YUYVtoNV, framework::DatasetMode::ALL, combine(datasets::Small2DShapes(), ColorConvert_YUYVDataset_to_NVDataset), shape, src_format, dst_format)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ad66aa3197275df9b5ad79f3bb111f3fa',1,'arm_compute::test::validation::DATA_TEST_CASE(NVtoYUV, framework::DatasetMode::ALL, combine(datasets::Small2DShapes(), ColorConvert_NVDataset_to_YUVDataset), shape, src_format, dst_format)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a9ffd8a361da1357b6142d3858ca1b76e',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;Input1Info&quot;, { TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), }), framework::dataset::make(&quot;Input2Info&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, true})), input1_info, input2_info, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a99099c34e332efb70e1685e0f35833a4',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, configure_dataset, shape, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a482f48e436d396077b8b6eef81b05dd8',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 42U), 1, DataType::F32), TensorInfo(TensorShape(32U, 42U), 1, DataType::F32), TensorInfo(TensorShape(27U, 42U), 1, DataType::F32), TensorInfo(TensorShape(27U, 42U), 1, DataType::F32), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(27U, 42U), 1, DataType::F16), TensorInfo(TensorShape(32U, 42U), 1, DataType::F32), TensorInfo(TensorShape(32U, 42U), 1, DataType::F32), TensorInfo(TensorShape(32U, 42U), 1, DataType::F32), })), framework::dataset::make(&quot;OriginalInput&quot;, { TensorShape(7U, 3U, 2U), TensorShape(7U, 3U, 2U), TensorShape(7U, 3U, 2U), TensorShape(7U, 3U, 2U), })), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NCHW, DataLayout::NCHW, DataLayout::UNKNOWN, })), framework::dataset::make(&quot;Expected&quot;, { false, true, false, false})), input_info, output_info, original_input_shape, data_layout, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a173d919e5152583a4b2b0ea82f937d47',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::NIGHTLY, combine(combine(combine(datasets::SmallShapes(), framework::dataset::make(&quot;DataType&quot;, { DataType::U8, DataType::S16 })), datasets::BorderModes()), framework::dataset::make(&quot;filter_size&quot;, { 3 })), shape, output_data_type, border_mode, filter_size)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a648a276a30f541e70bdbc8406340c71a',1,'arm_compute::test::validation::DATA_TEST_CASE(ValidateConvolutionMethod, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(17U, 31U, 2U), 1, DataType::F32), TensorInfo(TensorShape(17U, 31U, 2U), 1, DataType::F32), TensorInfo(TensorShape(23U, 27U, 5U, 4U), 1, DataType::F32), TensorInfo(TensorShape(23U, 27U, 31U, 4U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 1U), 1, DataType::F32), TensorInfo(TensorShape(33U, 27U, 7U, 4U), 1, DataType::F32), TensorInfo(TensorShape(17U, 31U, 32U), 1, DataType::F32), TensorInfo(TensorShape(17U, 31U, 2U), 1, DataType::F32), TensorInfo(TensorShape(17U, 31U, 2U), 1, DataType::QASYMM8_SIGNED), }), framework::dataset::make(&quot;WeightsInfo&quot;, { TensorInfo(TensorShape(5U, 5U, 2U, 19U), 1, DataType::F32), TensorInfo(TensorShape(5U, 5U, 2U, 19U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 5U, 21U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 31U, 21U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 5U, 21U), 1, DataType::F32), TensorInfo(TensorShape(5U, 5U, 7U, 16U), 1, DataType::F16), TensorInfo(TensorShape(5U, 5U, 32U, 19U), 1, DataType::F32), TensorInfo(TensorShape(5U, 5U, 2U, 19U), 1, DataType::F32), TensorInfo(TensorShape(5U, 5U, 2U, 19U), 1, DataType::QASYMM8_SIGNED), })), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(15U, 15U, 19U), 1, DataType::F32), TensorInfo(TensorShape(15U, 15U, 19U), 1, DataType::F32), TensorInfo(TensorShape(21U, 25U, 21U, 4U), 1, DataType::F32), TensorInfo(TensorShape(21U, 25U, 21U, 4U), 1, DataType::F32), TensorInfo(TensorShape(11U, 25U, 21U), 1, DataType::F32), TensorInfo(TensorShape(11U, 12U, 16U, 4U), 1, DataType::F32), TensorInfo(TensorShape(17U, 31U, 19U), 1, DataType::F32), TensorInfo(TensorShape(17U, 31U, 19U), 1, DataType::F32), TensorInfo(TensorShape(17U, 31U, 19U), 1, DataType::QASYMM8_SIGNED), })), framework::dataset::make(&quot;ConvInfo&quot;, { PadStrideInfo(1, 2, 1, 1), PadStrideInfo(1, 2, 1, 1), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(2, 1, 0, 0), PadStrideInfo(3, 2, 1, 0), PadStrideInfo(1, 1, 2, 2), PadStrideInfo(1, 1, 2, 2), PadStrideInfo(1, 1, 2, 2), })), framework::dataset::make(&quot;GpuTarget&quot;, { GPUTarget::BIFROST, GPUTarget::MIDGARD, GPUTarget::G71, GPUTarget::G71, GPUTarget::MIDGARD, GPUTarget::BIFROST, GPUTarget::BIFROST, GPUTarget::BIFROST, GPUTarget::BIFROST, })), framework::dataset::make(&quot;Dilation&quot;, { Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(2U, 1U), Size2D(2U, 1U), })), framework::dataset::make(&quot;EnableFastMath&quot;, { false, false, false, false, false, false, true, true, true })), framework::dataset::make(&quot;Expected&quot;,{ ConvolutionMethod::GEMM, ConvolutionMethod::GEMM, ConvolutionMethod::GEMM, ConvolutionMethod::WINOGRAD, ConvolutionMethod::GEMM, ConvolutionMethod::GEMM, ConvolutionMethod::WINOGRAD, ConvolutionMethod::GEMM, ConvolutionMethod::GEMM, })), input_info, weights_info, output_info, conv_info, gpu_target, dilation, enable_fast_math, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#abb065a41d5c0bce8f2e6434d622d1b0d',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(datasets::SmallGroupedConvolutionLayerDataset(), GroupedCNNDataTypes), ActivationFunctionsDataset), input_shape, weights_shape, bias_shape, output_shape, info, dilation, data_type, act_info)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#aee35477d880f96a3452748151cef29ad',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(14U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 32U, 2U), 1, DataType::U8), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S16), TensorInfo(TensorShape(32U, 11U, 2U), 1, DataType::U8), TensorInfo(TensorShape(14U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 32U, 2U), 1, DataType::U8), })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, true })), input_info, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a04e62cc8a8ee2c1853ae213dc465c9be',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(15U, 30U, 40U, 10U), 1, DataType::S32), TensorInfo(TensorShape(15U, 30U, 40U, 10U), 1, DataType::U8), TensorInfo(TensorShape(15U, 30U, 40U, 10U), 1, DataType::S32), TensorInfo(TensorShape(15U, 30U, 40U, 10U), 1, DataType::S32), TensorInfo(TensorShape(15U, 30U, 40U, 10U), 1, DataType::S32), TensorInfo(TensorShape(15U, 30U, 40U, 10U), 1, DataType::S32), TensorInfo(TensorShape(15U, 30U, 40U, 10U), 1, DataType::S32), }), framework::dataset::make(&quot;BoxesInfo&quot;,{ TensorInfo(TensorShape(4, 20), 1, DataType::F32), TensorInfo(TensorShape(4, 20), 1, DataType::F32), TensorInfo(TensorShape(4, 20), 1, DataType::F32), TensorInfo(TensorShape(4, 20), 1, DataType::F32), TensorInfo(TensorShape(4, 20), 1, DataType::F32), TensorInfo(TensorShape(4, 20), 1, DataType::F32), TensorInfo(TensorShape(3, 20), 1, DataType::F32), })), framework::dataset::make(&quot;BoxIndInfo&quot;,{ TensorInfo(TensorShape(20), 1, DataType::S32), TensorInfo(TensorShape(20), 1, DataType::S32), TensorInfo(TensorShape(10), 1, DataType::S32), TensorInfo(TensorShape(20), 1, DataType::S32), TensorInfo(TensorShape(20), 1, DataType::S32), TensorInfo(TensorShape(20), 1, DataType::S32), TensorInfo(TensorShape(20), 1, DataType::S32), })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(15U, 5, 5, 20U), 1, DataType::F32), TensorInfo(TensorShape(15U, 5, 5, 20U), 1, DataType::F32), TensorInfo(TensorShape(15U, 5, 5, 20U), 1, DataType::F32), TensorInfo(TensorShape(15U, 5, 5, 10U), 1, DataType::F32), TensorInfo(TensorShape(15U, 5, 5, 20U), 1, DataType::S32), TensorInfo(TensorShape(5U, 5, 5, 20U), 1, DataType::F32), TensorInfo(TensorShape(15U, 5, 5, 20U), 1, DataType::F32), })), framework::dataset::make(&quot;Expected&quot;, { true, false, false, false, false, false, false})), input, boxes, box_ind, output, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a09dfd649bde45b9abda8b839a0c84e1c',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F16), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(13U, 11U, 4U, 3U), 1, DataType::F32), TensorInfo(TensorShape(32U, 16U, 2U), 1, DataType::F32), }), framework::dataset::make(&quot;WeightsInfo&quot;, { TensorInfo(TensorShape(3U, 3U, 2U, 2U), 1, DataType::F16), TensorInfo(TensorShape(3U, 3U, 2U, 4U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 2U), 1, DataType::F16), TensorInfo(TensorShape(3U, 2U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 4U), 1, DataType::F32), TensorInfo(TensorShape(1U, 1U, 2U, 4U), 1, DataType::F32), })), framework::dataset::make(&quot;BiasInfo&quot;, { TensorInfo(TensorShape(1U), 1, DataType::F16), TensorInfo(TensorShape(1U), 1, DataType::F32), TensorInfo(TensorShape(1U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U), 1, DataType::F32), TensorInfo(TensorShape(1U), 1, DataType::F32), TensorInfo(TensorShape(4U), 1, DataType::F32), })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F16), TensorInfo(TensorShape(25U, 10U, 2U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(13U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(11U, 9U, 1U, 3U), 1, DataType::F32), TensorInfo(TensorShape(32U, 16U, 4U), 1, DataType::F32), })), framework::dataset::make(&quot;PadStrideInfo&quot;, { PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 1, 1), PadStrideInfo(1, 1, 0, 0), })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, false, true })), input_info, weights_info, bias_info, output_info, pad_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a378b53971fc5c47dc3205c5cbe769a24',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo1&quot;, { TensorInfo(TensorShape(23U, 27U, 5U), 1, DataType::F32), TensorInfo(TensorShape(24U, 27U, 4U), 1, DataType::F32), TensorInfo(TensorShape(23U, 27U, 3U), 1, DataType::F32), TensorInfo(TensorShape(16U, 27U, 6U), 1, DataType::F32) }), framework::dataset::make(&quot;InputInfo2&quot;, { TensorInfo(TensorShape(23U, 27U, 4U), 1, DataType::F32), TensorInfo(TensorShape(23U, 27U, 5U), 1, DataType::F32), TensorInfo(TensorShape(23U, 27U, 4U), 1, DataType::F32), TensorInfo(TensorShape(16U, 27U, 6U), 1, DataType::F32) })), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(23U, 27U, 9U), 1, DataType::F16), TensorInfo(TensorShape(25U, 12U, 9U), 1, DataType::F32), TensorInfo(TensorShape(23U, 27U, 8U), 1, DataType::F32), TensorInfo(TensorShape(16U, 27U, 12U), 1, DataType::F32) })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, true })), input_info1, input_info2, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a308fdbbdd8acf151212546da812f9241',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 32U, 2U), 1, DataType::U8), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S16), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F16), TensorInfo(TensorShape(32U, 32U, 2U), 1, DataType::U16), })), framework::dataset::make(&quot;Policy&quot;,{ ConvertPolicy::WRAP, ConvertPolicy::WRAP, ConvertPolicy::WRAP, ConvertPolicy::WRAP, ConvertPolicy::WRAP, ConvertPolicy::WRAP, })), framework::dataset::make(&quot;Shift&quot;,{ 1, 1, 8, 1, 1, 1, })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, false, true})), input_info, output_info, policy, shift, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a9716de1edbd47e39aea19510d8667dc7',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(datasets::SmallShapes(), framework::dataset::make(&quot;ConvertPolicy&quot;, { ConvertPolicy::SATURATE, ConvertPolicy::WRAP })), DepthConvertLayerShiftDatasetNightly), shape, policy, shift)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a3e4970f770f23aaa759017adf107da3e',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(16U, 8U, 4U, 4U), 1, DataType::F32), TensorInfo(TensorShape(16U, 8U, 4U, 4U), 1, DataType::F32), TensorInfo(TensorShape(16U, 8U, 2U, 4U), 1, DataType::F32), TensorInfo(TensorShape(16U, 8U, 2U, 4U), 1, DataType::F32), TensorInfo(TensorShape(32U, 16U, 2U, 4U, 4U), 1, DataType::F32), }), framework::dataset::make(&quot;BlockShape&quot;, { 2, 1, 2, 2, 2 })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(32U, 16U, 1U, 4U), 1, DataType::F32), TensorInfo(TensorShape(64U, 16U, 1U, 4U), 1, DataType::F32), TensorInfo(TensorShape(32U, 16U, 2U, 1U), 1, DataType::F16), TensorInfo(TensorShape(32U, 16U, 2U, 1U), 1, DataType::F32), TensorInfo(TensorShape(32U, 8U, 2U, 1U), 1, DataType::F32), })), framework::dataset::make(&quot;Expected&quot;, { true, false, false, false, false})), input_info, block_shape, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#aed5f7a9b1bde3cc3a789cd674974e254',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate3x3, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(32U, 18U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 18U, 3U), 1, DataType::F32), TensorInfo(TensorShape(32U, 18U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 18U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(32U, 18U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 18U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 18U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 18U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 18U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 18U, 8U), 1, DataType::F32), TensorInfo(TensorShape(32U, 18U, 8U), 1, DataType::F32), TensorInfo(TensorShape(32U, 18U, 8U), 1, DataType::F32), TensorInfo(TensorShape(50U, 32U, 8U), 1, DataType::QASYMM8), }), framework::dataset::make(&quot;WeightsInfo&quot;, { TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F16), TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(5U, 5U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 16U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 16U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 16U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 24U), 1, DataType::QASYMM8), })), framework::dataset::make(&quot;BiasesInfo&quot;, { TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::S32), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(4U), 1, DataType::F32), TensorInfo(TensorShape(2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(16U), 1, DataType::F32), TensorInfo(TensorShape(16U), 1, DataType::F32), TensorInfo(TensorShape(16U), 1, DataType::F32), TensorInfo(TensorShape(24U), 1, DataType::S32), })), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(30U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(30U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(30U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(30U, 16U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(30U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(30U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(30U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(30U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 18U, 2U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(30U, 16U, 16U), 1, DataType::F32), TensorInfo(TensorShape(30U, 16U, 16U), 1, DataType::F32), TensorInfo(TensorShape(30U, 16U, 16U), 1, DataType::F32), TensorInfo(TensorShape(48U, 30U, 24U), 1, DataType::QASYMM8), })), framework::dataset::make(&quot;ConvInfo&quot;, { PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(4, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), })), framework::dataset::make(&quot;DepthMultiplier&quot;, { 1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 2, 2, 2, 3, })), framework::dataset::make(&quot;ActivationInfo&quot;, { ActivationLayerInfo(), ActivationLayerInfo(), ActivationLayerInfo(), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::LINEAR), ActivationLayerInfo(), ActivationLayerInfo(), ActivationLayerInfo(), ActivationLayerInfo(), ActivationLayerInfo(), ActivationLayerInfo(), ActivationLayerInfo(), ActivationLayerInfo(), ActivationLayerInfo(), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), })), framework::dataset::make(&quot;Dilation&quot;, { Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(20U, 1U), Size2D(0U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, false, false, false, false, false, false, false, false, true, true })), input_info, weights_info, biases_info, output_info, conv_info, depth_multiplier, act_info, dilation, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a1746a40504c1600cad5df8b24c2c928e',1,'arm_compute::test::validation::DATA_TEST_CASE(ValidateGeneric, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 3U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 8U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 8U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 8U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 8U), 1, DataType::QASYMM8), }), framework::dataset::make(&quot;WeightsInfo&quot;, { TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F16), TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 16U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 16U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 16U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 24U), 1, DataType::QASYMM8), })), framework::dataset::make(&quot;BiasesInfo&quot;, { TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(4U), 1, DataType::F32), TensorInfo(TensorShape(2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(16U), 1, DataType::F32), TensorInfo(TensorShape(16U), 1, DataType::F32), TensorInfo(TensorShape(16U), 1, DataType::F32), TensorInfo(TensorShape(24U), 1, DataType::S32), })), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 16U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 16U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 16U), 1, DataType::F32), TensorInfo(TensorShape(32U, 11U, 24U), 1, DataType::QASYMM8), })), framework::dataset::make(&quot;ConvInfo&quot;, { PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 1, 0), })), framework::dataset::make(&quot;DepthMultiplier&quot;, { 1, 1, 3, 1, 1, 1, 2, 2, 2, 3, })), framework::dataset::make(&quot;Dilation&quot;, { Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(20U, 1U), Size2D(0U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, false, false, false, false, true, true })), input_info, weights_info, biases_info, output_info, conv_info, depth_multiplier, dilation, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a0750b0083a02540a4f6f3b7215795db9',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(16U, 16U, 16U, 5U), 1, DataType::F32), TensorInfo(TensorShape(16U, 16U, 16U, 5U), 1, DataType::QASYMM8), TensorInfo(TensorShape(16U, 16U, 2U, 5U), 1, DataType::QASYMM8), TensorInfo(TensorShape(17U, 16U, 16U, 5U), 1, DataType::QASYMM8), TensorInfo(TensorShape(16U, 16U, 16U, 5U), 1, DataType::QASYMM8), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(16U, 16U, 16U, 5U), 1, DataType::F32), TensorInfo(TensorShape(16U, 16U, 16U, 5U), 1, DataType::U8), TensorInfo(TensorShape(16U, 16U, 16U, 5U), 1, DataType::F32), TensorInfo(TensorShape(17U, 16U, 16U, 5U), 1, DataType::F32), TensorInfo(TensorShape(16U, 16U, 16U, 5U), 1, DataType::F32), })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, true, true})), input_info, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a259fed1b314963b2646ab1d9fda3d0d5',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(datasets::SmallShapes(), framework::dataset::make(&quot;DataType&quot;, { DataType::F16, DataType::F32 })), shape, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a7aadc4b7727668e738a6e31fe7a12f3d',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(datasets::Small2DShapes(), datasets::BorderModes()), framework::dataset::make(&quot;Format&quot;, Format::U8)), shape, border_mode, format)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ad4fdf7f045788a948ee31e97a076d639',1,'arm_compute::test::validation::DATA_TEST_CASE(ValidateConvolutionMethod, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(17U, 31U, 2U), 1, DataType::F32), TensorInfo(TensorShape(17U, 31U, 2U), 1, DataType::F32), TensorInfo(TensorShape(23U, 27U, 23U, 4U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 1U), 1, DataType::F32), TensorInfo(TensorShape(33U, 27U, 7U, 4U), 1, DataType::F32) }), framework::dataset::make(&quot;WeightsInfo&quot;, { TensorInfo(TensorShape(5U, 5U, 2U, 19U), 1, DataType::F32), TensorInfo(TensorShape(5U, 5U, 2U, 19U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 23U, 21U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 5U, 21U), 1, DataType::F32), TensorInfo(TensorShape(5U, 5U, 7U, 16U), 1, DataType::F16) })), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(15U, 15U, 19U), 1, DataType::F32), TensorInfo(TensorShape(15U, 15U, 19U), 1, DataType::F32), TensorInfo(TensorShape(21U, 25U, 21U, 4U), 1, DataType::F32), TensorInfo(TensorShape(11U, 25U, 21U), 1, DataType::F32), TensorInfo(TensorShape(11U, 12U, 16U, 4U), 1, DataType::F32) })), framework::dataset::make(&quot;ConvInfo&quot;, { PadStrideInfo(1, 2, 1, 1), PadStrideInfo(1, 2, 1, 1), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(2, 1, 0, 0), PadStrideInfo(3, 2, 1, 0) })), framework::dataset::make(&quot;GpuTarget&quot;, { GPUTarget::BIFROST, GPUTarget::MIDGARD, GPUTarget::G71, GPUTarget::MIDGARD, GPUTarget::BIFROST })), framework::dataset::make(&quot;Dilation&quot;, { Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(2U, 2U), Size2D(3U, 3U) })), framework::dataset::make(&quot;Expected&quot;, { ConvolutionMethod::GEMM, ConvolutionMethod::GEMM, ConvolutionMethod::WINOGRAD, ConvolutionMethod::GEMM, ConvolutionMethod::GEMM })), input_info, weights_info, output_info, conv_info, gpu_target, dilation, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a484fa4160f71724020a18b1c8210fd11',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(datasets::SmallDilatedConvolutionLayerDataset(), CNNDataTypes), input_shape, weights_shape, bias_shape, output_shape, info, dilation, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a2984963251e0e13f3b22490d7d903c85',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 16U, 2U), 1, DataType::F32), }), framework::dataset::make(&quot;WeightsInfo&quot;,{ TensorInfo(TensorShape(3U, 3U, 2U, 4U), 1, DataType::F16), TensorInfo(TensorShape(3U, 3U, 3U, 4U), 1, DataType::F32), TensorInfo(TensorShape(11U, 11U, 2U, 4U), 1, DataType::F32), TensorInfo(TensorShape(5U, 3U, 2U, 4U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 4U, 3U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 4U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 4U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 4U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 4U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 4U), 1, DataType::F32), TensorInfo(TensorShape(1U, 1U, 2U, 4U), 1, DataType::F32), })), framework::dataset::make(&quot;BiasesInfo&quot;,{ TensorInfo(TensorShape(4U), 1, DataType::F32), TensorInfo(TensorShape(4U), 1, DataType::F32), TensorInfo(TensorShape(4U), 1, DataType::F32), TensorInfo(TensorShape(4U), 1, DataType::F32), TensorInfo(TensorShape(4U), 1, DataType::F32), TensorInfo(TensorShape(4U), 1, DataType::F32), TensorInfo(TensorShape(3U), 1, DataType::F32), TensorInfo(TensorShape(4U, 2U), 1, DataType::F32), TensorInfo(TensorShape(4U), 1, DataType::F32), TensorInfo(TensorShape(4U), 1, DataType::F32), TensorInfo(TensorShape(4U), 1, DataType::F32), })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(25U, 11U, 4U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 4U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 4U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 4U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 4U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 4U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 4U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 4U), 1, DataType::F32), TensorInfo(TensorShape(26U, 11U, 4U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 4U), 1, DataType::F32), TensorInfo(TensorShape(32U, 16U, 4U), 1, DataType::F32), })), framework::dataset::make(&quot;ConvInfo&quot;, { PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(3, 3, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), })), framework::dataset::make(&quot;ActivationInfo&quot;, { ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU) })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, false, false, false, false, false, false, true })), input_info, weights_info, biases_info, output_info, conv_info, act_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ab0661dab56621eb39f7ed24eef46dd71',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(datasets::SmallShapes(), framework::dataset::make(&quot;DataType&quot;, { DataType::U8, DataType::S16 })), shape, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a44a32dc2e6237db86ca823ac2440b5e7',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;Input1Info&quot;, { TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F16), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), }), framework::dataset::make(&quot;Input2Info&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F16), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S16), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F16), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;Expected&quot;, { true, true, false, false, false})), input1_info, input2_info, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a79eb81d07ea2905434fe6223387f46df',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(datasets::Small2DShapes(), framework::dataset::make(&quot;DataType&quot;, DataType::U8)), shape, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a76d69fa1a3a22e9db4eef7b062fc53aa',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(combine(concat(datasets::Small2DShapes(), datasets::Large2DShapes()), framework::dataset::make(&quot;Format&quot;, Format::U8)), framework::dataset::make(&quot;SuppressNonMax&quot;, { false, true })), framework::dataset::make(&quot;BorderMode&quot;, BorderMode::UNDEFINED)), shape, format, suppress_nonmax, border_mode)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a3ffb413e9772313766b4b43391198db1',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(shapes_1d, data_types), shape, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a125a57a33ba8fbeae87a14ce35b20112',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(32U, 13U, 2U), 2, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 2, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 3, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 2, DataType::F32), TensorInfo(TensorShape(11U, 13U, 2U), 2, DataType::F32), TensorInfo(TensorShape(25U, 13U, 2U), 2, DataType::F32), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 2, DataType::F16), TensorInfo(TensorShape(16U, 13U, 2U), 2, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 2, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 2, DataType::F32), TensorInfo(TensorShape(11U, 13U, 2U), 2, DataType::F32), TensorInfo(TensorShape(25U, 13U, 2U), 2, DataType::F32), })), framework::dataset::make(&quot;Axis&quot;, { 0, 0, 0, 2, 0, 0 })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, false, true })), input_info, output_info, axis, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a3f2fb01edb34ba6ddb05de976663c471',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(32U, 25U, 2U), 2, DataType::F32), TensorInfo(TensorShape(32U, 25U, 2U), 2, DataType::F32), TensorInfo(TensorShape(32U, 25U, 2U), 3, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 2, DataType::F32), TensorInfo(TensorShape(32U, 25U, 2U), 2, DataType::F32), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(32U, 25U, 2U), 2, DataType::F16), TensorInfo(TensorShape(16U, 25U, 2U), 2, DataType::F32), TensorInfo(TensorShape(32U, 25U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 2, DataType::F32), TensorInfo(TensorShape(32U, 25U, 2U), 2, DataType::F32), })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, true })), input_info, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a6977e5dada34102dfca07ad1bd3acc63',1,'arm_compute::test::validation::DATA_TEST_CASE(FillBorder, framework::DatasetMode::ALL, combine(combine(combine(combine(datasets::SmallShapes(), datasets::BorderModes()), BorderSizesDataset), PaddingSizesDataset), framework::dataset::make(&quot;DataType&quot;, DataType::U8)), shape, border_mode, size, padding, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a3be02a001fd0ea7533670a5bc4bbfbff',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F16), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, true })), input_info, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a44b43a2397a2845c12d9d56b727ef233',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(datasets::SmallFullyConnectedLayerDataset(), FullyConnectedParameters), CNNDataTypes), src_shape, weights_shape, bias_shape, dst_shape, transpose_weights, reshape_weights, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#aa3affe19462bcddbd9d6ca29c1e47594',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(9U, 5U, 7U, 3U), 1, DataType::F32), TensorInfo(TensorShape(8U, 4U, 6U, 4U), 1, DataType::F32), TensorInfo(TensorShape(8U, 4U, 6U, 4U), 1, DataType::F32), TensorInfo(TensorShape(9U, 5U, 7U, 3U), 1, DataType::F32), TensorInfo(TensorShape(9U, 5U, 7U, 3U), 1, DataType::F32), }), framework::dataset::make(&quot;WeightsInfo&quot;,{ TensorInfo(TensorShape(315U, 271U), 1, DataType::F16), TensorInfo(TensorShape(192U, 192U), 1, DataType::F32), TensorInfo(TensorShape(192U, 192U), 1, DataType::F32), TensorInfo(TensorShape(217U, 231U), 1, DataType::F32), TensorInfo(TensorShape(217U, 315U), 1, DataType::F32), })), framework::dataset::make(&quot;BiasInfo&quot;,{ TensorInfo(TensorShape(271U), 1, DataType::F32), TensorInfo(TensorShape(192U), 1, DataType::F32), TensorInfo(TensorShape(192U), 1, DataType::F32), TensorInfo(TensorShape(271U), 1, DataType::F32), TensorInfo(TensorShape(271U), 1, DataType::F32), })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(271U, 3U), 1, DataType::F32), TensorInfo(TensorShape(192U, 4U), 1, DataType::F32), TensorInfo(TensorShape(192U, 4U), 1, DataType::F32), TensorInfo(TensorShape(271U, 3U), 1, DataType::F32), TensorInfo(TensorShape(271U, 3U), 1, DataType::F32), })), framework::dataset::make(&quot;TransposeWeights&quot;,{ true, true, false, true, true })), framework::dataset::make(&quot;ReshapedWeights&quot;,{ false, false, false, false, false})), framework::dataset::make(&quot;Expected&quot;, { false, true, true, false, false })), input_info, weights_info, bias_info, output_info, transpose_weights, reshaped_weights, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a79ab40d66042668672184704ffc8b86e',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 27U), 1, DataType::F16), TensorInfo(TensorShape(27U, 27U), 1, DataType::F32), TensorInfo(TensorShape(27U, 27U), 1, DataType::F32), TensorInfo(TensorShape(27U, 27U), 1, DataType::F32), TensorInfo(TensorShape(27U, 27U), 1, DataType::F32), TensorInfo(TensorShape(5U, 5U, 5U, 5U, 5U), 1, DataType::F32), TensorInfo(TensorShape(27U, 27U), 1, DataType::F16), TensorInfo(TensorShape(27U, 27U), 1, DataType::F32), TensorInfo(TensorShape(27U, 27U), 1, DataType::F16), }), framework::dataset::make(&quot;IndicesInfo&quot;, { TensorInfo(TensorShape(10U), 1, DataType::U32), TensorInfo(TensorShape(10U), 1, DataType::U32), TensorInfo(TensorShape(10U), 1, DataType::U32), TensorInfo(TensorShape(10U), 1, DataType::U8), TensorInfo(TensorShape(10U, 10U), 1, DataType::U32), TensorInfo(TensorShape(10U), 1, DataType::U32), TensorInfo(TensorShape(10U), 1, DataType::U32), TensorInfo(TensorShape(10U), 1, DataType::U32), TensorInfo(TensorShape(10U), 1, DataType::U32), })), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(10U, 27U), 1, DataType::F16), TensorInfo(TensorShape(27U, 10U), 1, DataType::F32), TensorInfo(TensorShape(10U, 27U), 1, DataType::F32), TensorInfo(TensorShape(10U, 27U), 1, DataType::F32), TensorInfo(TensorShape(27U, 10U), 1, DataType::F32), TensorInfo(TensorShape(10U, 5U, 5U, 5U, 5U), 1, DataType::F32), TensorInfo(TensorShape(27U, 10U), 1, DataType::F32), TensorInfo(TensorShape(27U, 27U), 1, DataType::F32), TensorInfo(TensorShape(27U, 27U), 1, DataType::F16), })), framework::dataset::make(&quot;Axis&quot;, { 0, 1, -2, 0, 1, 0, 1, 2, -3, })), framework::dataset::make(&quot;Expected&quot;, { true, true, true, false, false, false, false, false, false })), input_info, indices_info, output_info, axis, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a9ccc6ea082b6287dae84dde7ef79b14c',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(arm_compute::test::datasets::SmallGatherDataset(), framework::dataset::make(&quot;DataType&quot;, { DataType::F16, DataType::F32 })), input_shape, indices_shape, axis, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a370c6df0823b292ef89726547ce83cc0',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, large_gaussian_pyramid_levels, shape, border_mode, num_levels)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a4b2e02f12273c1b7a724328e3912a9cc',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, datasets::SmallGEMMLowpDataset(), shape_a, shape_b, shape_c, a_offset, b_offset)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ad0d31acbe1344cd7c3a52388a20dd06e',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(datasets::SmallShapes(), quantize_down_int32_to_uint8_scale_cases), shape, result_offset, result_mult_int, result_shift, min, max, add_bias)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#add0fceafa27f807388430edba8dc6ca3',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(datasets::SmallShapes(), quantize_down_int32_to_uint8_scale_by_fixedpoint_cases), shape, result_fixedpoint_multiplier, result_shift, result_offset_after_shift, min, max, add_bias)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a0ae7e97067397b6f6ba4bca6cfada98a',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(datasets::SmallShapes(), quantize_down_int32_to_int8_scale_by_fixedpoint_cases), shape, result_fixedpoint_multiplier, result_shift, result_offset_after_shift, min, max, add_bias)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a90ac4c27e9f0e7cf32c410de2437e69a',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputAInfo&quot;, { TensorInfo(TensorShape(21U, 13U), 1, DataType::S32), TensorInfo(TensorShape(21U, 13U), 1, DataType::S32), TensorInfo(TensorShape(21U, 13U), 1, DataType::S32), }), framework::dataset::make(&quot;InputBInfo&quot;,{ TensorInfo(TensorShape(21U), 1, DataType::S32), TensorInfo(TensorShape(21U), 1, DataType::S32), TensorInfo(TensorShape(21U), 1, DataType::S32), })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(21U, 13U), 1, DataType::QSYMM16), TensorInfo(TensorShape(21U, 13U), 1, DataType::QSYMM16), TensorInfo(TensorShape(20U, 13U), 1, DataType::S32), })), framework::dataset::make(&quot;Min&quot;,{ -205, -60000, -180, })), framework::dataset::make(&quot;Max&quot;,{ 205, 60000, 180, })), framework::dataset::make(&quot;Expected&quot;, { true, false, false })), a_info, b_info, output_info, min, max, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a2cb5fce5ffa69c47e521b86411496d3b',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(combine(combine(combine(combine(combine(combine(m_values, n_values), k_values), framework::dataset::make(&quot;batch_size&quot;, 1)), m0_values_precommit_1), n0_values_precommit), k0_values_precommit), h0_values_precommit), i_values_rhs), m_value, n_value, k_value, b_value, m0_value, n0_value, k0_value, h0_value, i_value_rhs)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a56bd12c9e519d90c9de48040fd31ee06',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(combine(combine(combine(combine(combine(combine(m_values_precommit, n_values_precommit), k_values_precommit), framework::dataset::make(&quot;batch_size&quot;, 1)), broadcast_bias_values), framework::dataset::make(&quot;fp16_mixed_precision&quot;, false)), act_values), data_type_values), gpu_arch_values), m_value, n_value, k_value, b_value, broadcast_bias, fp16_mixed_precision_value, act_value, data_type_value, gpu_arch_value)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ad2bf636a19de5e89862eb52c33d13038',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(combine(combine(combine(combine(combine(combine(combine(combine(m_values_precommit, n_values_precommit), k_values_precommit), framework::dataset::make(&quot;batch_size&quot;, 1)), v0_values_precommit), h0_values_precommit), broadcast_bias_values), framework::dataset::make(&quot;fp16_mixed_precision&quot;, false)), act_values), data_type_values), gpu_arch_values), m_value, n_value, k_value, b_value, v0_value, h0_value, broadcast_bias, fp16_mixed_precision_value, act_value, data_type_value, gpu_arch_value)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a254547d84a14587cf08a01c66f9bdf85',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(combine(combine(combine(combine(combine(combine(m_values, n_values), k_values), framework::dataset::make(&quot;batch_size&quot;, 1)), m0_values_precommit), n0_values_precommit), k0_values_precommit), broadcast_bias_values), act_values), m_value, n_value, k_value, b_value, m0_value, n0_value, k0_value, broadcast_bias, act_value)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#af167b45be9da3b482a173372e0601609',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(combine(combine(combine(combine(combine(combine(combine(combine(combine(m_values, n_values), k_values), framework::dataset::make(&quot;batch_size&quot;, 1)), m0_values_precommit), n0_values_precommit), k0_values_precommit), h0_values_precommit), i_values_rhs), t_values_rhs), broadcast_bias_values), act_values), m_value, n_value, k_value, b_value, m0_value, n0_value, k0_value, h0_value, i_value_rhs, t_value_rhs, broadcast_bias, act_value)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#adb8ee580efcdf567d6a4dae88c475000',1,'arm_compute::test::validation::DATA_TEST_CASE(ConfigurationSmall, framework::DatasetMode::ALL, combine(combine(combine(combine(combine(combine(combine(datasets::SmallGEMMReshape2DShapes(), b_values), data_types), m0_values_precommit), k0_values_precommit), v0_values), i_values), t_values), shape_in, b_value, data_type, m0_value, k0_value, v0_value, i_value, t_value)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#aaa7f83bdb36e6941d35892103ce3efe9',1,'arm_compute::test::validation::DATA_TEST_CASE(ConfigurationLarge, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(combine(combine(datasets::LargeGEMMReshape2DShapes(), b_values), data_types), m0_values_nightly), k0_values_nightly), v0_values), i_values), t_values), shape_in, b_value, data_type, m0_value, k0_value, v0_value, i_value, t_value)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ac4f254c02834487267671c337e62f0e0',1,'arm_compute::test::validation::DATA_TEST_CASE(ConfigurationLarge, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(combine(combine(datasets::LargeGEMMReshape3DShapes(), b_values), data_types), m0_values_nightly), k0_values_nightly), v0_values), i_values), t_values), shape_in, b_value, data_type, m0_value, k0_value, v0_value, i_value, t_value)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#adcadccb845be881a26d1255fd80c3e08',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration0, framework::DatasetMode::ALL, combine(combine(combine(combine(combine(combine(datasets::SmallGEMMReshape2DShapes(), b_values), data_types), n0_values_nightly), k0_t_values_nightly), h0_values), i_values), shape_in, b_value, data_type, n0_value, k0_value, h0_value, i_value)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a7b5d13a6ee6b773fc732ec5579bf6132',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration1, framework::DatasetMode::ALL, combine(combine(combine(combine(combine(combine(datasets::SmallGEMMReshape2DShapes(), b_values), data_types), n0_values_nightly), k0_nt_values_nightly), h0_values), i_values), shape_in, b_value, data_type, n0_value, k0_value, h0_value, i_value)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a3bb599d35c61a90a1923890e1ec71bdb',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(zip(zip(framework::dataset::make(&quot;scores&quot;, { TensorInfo(TensorShape(100U, 100U, 9U), 1, DataType::F32), TensorInfo(TensorShape(100U, 100U, 9U), 1, DataType::F16), TensorInfo(TensorShape(100U, 100U, 9U), 1, DataType::F16), TensorInfo(TensorShape(100U, 100U, 9U), 1, DataType::F16), TensorInfo(TensorShape(100U, 100U, 9U), 1, DataType::F16), TensorInfo(TensorShape(100U, 100U, 9U), 1, DataType::F16)}), framework::dataset::make(&quot;deltas&quot;,{ TensorInfo(TensorShape(100U, 100U, 36U), 1, DataType::F32), TensorInfo(TensorShape(100U, 100U, 36U), 1, DataType::F32), TensorInfo(TensorShape(100U, 100U, 38U), 1, DataType::F32), TensorInfo(TensorShape(100U, 100U, 38U), 1, DataType::F32), TensorInfo(TensorShape(100U, 100U, 38U), 1, DataType::F32), TensorInfo(TensorShape(100U, 100U, 38U), 1, DataType::F32)})), framework::dataset::make(&quot;anchors&quot;, { TensorInfo(TensorShape(4U, 9U), 1, DataType::F32), TensorInfo(TensorShape(4U, 9U), 1, DataType::F32), TensorInfo(TensorShape(4U, 9U), 1, DataType::F32), TensorInfo(TensorShape(5U, 9U), 1, DataType::F32), TensorInfo(TensorShape(4U, 9U), 1, DataType::F32), TensorInfo(TensorShape(4U, 9U), 1, DataType::F32)})), framework::dataset::make(&quot;proposals&quot;, { TensorInfo(TensorShape(5U, 100U *100U *9U), 1, DataType::F32), TensorInfo(TensorShape(5U, 100U *100U *9U), 1, DataType::F32), TensorInfo(TensorShape(5U, 100U *100U *9U), 1, DataType::F32), TensorInfo(TensorShape(5U, 100U *100U *9U), 1, DataType::F32), TensorInfo(TensorShape(5U, 100U *100U *9U), 1, DataType::F32), TensorInfo(TensorShape(5U, 100U *100U *9U), 1, DataType::F32)})), framework::dataset::make(&quot;scores_out&quot;, { TensorInfo(TensorShape(100U *100U *9U), 1, DataType::F32), TensorInfo(TensorShape(100U *100U *9U), 1, DataType::F32), TensorInfo(TensorShape(100U *100U *9U), 1, DataType::F32), TensorInfo(TensorShape(100U *100U *9U), 1, DataType::F32), TensorInfo(TensorShape(100U *100U *9U), 1, DataType::F32), TensorInfo(TensorShape(100U *100U *9U), 1, DataType::F32)})), framework::dataset::make(&quot;num_valid_proposals&quot;, { TensorInfo(TensorShape(1U, 1U), 1, DataType::U32), TensorInfo(TensorShape(1U, 1U), 1, DataType::U32), TensorInfo(TensorShape(1U, 1U), 1, DataType::U32), TensorInfo(TensorShape(1U, 1U), 1, DataType::U32), TensorInfo(TensorShape(1U, 10U), 1, DataType::U32), TensorInfo(TensorShape(1U, 1U), 1, DataType::F16)})), framework::dataset::make(&quot;generate_proposals_info&quot;, { GenerateProposalsInfo(10.f, 10.f, 1.f), GenerateProposalsInfo(10.f, 10.f, 1.f), GenerateProposalsInfo(10.f, 10.f, 1.f), GenerateProposalsInfo(10.f, 10.f, 1.f), GenerateProposalsInfo(10.f, 10.f, 1.f), GenerateProposalsInfo(10.f, 10.f, 1.f)})), framework::dataset::make(&quot;Expected&quot;, { true, false, false, false, false, false })), scores, deltas, anchors, proposals, scores_out, num_valid_proposals, generate_proposals_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a50aded66249956a556f69c7d7cb09a64',1,'arm_compute::test::validation::DATA_TEST_CASE(IntegrationTestCaseAllAnchors, framework::DatasetMode::ALL, framework::dataset::make(&quot;DataType&quot;, { DataType::F32 }), data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#aa806b8b3e966200908042a36f14954f1',1,'arm_compute::test::validation::DATA_TEST_CASE(IntegrationTestCaseGenerateProposals, framework::DatasetMode::ALL, combine(framework::dataset::make(&quot;DataType&quot;, { DataType::F32 }), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), data_type, data_layout)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a4a52a920e879bf84c11e62764a9500c9',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(datasets::Small2DShapes(), data_nightly), framework::dataset::make(&quot;Format&quot;, Format::U8)), shape, gradient_size, block_size, border_mode, format)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ab643382ce12afed7780a6707991da1dd',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(concat(datasets::Small2DShapes(), datasets::Large2DShapes()), framework::dataset::make(&quot;DataType&quot;, DataType::U8)), shape, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a1df3843c8077aad2f1daacc093cbff1b',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(10U, 12U, 2U), 1, DataType::U8), TensorInfo(TensorShape(10U, 12U, 2U), 1, DataType::F32), TensorInfo(TensorShape(10U, 12U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(10U, 12U, 2U, 2U), 1, DataType::QASYMM8), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(3U, 4U, 10U, 2U), 1, DataType::F16), TensorInfo(TensorShape(3U, 4U, 10U, 2U), 1, DataType::F16), TensorInfo(TensorShape(3U, 3U, 10U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(18U, 80U, 2U, 1U), 1, DataType::QASYMM8), })), framework::dataset::make(&quot;HasBias&quot;, { true, true, true, false })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, true })), input_info, output_info, has_bias, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#af40d6e921c6b14bb0316fc56dd515ca9',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(128U, 64U, 32U, 4U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U, 32U, 4U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U, 32U, 4U), 2, DataType::F32), TensorInfo(TensorShape(128U, 64U, 32U, 4U), 1, DataType::S16), TensorInfo(TensorShape(128U, 64U, 32U, 4U), 1, DataType::F32, DataLayout::NCHW), TensorInfo(TensorShape(128U, 64U, 32U, 4U), 1, DataType::F32, DataLayout::NHWC), TensorInfo(TensorShape(128U, 64U, 32U, 4U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U, 32U, 4U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U, 32U, 4U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U, 32U, 4U), 1, DataType::F32) }), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(128U, 64U, 32U, 4U), 1, DataType::F16), TensorInfo(TensorShape(256U, 64U, 32U, 4U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U, 32U, 4U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U, 32U, 4U), 1, DataType::S16), TensorInfo(TensorShape(128U, 64U, 32U, 4U), 1, DataType::F32, DataLayout::NCHW), TensorInfo(TensorShape(128U, 64U, 32U, 4U), 1, DataType::F32, DataLayout::NHWC), TensorInfo(TensorShape(128U, 64U, 32U, 4U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U, 32U, 4U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U, 32U, 4U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U, 32U, 4U), 1, DataType::F32) })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, true, true, true, true, true, true })), input_info, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ae42ced23c3e427fa851c1ce7fcabfb60',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(128U, 64U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U), 2, DataType::F32), TensorInfo(TensorShape(128U, 64U), 1, DataType::S16), TensorInfo(TensorShape(128U, 64U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U), 1, DataType::F32) }), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(128U, 64U), 1, DataType::F16), TensorInfo(TensorShape(256U, 64U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U), 1, DataType::S16), TensorInfo(TensorShape(128U, 64U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U), 1, DataType::F32) })), framework::dataset::make(&quot;Axis&quot;, { 0, 0, 0, 0, static_cast&lt; int &gt;(TensorShape::num_max_dimensions), 3, -2, 0 })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, true, true, true, true })), input_info, output_info, axis, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a5a74612ce9f8b898bc171800b13fb3e2',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(concat(datasets::Medium2DShapes(), datasets::Large2DShapes()), datasets::BorderModes()), large_laplacian_pyramid_levels), shape, border_mode, num_levels)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a74496771d90a70769feaa5739daf9622',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(concat(datasets::Medium2DShapes(), datasets::Large2DShapes()), datasets::BorderModes()), large_laplacian_reconstruct_levels), shape, border_mode, num_levels)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a876889712d97367ca5ed4b922705fc6e',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(23U, 27U, 5U), 1, DataType::F32), TensorInfo(TensorShape(23U, 27U, 5U), 1, DataType::F32), TensorInfo(TensorShape(23U, 27U, 5U), 1, DataType::F32), TensorInfo(TensorShape(23U, 27U, 5U), 1, DataType::F32), TensorInfo(TensorShape(23U, 27U, 5U), 1, DataType::F32), TensorInfo(TensorShape(23U, 27U, 5U), 1, DataType::F32), TensorInfo(TensorShape(23U, 27U, 5U), 1, DataType::F32), TensorInfo(TensorShape(23U, 27U, 5U), 1, DataType::F32), TensorInfo(TensorShape(23U, 27U, 5U), 1, DataType::F32) }), framework::dataset::make(&quot;WeightsInfo&quot;,{ TensorInfo(TensorShape(3U, 3U, 5U, 21U, 275U), 1, DataType::F16), TensorInfo(TensorShape(3U, 3U, 5U, 21U, 275U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 5U, 21U, 275U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 5U, 21U, 274U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 5U, 21U, 275U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 5U, 21U, 275U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 5U, 21U, 275U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 5U, 21U, 275U), 1, DataType::F32), TensorInfo(TensorShape(1U, 3U, 5U, 21U, 575U), 1, DataType::F32) })), framework::dataset::make(&quot;BiasInfo&quot;, { TensorInfo(TensorShape(21U, 275U), 1, DataType::F32), TensorInfo(TensorShape(21U, 275U), 1, DataType::F16), TensorInfo(TensorShape(21U, 275U), 1, DataType::F32), TensorInfo(TensorShape(21U, 275U), 1, DataType::F32), TensorInfo(TensorShape(21U, 274U), 1, DataType::F32), TensorInfo(TensorShape(21U, 275U), 1, DataType::F32), TensorInfo(TensorShape(21U, 275U), 1, DataType::F32), TensorInfo(TensorShape(21U, 275U), 1, DataType::F32), TensorInfo(TensorShape(21U, 575U), 1, DataType::F32) })), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(11U, 25U, 21U), 1, DataType::F32), TensorInfo(TensorShape(11U, 25U, 21U), 1, DataType::F32), TensorInfo(TensorShape(11U, 25U, 21U), 1, DataType::F16), TensorInfo(TensorShape(11U, 25U, 21U), 1, DataType::F32), TensorInfo(TensorShape(11U, 25U, 21U), 1, DataType::F32), TensorInfo(TensorShape(11U, 25U, 22U), 1, DataType::F32), TensorInfo(TensorShape(11U, 25U, 21U), 1, DataType::F32), TensorInfo(TensorShape(11U, 25U, 21U), 1, DataType::F32), TensorInfo(TensorShape(23U, 25U, 21U), 1, DataType::F32) })), framework::dataset::make(&quot;PadStride&quot;, { PadStrideInfo(2, 1, 0, 0), PadStrideInfo(2, 1, 0, 0), PadStrideInfo(2, 1, 0, 0), PadStrideInfo(2, 1, 0, 0), PadStrideInfo(2, 1, 0, 0), PadStrideInfo(2, 1, 0, 0), PadStrideInfo(2, 1, 1, 0), PadStrideInfo(2, 1, 0, 0), PadStrideInfo(1, 1, 0, 0) })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, false, false, false, false, true })), input_info, weights_info, bias_info, output_info, conv_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a13b7abb0d97c0768de8e5e1976cd2805',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(datasets::SmallLocallyConnectedDataset(), framework::dataset::make(&quot;DataType&quot;, DataType::F32)), src_shape, weights_shape, bias_shape, dst_shape, info, dilation, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#aff993409f5489af4dec6bea2971170d0',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(8U, 2U), 1, DataType::U8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(8U, 2U), 1, DataType::F32), TensorInfo(TensorShape(8U, 2U), 1, DataType::F32), TensorInfo(TensorShape(8U, 2U), 1, DataType::F32), TensorInfo(TensorShape(8U, 2U), 1, DataType::F32), TensorInfo(TensorShape(8U, 2U), 1, DataType::F32), TensorInfo(TensorShape(8U, 2U), 1, DataType::F32), }), framework::dataset::make(&quot;InputWeightsInfo&quot;, { TensorInfo(TensorShape(8U, 16U), 1, DataType::F32), TensorInfo(TensorShape(8U, 16U), 1, DataType::F32), TensorInfo(TensorShape(27U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(8U, 16U), 1, DataType::F32), TensorInfo(TensorShape(8U, 16U), 1, DataType::F32), TensorInfo(TensorShape(8U, 16U), 1, DataType::F32), TensorInfo(TensorShape(8U, 16U), 1, DataType::F32), TensorInfo(TensorShape(8U, 16U), 1, DataType::F32), })), framework::dataset::make(&quot;RecurrentWeightsInfo&quot;, { TensorInfo(TensorShape(16U, 16U), 1, DataType::F32), TensorInfo(TensorShape(16U, 16U), 1, DataType::F32), TensorInfo(TensorShape(16U, 16U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(16U, 16U), 1, DataType::F32), TensorInfo(TensorShape(16U, 16U), 1, DataType::F32), TensorInfo(TensorShape(16U, 16U), 1, DataType::F32), TensorInfo(TensorShape(16U, 16U), 1, DataType::F32), })), framework::dataset::make(&quot;CellBiasInfo&quot;, { TensorInfo(TensorShape(16U), 1, DataType::F32), TensorInfo(TensorShape(16U), 1, DataType::F32), TensorInfo(TensorShape(16U), 1, DataType::F32), TensorInfo(TensorShape(16U), 1, DataType::F32), TensorInfo(TensorShape(30U), 1, DataType::F32), TensorInfo(TensorShape(16U), 1, DataType::F32), TensorInfo(TensorShape(16U), 1, DataType::F32), TensorInfo(TensorShape(16U), 1, DataType::F32), })), framework::dataset::make(&quot;ProjectionBiasInfo&quot;, { TensorInfo(TensorShape(16U), 1, DataType::F32), TensorInfo(TensorShape(16U), 1, DataType::F32), TensorInfo(TensorShape(16U), 1, DataType::F32), TensorInfo(TensorShape(16U), 1, DataType::F32), TensorInfo(TensorShape(16U), 1, DataType::F32), TensorInfo(TensorShape(16U), 1, DataType::F32), TensorInfo(TensorShape(16U), 1, DataType::F32), TensorInfo(TensorShape(16U), 1, DataType::F32), })), framework::dataset::make(&quot;CellStateInfo&quot;, { TensorInfo(TensorShape(16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(11U), 1, DataType::F32), TensorInfo(TensorShape(16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(16U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(16U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;ScratchInfo&quot;, { TensorInfo(TensorShape(64U, 2U), 1, DataType::F32), TensorInfo(TensorShape(64U, 2U), 1, DataType::F32), TensorInfo(TensorShape(64U, 2U), 1, DataType::F32), TensorInfo(TensorShape(64U, 2U), 1, DataType::F32), TensorInfo(TensorShape(64U, 2U), 1, DataType::F32), TensorInfo(TensorShape(64U, 2U), 1, DataType::F32), TensorInfo(TensorShape(64U, 2U), 1, DataType::F32), TensorInfo(TensorShape(12U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;ActivationInfo&quot;, { ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, false, false, false, false })), input_info, input_weights_info, recurrent_weights_info, cell_bias_info, projection_bias_info, cell_state_info, output_info, scratch_info, info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a757766423c4a26da3e4422e496617b8a',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(datasets::SmallShapes(), framework::dataset::make(&quot;DataType&quot;, { DataType::S16, DataType::S32 })), shape, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ab437980729c1a4aca8155d3bf96f40d1',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(16U, 16U), 1, DataType::F32), TensorInfo(TensorShape(16U, 5U, 16U), 1, DataType::U8), TensorInfo(TensorShape(16U, 16U), 1, DataType::U8), }), framework::dataset::make(&quot;Expected&quot;, { false, false, true })), input_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a327ea02cf18e7b8abed280f64b6e6d07',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(datasets::Small2DShapes(), framework::dataset::make(&quot;DataType&quot;, { DataType::U8 })), shape, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a315ab8ee116b2cafc206479b69d09edb',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 13U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U), 1, DataType::F32), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(27U, 13U), 1, DataType::F16), TensorInfo(TensorShape(27U, 11U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U), 1, DataType::F32), })), framework::dataset::make(&quot;Expected&quot;, { false, false, true })), input_info, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a5d285112d4d773d616f899d4575d8abf',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(combine(combine(datasets::SmallShapes(), datasets::NonLinearFilterFunctions()), framework::dataset::make(&quot;MaskSize&quot;, { 3U, 5U })), datasets::MatrixPatterns()), datasets::BorderModes()), shape, function, mask_size, pattern, border_mode)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ac0e8c51ac5cf2b2f0cf69b64db39e81b',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F16), TensorInfo(TensorShape(27U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;NormInfo&quot;, { NormalizationLayerInfo(NormType::IN_MAP_1D, 5), NormalizationLayerInfo(NormType::IN_MAP_1D, 5), NormalizationLayerInfo(NormType::IN_MAP_1D, 4), NormalizationLayerInfo(NormType::IN_MAP_2D, 5), NormalizationLayerInfo(NormType::IN_MAP_1D, 5), NormalizationLayerInfo(NormType::CROSS_MAP, 5), })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, false, true })), input_info, output_info, norm_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#aa3cae9fc421a796d441b8bca1d0cc074',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(datasets::RandomNormalizePlanarYUVLayerDataset(), framework::dataset::make(&quot;DataType&quot;, { DataType::F16 })), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), shape0, shape1, dt, data_layout)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a478a9010906dfa0ee3f1028135c96777',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F16), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 16U, 8U), 1, DataType::F16), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F16), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F16), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F16), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 16U, 8U), 1, DataType::F16), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F16), TensorInfo(TensorShape(30U, 11U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;MSTDInfo&quot;,{ TensorInfo(TensorShape(2U), 1, DataType::F16), TensorInfo(TensorShape(2U), 1, DataType::F16), TensorInfo(TensorShape(2U), 1, DataType::U8), TensorInfo(TensorShape(8U), 1, DataType::F16), TensorInfo(TensorShape(6U), 1, DataType::F16), TensorInfo(TensorShape(2U), 1, DataType::F32), })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, true, false, false })), input_info, output_info, msd_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a2d71e39df0aafa07a1c09ed645a7dcb9',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U), 1, DataType::F32) }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F16), TensorInfo(TensorShape(28U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(29U, 17U, 2U), 1, DataType::F32), TensorInfo(TensorShape(29U, 15U, 4U, 3U), 1, DataType::F32), TensorInfo(TensorShape(29U, 15U, 4U, 3U), 1, DataType::F32), TensorInfo(TensorShape(29U, 17U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U), 1, DataType::F32) })), framework::dataset::make(&quot;PaddingSize&quot;, { PaddingList{{0, 0}}, PaddingList{{1, 1}}, PaddingList{{1, 1}, {2, 2}}, PaddingList{{1, 1}, {1, 1}, {1, 1}, {1, 1}}, PaddingList{{1, 1}, {1, 1}, {1, 1}}, PaddingList{{1, 1}, {2, 2}}, PaddingList{{0, 0}, {0, 0}, {1, 1}} })), framework::dataset::make(&quot;PaddingMode&quot;, { PaddingMode::CONSTANT, PaddingMode::CONSTANT, PaddingMode::CONSTANT, PaddingMode::CONSTANT, PaddingMode::SYMMETRIC, PaddingMode::REFLECT, PaddingMode::REFLECT })), framework::dataset::make(&quot;Expected&quot;, { false, false, true, false, false, true, false })), input_info, output_info, padding, mode, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a9830b21da051c2c7724923c6729e5fd9',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;,{ TensorInfo(TensorShape(7U, 7U, 5U, 3U), 1, DataType::U16), TensorInfo(TensorShape(7U, 7U, 5U, 3U), 1, DataType::U16), TensorInfo(TensorShape(7U, 7U, 5U, 3U), 1, DataType::U16), TensorInfo(TensorShape(1U, 7U), 1, DataType::U8), TensorInfo(TensorShape(7U, 7U, 5U, 3U), 1, DataType::U16), TensorInfo(TensorShape(27U, 13U, 37U, 2U), 1, DataType::F32), TensorInfo(TensorShape(7U, 7U, 5U, 3U), 1, DataType::U16), TensorInfo(TensorShape(7U, 7U, 5U, 3U), 1, DataType::S16), TensorInfo(TensorShape(27U, 13U, 37U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 37U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 37U, 2U), 1, DataType::F32) }), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(5U, 7U, 7U, 3U), 1, DataType::U16), TensorInfo(TensorShape(7U, 7U, 5U, 3U), 1, DataType::U16), TensorInfo(TensorShape(7U, 7U, 5U, 3U), 1, DataType::U16), TensorInfo(TensorShape(5U, 7U), 1, DataType::U8), TensorInfo(TensorShape(5U, 7U, 7U, 3U), 1, DataType::U16), TensorInfo(TensorShape(13U, 37U, 27U, 2U), 1, DataType::F32), TensorInfo(TensorShape(5U, 7U, 7U, 3U), 1, DataType::U16), TensorInfo(TensorShape(3U, 5U, 7U, 7U), 1, DataType::S16), TensorInfo(TensorShape(13U, 37U, 27U, 2U), 1, DataType::F32), TensorInfo(TensorShape(37U, 2U, 13U, 27U), 1, DataType::F32), TensorInfo(TensorShape(37U, 2U, 13U, 27U), 1, DataType::F32) })), framework::dataset::make(&quot;PermutationVector&quot;, { PermutationVector(2U, 1U, 0U), PermutationVector(2U, 2U, 1U), PermutationVector(1U, 1U, 1U), PermutationVector(2U, 0U, 1U), PermutationVector(2U, 0U, 1U), PermutationVector(1U, 2U, 0U), PermutationVector(3U, 2U, 0U, 1U), PermutationVector(3U, 2U, 0U, 1U), PermutationVector(2U, 3U, 1U, 0U), PermutationVector(2U, 3U, 1U, 0U), PermutationVector(0U, 0U, 0U, 1000U) })), framework::dataset::make(&quot;Expected&quot;, { true, false, false, false, true, true, false, true, false, true, false })), input_info, output_info, perm_vect, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a10cbef7a4d5b95ee888e5371244056ae',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(datasets::Small4DShapes(), framework::dataset::make(&quot;DataType&quot;, { DataType::S8, DataType::U8, DataType::S16, DataType::U16, DataType::U32, DataType::S32, DataType::F16, DataType::F32 })), shape, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a2d8ceb03a628fbc166c979678ab5ceef',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;Input1Info&quot;, { TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), }), framework::dataset::make(&quot;Input2Info&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S16), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S16), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;Scale&quot;,{ 2.f, 2.f, 2.f, -1.f, 1.f, 1.f})), framework::dataset::make(&quot;Expected&quot;, { true, true, false, false, false, false})), input1_info, input2_info, output_info, scale, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ac4599d75264cd0fe6d040249a0aca0ec',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(15U, 13U, 5U), 1, DataType::F32), TensorInfo(TensorShape(13U, 13U, 5U), 1, DataType::F32), TensorInfo(TensorShape(13U, 13U, 5U), 1, DataType::QASYMM8), TensorInfo(TensorShape(13U, 13U, 5U), 1, DataType::F32), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F16), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(30U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(25U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(1U, 1U, 5U), 1, DataType::F32), TensorInfo(TensorShape(2U, 2U, 5U), 1, DataType::F32), TensorInfo(TensorShape(12U, 12U, 5U), 1, DataType::QASYMM8), TensorInfo(TensorShape(1U, 1U, 5U), 1, DataType::F32), })), framework::dataset::make(&quot;PoolInfo&quot;, { PoolingLayerInfo(PoolingType::AVG, 3, DataLayout::NCHW, PadStrideInfo(1, 1, 0, 0)), PoolingLayerInfo(PoolingType::AVG, 3, DataLayout::NCHW, PadStrideInfo(1, 1, 0, 0)), PoolingLayerInfo(PoolingType::AVG, 2, DataLayout::NCHW, PadStrideInfo(1, 1, 2, 0)), PoolingLayerInfo(PoolingType::AVG, 2, DataLayout::NCHW, PadStrideInfo(1, 1, 0, 2)), PoolingLayerInfo(PoolingType::L2, 3, DataLayout::NCHW, PadStrideInfo(1, 1, 0, 0)), PoolingLayerInfo(PoolingType::AVG, DataLayout::NCHW), PoolingLayerInfo(PoolingType::MAX, DataLayout::NCHW), PoolingLayerInfo(PoolingType::AVG, 2, DataLayout::NHWC, PadStrideInfo(), false), PoolingLayerInfo(PoolingType::AVG, DataLayout::NCHW), })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, false, true, false, false, true })), input_info, output_info, pool_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a8d47360b71b942aa8a57912b3b1d7d3c',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;Input1Info&quot;, { TensorInfo(TensorShape(10U, 10U, 2U), 1, DataType::F32), TensorInfo(TensorShape(10U, 10U, 2U), 1, DataType::F32), }), framework::dataset::make(&quot;Input2Info&quot;, { TensorInfo(TensorShape(10U, 10U, 2U), 1, DataType::F32), TensorInfo(TensorShape(10U, 10U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(1200U, 2U), 1, DataType::F32), TensorInfo(TensorShape(1000U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;PriorBoxInfo&quot;,{ PriorBoxLayerInfo(std::vector&lt; float &gt;(1), std::vector&lt; float &gt;(1), 0, true, true, std::vector&lt; float &gt;(1), std::vector&lt; float &gt;(1), Coordinates2D{8, 8}, std::array&lt; float, 2 &gt;()), PriorBoxLayerInfo(std::vector&lt; float &gt;(1), std::vector&lt; float &gt;(1), 0, true, true, std::vector&lt; float &gt;(1), std::vector&lt; float &gt;(1), Coordinates2D{8, 8}, std::array&lt; float, 2 &gt;()), })), framework::dataset::make(&quot;Expected&quot;, { true, false})), input1_info, input2_info, output_info, info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a6f73439f86a03a533e8dcca2644e965b',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(16U, 16U, 16U, 5U), 1, DataType::QASYMM8), TensorInfo(TensorShape(16U, 16U, 16U, 5U), 1, DataType::F32), TensorInfo(TensorShape(16U, 16U, 2U, 5U), 1, DataType::F32), TensorInfo(TensorShape(16U, 16U, 16U, 5U), 1, DataType::F32), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(16U, 16U, 16U, 5U), 1, DataType::F32), TensorInfo(TensorShape(16U, 16U, 16U, 5U), 1, DataType::U16), TensorInfo(TensorShape(16U, 16U, 16U, 5U), 1, DataType::QASYMM8), TensorInfo(TensorShape(16U, 16U, 16U, 5U), 1, DataType::QASYMM8), })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, true})), input_info, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ab1a33e51ae05b3c1527011c935c3bfd5',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(QuantizationSmallShapes, framework::dataset::make(&quot;DataType&quot;, DataType::F32)), shape, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#aae54270fd6f7436ab14dfef4910984a5',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U), 1, DataType::U8), TensorInfo(TensorShape(27U), 1, DataType::U8), TensorInfo(TensorShape(32U), 1, DataType::U8), TensorInfo(TensorShape(32U), 1, DataType::F32), TensorInfo(TensorShape(27U), 1, DataType::U8), TensorInfo(TensorShape(27U), 1, DataType::U8), TensorInfo(TensorShape(10U), 1, DataType::U8), }), framework::dataset::make(&quot;Start&quot;,{ 0.0f, 15.0f, 1500.0f, 100.0f, -15.0f, 0.2f, 2.0f, 10.0f})), framework::dataset::make(&quot;End&quot;,{ 100.0f, 15.0f, 2500.0f, -1000.0f, 15.0f, 10.0f, 10.0f, 100.0f })), framework::dataset::make(&quot;Step&quot;,{ 100.0f, 15.0f, 10.0f, 100.0f, -15.0f, 1.0f, 0.0f, 10.0f })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, false, false, false, true, })), output_info, start, end, step, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ac3a959e8858670660de7a55f1760c721',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 3U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 3U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 16U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape{228U, 19U, 2U, 2U}, 1, DataType::F32), TensorInfo(TensorShape{228U, 19U, 2U, 1U}, 1, DataType::F32) }), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(27U, 3U, 1U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 3U, 1U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 16U, 1U, 2U), 1, DataType::F32), TensorInfo(TensorShape(19U), 1, DataType::F32), TensorInfo(TensorShape(19U), 1, DataType::F32) })), framework::dataset::make(&quot;Axis&quot;, { Coordinates(4), Coordinates(0, 2), Coordinates(2), Coordinates(3, 2, 0), Coordinates(3, 2, 0) })), framework::dataset::make(&quot;Keep&quot;, { true, true, true, false, false })), framework::dataset::make(&quot;Expected&quot;, { false, false, true, true, false })), input_info, output_info, axis, keep, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#abf3b57190e3ed42a68eb213b435039e3',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(128U, 64U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U), 3, DataType::F32), TensorInfo(TensorShape(128U, 64U), 1, DataType::S16), TensorInfo(TensorShape(128U, 64U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U), 1, DataType::QASYMM8), TensorInfo(TensorShape(128U, 64U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U), 1, DataType::F32) }), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(1U, 64U), 1, DataType::F16), TensorInfo(TensorShape(1U, 64U), 1, DataType::F32), TensorInfo(TensorShape(1U, 64U), 1, DataType::S16), TensorInfo(TensorShape(1U, 64U), 1, DataType::F32), TensorInfo(TensorShape(1U, 64U), 1, DataType::QASYMM8), TensorInfo(TensorShape(1U, 64U), 1, DataType::F32), TensorInfo(TensorShape(1U, 64U), 1, DataType::F32) })), framework::dataset::make(&quot;Axis&quot;, { 0U, 0U, 0U, static_cast&lt; unsigned int &gt;(TensorShape::num_max_dimensions), 1U, 0U, 0U })), framework::dataset::make(&quot;KeepDims&quot;, { true, true, true, true, true, true, false })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, false, true, false })), input_info, output_info, axis, keep_dims, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#aa2468a9d9dc7b6450258bbb8eff28390',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(combine(datasets::SmallShapes(), framework::dataset::make(&quot;InterpolationPolicy&quot;, { InterpolationPolicy::NEAREST_NEIGHBOR, InterpolationPolicy::BILINEAR })), framework::dataset::make(&quot;DataType&quot;, DataType::U8)), framework::dataset::make(&quot;BorderModes&quot;, { BorderMode::UNDEFINED, BorderMode::CONSTANT })), shape, policy, data_type, border_mode)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#afb0b52b4f9be21c5363b9843ba2b496e',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(10U, 12U, 1U, 2U), 1, DataType::S64), TensorInfo(TensorShape(10U, 12U, 1U, 2U), 1, DataType::F32), TensorInfo(TensorShape(10U, 12U, 1U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 12U, 4U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 12U, 4U, 2U), 1, DataType::F32), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(3U, 4U, 10U, 2U), 1, DataType::S64), TensorInfo(TensorShape(5U, 6U, 4U, 2U), 1, DataType::F32), TensorInfo(TensorShape(5U, 6U, 2, 2U), 1, DataType::F32), TensorInfo(TensorShape(1U, 4U, 36U, 2U), 1, DataType::F32), TensorInfo(TensorShape(1U, 4U, 36U, 2U), 1, DataType::F16), })), framework::dataset::make(&quot;Stride&quot;, { 2, 2, 4, 3 })), framework::dataset::make(&quot;Expected&quot;, { false, true, false, true, false })), input_info, output_info, stride, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a5551196e8727559372e22f031924b920',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(datasets::SmallReorgLayerDataset(), framework::dataset::make(&quot;DataType&quot;, { DataType::F32, DataType::F16, DataType::QASYMM8 })), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), shape, stride, data_type, data_layout)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#af8870dc8041b8433f43da5ec26e5dada',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(9U, 5U, 7U, 3U), 1, DataType::F32), TensorInfo(TensorShape(8U, 4U, 6U, 4U), 1, DataType::F32), TensorInfo(TensorShape(8U, 4U, 6U, 4U), 1, DataType::F32), TensorInfo(TensorShape(9U, 5U, 7U, 3U), 1, DataType::F16), }), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(9U, 5U, 21U), 1, DataType::F32), TensorInfo(TensorShape(8U, 24U, 4U), 1, DataType::F32), TensorInfo(TensorShape(192U, 192U), 1, DataType::F32), TensorInfo(TensorShape(9U, 5U, 21U), 1, DataType::F32), })), framework::dataset::make(&quot;Expected&quot;, { true, true, false, false })), input_info, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#affdcdb0eb8b772707770affb973a6efe',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(2U), 1, DataType::U8), }), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(2U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(2U), 1, DataType::U8), })), framework::dataset::make(&quot;AxisInfo&quot;,{ TensorInfo(TensorShape(3U), 1, DataType::U8), TensorInfo(TensorShape(2U, 10U), 1, DataType::U32), TensorInfo(TensorShape(8U), 1, DataType::U32), TensorInfo(TensorShape(2U), 1, DataType::U32), TensorInfo(TensorShape(2U), 1, DataType::U32), TensorInfo(TensorShape(2U), 1, DataType::U32), })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, true, true})), src_info, dst_info, axis_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ae9a599036cbe43ea19a36c05257d5f87',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 13U), 1, DataType::U8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U), 1, DataType::F32), }), framework::dataset::make(&quot;WeightsInfo&quot;, { TensorInfo(TensorShape(27U, 11U), 1, DataType::F32), TensorInfo(TensorShape(27U, 11U), 1, DataType::F32), TensorInfo(TensorShape(27U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 11U), 1, DataType::F32), TensorInfo(TensorShape(27U, 11U), 1, DataType::F32), TensorInfo(TensorShape(27U, 11U), 1, DataType::F32), TensorInfo(TensorShape(27U, 11U), 1, DataType::F32), })), framework::dataset::make(&quot;RecurrentWeightsInfo&quot;, { TensorInfo(TensorShape(11U, 11U), 1, DataType::F32), TensorInfo(TensorShape(11U, 11U), 1, DataType::F32), TensorInfo(TensorShape(11U, 11U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(11U, 11U), 1, DataType::F32), TensorInfo(TensorShape(11U, 11U), 1, DataType::F32), TensorInfo(TensorShape(11U, 11U), 1, DataType::F32), })), framework::dataset::make(&quot;BiasInfo&quot;, { TensorInfo(TensorShape(11U), 1, DataType::F32), TensorInfo(TensorShape(11U), 1, DataType::F32), TensorInfo(TensorShape(11U), 1, DataType::F32), TensorInfo(TensorShape(11U), 1, DataType::F32), TensorInfo(TensorShape(30U), 1, DataType::F32), TensorInfo(TensorShape(11U), 1, DataType::F32), TensorInfo(TensorShape(11U), 1, DataType::F32), })), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(11U, 13U), 1, DataType::F32), TensorInfo(TensorShape(11U, 13U), 1, DataType::F32), TensorInfo(TensorShape(11U, 13U), 1, DataType::F32), TensorInfo(TensorShape(11U, 13U), 1, DataType::F32), TensorInfo(TensorShape(11U, 13U), 1, DataType::F32), TensorInfo(TensorShape(11U), 1, DataType::F32), TensorInfo(TensorShape(11U, 13U), 1, DataType::F32), })), framework::dataset::make(&quot;HiddenStateInfo&quot;, { TensorInfo(TensorShape(11U, 13U), 1, DataType::F32), TensorInfo(TensorShape(11U, 13U), 1, DataType::F32), TensorInfo(TensorShape(11U, 13U), 1, DataType::F32), TensorInfo(TensorShape(11U, 13U), 1, DataType::F32), TensorInfo(TensorShape(11U, 13U), 1, DataType::F32), TensorInfo(TensorShape(11U, 13U), 1, DataType::F32), TensorInfo(TensorShape(11U, 13U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;ActivationInfo&quot;, { ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, false, false, false })), input_info, weights_info, recurrent_weights_info, bias_info, output_info, hidden_output_info, info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a46e9ee2763c04c1908e7fe84eea3ef84',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(250U, 128U, 3U), 1, DataType::F32), TensorInfo(TensorShape(250U, 128U, 3U), 1, DataType::F32), TensorInfo(TensorShape(250U, 128U, 3U), 1, DataType::F32), TensorInfo(TensorShape(250U, 128U, 2U), 1, DataType::F32), TensorInfo(TensorShape(250U, 128U, 3U), 1, DataType::F32), TensorInfo(TensorShape(250U, 128U, 3U), 1, DataType::F32), TensorInfo(TensorShape(250U, 128U, 3U), 1, DataType::F32), TensorInfo(TensorShape(250U, 128U, 3U), 1, DataType::QASYMM8, QuantizationInfo(1.f/255.f, 127)), TensorInfo(TensorShape(250U, 128U, 3U), 1, DataType::QASYMM8, QuantizationInfo(1.f/255.f, 127)), }), framework::dataset::make(&quot;RoisInfo&quot;, { TensorInfo(TensorShape(5, 4U), 1, DataType::F32), TensorInfo(TensorShape(5, 4U), 1, DataType::F16), TensorInfo(TensorShape(5, 4U), 1, DataType::F32), TensorInfo(TensorShape(5, 4U), 1, DataType::F32), TensorInfo(TensorShape(5, 10U), 1, DataType::F32), TensorInfo(TensorShape(4, 4U), 1, DataType::F32), TensorInfo(TensorShape(5, 4U), 1, DataType::F32), TensorInfo(TensorShape(5, 4U), 1, DataType::F32), TensorInfo(TensorShape(5, 4U), 1, DataType::QASYMM16, QuantizationInfo(0.2f, 0)), })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(7U, 7U, 3U, 4U), 1, DataType::F32), TensorInfo(TensorShape(7U, 7U, 3U, 4U), 1, DataType::F32), TensorInfo(TensorShape(7U, 7U, 3U, 4U), 1, DataType::F16), TensorInfo(TensorShape(7U, 7U, 3U, 4U), 1, DataType::F32), TensorInfo(TensorShape(7U, 7U, 3U, 4U), 1, DataType::F32), TensorInfo(TensorShape(7U, 7U, 3U, 4U), 1, DataType::F32), TensorInfo(TensorShape(5U, 5U, 3U, 4U), 1, DataType::F32), TensorInfo(TensorShape(7U, 7U, 3U, 4U), 1, DataType::QASYMM8, QuantizationInfo(1.f/255.f, 120)), TensorInfo(TensorShape(7U, 7U, 3U, 4U), 1, DataType::QASYMM8, QuantizationInfo(1.f/255.f, 120)), })), framework::dataset::make(&quot;PoolInfo&quot;, { ROIPoolingLayerInfo(7U, 7U, 1./8), ROIPoolingLayerInfo(7U, 7U, 1./8), ROIPoolingLayerInfo(7U, 7U, 1./8), ROIPoolingLayerInfo(7U, 7U, 1./8), ROIPoolingLayerInfo(7U, 7U, 1./8), ROIPoolingLayerInfo(7U, 7U, 1./8), ROIPoolingLayerInfo(7U, 7U, 1./8), ROIPoolingLayerInfo(7U, 7U, 1./8), })), framework::dataset::make(&quot;Expected&quot;, { true, false, false, false, false, false, false, false, false })), input_info, rois_info, output_info, pool_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a1191ea29766e411ab8173ae62e84a69e',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F16), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(30U, 11U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;Expected&quot;, { false, true, false })), input_info, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a7e5b7cad90ebb803b5134d7577b34bc1',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;,{ TensorInfo(TensorShape(28U, 32U, 2U), 1, DataType::F16), TensorInfo(TensorShape(28U, 32U, 2U), 1, DataType::F32), TensorInfo(TensorShape(36U, 36U, 2U, 4U), 1, DataType::U8), TensorInfo(TensorShape(40U, 35U, 2U, 4U), 1, DataType::S16), TensorInfo(TensorShape(37U, 37U, 2U), 1, DataType::F32), TensorInfo(TensorShape(37U, 37U, 3U, 4U), 1, DataType::F32), TensorInfo(TensorShape(28U, 33U, 2U), 1, DataType::F32), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(32U, 68U, 2U), 1, DataType::F16), TensorInfo(TensorShape(40U, 56U, 2U), 1, DataType::F32), TensorInfo(TensorShape(40U, 76U, 2U, 4U), 1, DataType::U8), TensorInfo(TensorShape(28U, 32U, 2U, 4U), 1, DataType::S16), TensorInfo(TensorShape(39U, 55U, 2U), 1, DataType::F32), TensorInfo(TensorShape(39U, 77U, 3U, 4U), 1, DataType::F16), TensorInfo(TensorShape(26U, 21U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;Policy&quot;,{ InterpolationPolicy::BILINEAR, InterpolationPolicy::BILINEAR, InterpolationPolicy::NEAREST_NEIGHBOR, InterpolationPolicy::NEAREST_NEIGHBOR, InterpolationPolicy::NEAREST_NEIGHBOR, InterpolationPolicy::BILINEAR, InterpolationPolicy::AREA, })), framework::dataset::make(&quot;BorderMode&quot;,{ BorderMode::UNDEFINED, BorderMode::UNDEFINED, BorderMode::UNDEFINED, BorderMode::UNDEFINED, BorderMode::UNDEFINED, BorderMode::UNDEFINED, BorderMode::UNDEFINED, })), framework::dataset::make(&quot;Expected&quot;, { true, true, true, true, false, false, false })), input_info, output_info, policy, border_mode, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a97e496b2dd035ddb737c9e2d3c71a381',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(combine(combine(datasets::MediumShapes(), ScaleDataTypes), framework::dataset::make(&quot;InterpolationPolicy&quot;, { InterpolationPolicy::NEAREST_NEIGHBOR, InterpolationPolicy::BILINEAR })), datasets::BorderModes()), datasets::SamplingPolicies()), shape, data_type, policy, border_mode, sampling_policy)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#aebc10ebaa1aa56ca405a5bc8b7e11026',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;CInfo&quot;, { TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(13U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(2U), 1, DataType::U8), }), framework::dataset::make(&quot;XInfo&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 10U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;YInfo&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, true, true})), c_info, x_info, y_info, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#acb8fd2b1ee77b9b379853485bb429217',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, run_small_dataset, shape, same_rank)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a87d9f386f53d15a1403514f8dcc059bd',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 3U, 2U, 5U, 3U), 1, DataType::F32), TensorInfo(TensorShape(27U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 3U, 2U), 1, DataType::F32) }), framework::dataset::make(&quot;Starts&quot;, { Coordinates(3, 1, 0), Coordinates(-3, 1, 0), Coordinates(3, 1, 0), Coordinates(3, 1, 0) })), framework::dataset::make(&quot;Ends&quot;, { Coordinates(13, 3, 0), Coordinates(13, 3, 1), Coordinates(13, 3, 1, 1), Coordinates(13, 3, 1) })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, true })), input_info, starts, ends, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a771a5631851d0b049d2c941a4f22ecd5',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(arm_compute::test::datasets::SmallSliceDataset(), framework::dataset::make(&quot;DataType&quot;, { DataType::F16, DataType::F32 })), shape, starts, ends, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ab4c6b8066352bd78793a4673ccedfb8c',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(datasets::SoftmaxLayerSmallShapes(), CNNDataTypes), shape, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ab25b114b32d14356339eee8a99b65353',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 13U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U), 1, DataType::QASYMM8, QuantizationInfo(1.f/256, 12)), TensorInfo(TensorShape(27U, 13U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U), 1, DataType::QASYMM8, QuantizationInfo(1.f/256, 12)), TensorInfo(TensorShape(32U, 13U), 1, DataType::QASYMM8_SIGNED, QuantizationInfo(1.f/256, 12)) }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(27U, 13U), 1, DataType::F16), TensorInfo(TensorShape(27U, 11U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U), 1, DataType::QASYMM8, QuantizationInfo(1.f/256, 12)), TensorInfo(TensorShape(27U, 13U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U), 1, DataType::QASYMM8, QuantizationInfo(1.f/256, 0)), TensorInfo(TensorShape(32U, 13U), 1, DataType::QASYMM8_SIGNED, QuantizationInfo(1.f/256, -128)), })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, false, true, true, true })), input_info, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#aa74a3f0a9e477b5898cf4d90d62be712',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(32U, 13U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U, 2U, 4U), 1, DataType::F32), }), framework::dataset::make(&quot;BlockShapeInfo&quot;,{ TensorInfo(TensorShape(2U), 1, DataType::S32), TensorInfo(TensorShape(2U), 1, DataType::S32), TensorInfo(TensorShape(2U), 1, DataType::F16), TensorInfo(TensorShape(2U), 1, DataType::S32), })), framework::dataset::make(&quot;PaddingsShapeInfo&quot;,{ TensorInfo(TensorShape(2U, 2U), 1, DataType::S32), TensorInfo(TensorShape(2U, 2U), 1, DataType::S32), TensorInfo(TensorShape(2U, 2U), 1, DataType::F16), TensorInfo(TensorShape(2U, 2U), 1, DataType::S32), })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U, 2U), 1, DataType::F16), TensorInfo(TensorShape(32U, 13U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;Expected&quot;, { true, false, false, false})), input_info, block_shape_info, paddings_info, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#af3755ce4968ad7506cb512f5b236330e',1,'arm_compute::test::validation::DATA_TEST_CASE(ValidateStatic, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(32U, 16U, 2U, 1U), 1, DataType::F32), TensorInfo(TensorShape(32U, 16U, 2U, 1U), 1, DataType::F32), TensorInfo(TensorShape(32U, 16U, 2U, 1U), 1, DataType::F32), TensorInfo(TensorShape(32U, 16U, 2U, 1U, 4U), 1, DataType::F32), TensorInfo(TensorShape(32U, 16U, 2U, 1U, 4U), 1, DataType::F32), }), framework::dataset::make(&quot;BlockShapeX&quot;, { 2, 2, 2, 2, 2 })), framework::dataset::make(&quot;BlockShapeY&quot;, { 2, 2, -2, 2, 2 })), framework::dataset::make(&quot;PadLeft&quot;, { Size2D(0, 0), Size2D(0, 0), Size2D(0, 0), Size2D(0, 0), Size2D(3, 11) })), framework::dataset::make(&quot;PadRight&quot;, { Size2D(0, 0), Size2D(0, 0), Size2D(0, 0), Size2D(0, 0), Size2D(3, 11) })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(16U, 8U, 2U, 4U), 1, DataType::F32), TensorInfo(TensorShape(32U, 8U, 2U, 4U), 1, DataType::F16), TensorInfo(TensorShape(32U, 8U, 2U, 4U), 1, DataType::F32), TensorInfo(TensorShape(32U, 8U, 2U, 4U), 1, DataType::F32), TensorInfo(TensorShape(32U, 8U, 2U, 4U), 1, DataType::F32), })), framework::dataset::make(&quot;Expected&quot;, { true, false, false, false, false})), input_info, block_shape_x, block_shape_y, padding_left, padding_right, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#aaae24f1bccebf8119e41f18e1c7fd8d5',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(32U, 16U, 2U, 1U), 1, DataType::F32), TensorInfo(TensorShape(32U, 16U, 2U, 1U), 1, DataType::F32), TensorInfo(TensorShape(32U, 16U, 2U, 1U), 1, DataType::F32), TensorInfo(TensorShape(32U, 16U, 2U, 1U, 4U), 1, DataType::F32), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(16U, 8U, 8U, 1U), 1, DataType::F32), TensorInfo(TensorShape(32U, 8U, 8U, 1U), 1, DataType::F16), TensorInfo(TensorShape(32U, 8U, 8U, 1U), 1, DataType::F32), TensorInfo(TensorShape(32U, 8U, 8U, 1U), 1, DataType::F32), })), framework::dataset::make(&quot;BlockShape&quot;, { 2, 2, -2, 2 })), framework::dataset::make(&quot;Expected&quot;, { true, false, false, false})), input_info, output_info, block_shape, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#af0b36b976c5b2f378f229b4c9db95170',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 3U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 3U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 3U, 16U, 2U), 1, DataType::F32) }), framework::dataset::make(&quot;Axis&quot;, { 4, 2, 2 })), framework::dataset::make(&quot;Splits&quot;, { 4, 5, 4 })), framework::dataset::make(&quot;Expected&quot;, { false, false, true })), input_info, axis, splits, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ab920f8b777413b1e0b153eeba0e6ec3c',1,'arm_compute::test::validation::DATA_TEST_CASE(ValidateSplitShapes, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 3U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 3U, 16U, 2U), 1, DataType::F32) }), framework::dataset::make(&quot;Axis&quot;, { 2, 2 })), framework::dataset::make(&quot;Splits&quot;, { std::vector&lt; TensorInfo &gt;{TensorInfo(TensorShape(27U, 3U, 4U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 3U, 4U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 3U, 8U, 2U), 1, DataType::F32)}, std::vector&lt; TensorInfo &gt;{TensorInfo(TensorShape(27U, 3U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 3U, 13U, 2U), 1, DataType::F32)} })), framework::dataset::make(&quot;Expected&quot;, { true, true })), input_info, axis, splits, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a1ed1389e2305dbba938bf6b9b95b0e3a',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(datasets::SmallSplitDataset(), framework::dataset::make(&quot;DataType&quot;, { DataType::F16, DataType::F32 })), shape, axis, splits, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#acc54e1705da03da268a238171fbc03b7',1,'arm_compute::test::validation::DATA_TEST_CASE(ConfigurationSplitShapes, framework::DatasetMode::ALL, combine(datasets::SmallSplitShapesDataset(), framework::dataset::make(&quot;DataType&quot;, { DataType::F16, DataType::F32 })), shape, axis, split_shapes, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#aa592247e90b4ec742ec8d73842c391e1',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { std::vector&lt; TensorInfo &gt;{ TensorInfo(TensorShape(9U, 8U), 1, DataType::U8) }, std::vector&lt; TensorInfo &gt;{ TensorInfo(TensorShape(1U, 2U), 1, DataType::U8), TensorInfo(TensorShape(1U, 2U), 1, DataType::U8), TensorInfo(TensorShape(1U, 2U), 1, DataType::U8)}, std::vector&lt; TensorInfo &gt;{ TensorInfo(TensorShape(2U, 3U), 1, DataType::S32) }, std::vector&lt; TensorInfo &gt;{ TensorInfo(TensorShape(7U, 5U, 3U, 8U, 2U), 1, DataType::S32), TensorInfo(TensorShape(7U, 5U, 3U, 8U, 2U), 1, DataType::S32)}, std::vector&lt; TensorInfo &gt;{ TensorInfo(TensorShape(9U, 8U), 1, DataType::S32) }, }), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(1U, 9U, 8U), 1, DataType::U8), TensorInfo(TensorShape(1U, 3U, 2U), 1, DataType::U8), TensorInfo(TensorShape(1U, 2U, 3U), 1, DataType::S32), TensorInfo(TensorShape(3U, 7U, 5U), 1, DataType::S32), TensorInfo(TensorShape(1U, 2U, 3U), 1, DataType::U8), })), framework::dataset::make(&quot;Axis&quot;, { -3, 1, -4, -3, 1 })), framework::dataset::make(&quot;Expected&quot;, { true, true, false, false, false })), input_info, output_info, axis, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#afcdb062eabf45af9f84aa11d0f74dc6d',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 3U, 2U, 5U, 3U), 1, DataType::F32), TensorInfo(TensorShape(27U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 3U, 2U), 1, DataType::F32) }), framework::dataset::make(&quot;Starts&quot;, { Coordinates(3, 1, 0), Coordinates(3, 1, 0), Coordinates(3, 1, 0), Coordinates(3, 1, 0), Coordinates(3, 1, 0) })), framework::dataset::make(&quot;Ends&quot;, { Coordinates(13, 3, 0), Coordinates(13, 3, 1), Coordinates(13, 3, 1, 1), Coordinates(13, -1, 1), Coordinates(13, 3, 1) })), framework::dataset::make(&quot;Strides&quot;, { BiStrides(2, 1, 1), BiStrides(2, 0, 1), BiStrides(2, 1, 1), BiStrides(2, -1, 1), BiStrides(2, 1, 1) })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, true })), input_info, starts, ends, strides, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#af3e78a742ac6ca0a855fad18d4f3cdb3',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(arm_compute::test::datasets::SmallStridedSliceDataset(), framework::dataset::make(&quot;DataType&quot;, { DataType::F16, DataType::F32 })), shape, starts, ends, strides, begin_mask, end_mask, shrink_mask, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a302f7eee312512ab90d7ae61eeaff396',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(datasets::SmallShapes(), datasets::MixedThresholdDataset()), framework::dataset::make(&quot;DataType&quot;, DataType::U8)), shape, threshold, false_value, true_value, type, upper, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a4e33546f75c1de3f66b180c270465d66',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(10, 10), 1, DataType::F32), TensorInfo(TensorShape(10, 10), 1, DataType::F32), TensorInfo(TensorShape(10, 10), 1, DataType::F16), TensorInfo(TensorShape(10, 10), 1, DataType::F32)}), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(10, 20), 1, DataType::F32), TensorInfo(TensorShape(20, 20), 1, DataType::F32), TensorInfo(TensorShape(20, 20), 1, DataType::F32), TensorInfo(TensorShape(10, 20), 1, DataType::F32)})), framework::dataset::make(&quot;Multiples&quot;,{ Multiples{1, 2}, Multiples{1, 2}, Multiples{0, 1} })), framework::dataset::make(&quot;Expected&quot;, {true, false, false, false })), input_info, output_info, multiples, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a36db9499786f252198703486e5d1cd71',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(21U, 13U), 1, DataType::U8), TensorInfo(TensorShape(21U, 13U), 1, DataType::U16), TensorInfo(TensorShape(20U, 13U), 1, DataType::U32), TensorInfo(TensorShape(20U, 13U), 1, DataType::U8), TensorInfo(TensorShape(20U, 16U), 1, DataType::U32), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(13U, 21U), 1, DataType::U8), TensorInfo(TensorShape(21U, 13U), 1, DataType::U16), TensorInfo(TensorShape(13U, 20U), 1, DataType::U32), TensorInfo(TensorShape(31U, 20U), 1, DataType::U16), TensorInfo(TensorShape(16U, 20U), 1, DataType::U32), })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, true })), a_info, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a0ceb73ac4972a242438dc2ada29ecb2d',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(datasets::Small2DShapes(), framework::dataset::make(&quot;DataType&quot;, { DataType::S8, DataType::U8, DataType::S16, DataType::U16, DataType::U32, DataType::S32, DataType::F16, DataType::F32 })), shape, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a0ccbbd6a9efa693cbd9ad13cafef40f1',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(1U, 9U, 8U), 1, DataType::U8), TensorInfo(TensorShape(1U, 2U, 3U), 1, DataType::U8), TensorInfo(TensorShape(1U, 2U, 3U), 1, DataType::S32), TensorInfo(TensorShape(3U, 7U, 5U), 1, DataType::S32), TensorInfo(TensorShape(13U, 7U, 5U), 1, DataType::S16), TensorInfo(TensorShape(1U, 2U, 3U), 1, DataType::U8), }), framework::dataset::make(&quot;OutputInfo&quot;, { std::vector&lt; TensorInfo &gt;{ TensorInfo(TensorShape(9U, 8U), 1, DataType::U8) }, std::vector&lt; TensorInfo &gt;{ TensorInfo(TensorShape(2U, 3U), 1, DataType::U8) }, std::vector&lt; TensorInfo &gt;{ TensorInfo(TensorShape(2U, 3U), 1, DataType::S32) }, std::vector&lt; TensorInfo &gt;{ TensorInfo(TensorShape(7U, 5U), 1, DataType::S32), TensorInfo(TensorShape(7U, 5U), 1, DataType::S32), TensorInfo(TensorShape(7U, 5U), 1, DataType::S32) }, std::vector&lt; TensorInfo &gt;{ TensorInfo(TensorShape(7U, 5U), 1, DataType::S16) }, std::vector&lt; TensorInfo &gt;{ TensorInfo(TensorShape(9U, 8U), 1, DataType::S32) }, })), framework::dataset::make(&quot;Axis&quot;, { -3, 3, -4, -3, 1, 1 })), framework::dataset::make(&quot;Num&quot;, { 1, 1, 1, 1, 0, 1 })), framework::dataset::make(&quot;Expected&quot;, { true, false, false, true, false, false })), input_info, output_info, axis, num, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a778b3df465ed2c9457feb9ea872f0ca9',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(10U, 10U, 2U), 1, DataType::F32), TensorInfo(TensorShape(10U, 10U, 2U), 1, DataType::F32), TensorInfo(TensorShape(10U, 10U, 2U), 1, DataType::F32), TensorInfo(TensorShape(10U, 10U, 2U), 1, DataType::F32), TensorInfo(TensorShape(10U, 10U, 2U), 1, DataType::F32), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(20U, 20U, 2U), 1, DataType::F16), TensorInfo(TensorShape(20U, 10U, 2U), 1, DataType::F32), TensorInfo(TensorShape(20U, 20U, 2U), 1, DataType::F32), TensorInfo(TensorShape(20U, 20U, 2U), 1, DataType::F32), TensorInfo(TensorShape(20U, 20U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;PadInfo&quot;, { Size2D(2, 2), Size2D(2, 2), Size2D(1, 1), Size2D(2, 2), Size2D(2, 2), })), framework::dataset::make(&quot;UpsamplingPolicy&quot;, { InterpolationPolicy::NEAREST_NEIGHBOR, InterpolationPolicy::NEAREST_NEIGHBOR, InterpolationPolicy::NEAREST_NEIGHBOR, InterpolationPolicy::BILINEAR, InterpolationPolicy::NEAREST_NEIGHBOR, })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, true })), input_info, output_info, pad_info, upsampling_policy, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a79f123bc8a8556c3147f80b968ba2d38',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(combine(concat(datasets::SmallShapes(), datasets::LargeShapes()), framework::dataset::make(&quot;DataType&quot;, DataType::U8)), framework::dataset::make(&quot;InterpolationPolicy&quot;, { InterpolationPolicy::NEAREST_NEIGHBOR, InterpolationPolicy::BILINEAR })), datasets::BorderModes()), shape, data_type, policy, border_mode)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a7fce6d9b89a628cb436103e56b0b2f4c',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(3U, 3U, 2U, 4U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 4U), 1, DataType::QASYMM8), TensorInfo(TensorShape(3U, 3U, 2U, 4U), 1, DataType::F32), }), framework::dataset::make(&quot;BiasesInfo&quot;, { TensorInfo(TensorShape(4U), 1, DataType::F16), TensorInfo(TensorShape(4U), 1, DataType::QASYMM8), TensorInfo(TensorShape(4U), 1, DataType::F32), })), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(4U, 19U), 1, DataType::F16), TensorInfo(TensorShape(4U, 19U), 1, DataType::QASYMM8), TensorInfo(TensorShape(4U, 19U), 1, DataType::F32), })), framework::dataset::make(&quot;Expected&quot;, { false, false, true })), input_info, biases_info, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#afb8240666f7c1c72ff9cd4c38a0b7971',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo1&quot;, { TensorInfo(TensorShape(23U, 27U, 5U), 1, DataType::F32), TensorInfo(TensorShape(23U, 27U, 5U), 1, DataType::F32), TensorInfo(TensorShape(23U, 27U, 5U), 1, DataType::F32), TensorInfo(TensorShape(16U, 27U, 5U), 1, DataType::F32), TensorInfo(TensorShape(21U, 35U, 5U), 1, DataType::F32) }), framework::dataset::make(&quot;InputInfo2&quot;, { TensorInfo(TensorShape(24U, 27U, 4U), 1, DataType::F32), TensorInfo(TensorShape(52U, 27U, 5U), 1, DataType::F32), TensorInfo(TensorShape(52U, 27U, 5U), 1, DataType::F32), TensorInfo(TensorShape(16U, 27U, 5U), 1, DataType::F32), TensorInfo(TensorShape(10U, 35U, 5U), 1, DataType::F32) })), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(47U, 27U, 5U), 1, DataType::F16), TensorInfo(TensorShape(75U, 12U, 5U), 1, DataType::F32), TensorInfo(TensorShape(11U, 27U, 5U), 1, DataType::F32), TensorInfo(TensorShape(32U, 27U, 5U), 1, DataType::F32), TensorInfo(TensorShape(31U, 35U, 5U), 1, DataType::F32) })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, true, true })), input_info1, input_info2, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#aefe657be35a4c7ad0cd478735e9ced36',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;,{ TensorInfo(TensorShape(53U, 21U, 5U, 3U), 1, DataType::F16), TensorInfo(TensorShape(53U, 21U, 5U, 3U), 1, DataType::QASYMM8), TensorInfo(TensorShape(53U, 21U, 5U, 3U), 1, DataType::F32), TensorInfo(TensorShape(53U, 21U, 5U, 3U), 1, DataType::F32), TensorInfo(TensorShape(53U, 33U, 4U), 1, DataType::F32), TensorInfo(TensorShape(34U, 42U, 7U, 3U), 1, DataType::F32), TensorInfo(TensorShape(31U, 37U, 37U), 1, DataType::F32) }), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(5U, 5U, 16U, 3U), 1, DataType::F16), TensorInfo(TensorShape(5U, 5U, 16U, 3U), 1, DataType::QASYMM8), TensorInfo(TensorShape(5U, 5U, 16U, 3U), 1, DataType::F32), TensorInfo(TensorShape(5U, 1U, 16U, 3U), 1, DataType::F32), TensorInfo(TensorShape(4U, 442U, 16U), 1, DataType::F32), TensorInfo(TensorShape(7U, 320U, 16U, 3U), 1, DataType::F32), TensorInfo(TensorShape(37U, 304U, 16U), 1, DataType::F32) })), framework::dataset::make(&quot;WinogradInfo&quot;, { WinogradInfo(Size2D(2, 2), Size2D(3, 3), Size2D(53U, 21U), PadStrideInfo(1, 1, 1, 0), DataLayout::NCHW), WinogradInfo(Size2D(2, 2), Size2D(3, 3), Size2D(53U, 21U), PadStrideInfo(1, 1, 0, 0), DataLayout::NCHW), WinogradInfo(Size2D(2, 2), Size2D(3, 3), Size2D(53U, 21U), PadStrideInfo(1, 1, 1, 1), DataLayout::NCHW), WinogradInfo(Size2D(2, 2), Size2D(3, 3), Size2D(53U, 21U), PadStrideInfo(2, 1, 1, 1), DataLayout::NCHW), WinogradInfo(Size2D(2, 2), Size2D(3, 3), Size2D(53U, 33U), PadStrideInfo(1, 1, 0, 1), DataLayout::NCHW), WinogradInfo(Size2D(2, 2), Size2D(3, 3), Size2D(34U, 42U), PadStrideInfo(1, 1, 0, 0), DataLayout::NCHW), WinogradInfo(Size2D(2, 2), Size2D(3, 3), Size2D(31U, 37U), PadStrideInfo(1, 1, 1, 1), DataLayout::NCHW) })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, false, false, false })), input_info, output_info, winograd_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a45b09270b4877361f007dd6f4320d2f4',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(16U, 16U, 6U), 1, DataType::U8), TensorInfo(TensorShape(16U, 16U, 6U), 1, DataType::F32), TensorInfo(TensorShape(16U, 16U, 6U), 1, DataType::F32), TensorInfo(TensorShape(16U, 16U, 6U), 1, DataType::F32), TensorInfo(TensorShape(16U, 16U, 6U), 1, DataType::F32), TensorInfo(TensorShape(17U, 16U, 6U), 1, DataType::F32), TensorInfo(TensorShape(17U, 16U, 7U), 1, DataType::F32), TensorInfo(TensorShape(16U, 16U, 6U), 1, DataType::F32), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(16U, 16U, 6U), 1, DataType::F32), TensorInfo(TensorShape(16U, 16U, 6U), 1, DataType::F32), TensorInfo(TensorShape(16U, 16U, 6U), 1, DataType::U16), TensorInfo(TensorShape(16U, 16U, 6U), 1, DataType::F32), TensorInfo(TensorShape(16U, 11U, 6U), 1, DataType::F32), TensorInfo(TensorShape(16U, 16U, 6U), 1, DataType::F32), TensorInfo(TensorShape(16U, 16U, 7U), 1, DataType::F32), TensorInfo(TensorShape(16U, 16U, 6U), 1, DataType::F32), })), framework::dataset::make(&quot;ActivationInfo&quot;, { ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::LOGISTIC), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::LOGISTIC), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::LOGISTIC), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::LOGISTIC), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::LOGISTIC), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::LOGISTIC), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::LOGISTIC), })), framework::dataset::make(&quot;Numclasses&quot;, { 1, 1, 1, 0, 1, 1, 1, 1 })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, false, false, false, true})), input_info, output_info, act_info, num_classes, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a3638fbc64e378fe2839dcf3c1f57cfdc',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(zip(zip(zip(framework::dataset::make(&quot;BoxEncodingsInfo&quot;, { TensorInfo(TensorShape(4U, 10U, 1U), 1, DataType::F32), TensorInfo(TensorShape(4U, 10U, 3U), 1, DataType::F32), TensorInfo(TensorShape(4U, 10U, 1U), 1, DataType::S8), TensorInfo(TensorShape(4U, 10U, 1U), 1, DataType::F32), TensorInfo(TensorShape(4U, 10U, 1U), 1, DataType::F32), TensorInfo(TensorShape(4U, 10U, 1U), 1, DataType::QASYMM8)}), framework::dataset::make(&quot;ClassPredsInfo&quot;,{ TensorInfo(TensorShape(3U, 10U), 1, DataType::F32), TensorInfo(TensorShape(3U, 10U), 1, DataType::F32), TensorInfo(TensorShape(3U, 10U), 1, DataType::F32), TensorInfo(TensorShape(3U, 10U), 1, DataType::F32), TensorInfo(TensorShape(3U, 10U), 1, DataType::F32), TensorInfo(TensorShape(3U, 10U), 1, DataType::QASYMM8)})), framework::dataset::make(&quot;AnchorsInfo&quot;,{ TensorInfo(TensorShape(4U, 10U, 1U), 1, DataType::F32), TensorInfo(TensorShape(4U, 10U, 1U), 1, DataType::F32), TensorInfo(TensorShape(4U, 10U, 1U), 1, DataType::F32), TensorInfo(TensorShape(4U, 10U, 1U), 1, DataType::F32), TensorInfo(TensorShape(4U, 10U, 1U), 1, DataType::F32), TensorInfo(TensorShape(4U, 10U, 1U), 1, DataType::QASYMM8)})), framework::dataset::make(&quot;OutputBoxInfo&quot;, { TensorInfo(TensorShape(4U, 3U, 1U), 1, DataType::F32), TensorInfo(TensorShape(4U, 3U, 1U), 1, DataType::F32), TensorInfo(TensorShape(4U, 3U, 1U), 1, DataType::S8), TensorInfo(TensorShape(4U, 3U, 1U), 1, DataType::F32), TensorInfo(TensorShape(1U, 5U, 1U), 1, DataType::F32), TensorInfo(TensorShape(4U, 3U, 1U), 1, DataType::F32)})), framework::dataset::make(&quot;OuputClassesInfo&quot;,{ TensorInfo(TensorShape(3U, 1U), 1, DataType::F32), TensorInfo(TensorShape(3U, 1U), 1, DataType::F32), TensorInfo(TensorShape(3U, 1U), 1, DataType::F32), TensorInfo(TensorShape(3U, 1U), 1, DataType::F32), TensorInfo(TensorShape(3U, 1U), 1, DataType::F32), TensorInfo(TensorShape(6U, 1U), 1, DataType::F32)})), framework::dataset::make(&quot;OutputScoresInfo&quot;,{ TensorInfo(TensorShape(3U, 1U), 1, DataType::F32), TensorInfo(TensorShape(3U, 1U), 1, DataType::F32), TensorInfo(TensorShape(3U, 1U), 1, DataType::F32), TensorInfo(TensorShape(3U, 1U), 1, DataType::F32), TensorInfo(TensorShape(3U, 1U), 1, DataType::F32), TensorInfo(TensorShape(6U, 1U), 1, DataType::F32)})), framework::dataset::make(&quot;NumDetectionsInfo&quot;,{ TensorInfo(TensorShape(1U), 1, DataType::F32), TensorInfo(TensorShape(1U), 1, DataType::F32), TensorInfo(TensorShape(1U), 1, DataType::F32), TensorInfo(TensorShape(1U), 1, DataType::F32), TensorInfo(TensorShape(1U), 1, DataType::F32), TensorInfo(TensorShape(1U), 1, DataType::F32)})), framework::dataset::make(&quot;DetectionPostProcessLayerInfo&quot;,{ DetectionPostProcessLayerInfo(3, 1, 0.0f, 0.5f, 2, {0.1f, 0.1f, 0.1f, 0.1f}), DetectionPostProcessLayerInfo(3, 1, 0.0f, 0.5f, 2, {0.1f, 0.1f, 0.1f, 0.1f}), DetectionPostProcessLayerInfo(3, 1, 0.0f, 0.5f, 2, {0.1f, 0.1f, 0.1f, 0.1f}), DetectionPostProcessLayerInfo(3, 1, 0.0f, 1.5f, 2, {0.0f, 0.1f, 0.1f, 0.1f}), DetectionPostProcessLayerInfo(3, 1, 0.0f, 0.5f, 2, {0.1f, 0.1f, 0.1f, 0.1f}), DetectionPostProcessLayerInfo(3, 1, 0.0f, 0.5f, 2, {0.1f, 0.1f, 0.1f, 0.1f})})), framework::dataset::make(&quot;Expected&quot;, {true, false, false, false, false, false })), box_encodings_info, classes_info, anchors_info, output_boxes_info, output_classes_info, output_scores_info, num_detection_info, detect_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#af2967f780bdc7641cc752b34ab56dcfe',1,'arm_compute::test::validation::DATA_TEST_CASE(Real, framework::DatasetMode::ALL, shapes_1d_dft, shape)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a7911504775931fa5b66c9a446dd9f83a',1,'arm_compute::test::validation::DATA_TEST_CASE(Complex, framework::DatasetMode::ALL, shapes_1d_dft, shape)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#aee1e1d413bf240fdc67ee001d37f3854',1,'arm_compute::test::validation::DATA_TEST_CASE(Complex, framework::DatasetMode::ALL, shapes_2d_dft, shape)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a5c04187b148810b65acce6528c9b83be',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(zip(framework::dataset::make(&quot;BoundingBox&quot;,{ TensorInfo(TensorShape(4U, 100U), 1, DataType::F32), TensorInfo(TensorShape(1U, 4U, 2U), 1, DataType::F32), TensorInfo(TensorShape(4U, 2U), 1, DataType::S32), TensorInfo(TensorShape(4U, 3U), 1, DataType::F32), TensorInfo(TensorShape(4U, 66U), 1, DataType::F32), TensorInfo(TensorShape(4U, 100U), 1, DataType::F32), TensorInfo(TensorShape(4U, 100U), 1, DataType::F32), TensorInfo(TensorShape(4U, 100U), 1, DataType::F32), TensorInfo(TensorShape(4U, 100U), 1, DataType::F32), TensorInfo(TensorShape(4U, 100U), 1, DataType::F32), }), framework::dataset::make(&quot;Scores&quot;, { TensorInfo(TensorShape(100U), 1, DataType::F32), TensorInfo(TensorShape(37U, 2U, 13U, 27U), 1, DataType::F32), TensorInfo(TensorShape(4U), 1, DataType::F32), TensorInfo(TensorShape(3U), 1, DataType::U8), TensorInfo(TensorShape(66U), 1, DataType::F32), TensorInfo(TensorShape(100U), 1, DataType::F32), TensorInfo(TensorShape(100U), 1, DataType::F32), TensorInfo(TensorShape(100U), 1, DataType::F32), TensorInfo(TensorShape(100U), 1, DataType::F32), TensorInfo(TensorShape(100U), 1, DataType::F32), })), framework::dataset::make(&quot;Indices&quot;, { TensorInfo(TensorShape(100U), 1, DataType::S32), TensorInfo(TensorShape(100U), 1, DataType::S32), TensorInfo(TensorShape(4U), 1, DataType::S32), TensorInfo(TensorShape(3U), 1, DataType::S32), TensorInfo(TensorShape(200U), 1, DataType::S32), TensorInfo(TensorShape(100U), 1, DataType::F32), TensorInfo(TensorShape(100U), 1, DataType::S32), TensorInfo(TensorShape(100U), 1, DataType::S32), TensorInfo(TensorShape(100U), 1, DataType::S32), TensorInfo(TensorShape(100U), 1, DataType::S32), })), framework::dataset::make(&quot;max_output&quot;, { 10U, 2U, 4U, 3U, 66U, 1U, 0U, 10000U, 100U, 10U, })), framework::dataset::make(&quot;score_threshold&quot;, { 0.1f, 0.4f, 0.2f, 0.8f, 0.3f, 0.01f, 0.5f, 0.45f, -1.f, 0.5f, })), framework::dataset::make(&quot;nms_threshold&quot;, { 0.3f, 0.7f, 0.1f, 0.13f, 0.2f, 0.97f, 0.76f, 0.87f, 0.1f, 10.f, })), framework::dataset::make(&quot;Expected&quot;, { true, false, false, false, true, false, false, true, false, false })), bbox_info, scores_info, indices_info, max_out, score_threshold, nms_threshold, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a822e5814a7ccc966d5bac4d5f2fb0ebe',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;PredictionsInfo&quot;, { TensorInfo(TensorShape(20, 10), 1, DataType::F32), TensorInfo(TensorShape(10, 20), 1, DataType::F16), TensorInfo(TensorShape(20, 10), 1, DataType::S8), TensorInfo(TensorShape(10, 10, 10), 1, DataType::F32), TensorInfo(TensorShape(20, 10), 1, DataType::F32)}), framework::dataset::make(&quot;TargetsInfo&quot;,{ TensorInfo(TensorShape(10), 1, DataType::U32), TensorInfo(TensorShape(10), 1, DataType::U32), TensorInfo(TensorShape(10), 1, DataType::U32), TensorInfo(TensorShape(10), 1, DataType::U32), TensorInfo(TensorShape(10), 1, DataType::U32)})), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(10), 1, DataType::U8), TensorInfo(TensorShape(10), 1, DataType::U8), TensorInfo(TensorShape(10), 1, DataType::U8), TensorInfo(TensorShape(10), 1, DataType::U8), TensorInfo(TensorShape(1), 1, DataType::U8)})), framework::dataset::make(&quot;k&quot;,{ 0, 1, 2, 3, 4 })), framework::dataset::make(&quot;Expected&quot;, {true, false, false, false, false })), prediction_info, targets_info, output_info, k, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a7adca64f0e6de4b6f9ce64c45412fe6d',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(concat(datasets::SmallShapes(), datasets::LargeShapes()), CNNDataTypes), framework::dataset::make(&quot;InPlace&quot;, { false, true })), shape, data_type, in_place)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#abe83a791686e736dc7955008a7cf5879',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(combine(datasets::SmallRandomBatchNormalizationLayerDataset(), data_GB), framework::dataset::make(&quot;DataType&quot;, { DataType::F32 })), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW })), shape0, shape1, epsilon, use_beta, use_gamma, dt, data_layout)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ac4cf9f80e1617ecf7e71c811ea3ce390',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(datasets::SmallConvolutionLayerReducedDataset(), CNNDataTypes), ActivationFunctionsDataset), input_shape, weights_shape, bias_shape, output_shape, info, dilation, data_type, act_info)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a5cfdd05c16dfa9aa56d6db3d3d58bab3',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(framework::dataset::concat(datasets::SmallFullyConnectedLayerDataset(), datasets::LargeFullyConnectedLayerDataset()), FullyConnectedParameters), CNNDataTypes), src_shape, weights_shape, bias_shape, dst_shape, transpose_weights, reshape_weights, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a752981762f5617f513d6f1aaf41c1380',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(framework::dataset::concat(datasets::SmallGEMMDataset(), datasets::LargeGEMMDataset()), CNNDataTypes), shape_a, shape_b, shape_c, output_shape, alpha, beta, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a539c8825b54233673d99ba188a6bcc49',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(datasets::RandomNormalizePlanarYUVLayerDataset(), framework::dataset::make(&quot;DataType&quot;, { DataType::F16 })), shape0, shape1, dt)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a7a6be9a28cd340cd10813b2be8d1a6ef',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F16), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F16), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 16U, 8U), 1, DataType::F16), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F16), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F16), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F16), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 16U, 8U), 1, DataType::F16), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F16), TensorInfo(TensorShape(30U, 11U, 2U), 1, DataType::F16), })), framework::dataset::make(&quot;MSTDInfo&quot;,{ TensorInfo(TensorShape(2U), 1, DataType::F16), TensorInfo(TensorShape(2U), 1, DataType::F16), TensorInfo(TensorShape(2U), 1, DataType::U8), TensorInfo(TensorShape(8U), 1, DataType::F16), TensorInfo(TensorShape(6U), 1, DataType::F16), TensorInfo(TensorShape(2U), 1, DataType::F16), })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, true, false, false })), input_info, output_info, msd_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a6d8fd03c0a5b244088ffbf4c16000816',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(15U, 13U, 5U), 1, DataType::F32), TensorInfo(TensorShape(13U, 13U, 5U), 1, DataType::F32), TensorInfo(TensorShape(13U, 13U, 5U), 1, DataType::F32), }), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F16), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(30U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(25U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(1U, 1U, 5U), 1, DataType::F32), TensorInfo(TensorShape(2U, 2U, 5U), 1, DataType::F32), TensorInfo(TensorShape(1U, 1U, 5U), 1, DataType::F32), })), framework::dataset::make(&quot;PoolInfo&quot;, { PoolingLayerInfo(PoolingType::AVG, 3, DataLayout::NCHW, PadStrideInfo(1, 1, 0, 0)), PoolingLayerInfo(PoolingType::AVG, 3, DataLayout::NCHW, PadStrideInfo(1, 1, 0, 0)), PoolingLayerInfo(PoolingType::AVG, 3, DataLayout::NCHW, PadStrideInfo(1, 1, 0, 0)), PoolingLayerInfo(PoolingType::AVG, 3, DataLayout::NCHW, PadStrideInfo(1, 1, 0, 0)), PoolingLayerInfo(PoolingType::AVG, 2, DataLayout::NCHW, PadStrideInfo(1, 1, 2, 0)), PoolingLayerInfo(PoolingType::AVG, 2, DataLayout::NCHW, PadStrideInfo(1, 1, 0, 2)), PoolingLayerInfo(PoolingType::L2, 3, DataLayout::NCHW, PadStrideInfo(1, 1, 0, 0)), PoolingLayerInfo(PoolingType::AVG, DataLayout::NCHW), PoolingLayerInfo(PoolingType::MAX, DataLayout::NCHW), PoolingLayerInfo(PoolingType::AVG, DataLayout::NCHW), })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, false, false, false, false, false, true })), input_info, output_info, pool_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a21aee323ab2c48634afcdaa5d1d87901',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(combine(combine(concat(datasets::MediumShapes(), datasets::LargeShapes()), ScaleDataTypes), framework::dataset::make(&quot;InterpolationPolicy&quot;, { InterpolationPolicy::NEAREST_NEIGHBOR })), datasets::BorderModes()), datasets::SamplingPolicies()), shape, data_type, policy, border_mode, sampling_policy)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a0a2ea332437f7dbd127adafbdb4d86b6',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(concat(datasets::SoftmaxLayerSmallShapes(), datasets::SoftmaxLayerLargeShapes()), CNNDataTypes), shape, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a9e109b3ab75f2113c4158b7187f899c4',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(concat(datasets::Small2DShapes(), datasets::Large2DShapes()), framework::dataset::make(&quot;DataType&quot;, { DataType::F16, DataType::F32 })), shape, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a29fea97db54d4560d46d8752ec59eb07',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F16), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;ActivationInfo&quot;, { ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), })), framework::dataset::make(&quot;Expected&quot;, { false, true, false})), input_info, output_info, act_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a2c9767fa8091d865f4ce1d8af0e88821',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 3U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 3U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 16U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 16U, 16U, 2U), 1, DataType::F32) }), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(27U, 3U, 1U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 3U, 1U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 16U, 2U), 1, DataType::S32), TensorInfo(TensorShape(32U, 16U, 1U, 2U), 1, DataType::F32) })), framework::dataset::make(&quot;Axis&quot;, { 4, 0, 2, 0 })), framework::dataset::make(&quot;Operation&quot;, { ReductionOperation::ARG_IDX_MAX, ReductionOperation::ARG_IDX_MAX, ReductionOperation::ARG_IDX_MAX, ReductionOperation::MEAN_SUM })), framework::dataset::make(&quot;Expected&quot;, { false, false, true, false })), input_info, output_info, axis, operation, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a941173879bda166e543430ccddfcd4e4',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;Input1Info&quot;, { TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), }), framework::dataset::make(&quot;Input2Info&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(1U, 13U, 2U), 1, DataType::S16), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S16), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S16), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::S16), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;Expected&quot;, { true, true, false, false, false})), input1_info, input2_info, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a61baee04220ea86b55dfa9e70d874cec',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;Input1Info&quot;, { TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8), }), framework::dataset::make(&quot;Input2Info&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S16), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8), })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S16), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8), })), framework::dataset::make(&quot;ConvertPolicy&quot;,{ ConvertPolicy::WRAP, ConvertPolicy::SATURATE, ConvertPolicy::WRAP, ConvertPolicy::SATURATE, ConvertPolicy::WRAP, ConvertPolicy::WRAP, })), framework::dataset::make(&quot;Expected&quot;, { true, true, false, false, false, false, false})), input1_info, input2_info, output_info, policy, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a88360f5eb70b5f76d59e02b0f36d7b08',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(combine(datasets::SmallRandomBatchNormalizationLayerDataset(), combine(framework::dataset::make(&quot;UseBeta&quot;, { false, true }), framework::dataset::make(&quot;UseGamma&quot;, { false, true }))), framework::dataset::make(&quot;DataType&quot;, { DataType::F32 })), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), shape0, shape1, epsilon, use_beta, use_gamma, dt, data_layout)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ab62d37f727e4d9bcafb222b2d203acf8',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F16), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;MVBGInfo&quot;,{ TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F16), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(5U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), })), framework::dataset::make(&quot;ActivationLayerInfo&quot;,{ ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::BOUNDED_RELU, 6.f), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::BOUNDED_RELU, 6.f), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::LU_BOUNDED_RELU, 6.f), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::LU_BOUNDED_RELU, 2.f, 6.f), })), framework::dataset::make(&quot;Expected&quot;, { true, false, false, false, false, false})), input_info, output_info, mvbg_info, act_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a6dfffa3ac67a2f59c9a5baee840651fd',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(framework::dataset::make(&quot;Weights&quot;, { TensorInfo(TensorShape(32U, 13U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U, 2U), 1, DataType::F16), TensorInfo(TensorShape(32U, 13U, 2U, 1U), 1, DataType::F32), }), framework::dataset::make(&quot;MVBGInfo&quot;,{ TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F16), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(5U), 1, DataType::F32), })), framework::dataset::make(&quot;Expected&quot;, { true, false, false, false})), weights_info, mvbg_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ae52bb8e9114b30c87b30348b1d4deab5',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(32U, 13U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(16U, 8U, 2U, 16U), 1, DataType::F32), TensorInfo(TensorShape(16U, 8U, 2U, 16U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U, 2U, 4U), 1, DataType::F32), }), framework::dataset::make(&quot;BlockShapeInfo&quot;,{ TensorInfo(TensorShape(2U, 2U), 1, DataType::S32), TensorInfo(TensorShape(2U, 2U), 1, DataType::S32), TensorInfo(TensorShape(2U, 4U), 1, DataType::S32), TensorInfo(TensorShape(4U, 2U), 1, DataType::S32), TensorInfo(TensorShape(2U, 2U), 1, DataType::F16), TensorInfo(TensorShape(2U, 2U), 1, DataType::S32), })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(64U, 16U, 2U, 1U), 1, DataType::F32), TensorInfo(TensorShape(32U, 32U, 2U, 1U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U, 2U), 1, DataType::F16), TensorInfo(TensorShape(32U, 13U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;Expected&quot;, { true, true, true, false, false, false})), input_info, block_shape_info, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a14bcbfe5c0034af367cd66e4880f7e07',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(concat(datasets::Small2DShapes(), datasets::Large2DShapes()), data), framework::dataset::make(&quot;Format&quot;, Format::U8)), shape, gradient_size, normalization, border_mode, format)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ab4f1e8c8d3eef49fdc3b0afd81c15ba0',1,'arm_compute::test::validation::DATA_TEST_CASE(RGBA, framework::DatasetMode::ALL, combine(datasets::Small2DShapes(), framework::dataset::make(&quot;FormatType&quot;, { Format::RGB888, Format::RGBA8888 })), shape, format)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#aefb03bbb428b161af375b97d075c9a13',1,'arm_compute::test::validation::DATA_TEST_CASE(YUV, framework::DatasetMode::ALL, combine(datasets::Small2DShapes(), framework::dataset::make(&quot;FormatType&quot;, { Format::YUYV422, Format::UYVY422 })), shape, format)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#aae6e852b77301ed37776a2f7cd93b064',1,'arm_compute::test::validation::DATA_TEST_CASE(YUVPlanar, framework::DatasetMode::ALL, combine(datasets::Small2DShapes(), framework::dataset::make(&quot;FormatType&quot;, { Format::IYUV, Format::YUV444, Format::NV12, Format::NV21 })), shape, format)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a2d3d6603060724a479df2b5e1a24e3e9',1,'arm_compute::test::validation::DATA_TEST_CASE(RGBA, framework::DatasetMode::ALL, combine(datasets::Small2DShapes(), ChannelExtractRGBADataset), shape, format, channel)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a495f878ba4ab95e9d3f8a151b502f059',1,'arm_compute::test::validation::DATA_TEST_CASE(YUV, framework::DatasetMode::ALL, combine(datasets::Small2DShapes(), ChannelExtractYUVDataset), shape, format, channel)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a408064ad787f5a169b92c8bc6a88488a',1,'arm_compute::test::validation::DATA_TEST_CASE(YUVPlanar, framework::DatasetMode::ALL, combine(datasets::Small2DShapes(), ChannelExtractYUVPlanarDataset), shape, format, channel)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a62d4f856c1a8891d8461f191eed5bd9d',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(datasets::SmallRandomChannelShuffleLayerDataset(), framework::dataset::make(&quot;DataType&quot;, { DataType::S8, DataType::U8, DataType::S16, DataType::U16, DataType::U32, DataType::S32, DataType::F32 })), shape, num_groups, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a6febcfe6c8584f2def828a3cd49d1531',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(10U, 12U, 1U, 2U), 1, DataType::S64), TensorInfo(TensorShape(10U, 12U, 1U, 2U), 1, DataType::F32), TensorInfo(TensorShape(10U, 12U, 1U, 2U), 1, DataType::F32), TensorInfo(TensorShape(10U, 12U, 1U, 2U), 1, DataType::F32), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(3U, 4U, 10U, 2U), 1, DataType::F16), TensorInfo(TensorShape(3U, 4U, 10U, 2U), 1, DataType::F16), TensorInfo(TensorShape(3U, 3U, 10U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 4U, 10U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;ConvolvedWidth&quot;, { 3, 3, 3, 3, 3 })), framework::dataset::make(&quot;ConvolvedHeight&quot;, { 4, 4, 4, 4, 4 })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, true })), input_info, output_info, convolved_width, convolved_height, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a29cffdb4cc566d262e1150a4e8375d49',1,'arm_compute::test::validation::DATA_TEST_CASE(YUV, framework::DatasetMode::ALL, combine(datasets::Small2DShapes(), ColorConvert_YUYVDataset_to_RGBDataset), shape, src_format, dst_format)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ac16ee018eeceda8c06745acee046d421',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;Input1Info&quot;, { TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), }), framework::dataset::make(&quot;Input2Info&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S32), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, true})), input1_info, input2_info, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#aa6abee4ae21d2aaf1c234617ac5bca19',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::NIGHTLY, combine(combine(combine(concat(datasets::SmallShapes(), datasets::LargeShapes()), framework::dataset::make(&quot;DataType&quot;, { DataType::U8, DataType::S16 })), datasets::BorderModes()), framework::dataset::make(&quot;filter_size&quot;, { 3 })), shape, output_data_type, border_mode, filter_size)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a53950503f84613370c1874e9ec36f738',1,'arm_compute::test::validation::DATA_TEST_CASE(ValidateConvolutionMethod, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(18U, 18U, 32U), 1, DataType::F32), TensorInfo(TensorShape(23U, 27U, 32U, 4U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 1U), 1, DataType::F32), TensorInfo(TensorShape(33U, 27U, 7U, 4U), 1, DataType::F32) }), framework::dataset::make(&quot;WeightsInfo&quot;, { TensorInfo(TensorShape(3U, 3U, 32U, 21U), 1, DataType::F32), TensorInfo(TensorShape(5U, 5U, 32U, 21U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 5U, 21U), 1, DataType::F32), TensorInfo(TensorShape(5U, 5U, 7U, 16U), 1, DataType::F16) })), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(16U, 16U, 21U), 1, DataType::F32), TensorInfo(TensorShape(19U, 23U, 21U, 4U), 1, DataType::F32), TensorInfo(TensorShape(11U, 25U, 21U), 1, DataType::F32), TensorInfo(TensorShape(11U, 12U, 16U, 4U), 1, DataType::F32) })), framework::dataset::make(&quot;ConvInfo&quot;, { PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(2, 1, 0, 0), PadStrideInfo(3, 2, 1, 0) })), framework::dataset::make(&quot;FastMath&quot;, { true, true, false, false })), framework::dataset::make(&quot;Expected&quot;, { ConvolutionMethod::WINOGRAD, ConvolutionMethod::WINOGRAD, ConvolutionMethod::GEMM, ConvolutionMethod::GEMM })), input_info, weights_info, output_info, conv_info, fast_math, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ab44b66bad182905ba55f96ee494e8e73',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::U8), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S16), TensorInfo(TensorShape(32U, 11U, 2U), 1, DataType::U8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::U8), })), framework::dataset::make(&quot;Expected&quot;, { false, false, true})), input_info, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a71b2bcfadb2d0be741a44200a2940692',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL,(combine(datasets::SmallDeconvolutionShapes(), framework::dataset::make(&quot;DataType&quot;, DataType::F32))), input_shape, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a5c75c90dfaf4c3c6a8c246b7c898af50',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U16), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S16), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::U8), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::U8), })), framework::dataset::make(&quot;Policy&quot;,{ ConvertPolicy::WRAP, ConvertPolicy::WRAP, ConvertPolicy::WRAP, ConvertPolicy::WRAP, ConvertPolicy::WRAP, ConvertPolicy::WRAP, ConvertPolicy::WRAP, })), framework::dataset::make(&quot;Shift&quot;,{ 1, 1, 1, 1, 1, 1, 8, 1, })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, true})), input_info, output_info, policy, shift, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a542f3ac6e2b72fc1990b27519c9cf3f5',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(datasets::SmallShapes(), framework::dataset::make(&quot;ConvertPolicy&quot;, { ConvertPolicy::SATURATE, ConvertPolicy::WRAP })), DepthConvertLayerZeroShiftDataset), shape, policy, shift)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a13906c8cbe4233df5fef380802decdd9',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate3x3, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(32U, 18U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 18U, 3U), 1, DataType::F32), TensorInfo(TensorShape(32U, 18U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 18U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 18U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(32U, 18U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 18U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 18U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), }), framework::dataset::make(&quot;WeightsInfo&quot;, { TensorInfo(TensorShape(3U, 3U, 2U, 2U), 1, DataType::F16), TensorInfo(TensorShape(3U, 3U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(5U, 5U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(3U, 3U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;BiasesInfo&quot;, { TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::S32), TensorInfo(TensorShape(4U), 1, DataType::F32), TensorInfo(TensorShape(2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), })), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(30U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(30U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(30U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(30U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(30U, 16U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(30U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(30U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 18U, 2U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;ConvInfo&quot;, { PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(4, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), })), framework::dataset::make(&quot;DepthMultiplier&quot;, { 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, })), framework::dataset::make(&quot;Dilation&quot;, { Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(25U, 1U), Size2D(0U, 1U), Size2D(1U, 1U), })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, false, false, false, false, false, false, true })), input_info, weights_info, biases_info, output_info, conv_info, depth_multiplier, dilation, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a7b6324e6a1f3b0e53d71a14617026fcd',1,'arm_compute::test::validation::DATA_TEST_CASE(ValidateGeneric, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 3U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 8U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 8U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 8U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 8U), 1, DataType::QASYMM8), }), framework::dataset::make(&quot;WeightsInfo&quot;, { TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F16), TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 16U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 16U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 16U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 24U), 1, DataType::QASYMM8), })), framework::dataset::make(&quot;BiasesInfo&quot;, { TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(4U), 1, DataType::F32), TensorInfo(TensorShape(2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(16U), 1, DataType::F32), TensorInfo(TensorShape(16U), 1, DataType::F32), TensorInfo(TensorShape(16U), 1, DataType::F32), TensorInfo(TensorShape(24U), 1, DataType::S32), })), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 16U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 16U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 16U), 1, DataType::F32), TensorInfo(TensorShape(32U, 11U, 24U), 1, DataType::QASYMM8), })), framework::dataset::make(&quot;ConvInfo&quot;, { PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 1, 0), })), framework::dataset::make(&quot;DepthMultiplier&quot;, { 1, 1, 3, 1, 1, 1, 2, 2, 2, 3, })), framework::dataset::make(&quot;Dilation&quot;, { Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(25U, 1U), Size2D(0U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, false, false, false, false, false, false })), input_info, weights_info, biases_info, output_info, conv_info, depth_multiplier, dilation, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a0840a58374486ee7d8ca3c3eb2c06430',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(combine(combine(combine(combine(combine(combine(combine(combine(width_values_precommit, height_values_precommit), channel_values_precommit), batch_values_precommit), kernel_sz_values_precommit), depth_multiplier_values), dilation_values), stride_values), padding_valid_values), data_type_values), data_layout_values), width_value, height_value, channel_value, batch_value, kernel_sz_value, depth_multiplier_value, dilation_value, stride_value, padding_valid_value, data_type_value, data_layout_value)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#afc6d1fe58150b29f5ba3ac9d7b1385de',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(16U, 16U, 16U, 5U), 1, DataType::F32), TensorInfo(TensorShape(16U, 16U, 16U, 5U), 1, DataType::QASYMM8), TensorInfo(TensorShape(16U, 16U, 2U, 5U), 1, DataType::QASYMM8), TensorInfo(TensorShape(17U, 16U, 16U, 5U), 1, DataType::QASYMM8), TensorInfo(TensorShape(16U, 16U, 16U, 5U), 1, DataType::QASYMM8), TensorInfo(TensorShape(16U, 16U, 16U, 5U), 1, DataType::QASYMM8_SIGNED), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(16U, 16U, 16U, 5U), 1, DataType::F32), TensorInfo(TensorShape(16U, 16U, 16U, 5U), 1, DataType::U8), TensorInfo(TensorShape(16U, 16U, 16U, 5U), 1, DataType::F32), TensorInfo(TensorShape(17U, 16U, 16U, 5U), 1, DataType::F32), TensorInfo(TensorShape(16U, 16U, 16U, 5U), 1, DataType::F32), TensorInfo(TensorShape(16U, 16U, 16U, 5U), 1, DataType::F32), })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, true, true, true })), input_info, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a11999ccf435b3a6fb0f2d378439184c4',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(datasets::SmallShapes(), data_types), shape, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a4393002100019a1d2fe5a825aaf2a966',1,'arm_compute::test::validation::DATA_TEST_CASE(ValidateConvolutionMethod, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(8U, 8U, 2U), 1, DataType::F32), TensorInfo(TensorShape(23U, 27U, 5U, 4U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 1U), 1, DataType::F32), TensorInfo(TensorShape(33U, 27U, 7U, 4U), 1, DataType::F32) }), framework::dataset::make(&quot;WeightsInfo&quot;, { TensorInfo(TensorShape(3U, 3U, 5U, 21U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 5U, 21U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 5U, 21U), 1, DataType::F32), TensorInfo(TensorShape(5U, 5U, 7U, 16U), 1, DataType::F16) })), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(6U, 6U, 1U), 1, DataType::F32), TensorInfo(TensorShape(21U, 25U, 21U, 4U), 1, DataType::F32), TensorInfo(TensorShape(11U, 25U, 21U), 1, DataType::F32), TensorInfo(TensorShape(11U, 12U, 16U, 4U), 1, DataType::F32) })), framework::dataset::make(&quot;ConvInfo&quot;, { PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(2, 1, 0, 0), PadStrideInfo(3, 2, 1, 0) })), framework::dataset::make(&quot;Dilation&quot;, { Size2D(1U, 2U), Size2D(2U, 1U), Size2D(2U, 2U), Size2D(3U, 3U) })), framework::dataset::make(&quot;Expected&quot;, { ConvolutionMethod::GEMM, ConvolutionMethod::GEMM, ConvolutionMethod::GEMM, ConvolutionMethod::GEMM })), input_info, weights_info, output_info, conv_info, dilation, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a69ea3c5dd19aaf289330db00e8cd20a8',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), }), framework::dataset::make(&quot;WeightsInfo&quot;,{ TensorInfo(TensorShape(3U, 3U, 2U, 4U), 1, DataType::F16), TensorInfo(TensorShape(3U, 3U, 3U, 4U), 1, DataType::F32), TensorInfo(TensorShape(9U, 9U, 2U, 4U), 1, DataType::F32), TensorInfo(TensorShape(5U, 3U, 2U, 4U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 4U, 3U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 4U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 4U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 4U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 4U), 1, DataType::F32), })), framework::dataset::make(&quot;BiasesInfo&quot;,{ TensorInfo(TensorShape(4U), 1, DataType::F32), TensorInfo(TensorShape(4U), 1, DataType::F32), TensorInfo(TensorShape(4U), 1, DataType::F32), TensorInfo(TensorShape(4U), 1, DataType::F32), TensorInfo(TensorShape(4U), 1, DataType::F32), TensorInfo(TensorShape(4U), 1, DataType::F32), TensorInfo(TensorShape(3U), 1, DataType::F32), TensorInfo(TensorShape(4U, 2U), 1, DataType::F32), TensorInfo(TensorShape(4U), 1, DataType::F32), })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(25U, 11U, 4U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 4U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 4U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 4U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 4U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 4U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 4U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 4U), 1, DataType::F32), TensorInfo(TensorShape(26U, 11U, 4U), 1, DataType::F32), })), framework::dataset::make(&quot;ConvInfo&quot;, { PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(3, 3, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), })), framework::dataset::make(&quot;ActivationInfo&quot;, { ActivationLayerInfo(), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU) })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, false, false, false, false, false })), input_info, weights_info, biases_info, output_info, conv_info, act_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ad0430585d83ec7ac6d5b857415d62906',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(datasets::SmallShapes(), framework::dataset::make(&quot;DataType&quot;, DataType::F32)), shape, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a283cdb9d06e3a1a3f1adfd69c8afa313',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;Input1Info&quot;, { TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), }), framework::dataset::make(&quot;Input2Info&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S32), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;Expected&quot;, { true, true, true, false, false})), input1_info, input2_info, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a5cc3776357bdc1a71c8731f249de098c',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, framework::dataset::concat(datasets::SmallShapes(), datasets::LargeShapes()), shape)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ac3938d0419a8ad75a8db12e53a7532ab',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;Input1Info&quot;, { TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::S32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(8U, 8U, 3U), 1, DataType::QASYMM8_SIGNED), TensorInfo(TensorShape(8U, 8U, 3U), 1, DataType::QASYMM8_SIGNED), TensorInfo(TensorShape(8U, 8U, 3U), 1, DataType::QASYMM8_SIGNED, QuantizationInfo(0.1f, 2)), }), framework::dataset::make(&quot;Input2Info&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::S32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S16), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(8U, 8U, 3U), 1, DataType::QASYMM8_SIGNED), TensorInfo(TensorShape(8U, 8U, 3U), 1, DataType::QASYMM8), TensorInfo(TensorShape(8U, 8U, 3U), 1, DataType::QASYMM8_SIGNED, QuantizationInfo(0.4f, 5)), })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::S32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S32), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(8U, 8U, 3U), 1, DataType::QASYMM8_SIGNED), TensorInfo(TensorShape(8U, 8U, 3U), 1, DataType::QASYMM8_SIGNED), TensorInfo(TensorShape(8U, 8U, 3U), 1, DataType::QASYMM8_SIGNED, QuantizationInfo(0.3f, 4)), })), framework::dataset::make(&quot;Expected&quot;, { true, true, true, false, false, true, false, false, false})), input1_info, input2_info, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a5752a39320f9a74a5f7e17fa184582d6',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;Input1Info&quot;, { TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::S32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(4U, 4U, 2U), 1, DataType::QASYMM8_SIGNED), TensorInfo(TensorShape(4U, 4U, 2U), 1, DataType::QASYMM8_SIGNED), TensorInfo(TensorShape(1U, 2U, 3U), 1, DataType::QASYMM8_SIGNED, QuantizationInfo(0.1f, 2)), }), framework::dataset::make(&quot;Input2Info&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::S32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S16), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(4U, 4U, 2U), 1, DataType::QASYMM8_SIGNED), TensorInfo(TensorShape(4U, 4U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(1U, 2U, 3U), 1, DataType::QASYMM8_SIGNED, QuantizationInfo(0.5f, 1)), })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::S32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S32), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(4U, 4U, 2U), 1, DataType::QASYMM8_SIGNED), TensorInfo(TensorShape(4U, 4U, 2U), 1, DataType::QASYMM8_SIGNED), TensorInfo(TensorShape(1U, 2U, 3U), 1, DataType::QASYMM8_SIGNED, QuantizationInfo(0.5f, 1)), })), framework::dataset::make(&quot;Expected&quot;, { true, true, true, false, false, true, false, false})), input1_info, input2_info, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a6f55e62cd4d1ec78047593c9b98316a6',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;Input1Info&quot;, { TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::S32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(1U, 1U, 2U), 1, DataType::QASYMM8_SIGNED), }), framework::dataset::make(&quot;Input2Info&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::S32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S16), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(1U, 1U, 2U), 1, DataType::QASYMM8_SIGNED), })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::S32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S32), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(1U, 1U, 2U), 1, DataType::QASYMM8, QuantizationInfo(0.3f, 1)), })), framework::dataset::make(&quot;Expected&quot;, { true, true, true, false, false, false})), input1_info, input2_info, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a02e4fa6ebedae23e8cd42c68038a489a',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(4U, 4U, 4U), 1, DataType::U8), TensorInfo(TensorShape(4U, 5U, 4U), 1, DataType::F32), TensorInfo(TensorShape(4U, 4U, 4U), 1, DataType::F32), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(64U), 1, DataType::F32), TensorInfo(TensorShape(64U), 1, DataType::F32), TensorInfo(TensorShape(64U), 1, DataType::F32), })), framework::dataset::make(&quot;Expected&quot;, { false, false, true})), input_info, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a4fbf0e6a1c8356ad0918515bb1310e1b',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(9U, 5U, 7U, 3U), 1, DataType::F32), TensorInfo(TensorShape(8U, 4U, 6U, 4U), 1, DataType::F32), TensorInfo(TensorShape(8U, 4U, 6U, 4U), 1, DataType::F32), TensorInfo(TensorShape(9U, 5U, 7U, 3U), 1, DataType::F32), TensorInfo(TensorShape(9U, 5U, 7U, 3U), 1, DataType::F32), TensorInfo(TensorShape(8U, 4U, 6U, 4U), 1, DataType::F32), }), framework::dataset::make(&quot;WeightsInfo&quot;,{ TensorInfo(TensorShape(315U, 271U), 1, DataType::F16), TensorInfo(TensorShape(192U, 192U), 1, DataType::F32), TensorInfo(TensorShape(192U, 192U), 1, DataType::F32), TensorInfo(TensorShape(217U, 315U), 1, DataType::F32), TensorInfo(TensorShape(217U, 315U), 1, DataType::F32), TensorInfo(TensorShape(192U, 192U), 1, DataType::F32), })), framework::dataset::make(&quot;BiasInfo&quot;,{ TensorInfo(TensorShape(271U), 1, DataType::F32), TensorInfo(TensorShape(192U), 1, DataType::F32), TensorInfo(TensorShape(192U), 1, DataType::F32), TensorInfo(TensorShape(271U), 1, DataType::F32), TensorInfo(TensorShape(271U), 1, DataType::F32), TensorInfo(TensorShape(192U), 1, DataType::F32), })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(271U, 3U), 1, DataType::F32), TensorInfo(TensorShape(192U, 4U), 1, DataType::F32), TensorInfo(TensorShape(192U, 4U), 1, DataType::F32), TensorInfo(TensorShape(271U, 3U), 1, DataType::F32), TensorInfo(TensorShape(271U, 3U), 1, DataType::F32), TensorInfo(TensorShape(192U, 4U), 1, DataType::F32), })), framework::dataset::make(&quot;TransposeWeights&quot;,{ true, true, false, true, true, true })), framework::dataset::make(&quot;ReshapedWeights&quot;,{ false, false, false, false, false, false})), framework::dataset::make(&quot;Expected&quot;, { false, true, true, false, false, true })), input_info, weights_info, bias_info, output_info, transpose_weights, reshaped_weights, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#aa1ce956bb3fa59263550acbad4f07423',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 27U), 1, DataType::F32), TensorInfo(TensorShape(27U, 27U), 1, DataType::F32), TensorInfo(TensorShape(27U, 27U), 1, DataType::F32), TensorInfo(TensorShape(27U, 27U), 1, DataType::F32), TensorInfo(TensorShape(5U, 5U, 5U, 5U, 5U), 1, DataType::F32), TensorInfo(TensorShape(27U, 27U), 1, DataType::F16), TensorInfo(TensorShape(27U, 27U), 1, DataType::F32), TensorInfo(TensorShape(27U, 27U), 1, DataType::F16), }), framework::dataset::make(&quot;IndicesInfo&quot;, { TensorInfo(TensorShape(10U), 1, DataType::U32), TensorInfo(TensorShape(10U), 1, DataType::U32), TensorInfo(TensorShape(10U), 1, DataType::U8), TensorInfo(TensorShape(10U, 10U), 1, DataType::U32), TensorInfo(TensorShape(10U), 1, DataType::U32), TensorInfo(TensorShape(10U), 1, DataType::U32), TensorInfo(TensorShape(10U), 1, DataType::U32), TensorInfo(TensorShape(10U), 1, DataType::U32), })), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(27U, 10U), 1, DataType::F32), TensorInfo(TensorShape(10U, 27U), 1, DataType::F32), TensorInfo(TensorShape(10U, 27U), 1, DataType::F32), TensorInfo(TensorShape(27U, 10U), 1, DataType::F32), TensorInfo(TensorShape(10U, 5U, 5U, 5U, 5U), 1, DataType::F32), TensorInfo(TensorShape(27U, 10U), 1, DataType::F32), TensorInfo(TensorShape(27U, 27U), 1, DataType::F32), TensorInfo(TensorShape(27U, 27U), 1, DataType::F16), })), framework::dataset::make(&quot;Axis&quot;, { 0, 1, -2, 0, 1, 0, 1, 2, -3, })), framework::dataset::make(&quot;Expected&quot;, { true, true, false, false, false, false, false, false })), input_info, indices_info, output_info, axis, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a11fd6d63471dbfe356bf3f9a8148d15a',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(arm_compute::test::datasets::SmallGatherDataset(), framework::dataset::make(&quot;DataType&quot;, { DataType::F32 })), input_shape, indices_shape, axis, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#aa2492479cb961e36976a096e29d2b9d4',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, framework::dataset::concat(datasets::SmallGEMMLowpDataset(), datasets::LargeGEMMLowpDataset()), shape_a, shape_b, shape_c, a_offset, b_offset)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a7fbe9343f61b58335701e0d7a6200ce1',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputAInfo&quot;, { TensorInfo(TensorShape(21U, 13U), 1, DataType::QASYMM8, QuantizationInfo(1.f/255, 10)), TensorInfo(TensorShape(21U, 13U), 1, DataType::S32), TensorInfo(TensorShape(20U, 13U), 1, DataType::QASYMM8, QuantizationInfo(1.f/255, 10)), TensorInfo(TensorShape(21U, 13U), 1, DataType::QASYMM8, QuantizationInfo(1.f/255, 10)), TensorInfo(TensorShape(16U, 32U), 1, DataType::QASYMM8, QuantizationInfo(1.f/255, 10)), }), framework::dataset::make(&quot;InputBInfo&quot;,{ TensorInfo(TensorShape(33U, 21U), 1, DataType::QASYMM8, QuantizationInfo(1.f/256, 10)), TensorInfo(TensorShape(33U, 21U), 1, DataType::QASYMM8, QuantizationInfo(1.f/256, 10)), TensorInfo(TensorShape(33U, 21U), 1, DataType::QASYMM8, QuantizationInfo(1.f/256, 10)), TensorInfo(TensorShape(33U, 21U), 1, DataType::QASYMM8, QuantizationInfo(1.f/256, 10)), TensorInfo(TensorShape(64U, 16U), 1, DataType::QASYMM8, QuantizationInfo(1.f/256, 10)), })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(33U, 13U), 1, DataType::S32), TensorInfo(TensorShape(33U, 13U), 1, DataType::S32), TensorInfo(TensorShape(33U, 13U), 1, DataType::S32), TensorInfo(TensorShape(8U, 11U), 1, DataType::S32), TensorInfo(TensorShape(64U, 32U), 1, DataType::S32), })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, true })), a_info, b_info, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a39e8116f6234a2d52f9c819fe6ca1c90',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputAInfo&quot;, { TensorInfo(TensorShape(21U, 13U), 1, DataType::S32), TensorInfo(TensorShape(21U, 13U), 1, DataType::S32), TensorInfo(TensorShape(20U, 13U), 1, DataType::S32), }), framework::dataset::make(&quot;InputBInfo&quot;,{ TensorInfo(TensorShape(21U), 1, DataType::S32), TensorInfo(TensorShape(21U), 1, DataType::S32), TensorInfo(TensorShape(20U), 1, DataType::S32), })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(21U, 13U), 1, DataType::QASYMM8), TensorInfo(TensorShape(21U, 13U), 1, DataType::QASYMM8), TensorInfo(TensorShape(20U, 13U), 1, DataType::S32), })), framework::dataset::make(&quot;Min&quot;,{ 0, 8, 13, })), framework::dataset::make(&quot;Max&quot;,{ 205, 300, 180, })), framework::dataset::make(&quot;Expected&quot;, { true, false, false })), a_info, b_info, output_info, min, max, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a8ea4066e4b7f08230e83c04145081ed1',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputAInfo&quot;, { TensorInfo(TensorShape(21U, 13U), 1, DataType::F32), TensorInfo(TensorShape(21U, 13U), 1, DataType::S32), TensorInfo(TensorShape(20U, 13U), 1, DataType::S32), TensorInfo(TensorShape(21U, 13U), 1, DataType::S32), }), framework::dataset::make(&quot;InputBInfo&quot;,{ TensorInfo(TensorShape(21U), 1, DataType::S32), TensorInfo(TensorShape(21U), 1, DataType::S32), TensorInfo(TensorShape(20U), 1, DataType::S32), TensorInfo(TensorShape(21U), 1, DataType::S32), })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(21U, 13U), 1, DataType::QASYMM8_SIGNED), TensorInfo(TensorShape(21U, 13U), 1, DataType::QASYMM8_SIGNED), TensorInfo(TensorShape(20U, 13U), 1, DataType::S32), TensorInfo(TensorShape(21U, 13U), 1, DataType::QASYMM8_SIGNED), })), framework::dataset::make(&quot;Min&quot;,{ -110, -130, -113, -113, })), framework::dataset::make(&quot;Max&quot;,{ 87, 140, 97, 97, })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, true })), a_info, b_info, output_info, min, max, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a45dfda69a9789e4e69365236d1dfcc35',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputAInfo&quot;, { TensorInfo(TensorShape(21U, 13U), 1, DataType::S32), TensorInfo(TensorShape(21U, 13U), 1, DataType::S32), TensorInfo(TensorShape(20U, 13U), 1, DataType::S32), }), framework::dataset::make(&quot;InputBInfo&quot;,{ TensorInfo(TensorShape(21U), 1, DataType::S32), TensorInfo(TensorShape(21U), 1, DataType::S32), TensorInfo(TensorShape(20U), 1, DataType::S32), })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(21U, 13U), 1, DataType::QSYMM16), TensorInfo(TensorShape(21U, 13U), 1, DataType::QSYMM16), TensorInfo(TensorShape(20U, 13U), 1, DataType::S32), })), framework::dataset::make(&quot;Min&quot;,{ -205, -60000, -180, })), framework::dataset::make(&quot;Max&quot;,{ 205, 60000, 180, })), framework::dataset::make(&quot;Expected&quot;, { true, false, false })), a_info, b_info, output_info, min, max, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a608d56d2d842ec96c43a583327f6dd35',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(datasets::SmallShapes(), quantize_down_int32_to_int16_scale_by_fixedpoint_cases), shape, result_fixedpoint_multiplier, result_shift, min, max, add_bias)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ad2631171dcf2992c9af515b0451018d7',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(datasets::Small2DShapes(), data), framework::dataset::make(&quot;Format&quot;, Format::U8)), shape, gradient_size, block_size, border_mode, format)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a38687ff5ecd0fb54fc81a36a3b28a32a',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo1&quot;, { TensorInfo(TensorShape(23U, 15U, 5U), 1, DataType::F32), TensorInfo(TensorShape(22U, 27U, 5U), 1, DataType::F32), TensorInfo(TensorShape(11U, 25U, 5U), 1, DataType::F32), TensorInfo(TensorShape(16U, 25U, 5U), 1, DataType::F32), TensorInfo(TensorShape(35U, 21U, 5U), 1, DataType::F32) }), framework::dataset::make(&quot;InputInfo2&quot;, { TensorInfo(TensorShape(23U, 15U, 4U), 1, DataType::F32), TensorInfo(TensorShape(22U, 127U, 5U), 1, DataType::F32), TensorInfo(TensorShape(11U, 26U, 5U), 1, DataType::F32), TensorInfo(TensorShape(16U, 25U, 5U), 1, DataType::F32), TensorInfo(TensorShape(35U, 10U, 5U), 1, DataType::F32) })), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(23U, 30U, 5U), 1, DataType::F16), TensorInfo(TensorShape(22U, 12U, 5U), 1, DataType::F32), TensorInfo(TensorShape(11U, 7U, 5U), 1, DataType::F32), TensorInfo(TensorShape(16U, 50U, 5U), 1, DataType::F32), TensorInfo(TensorShape(35U, 31U, 5U), 1, DataType::F32) })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, true, true })), input_info1, input_info2, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#afaa077b528557e3df09361e7a998f361',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(10U, 12U, 2U), 1, DataType::U8), TensorInfo(TensorShape(10U, 12U, 2U), 1, DataType::F32), TensorInfo(TensorShape(10U, 12U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(10U, 12U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(10U, 12U, 2U, 2U), 1, DataType::QASYMM8), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(3U, 4U, 10U, 2U), 1, DataType::F16), TensorInfo(TensorShape(3U, 4U, 10U, 2U), 1, DataType::F16), TensorInfo(TensorShape(3U, 3U, 10U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(3U, 4U, 10U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(18U, 80U, 1U, 2U), 1, DataType::QASYMM8), })), framework::dataset::make(&quot;HasBias&quot;, { true, true, true, false, false })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, true })), input_info, output_info, has_bias, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#aeb41135a5f841f7ff28c675e058b1b11',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(23U, 27U, 5U), 1, DataType::F32), TensorInfo(TensorShape(23U, 27U, 5U), 1, DataType::F32), TensorInfo(TensorShape(23U, 27U, 5U), 1, DataType::F32), TensorInfo(TensorShape(23U, 27U, 5U), 1, DataType::F32), TensorInfo(TensorShape(23U, 27U, 5U), 1, DataType::F32), TensorInfo(TensorShape(23U, 27U, 5U), 1, DataType::F32), TensorInfo(TensorShape(23U, 27U, 5U), 1, DataType::F32), TensorInfo(TensorShape(23U, 27U, 5U), 1, DataType::F32) }), framework::dataset::make(&quot;WeightsInfo&quot;,{ TensorInfo(TensorShape(3U, 3U, 5U, 21U, 275U), 1, DataType::F16), TensorInfo(TensorShape(3U, 3U, 5U, 21U, 275U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 5U, 21U, 275U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 5U, 21U, 274U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 5U, 21U, 275U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 5U, 21U, 275U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 5U, 21U, 275U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 5U, 21U, 275U), 1, DataType::F32) })), framework::dataset::make(&quot;BiasInfo&quot;, { TensorInfo(TensorShape(21U, 275U), 1, DataType::F32), TensorInfo(TensorShape(21U, 275U), 1, DataType::F16), TensorInfo(TensorShape(21U, 275U), 1, DataType::F32), TensorInfo(TensorShape(21U, 275U), 1, DataType::F32), TensorInfo(TensorShape(21U, 274U), 1, DataType::F32), TensorInfo(TensorShape(21U, 275U), 1, DataType::F32), TensorInfo(TensorShape(21U, 275U), 1, DataType::F32), TensorInfo(TensorShape(21U, 275U), 1, DataType::F32) })), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(11U, 25U, 21U), 1, DataType::F32), TensorInfo(TensorShape(11U, 25U, 21U), 1, DataType::F32), TensorInfo(TensorShape(11U, 25U, 21U), 1, DataType::F16), TensorInfo(TensorShape(11U, 25U, 21U), 1, DataType::F32), TensorInfo(TensorShape(11U, 25U, 21U), 1, DataType::F32), TensorInfo(TensorShape(11U, 25U, 22U), 1, DataType::F32), TensorInfo(TensorShape(11U, 25U, 21U), 1, DataType::F32), TensorInfo(TensorShape(11U, 25U, 21U), 1, DataType::F32) })), framework::dataset::make(&quot;PadStride&quot;, { PadStrideInfo(2, 1, 0, 0), PadStrideInfo(2, 1, 0, 0), PadStrideInfo(2, 1, 0, 0), PadStrideInfo(2, 1, 0, 0), PadStrideInfo(2, 1, 0, 0), PadStrideInfo(2, 1, 0, 0), PadStrideInfo(2, 1, 1, 0, 0, 0, DimensionRoundingType::FLOOR), PadStrideInfo(2, 1, 0, 0) })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, false, false, false, true })), input_info, weights_info, bias_info, output_info, conv_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a6498b224c9fcde95311d04ab92e9ecf1',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(framework::dataset::concat(datasets::SmallLocallyConnectedDataset(), datasets::LargeLocallyConnectedDataset()), framework::dataset::make(&quot;DataType&quot;, DataType::F32)), src_shape, weights_shape, bias_shape, dst_shape, info, dilation, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ac7d89f8b6714c942b5d8f0c363b863a2',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(datasets::SmallShapes(), framework::dataset::make(&quot;DataType&quot;, DataType::S16)), shape, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a8d2f5d2790a1491bfa9b326bb93a90c6',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F16), TensorInfo(TensorShape(27U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;NormInfo&quot;, { NormalizationLayerInfo(NormType::IN_MAP_1D, 5), NormalizationLayerInfo(NormType::IN_MAP_1D, 5), NormalizationLayerInfo(NormType::IN_MAP_1D, 4), NormalizationLayerInfo(NormType::IN_MAP_2D, 5), NormalizationLayerInfo(NormType::IN_MAP_1D, 5), NormalizationLayerInfo(NormType::CROSS_MAP, 1), })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, false, true })), input_info, output_info, norm_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a4276fdfdcd468299e18b3046d019e760',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32) }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F16), TensorInfo(TensorShape(28U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(29U, 17U, 2U), 1, DataType::F32), TensorInfo(TensorShape(29U, 15U, 4U, 3U), 1, DataType::F32), TensorInfo(TensorShape(27U, 14U, 3U, 4U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U, 3U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F16), TensorInfo(TensorShape(28U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(29U, 17U, 2U), 1, DataType::F32), TensorInfo(TensorShape(29U, 15U, 4U, 3U), 1, DataType::F32), TensorInfo(TensorShape(27U, 14U, 3U, 4U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U, 3U), 1, DataType::F32) })), framework::dataset::make(&quot;PaddingSize&quot;, { PaddingList{{0, 0}}, PaddingList{{1, 1}}, PaddingList{{1, 1}, {2, 2}}, PaddingList{{1, 1}, {1, 1}, {1, 1}, {1, 1}}, PaddingList{{0, 0}, {1, 0}, {0, 1}, {1, 2}}, PaddingList{{0, 0}, {0, 0}, {0, 0}, {1, 1}}, PaddingList{{0, 0}}, PaddingList{{1, 1}}, PaddingList{{1, 1}, {2, 2}}, PaddingList{{1, 1}, {1, 1}, {1, 1}, {1, 1}}, PaddingList{{0, 0}, {1, 0}, {0, 1}, {1, 2}}, PaddingList{{0, 0}, {0, 0}, {0, 0}, {1, 1}} })), framework::dataset::make(&quot;PaddingMode&quot;, { PaddingMode::CONSTANT, PaddingMode::CONSTANT, PaddingMode::CONSTANT, PaddingMode::CONSTANT, PaddingMode::CONSTANT, PaddingMode::CONSTANT, PaddingMode::REFLECT, PaddingMode::REFLECT, PaddingMode::REFLECT, PaddingMode::REFLECT, PaddingMode::REFLECT, PaddingMode::SYMMETRIC })), framework::dataset::make(&quot;Expected&quot;, { false, false, true, true, true, true, false, false, true, false, false, true })), input_info, output_info, padding, mode, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a3a139ac948058cd3e5fdeba3bc2bf544',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(framework::dataset::make(&quot;Input1Info&quot;, { TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8_SIGNED), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8_SIGNED), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8_SIGNED), }), framework::dataset::make(&quot;Input2Info&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S16), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8_SIGNED), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8_SIGNED), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8_SIGNED), })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S16), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8_SIGNED), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8_SIGNED), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8_SIGNED), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8_SIGNED), })), framework::dataset::make(&quot;Scale&quot;,{ scale_unity, scale_unity, scale_unity, -1.f, scale_unity, scale_unity, scale_unity, scale_unity, scale_unity, scale_unity, scale_unity, scale_unity, scale_unity})), framework::dataset::make(&quot;OverflowPolicy&quot;,{ ConvertPolicy::WRAP, ConvertPolicy::WRAP, ConvertPolicy::WRAP, ConvertPolicy::WRAP, ConvertPolicy::WRAP, ConvertPolicy::WRAP, ConvertPolicy::WRAP, ConvertPolicy::WRAP, ConvertPolicy::SATURATE, ConvertPolicy::WRAP, ConvertPolicy::WRAP, ConvertPolicy::SATURATE, ConvertPolicy::WRAP, })), framework::dataset::make(&quot;Expected&quot;, { true, true, false, false, false, false, false, false, true, false, false, true, false })), input1_info, input2_info, output_info, scale, policy, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#adfa7b0993eef40d54fade86201794590',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(15U, 13U, 5U), 1, DataType::F32), TensorInfo(TensorShape(13U, 13U, 5U), 1, DataType::F32), TensorInfo(TensorShape(13U, 13U, 5U), 1, DataType::QASYMM8), TensorInfo(TensorShape(13U, 13U, 5U), 1, DataType::F32), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F16), TensorInfo(TensorShape(25U, 10U, 2U), 1, DataType::F32), TensorInfo(TensorShape(30U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(25U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(1U, 1U, 5U), 1, DataType::F32), TensorInfo(TensorShape(2U, 2U, 5U), 1, DataType::F32), TensorInfo(TensorShape(12U, 12U, 5U), 1, DataType::QASYMM8), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;PoolInfo&quot;, { PoolingLayerInfo(PoolingType::AVG, 3, DataLayout::NCHW, PadStrideInfo(1, 1, 0, 0)), PoolingLayerInfo(PoolingType::AVG, 3, DataLayout::NCHW, PadStrideInfo(1, 1, 0, 0)), PoolingLayerInfo(PoolingType::AVG, 2, DataLayout::NCHW, PadStrideInfo(1, 1, 2, 0)), PoolingLayerInfo(PoolingType::AVG, 2, DataLayout::NCHW, PadStrideInfo(1, 1, 0, 2)), PoolingLayerInfo(PoolingType::AVG, DataLayout::NCHW), PoolingLayerInfo(PoolingType::MAX, DataLayout::NCHW), PoolingLayerInfo(PoolingType::AVG, 2, DataLayout::NHWC, PadStrideInfo(), false), PoolingLayerInfo(PoolingType::AVG, DataLayout::NCHW), })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, true, false, false, false, true })), input_info, output_info, pool_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ac1a02462daa15bbc731619263bdec41d',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;Input1Info&quot;, { TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), }), framework::dataset::make(&quot;Input2Info&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S16), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;Expected&quot;, { true, true, false, false, false})), input1_info, input2_info, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a3c57370131786b1f37e040ffd06bf477',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U), 1, DataType::U8), TensorInfo(TensorShape(27U), 1, DataType::U8), TensorInfo(TensorShape(32U), 1, DataType::U8), TensorInfo(TensorShape(32U), 1, DataType::F32), TensorInfo(TensorShape(27U), 1, DataType::U8), TensorInfo(TensorShape(27U), 1, DataType::U8), TensorInfo(TensorShape(10U), 1, DataType::QASYMM8), TensorInfo(TensorShape(10U), 1, DataType::U8), }), framework::dataset::make(&quot;Start&quot;,{ 0.0f, 15.0f, 1500.0f, 100.0f, -15.0f, 0.2f, 2.0f, 10.0f, 10.0f })), framework::dataset::make(&quot;End&quot;,{ 100.0f, 15.0f, 2500.0f, -1000.0f, 15.0f, 10.0f, 10.0f, 100.0f, 100.0f })), framework::dataset::make(&quot;Step&quot;,{ 100.0f, 15.0f, 10.0f, 100.0f, -15.0f, 1.0f, 0.0f, 10.0f, 10.0f })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, false, false, false, false, true, })), output_info, start, end, step, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#aa3fde559e0fbcf7d84408f87ce108d14',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(datasets::SmallShapes(), framework::dataset::make(&quot;DataType&quot;, { DataType::F32 })), shape, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#afcd44243823dd1dc2a570434b3ab3049',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(128U, 64U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U), 2, DataType::F32), TensorInfo(TensorShape(128U, 64U), 1, DataType::S16), TensorInfo(TensorShape(128U, 64U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U), 1, DataType::F32) }), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(1U, 64U), 1, DataType::F16), TensorInfo(TensorShape(1U, 64U), 1, DataType::F32), TensorInfo(TensorShape(1U, 64U), 1, DataType::S16), TensorInfo(TensorShape(1U, 64U), 1, DataType::F32), TensorInfo(TensorShape(1U, 64U), 1, DataType::F32), TensorInfo(TensorShape(1U, 64U), 1, DataType::F32) })), framework::dataset::make(&quot;Axis&quot;, { 0U, 0U, 0U, static_cast&lt; unsigned int &gt;(TensorShape::num_max_dimensions), 0U, 0U })), framework::dataset::make(&quot;KeepDims&quot;, { true, true, true, true, true, false})), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, true, false })), input_info, output_info, axis, keep_dims, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#aec29421fa24c95cf9c740944a70e76b4',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(combine(concat(datasets::SmallShapes(), datasets::LargeShapes()), framework::dataset::make(&quot;InterpolationPolicy&quot;, { InterpolationPolicy::NEAREST_NEIGHBOR, InterpolationPolicy::BILINEAR })), framework::dataset::make(&quot;DataType&quot;, DataType::U8)), framework::dataset::make(&quot;BorderModes&quot;, { BorderMode::UNDEFINED, BorderMode::CONSTANT })), shape, policy, data_type, border_mode)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ad6e35f864b13d57f8f40dc86931405f4',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(framework::dataset::concat(datasets::SmallReorgLayerDataset(), datasets::LargeReorgLayerDataset()), framework::dataset::make(&quot;DataType&quot;, { DataType::F32, DataType::F16, DataType::QASYMM8 })), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), shape, stride, data_type, data_layout)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ad5f537351eac7d53069515570e9f600f',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(2U), 1, DataType::U8), }), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(2U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(2U), 1, DataType::U8), })), framework::dataset::make(&quot;AxisInfo&quot;, { TensorInfo(TensorShape(3U), 1, DataType::U8), TensorInfo(TensorShape(2U, 10U), 1, DataType::U32), TensorInfo(TensorShape(8U), 1, DataType::U32), TensorInfo(TensorShape(2U), 1, DataType::U32), TensorInfo(TensorShape(2U), 1, DataType::U32), TensorInfo(TensorShape(2U), 1, DataType::U32), })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, true, true})), src_info, dst_info, axis_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a71312f987688bcde305a812d35b13dd3',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 13U), 1, DataType::U8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U), 1, DataType::F32), TensorInfo(TensorShape(32U, 32U), 1, DataType::F32), }), framework::dataset::make(&quot;WeightsInfo&quot;, { TensorInfo(TensorShape(27U, 11U), 1, DataType::F32), TensorInfo(TensorShape(27U, 11U), 1, DataType::F32), TensorInfo(TensorShape(27U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 11U), 1, DataType::F32), TensorInfo(TensorShape(27U, 11U), 1, DataType::F32), TensorInfo(TensorShape(27U, 11U), 1, DataType::F32), TensorInfo(TensorShape(27U, 11U), 1, DataType::F32), TensorInfo(TensorShape(32U, 32U), 1, DataType::F32), })), framework::dataset::make(&quot;RecurrentWeightsInfo&quot;, { TensorInfo(TensorShape(11U, 11U), 1, DataType::F32), TensorInfo(TensorShape(11U, 11U), 1, DataType::F32), TensorInfo(TensorShape(11U, 11U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(11U, 11U), 1, DataType::F32), TensorInfo(TensorShape(11U, 11U), 1, DataType::F32), TensorInfo(TensorShape(11U, 11U), 1, DataType::F32), TensorInfo(TensorShape(32U, 32U), 1, DataType::F32), })), framework::dataset::make(&quot;BiasInfo&quot;, { TensorInfo(TensorShape(11U), 1, DataType::F32), TensorInfo(TensorShape(11U), 1, DataType::F32), TensorInfo(TensorShape(11U), 1, DataType::F32), TensorInfo(TensorShape(11U), 1, DataType::F32), TensorInfo(TensorShape(30U), 1, DataType::F32), TensorInfo(TensorShape(11U), 1, DataType::F32), TensorInfo(TensorShape(11U), 1, DataType::F32), TensorInfo(TensorShape(32U), 1, DataType::F32), })), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(11U, 13U), 1, DataType::F32), TensorInfo(TensorShape(11U, 13U), 1, DataType::F32), TensorInfo(TensorShape(11U, 13U), 1, DataType::F32), TensorInfo(TensorShape(11U, 13U), 1, DataType::F32), TensorInfo(TensorShape(11U, 13U), 1, DataType::F32), TensorInfo(TensorShape(11U), 1, DataType::F32), TensorInfo(TensorShape(11U, 13U), 1, DataType::F32), TensorInfo(TensorShape(32U, 32U), 1, DataType::F32), })), framework::dataset::make(&quot;HiddenStateInfo&quot;, { TensorInfo(TensorShape(11U, 13U), 1, DataType::F32), TensorInfo(TensorShape(11U, 13U), 1, DataType::F32), TensorInfo(TensorShape(11U, 13U), 1, DataType::F32), TensorInfo(TensorShape(11U, 13U), 1, DataType::F32), TensorInfo(TensorShape(11U, 13U), 1, DataType::F32), TensorInfo(TensorShape(11U, 13U), 1, DataType::F32), TensorInfo(TensorShape(11U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 32U), 1, DataType::F32), })), framework::dataset::make(&quot;ActivationInfo&quot;, { ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, false, false, false, true })), input_info, weights_info, recurrent_weights_info, bias_info, output_info, hidden_output_info, info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a53125733acb5d4157ebb4b2f191433b3',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(250U, 128U, 3U), 1, DataType::F32), TensorInfo(TensorShape(250U, 128U, 3U), 1, DataType::F32), TensorInfo(TensorShape(250U, 128U, 3U), 1, DataType::F32), TensorInfo(TensorShape(250U, 128U, 2U), 1, DataType::F32), TensorInfo(TensorShape(250U, 128U, 3U), 1, DataType::F32), TensorInfo(TensorShape(250U, 128U, 3U), 1, DataType::F32), TensorInfo(TensorShape(250U, 128U, 3U), 1, DataType::F32), }), framework::dataset::make(&quot;RoisInfo&quot;, { TensorInfo(TensorShape(5, 4U), 1, DataType::F32), TensorInfo(TensorShape(5, 4U), 1, DataType::F16), TensorInfo(TensorShape(5, 4U), 1, DataType::F32), TensorInfo(TensorShape(5, 4U), 1, DataType::F32), TensorInfo(TensorShape(5, 10U), 1, DataType::F32), TensorInfo(TensorShape(4, 4U), 1, DataType::F32), TensorInfo(TensorShape(5, 4U), 1, DataType::F32), })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(7U, 7U, 3U, 4U), 1, DataType::F32), TensorInfo(TensorShape(7U, 7U, 3U, 4U), 1, DataType::F32), TensorInfo(TensorShape(7U, 7U, 3U, 4U), 1, DataType::F16), TensorInfo(TensorShape(7U, 7U, 3U, 4U), 1, DataType::F32), TensorInfo(TensorShape(7U, 7U, 3U, 4U), 1, DataType::F32), TensorInfo(TensorShape(7U, 7U, 3U, 4U), 1, DataType::F32), TensorInfo(TensorShape(5U, 5U, 3U, 4U), 1, DataType::F32), })), framework::dataset::make(&quot;PoolInfo&quot;, { ROIPoolingLayerInfo(7U, 7U, 1./8), ROIPoolingLayerInfo(7U, 7U, 1./8), ROIPoolingLayerInfo(7U, 7U, 1./8), ROIPoolingLayerInfo(7U, 7U, 1./8), ROIPoolingLayerInfo(7U, 7U, 1./8), ROIPoolingLayerInfo(7U, 7U, 1./8), ROIPoolingLayerInfo(7U, 7U, 1./8), })), framework::dataset::make(&quot;Expected&quot;, { true, false, false, false, false, false, false })), input_info, rois_info, output_info, pool_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a614bc7d280f8e91c5d60e5794bdaaaec',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(4U, 27U, 13U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(4U, 27U, 13U), 1, DataType::F32), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(132U, 25U, 2U), 1, DataType::F32), TensorInfo(TensorShape(4U, 132U, 25U), 1, DataType::F32), TensorInfo(TensorShape(132U, 25U, 2U), 1, DataType::F32), TensorInfo(TensorShape(4U, 132U, 25U), 1, DataType::F32), })), framework::dataset::make(&quot;InterpolationPolicy&quot;, { InterpolationPolicy::NEAREST_NEIGHBOR, InterpolationPolicy::AREA, InterpolationPolicy::AREA, InterpolationPolicy::NEAREST_NEIGHBOR, })), framework::dataset::make(&quot;BorderMode&quot;, { BorderMode::UNDEFINED, BorderMode::UNDEFINED, BorderMode::UNDEFINED, BorderMode::REPLICATE, })), framework::dataset::make(&quot;SamplingPolicy&quot;, { SamplingPolicy::CENTER, SamplingPolicy::CENTER, SamplingPolicy::CENTER, SamplingPolicy::CENTER, })), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC, DataLayout::NCHW, DataLayout::NHWC, })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, true })), input_info, output_info, policy, border_mode, sampling_policy, data_layout, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a9e82562ed5b5aff773e44abff48b5965',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(combine(combine(combine(datasets::SmallShapes(), ScaleDataTypes), ScaleDataLayouts), framework::dataset::make(&quot;InterpolationPolicy&quot;, { InterpolationPolicy::NEAREST_NEIGHBOR, InterpolationPolicy::BILINEAR })), datasets::BorderModes()), framework::dataset::make(&quot;SamplingPolicy&quot;, { SamplingPolicy::CENTER })), shape, data_type, data_layout, policy, border_mode, sampling_policy)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a4ba4f69454fa7a89821287ee35b448f0',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(concat(datasets::Small2DShapes(), datasets::Large2DShapes()), datasets::BorderModes()), framework::dataset::make(&quot;Format&quot;, Format::U8)), shape, border_mode, format)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#abb2afad9a946e9aaf8a2ab7c5429d126',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, configuration_dataset, shape, same_rank)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a37f7baff1b11a12013415b19f775ac0b',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(arm_compute::test::datasets::SmallSliceDataset(), framework::dataset::make(&quot;DataType&quot;, { DataType::QASYMM8, DataType::F32 })), shape, starts, ends, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#acbb047b281e11542f522879a59b6c310',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(concat(datasets::Small2DShapes(), datasets::Medium2DShapes()), CNNDataTypes), shape, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a75be06f45679b13a90cc51e5ac861018',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 13U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U), 1, DataType::QASYMM8, QuantizationInfo(1.f/256, 12)), TensorInfo(TensorShape(27U, 13U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U), 1, DataType::QASYMM8, QuantizationInfo(1.f/256, 12)), TensorInfo(TensorShape(32U, 13U), 1, DataType::QASYMM8, QuantizationInfo(1.f/256, 12)), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(27U, 13U), 1, DataType::F16), TensorInfo(TensorShape(27U, 11U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U), 1, DataType::QASYMM8, QuantizationInfo(1.f/256, 12)), TensorInfo(TensorShape(27U, 13U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U), 1, DataType::QASYMM8, QuantizationInfo(1.f/256, 0)), TensorInfo(TensorShape(32U, 13U), 1, DataType::QASYMM8, QuantizationInfo(1.f/256, 0)), })), framework::dataset::make(&quot;beta&quot;, { 1.0, 2.0, 1.0, 2.0, 1.0, 2.0, 1.0, 2.0, 1.0, })), framework::dataset::make(&quot;axis&quot;, { 1, 1, 1, 1, 1, 1, 1, 0, })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, false, true, true, false })), input_info, output_info, beta, axis, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ac9164334617e4215da6fc222697414b2',1,'arm_compute::test::validation::DATA_TEST_CASE(ValidateStatic, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(32U, 16U, 2U, 1U), 1, DataType::F32), TensorInfo(TensorShape(32U, 16U, 2U, 1U), 1, DataType::F32), TensorInfo(TensorShape(32U, 16U, 2U, 1U), 1, DataType::F32), TensorInfo(TensorShape(32U, 16U, 2U, 1U, 4U), 1, DataType::F32), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(16U, 8U, 8U, 1U), 1, DataType::F32), TensorInfo(TensorShape(32U, 8U, 8U, 1U), 1, DataType::F16), TensorInfo(TensorShape(32U, 8U, 8U, 1U), 1, DataType::F32), TensorInfo(TensorShape(32U, 8U, 8U, 1U), 1, DataType::F32), })), framework::dataset::make(&quot;BlockShape&quot;, { 2, 2, -2, 2 })), framework::dataset::make(&quot;Expected&quot;, { true, false, false, false})), input_info, output_info, block_shape, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a3820b1ae0dc6219a42e29d9f41903dd0',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(datasets::SmallSplitDataset(), framework::dataset::make(&quot;DataType&quot;, { DataType::QASYMM8, DataType::F32 })), shape, axis, splits, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#aa592247e90b4ec742ec8d73842c391e1',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { std::vector&lt; TensorInfo &gt;{ TensorInfo(TensorShape(9U, 8U), 1, DataType::U8) }, std::vector&lt; TensorInfo &gt;{ TensorInfo(TensorShape(1U, 2U), 1, DataType::U8), TensorInfo(TensorShape(1U, 2U), 1, DataType::U8), TensorInfo(TensorShape(1U, 2U), 1, DataType::U8)}, std::vector&lt; TensorInfo &gt;{ TensorInfo(TensorShape(2U, 3U), 1, DataType::S32) }, std::vector&lt; TensorInfo &gt;{ TensorInfo(TensorShape(7U, 5U, 3U, 8U, 2U), 1, DataType::S32), TensorInfo(TensorShape(7U, 5U, 3U, 8U, 2U), 1, DataType::S32)}, std::vector&lt; TensorInfo &gt;{ TensorInfo(TensorShape(9U, 8U), 1, DataType::S32) }, }), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(1U, 9U, 8U), 1, DataType::U8), TensorInfo(TensorShape(1U, 3U, 2U), 1, DataType::U8), TensorInfo(TensorShape(1U, 2U, 3U), 1, DataType::S32), TensorInfo(TensorShape(3U, 7U, 5U), 1, DataType::S32), TensorInfo(TensorShape(1U, 2U, 3U), 1, DataType::U8), })), framework::dataset::make(&quot;Axis&quot;, { -3, 1, -4, -3, 1 })), framework::dataset::make(&quot;Expected&quot;, { true, true, false, false, false })), input_info, output_info, axis, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a665eb0030e48bccfbcf69ff639da9db6',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(shapes_1d_small, data_types), n_values), shape_in, axis, data_type, num_tensors)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a1407acae2346c31f76d692cfded640fc',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(arm_compute::test::datasets::SmallStridedSliceDataset(), framework::dataset::make(&quot;DataType&quot;, { DataType::QASYMM8, DataType::F32 })), shape, starts, ends, strides, begin_mask, end_mask, shrink_mask, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a274bed0845c8fb1e2e56d175d82efe52',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(21U, 13U), 1, DataType::U8), TensorInfo(TensorShape(21U, 13U), 1, DataType::U16), TensorInfo(TensorShape(20U, 13U), 1, DataType::U32), TensorInfo(TensorShape(20U, 13U), 1, DataType::U8), TensorInfo(TensorShape(20U, 16U), 1, DataType::U16), TensorInfo(TensorShape(20U, 16U), 1, DataType::U32), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(13U, 21U), 1, DataType::U8), TensorInfo(TensorShape(21U, 13U), 1, DataType::U16), TensorInfo(TensorShape(13U, 20U), 1, DataType::U32), TensorInfo(TensorShape(31U, 20U), 1, DataType::U16), TensorInfo(TensorShape(16U, 20U), 1, DataType::U16), TensorInfo(TensorShape(16U, 20U), 1, DataType::U32), })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, true, true })), a_info, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#aec1cccf6a6f5355142fa7e94e682f939',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL,(combine(datasets::SmallShapes(), framework::dataset::make(&quot;DataType&quot;, DataType::F32))), input_shape, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ab3a9be28851ffe70ea37f1da42c13ac1',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(10U, 10U, 2U), 1, DataType::F32), TensorInfo(TensorShape(10U, 10U, 2U), 1, DataType::F32), TensorInfo(TensorShape(10U, 10U, 2U), 1, DataType::F32), TensorInfo(TensorShape(10U, 10U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 32U), 1, DataType::F32), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(20U, 20U, 2U), 1, DataType::F16), TensorInfo(TensorShape(20U, 10U, 2U), 1, DataType::F32), TensorInfo(TensorShape(20U, 20U, 2U), 1, DataType::F32), TensorInfo(TensorShape(20U, 20U, 2U), 1, DataType::F32), TensorInfo(TensorShape(64U, 64U), 1, DataType::F32), })), framework::dataset::make(&quot;PadInfo&quot;, { Size2D(2, 2), Size2D(2, 2), Size2D(1, 1), Size2D(2, 2), Size2D(2, 2), })), framework::dataset::make(&quot;UpsamplingPolicy&quot;, { InterpolationPolicy::NEAREST_NEIGHBOR, InterpolationPolicy::NEAREST_NEIGHBOR, InterpolationPolicy::NEAREST_NEIGHBOR, InterpolationPolicy::BILINEAR, InterpolationPolicy::NEAREST_NEIGHBOR, })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, true })), input_info, output_info, pad_info, policy, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ab780bab1614f2fd0b354a0905e897c90',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(combine(datasets::SmallShapes(), framework::dataset::make(&quot;DataType&quot;, DataType::U8)), framework::dataset::make(&quot;InterpolationPolicy&quot;, { InterpolationPolicy::NEAREST_NEIGHBOR, InterpolationPolicy::BILINEAR })), datasets::BorderModes()), shape, data_type, policy, border_mode)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a5c9d222c8e5c1ef02fa9f4b343f0a976',1,'arm_compute::test::validation::DATA_TEST_CASE(AutoPadding, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;TensorShape&quot;, { TensorShape{}, TensorShape{ 10U }, TensorShape{ 10U, 10U }, TensorShape{ 10U, 10U, 10U }, TensorShape{ 10U, 10U, 10U, 10U }, TensorShape{ 10U, 10U, 10U, 10U, 10U }, TensorShape{ 10U, 10U, 10U, 10U, 10U, 10U }}), framework::dataset::make(&quot;PaddingSize&quot;, { PaddingSize{ 0, 0, 0, 0 }, PaddingSize{ 0, 36, 0, 4 }, PaddingSize{ 4, 36, 4, 4 }, PaddingSize{ 4, 36, 4, 4 }, PaddingSize{ 4, 36, 4, 4 }, PaddingSize{ 4, 36, 4, 4 }, PaddingSize{ 4, 36, 4, 4 }})), framework::dataset::make(&quot;Strides&quot;, { Strides{}, Strides{ 1U, 50U }, Strides{ 1U, 50U }, Strides{ 1U, 50U, 900U }, Strides{ 1U, 50U, 900U, 9000U }, Strides{ 1U, 50U, 900U, 9000U, 90000U }, Strides{ 1U, 50U, 900U, 9000U, 90000U, 900000U }})), framework::dataset::make(&quot;Offset&quot;, { 0U, 4U, 204U, 204U, 204U, 204U, 204U })), shape, auto_padding, strides, offset)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#aff7b127bdccdb0be89b5f18bf4fbf777',1,'arm_compute::test::validation::DATA_TEST_CASE(Construction, framework::DatasetMode::ALL, zip(zip(framework::dataset::make(&quot;TensorShape&quot;, { TensorShape{}, TensorShape{ 1U }, TensorShape{ 2U }, TensorShape{ 2U, 3U }, TensorShape{ 2U, 3U, 5U }, TensorShape{ 2U, 3U, 5U, 7U }, TensorShape{ 2U, 3U, 5U, 7U, 11U }, TensorShape{ 2U, 3U, 5U, 7U, 11U, 13U }}), framework::dataset::make(&quot;NumDimensions&quot;, { 0U, 1U, 1U, 2U, 3U, 4U, 5U, 6U })), framework::dataset::make(&quot;TotalSize&quot;, { 0U, 1U, 2U, 6U, 30U, 210U, 2310U, 30030U })), shape, num_dimensions, total_size)'],['../tests_2validation_2_u_n_i_t_2_utils_8cpp.xhtml#a27db011848222cd739c833cd57537632',1,'DATA_TEST_CASE(RoundHalfUp, framework::DatasetMode::ALL, zip(framework::dataset::make(&quot;FloatIn&quot;, { 1.f, 1.2f, 1.5f, 2.5f, 2.9f, -3.f, -3.5f, -3.8f, -4.3f, -4.5f }), framework::dataset::make(&quot;FloatOut&quot;, { 1.f, 1.f, 2.f, 3.f, 3.f, -3.f, -3.f, -4.f, -4.f, -4.f })), value, result):&#160;Utils.cpp'],['../tests_2validation_2_u_n_i_t_2_utils_8cpp.xhtml#a6ef92b04d435ab565a26eeebcdced806',1,'DATA_TEST_CASE(RoundHalfEven, framework::DatasetMode::ALL, zip(framework::dataset::make(&quot;FloatIn&quot;, { 1.f, 1.2f, 1.5f, 2.5f, 2.9f, -3.f, -3.5f, -3.8f, -4.3f, -4.5f }), framework::dataset::make(&quot;FloatOut&quot;, { 1.f, 1.f, 2.f, 2.f, 3.f, -3.f, -4.f, -4.f, -4.f, -4.f })), value, result):&#160;Utils.cpp'],['../tests_2validation_2_u_n_i_t_2_utils_8cpp.xhtml#a4eaacf0c251a42054ef98ad17828ea1a',1,'DATA_TEST_CASE(Index2Coord, framework::DatasetMode::ALL, zip(zip(framework::dataset::make(&quot;Shape&quot;, { TensorShape{ 1U }, TensorShape{ 2U }, TensorShape{ 2U, 3U } }), framework::dataset::make(&quot;Index&quot;, { 0, 1, 2 })), framework::dataset::make(&quot;Coordinates&quot;, { Coordinates{ 0 }, Coordinates{ 1 }, Coordinates{ 0, 1 } })), shape, index, ref_coordinate):&#160;Utils.cpp'],['../tests_2validation_2_u_n_i_t_2_utils_8cpp.xhtml#a1168f71fb63650656eed1a480243762d',1,'DATA_TEST_CASE(RoundFloatToZero, framework::DatasetMode::ALL, zip(framework::dataset::make(&quot;FloatIn&quot;, { 1.f, 1.2f, 1.5f, 2.5f, 2.9f, -3.f, -3.5f, -3.8f, -4.3f, -4.5f }), framework::dataset::make(&quot;FloatOut&quot;, { 1.f, 1.f, 1.f, 2.f, 2.f, -3.f, -3.f, -3.f, -4.f, -4.f })), value, result):&#160;Utils.cpp'],['../tests_2validation_2_u_n_i_t_2_utils_8cpp.xhtml#a627a856fabfe1b44438ed3cf5b741482',1,'DATA_TEST_CASE(RoundFloatToNearestUp, framework::DatasetMode::ALL, zip(framework::dataset::make(&quot;FloatIn&quot;, { 1.f, 1.2f, 1.5f, 2.5f, 2.9f, -3.f, -3.5f, -3.8f, -4.3f, -4.5f }), framework::dataset::make(&quot;FloatOut&quot;, { 1.f, 1.f, 2.f, 3.f, 3.f, -3.f, -4.f, -4.f, -4.f, -5.f })), value, result):&#160;Utils.cpp'],['../tests_2validation_2_u_n_i_t_2_utils_8cpp.xhtml#a694e9cd4762973da6bfc01e10c9e5313',1,'DATA_TEST_CASE(Coord2Index, framework::DatasetMode::ALL, zip(zip(framework::dataset::make(&quot;Shape&quot;, { TensorShape{ 1U }, TensorShape{ 2U }, TensorShape{ 2U, 3U } }), framework::dataset::make(&quot;Coordinates&quot;, { Coordinates{ 0 }, Coordinates{ 1 }, Coordinates{ 0, 1 } })), framework::dataset::make(&quot;Index&quot;, { 0, 1, 2 })), shape, coordinate, ref_index):&#160;Utils.cpp'],['../_window_iterator_8cpp.xhtml#acd2ef152b1743c15de3f67238d0eac43',1,'DATA_TEST_CASE(WholeWindow, framework::DatasetMode::ALL, zip(framework::dataset::make(&quot;Window&quot;, { create_window(Window::Dimension(0, 1)), create_window(Window::Dimension(1, 5, 2), Window::Dimension(3, 5)), create_window(Window::Dimension(4, 16, 4), Window::Dimension(3, 13, 5), Window::Dimension(1, 3, 2)) }), framework::dataset::make(&quot;Expected&quot;, { create_vector({ Coordinates(0, 0) }), create_vector({ Coordinates(1, 3), Coordinates(3, 3), Coordinates(1, 4), Coordinates(3, 4) }), create_vector({ Coordinates(4, 3, 1), Coordinates(8, 3, 1), Coordinates(12, 3, 1), Coordinates(4, 8, 1), Coordinates(8, 8, 1), Coordinates(12, 8, 1) }) })), window, expected):&#160;WindowIterator.cpp'],['../_window_iterator_8cpp.xhtml#a73168adf798e300ad06a0341c1c9bd59',1,'DATA_TEST_CASE(PartialWindow2D, framework::DatasetMode::ALL, zip(zip(zip(combine(framework::dataset::make(&quot;Window&quot;, create_window(Window::Dimension(4, 20, 4), Window::Dimension(3, 32, 5), Window::Dimension(1, 2, 1))), framework::dataset::make(&quot;Start&quot;, { 0, 1, 3, 2, 4 })), framework::dataset::make(&quot;End&quot;, { 0, 2, 5, 8, 7 })), framework::dataset::make(&quot;RowSize&quot;, { create_vector({ 4 }), create_vector({ 8, 8 }), create_vector({ 4, 8, 8 }), create_vector({ 8, 8, 16, 16, 16, 16, 4 }), create_vector({ 16, 16, 16, 16 }), })), framework::dataset::make(&quot;Expected&quot;, { create_vector({ Coordinates(4, 3, 1) }), create_vector({ Coordinates(8, 3, 1), Coordinates(12, 3, 1) }), create_vector({ Coordinates(16, 3, 1), Coordinates(4, 8, 1), Coordinates(8, 8, 1) }), create_vector({ Coordinates(12, 3, 1), Coordinates(16, 3, 1), Coordinates(4, 8, 1), Coordinates(8, 8, 1), Coordinates(12, 8, 1), Coordinates(16, 8, 1), Coordinates(4, 13, 1) }), create_vector({ Coordinates(4, 8, 1), Coordinates(8, 8, 1), Coordinates(12, 8, 1), Coordinates(16, 8, 1) }) })), window, start, end, expected_row_size, expected):&#160;WindowIterator.cpp']]],
  ['data_5ftype',['data_type',['../classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba',1,'arm_compute::ITensorInfo::data_type()'],['../classarm__compute_1_1_sub_tensor_info.xhtml#a9a3e72153aeb3ed212e9c3698774e881',1,'arm_compute::SubTensorInfo::data_type()'],['../classarm__compute_1_1_tensor_info.xhtml#a9a3e72153aeb3ed212e9c3698774e881',1,'arm_compute::TensorInfo::data_type()'],['../classarm__compute_1_1test_1_1_c_l_accessor.xhtml#a9a3e72153aeb3ed212e9c3698774e881',1,'arm_compute::test::CLAccessor::data_type()'],['../classarm__compute_1_1test_1_1_g_c_accessor.xhtml#a9a3e72153aeb3ed212e9c3698774e881',1,'arm_compute::test::GCAccessor::data_type()'],['../classarm__compute_1_1test_1_1_i_accessor.xhtml#a7cfb31af63202568efef5214acfbf3ba',1,'arm_compute::test::IAccessor::data_type()'],['../classarm__compute_1_1test_1_1_accessor.xhtml#a9a3e72153aeb3ed212e9c3698774e881',1,'arm_compute::test::Accessor::data_type()'],['../classarm__compute_1_1test_1_1_simple_tensor.xhtml#a9a3e72153aeb3ed212e9c3698774e881',1,'arm_compute::test::SimpleTensor::data_type()'],['../classarm__compute_1_1test_1_1_simple_tensor_accessor.xhtml#a9a3e72153aeb3ed212e9c3698774e881',1,'arm_compute::test::SimpleTensorAccessor::data_type()']]],
  ['data_5ftype_5ffor_5fconvolution',['data_type_for_convolution',['../namespacearm__compute.xhtml#a01adc12d8e07c06cdb0f03c56a455bf3',1,'arm_compute']]],
  ['data_5ftype_5ffor_5fconvolution_5fmatrix',['data_type_for_convolution_matrix',['../namespacearm__compute.xhtml#a3992df9e8723140a53e49dc194d89ef5',1,'arm_compute']]],
  ['data_5ftype_5ffrom_5fformat',['data_type_from_format',['../namespacearm__compute.xhtml#a59846ef5ca75cd81cdb7e8a1ce08f9db',1,'arm_compute']]],
  ['data_5ftype_5ffrom_5fname',['data_type_from_name',['../namespacearm__compute.xhtml#a64e6501d564e950c3d527fb6b1f36f28',1,'arm_compute']]],
  ['dataset',['Dataset',['../classarm__compute_1_1test_1_1framework_1_1dataset_1_1_dataset.xhtml#a6c77d69d08daa8c99952d9e40de8d086',1,'arm_compute::test::framework::dataset::Dataset']]],
  ['dataset_5fmode_5ffrom_5fname',['dataset_mode_from_name',['../namespacearm__compute_1_1test_1_1framework.xhtml#a1afd1c498fb3a1d2315e4c6d87d15754',1,'arm_compute::test::framework']]],
  ['datatestcasefactory',['DataTestCaseFactory',['../classarm__compute_1_1test_1_1framework_1_1_data_test_case_factory.xhtml#aacdf355fbfb7579c36e50c757809c148',1,'arm_compute::test::framework::DataTestCaseFactory']]],
  ['decompose_5fstages',['decompose_stages',['../namespacearm__compute_1_1helpers_1_1fft.xhtml#a359fcf05844c0a2f1aed6e4386a86aee',1,'arm_compute::helpers::fft']]],
  ['deconvolution_5finfo',['deconvolution_info',['../classarm__compute_1_1graph_1_1_deconvolution_layer_node.xhtml#ae304796bd723ec2b2d50b88236498bd1',1,'arm_compute::graph::DeconvolutionLayerNode']]],
  ['deconvolution_5flayer',['deconvolution_layer',['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#ae58eba5a3f2aab0edf138ed053594d18',1,'arm_compute::test::validation::reference::deconvolution_layer(const SimpleTensor&lt; T &gt; &amp;src, const SimpleTensor&lt; T &gt; &amp;weights, const SimpleTensor&lt; TB &gt; &amp;bias, const TensorShape &amp;output_shape, const PadStrideInfo &amp;info, QuantizationInfo out_qinfo=QuantizationInfo())'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a9eb944011e756d3d1f10775bf295cb8f',1,'arm_compute::test::validation::reference::deconvolution_layer(const SimpleTensor&lt; uint8_t &gt; &amp;src, const SimpleTensor&lt; uint8_t &gt; &amp;weights, const SimpleTensor&lt; int32_t &gt; &amp;bias, const TensorShape &amp;output_shape, const PadStrideInfo &amp;info, QuantizationInfo out_quant_info)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a4cc98103ee263a7712b630225c2a1c3c',1,'arm_compute::test::validation::reference::deconvolution_layer(const SimpleTensor&lt; float &gt; &amp;src, const SimpleTensor&lt; float &gt; &amp;weights, const SimpleTensor&lt; float &gt; &amp;bias, const TensorShape &amp;output_shape, const PadStrideInfo &amp;info, QuantizationInfo out_quant_info)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a2e6c6282b814592377e2505846d56e1d',1,'arm_compute::test::validation::reference::deconvolution_layer(const SimpleTensor&lt; half &gt; &amp;src, const SimpleTensor&lt; half &gt; &amp;weights, const SimpleTensor&lt; half &gt; &amp;bias, const TensorShape &amp;output_shape, const PadStrideInfo &amp;info, QuantizationInfo out_quant_info)']]],
  ['deconvolution_5foutput_5fdimensions',['deconvolution_output_dimensions',['../namespacearm__compute.xhtml#a1a0b7ff66a946db6252d2a4c40c04fa7',1,'arm_compute']]],
  ['deconvolution_5fupsample',['deconvolution_upsample',['../deconvolution__layer_8cl.xhtml#ad247ccd3e1ca89af642c2b453db71dce',1,'deconvolution_layer.cl']]],
  ['deconvolutionlayer',['DeconvolutionLayer',['../classarm__compute_1_1graph_1_1frontend_1_1_deconvolution_layer.xhtml#a98c30ba91fe106a656f931077135fa1e',1,'arm_compute::graph::frontend::DeconvolutionLayer']]],
  ['deconvolutionlayernode',['DeconvolutionLayerNode',['../classarm__compute_1_1graph_1_1_deconvolution_layer_node.xhtml#ac6a4e978199dc2811685b3b681b6bca5',1,'arm_compute::graph::DeconvolutionLayerNode']]],
  ['decorate',['decorate',['../classarm__compute_1_1logging_1_1_i_decorator.xhtml#af7e99677086f647b50a1b4e4248f78f6',1,'arm_compute::logging::IDecorator::decorate()'],['../classarm__compute_1_1logging_1_1_string_decorator.xhtml#a7cc31af1c60cf2317350fca65ba16597',1,'arm_compute::logging::StringDecorator::decorate()'],['../classarm__compute_1_1logging_1_1_date_decorator.xhtml#a7cc31af1c60cf2317350fca65ba16597',1,'arm_compute::logging::DateDecorator::decorate()'],['../classarm__compute_1_1logging_1_1_thread_id_decorator.xhtml#a7cc31af1c60cf2317350fca65ba16597',1,'arm_compute::logging::ThreadIdDecorator::decorate()'],['../classarm__compute_1_1logging_1_1_log_level_decorator.xhtml#a7cc31af1c60cf2317350fca65ba16597',1,'arm_compute::logging::LogLevelDecorator::decorate()']]],
  ['decrease_5frefcount',['decrease_refcount',['../classarm__compute_1_1_i_transform_weights.xhtml#ab360283eef792af17ef4bb54fdf112e0',1,'arm_compute::ITransformWeights']]],
  ['default_5finit',['default_init',['../classarm__compute_1_1_c_l_scheduler.xhtml#a46ecf9ef0fe80ba2ed35acfc29856b7d',1,'arm_compute::CLScheduler::default_init()'],['../classarm__compute_1_1_g_c_scheduler.xhtml#a19bb5002a62b62e050e89c975f7b9fdf',1,'arm_compute::GCScheduler::default_init()']]],
  ['default_5finit_5fwith_5fcontext',['default_init_with_context',['../classarm__compute_1_1_c_l_scheduler.xhtml#aa1ab77c1da6b5a6da2e1957352985c8c',1,'arm_compute::CLScheduler::default_init_with_context()'],['../classarm__compute_1_1_g_c_scheduler.xhtml#aa105f74eb3adab10bfedbbca89cbcea7',1,'arm_compute::GCScheduler::default_init_with_context()']]],
  ['default_5fndrange',['default_ndrange',['../classarm__compute_1_1_c_l_kernel_library.xhtml#adb48a1da7dc6b6f3c1a424d21e1ac1f8',1,'arm_compute::CLKernelLibrary']]],
  ['default_5fvisit',['default_visit',['../classarm__compute_1_1graph_1_1_default_node_visitor.xhtml#a78d9695424cce30cc0465770427fab06',1,'arm_compute::graph::DefaultNodeVisitor::default_visit()'],['../classarm__compute_1_1graph_1_1_dot_graph_visitor.xhtml#af62b93bea1e98919a10bf65eb71f9fce',1,'arm_compute::graph::DotGraphVisitor::default_visit()']]],
  ['delta_5fbilinear_5fc1',['delta_bilinear_c1',['../namespacearm__compute.xhtml#ad656a27ce8a507e31096ca45683ba9a5',1,'arm_compute']]],
  ['delta_5fbilinear_5fc1_5fquantized',['delta_bilinear_c1_quantized',['../namespacearm__compute.xhtml#aa8f4b622d28ff29e9e88a6d5dcd2bea2',1,'arm_compute']]],
  ['delta_5flinear_5fc1_5fx',['delta_linear_c1_x',['../namespacearm__compute.xhtml#a6174495b626531de015ae2b810859287',1,'arm_compute']]],
  ['delta_5flinear_5fc1_5fy',['delta_linear_c1_y',['../namespacearm__compute.xhtml#ad5fa8bacf824e9538014bfb0dcdaab52',1,'arm_compute']]],
  ['depth_5fconvert',['depth_convert',['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a742cdbdf3c1db76c9a189f1bcd745579',1,'arm_compute::test::validation::reference::depth_convert(const SimpleTensor&lt; T1 &gt; &amp;src, DataType dt_out, ConvertPolicy policy, uint32_t shift)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a97ffa19c49dbe0b8d0e47b0ab15c51dd',1,'arm_compute::test::validation::reference::depth_convert(const SimpleTensor&lt; uint8_t &gt; &amp;src, DataType dt_out, ConvertPolicy policy, uint32_t shift)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#acad5a5cf179151895a976da050f213f4',1,'arm_compute::test::validation::reference::depth_convert(const SimpleTensor&lt; int8_t &gt; &amp;src, DataType dt_out, ConvertPolicy policy, uint32_t shift)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#ae8d5666de9f1ea545436d8dd3dac7b8a',1,'arm_compute::test::validation::reference::depth_convert(const SimpleTensor&lt; uint16_t &gt; &amp;src, DataType dt_out, ConvertPolicy policy, uint32_t shift)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a968f4da89a68d28ad39d8e39d8d19f93',1,'arm_compute::test::validation::reference::depth_convert(const SimpleTensor&lt; int16_t &gt; &amp;src, DataType dt_out, ConvertPolicy policy, uint32_t shift)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a6b297a6ebf043fe0f8b2ad99a3d12062',1,'arm_compute::test::validation::reference::depth_convert(const SimpleTensor&lt; uint32_t &gt; &amp;src, DataType dt_out, ConvertPolicy policy, uint32_t shift)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a2790b7ea17fe89ea8befa5a0c657f4ae',1,'arm_compute::test::validation::reference::depth_convert(const SimpleTensor&lt; int32_t &gt; &amp;src, DataType dt_out, ConvertPolicy policy, uint32_t shift)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#ac0a3b5445ea9e2835f0c0321a0afe9b1',1,'arm_compute::test::validation::reference::depth_convert(const SimpleTensor&lt; half &gt; &amp;src, DataType dt_out, ConvertPolicy policy, uint32_t shift)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a4f6b2f51f5c49ae3d358f65246581656',1,'arm_compute::test::validation::reference::depth_convert(const SimpleTensor&lt; float &gt; &amp;src, DataType dt_out, ConvertPolicy policy, uint32_t shift)']]],
  ['depth_5fmultiplier',['depth_multiplier',['../classarm__compute_1_1graph_1_1_depthwise_convolution_layer_node.xhtml#a88e38a50a2e964b19521fe8f2e9a144f',1,'arm_compute::graph::DepthwiseConvolutionLayerNode::depth_multiplier()'],['../classarm__compute_1_1graph_1_1_fused_depthwise_convolution_batch_normalization_node.xhtml#ac8cef0874f04203401b5d7f5a6fa2a34',1,'arm_compute::graph::FusedDepthwiseConvolutionBatchNormalizationNode::depth_multiplier()']]],
  ['depth_5foutput_5fgemm3d',['depth_output_gemm3d',['../classarm__compute_1_1_g_e_m_m_reshape_info.xhtml#abbd888f118c2209bf7578eb4f8942a07',1,'arm_compute::GEMMReshapeInfo::depth_output_gemm3d()'],['../classarm__compute_1_1_g_e_m_m_info.xhtml#abbd888f118c2209bf7578eb4f8942a07',1,'arm_compute::GEMMInfo::depth_output_gemm3d()']]],
  ['depth_5fto_5fspace',['depth_to_space',['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#ac5ebcd0b7af3ed4028f686bf7a4ab814',1,'arm_compute::test::validation::reference::depth_to_space(const SimpleTensor&lt; T &gt; &amp;src, const TensorShape &amp;dst_shape, int32_t block_shape)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#ac911b1992900602137e790cc89ddc8ac',1,'arm_compute::test::validation::reference::depth_to_space(const SimpleTensor&lt; float &gt; &amp;src, const TensorShape &amp;dst_shape, int32_t block_shape)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#ab36b4f1c7136e731b56bcea1ba1f6674',1,'arm_compute::test::validation::reference::depth_to_space(const SimpleTensor&lt; half &gt; &amp;src, const TensorShape &amp;dst_shape, int32_t block_shape)']]],
  ['depthconcatenate_5flayer',['depthconcatenate_layer',['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a4e15b670980db455ad07397b2c34b610',1,'arm_compute::test::validation::reference::depthconcatenate_layer(const std::vector&lt; SimpleTensor&lt; T &gt;&gt; &amp;srcs, SimpleTensor&lt; T &gt; &amp;dst)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#ae87f24b80ddc830b9911fcba89004686',1,'arm_compute::test::validation::reference::depthconcatenate_layer(const std::vector&lt; SimpleTensor&lt; uint8_t &gt;&gt; &amp;srcs, SimpleTensor&lt; uint8_t &gt; &amp;dst)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#ab620d10e96dbaf31989ff11b490deef9',1,'arm_compute::test::validation::reference::depthconcatenate_layer(const std::vector&lt; SimpleTensor&lt; float &gt;&gt; &amp;srcs, SimpleTensor&lt; float &gt; &amp;dst)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a822ab49e0fc97c2687bb92c079ebf1f1',1,'arm_compute::test::validation::reference::depthconcatenate_layer(const std::vector&lt; SimpleTensor&lt; half &gt;&gt; &amp;srcs, SimpleTensor&lt; half &gt; &amp;dst)']]],
  ['depthwise_5fconvolution',['depthwise_convolution',['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#aa8c74ba65c903552897b2158aed34c0f',1,'arm_compute::test::validation::reference::depthwise_convolution(const SimpleTensor&lt; float &gt; &amp;src, const SimpleTensor&lt; float &gt; &amp;weights, const SimpleTensor&lt; float &gt; &amp;biases, const TensorShape &amp;dst_shape, const PadStrideInfo &amp;conv_info, unsigned int depth_multiplier, const Size2D &amp;dilation, const QuantizationInfo &amp;out_quant_info)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#aebdf8e3342c4288bd413cb07b88530f8',1,'arm_compute::test::validation::reference::depthwise_convolution(const SimpleTensor&lt; half &gt; &amp;src, const SimpleTensor&lt; half &gt; &amp;weights, const SimpleTensor&lt; half &gt; &amp;biases, const TensorShape &amp;dst_shape, const PadStrideInfo &amp;conv_info, unsigned int depth_multiplier, const Size2D &amp;dilation, const QuantizationInfo &amp;out_quant_info)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#aec5c617012397c568660626f052fd23b',1,'arm_compute::test::validation::reference::depthwise_convolution(const SimpleTensor&lt; uint8_t &gt; &amp;src, const SimpleTensor&lt; uint8_t &gt; &amp;weights, const SimpleTensor&lt; int32_t &gt; &amp;biases, const TensorShape &amp;dst_shape, const PadStrideInfo &amp;conv_info, unsigned int depth_multiplier, const Size2D &amp;dilation, const QuantizationInfo &amp;out_quant_info)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a57767f1ef2c2e1b61bb88c2e259701d3',1,'arm_compute::test::validation::reference::depthwise_convolution(const SimpleTensor&lt; uint8_t &gt; &amp;src, const SimpleTensor&lt; int8_t &gt; &amp;weights, const SimpleTensor&lt; int32_t &gt; &amp;biases, const TensorShape &amp;dst_shape, const PadStrideInfo &amp;conv_info, unsigned int depth_multiplier, const Size2D &amp;dilation, const QuantizationInfo &amp;out_quant_info)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#aaeb13fb32d7241047f289e783f45356d',1,'arm_compute::test::validation::reference::depthwise_convolution(const SimpleTensor&lt; int8_t &gt; &amp;src, const SimpleTensor&lt; int8_t &gt; &amp;weights, const SimpleTensor&lt; int32_t &gt; &amp;biases, const TensorShape &amp;dst_shape, const PadStrideInfo &amp;conv_info, unsigned int depth_multiplier, const Size2D &amp;dilation, const QuantizationInfo &amp;out_quant_info)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#afa25b85fdf3eb7960f4e6febd70909d0',1,'arm_compute::test::validation::reference::depthwise_convolution(const SimpleTensor&lt; T &gt; &amp;src, const SimpleTensor&lt; TW &gt; &amp;weights, const SimpleTensor&lt; TB &gt; &amp;biases, const TensorShape &amp;dst_shape, const PadStrideInfo &amp;conv_info, unsigned int depth_multiplier, const Size2D &amp;dilation=Size2D(1U, 1U), const QuantizationInfo &amp;out_quant_info=QuantizationInfo(0.0f, 0))']]],
  ['depthwise_5fconvolution_5fmethod',['depthwise_convolution_method',['../classarm__compute_1_1graph_1_1_depthwise_convolution_layer_node.xhtml#a8cefd89d2de49691e778c8d5a08ac92f',1,'arm_compute::graph::DepthwiseConvolutionLayerNode::depthwise_convolution_method()'],['../classarm__compute_1_1graph_1_1_fused_depthwise_convolution_batch_normalization_node.xhtml#a8cefd89d2de49691e778c8d5a08ac92f',1,'arm_compute::graph::FusedDepthwiseConvolutionBatchNormalizationNode::depthwise_convolution_method()']]],
  ['depthwise_5fconvolution_5fmethod_5ffrom_5fname',['depthwise_convolution_method_from_name',['../namespacearm__compute_1_1graph.xhtml#a6dbaf2e51ef91725f852766f923fd5a6',1,'arm_compute::graph']]],
  ['depthwise_5fseparable_5fconvolution_5flayer',['depthwise_separable_convolution_layer',['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a79f9dfec3d4a3a6dfe7d084ee6b2b32e',1,'arm_compute::test::validation::reference']]],
  ['depthwiseconvolutionlayer',['DepthwiseConvolutionLayer',['../classarm__compute_1_1graph_1_1frontend_1_1_depthwise_convolution_layer.xhtml#acd0aeefa8e7b1978d4c5ac5e238da9c7',1,'arm_compute::graph::frontend::DepthwiseConvolutionLayer']]],
  ['depthwiseconvolutionlayernode',['DepthwiseConvolutionLayerNode',['../classarm__compute_1_1graph_1_1_depthwise_convolution_layer_node.xhtml#a29031f29e5d91bdd4f792c210b04a6cb',1,'arm_compute::graph::DepthwiseConvolutionLayerNode']]],
  ['dequantization_5flayer',['dequantization_layer',['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#abd43030e06efec1c26997107b7bd184d',1,'arm_compute::test::validation::reference::dequantization_layer(const SimpleTensor&lt; TIn &gt; &amp;src)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a9b5c98302ac3ac376c23302a1f3beef2',1,'arm_compute::test::validation::reference::dequantization_layer(const SimpleTensor&lt; uint8_t &gt; &amp;src)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#abede2427030c71627ea72c8eaee16fff',1,'arm_compute::test::validation::reference::dequantization_layer(const SimpleTensor&lt; int8_t &gt; &amp;src)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#afb55c366bbc0df5025d95b736ac14ff4',1,'arm_compute::test::validation::reference::dequantization_layer(const SimpleTensor&lt; int16_t &gt; &amp;src)']]],
  ['dequantizationlayer',['DequantizationLayer',['../classarm__compute_1_1graph_1_1frontend_1_1_dequantization_layer.xhtml#a85ae01d4be6283bbfcbdc574d75ec528',1,'arm_compute::graph::frontend::DequantizationLayer']]],
  ['dequantizationlayernode',['DequantizationLayerNode',['../classarm__compute_1_1graph_1_1_dequantization_layer_node.xhtml#a0640290b167665812e7b981b663a5285',1,'arm_compute::graph::DequantizationLayerNode']]],
  ['dequantize',['dequantize',['../structarm__compute_1_1_qasymm8_quantization_helper.xhtml#a912f8a4d002b2f74c071627a99469463',1,'arm_compute::Qasymm8QuantizationHelper::dequantize(QUANTIZED_TYPE value, const UniformQuantizationInfo &amp;qinfo)'],['../structarm__compute_1_1_qasymm8_quantization_helper.xhtml#a98af9b87dcba1d283edb936c7cc3144b',1,'arm_compute::Qasymm8QuantizationHelper::dequantize(QUANTIZED_TYPE value, const QuantizationInfo &amp;qinfo)'],['../namespacearm__compute.xhtml#ab8005b943e23486a2000a7966d664df2',1,'arm_compute::dequantize(uint8_t value, float scale, int32_t offset)'],['../namespacearm__compute.xhtml#aa29442a61be1fbce3b22c28f403acef2',1,'arm_compute::dequantize(int8_t value, float scale)'],['../namespacearm__compute.xhtml#a22c3c5e2d63814320440a3ec9d73419c',1,'arm_compute::dequantize(int16_t value, float scale)'],['../namespacearm__compute.xhtml#acf7db09d2dff587cd58187ed58eeec68',1,'arm_compute::dequantize(uint16_t value, float scale, int32_t offset)']]],
  ['dequantize_5fchar1',['dequantize_char1',['../helpers__asymm_8h.xhtml#aaeaa2ffe6aff77e6cc0289406678b3d1',1,'helpers_asymm.h']]],
  ['dequantize_5fchar16',['dequantize_char16',['../helpers__asymm_8h.xhtml#a52ea79d99e2dc0bf986efc815842847c',1,'helpers_asymm.h']]],
  ['dequantize_5fint1',['dequantize_int1',['../helpers__asymm_8h.xhtml#a186295336a93a0072b3f72d89a74b5c8',1,'helpers_asymm.h']]],
  ['dequantize_5fint16',['dequantize_int16',['../helpers__asymm_8h.xhtml#a103447344df3d2d2cfffc8ab997b6bcd',1,'helpers_asymm.h']]],
  ['dequantize_5fqasymm16',['dequantize_qasymm16',['../namespacearm__compute.xhtml#a85310967abb447a1cb1167ba8f73eab0',1,'arm_compute::dequantize_qasymm16(uint16_t value, const UniformQuantizationInfo &amp;qinfo)'],['../namespacearm__compute.xhtml#a1b09fc16ab06a02188334c4b1f43e2ff',1,'arm_compute::dequantize_qasymm16(uint16_t value, const QuantizationInfo &amp;qinfo)']]],
  ['dequantize_5fqasymm8',['dequantize_qasymm8',['../namespacearm__compute.xhtml#ac1d8253f8b422e143ab989ad2a4d29dd',1,'arm_compute::dequantize_qasymm8()'],['../helpers__asymm_8h.xhtml#afbec2094d42590b94e7eead93710411d',1,'dequantize_qasymm8():&#160;helpers_asymm.h']]],
  ['dequantize_5fqasymm8_5fsigned',['dequantize_qasymm8_signed',['../namespacearm__compute.xhtml#afe6fcf1a0c6f6c2d2cb10a8c14fa9131',1,'arm_compute::dequantize_qasymm8_signed()'],['../helpers__asymm_8h.xhtml#a3dc07539dda26f6cd2dcdc08a222292d',1,'dequantize_qasymm8_signed():&#160;helpers_asymm.h']]],
  ['dequantize_5fqsymm16',['dequantize_qsymm16',['../namespacearm__compute.xhtml#aae8583b382eaea109164f2f3e16380b1',1,'arm_compute::dequantize_qsymm16(int16_t value, const UniformQuantizationInfo &amp;qinfo)'],['../namespacearm__compute.xhtml#aae7ed4b777e2220a1959b79a7834042c',1,'arm_compute::dequantize_qsymm16(int16_t value, const QuantizationInfo &amp;qinfo)']]],
  ['dequantize_5fqsymm8',['dequantize_qsymm8',['../namespacearm__compute.xhtml#af7586ba11d82cc0232d4246a61a4a4f3',1,'arm_compute']]],
  ['dequantize_5fscores',['dequantize_scores',['../classarm__compute_1_1_detection_post_process_layer_info.xhtml#a9f94c4edaf37250de1a0403d0f929644',1,'arm_compute::DetectionPostProcessLayerInfo']]],
  ['dequantize_5fshort16',['dequantize_short16',['../helpers__asymm_8h.xhtml#ab4cd9c562aa288b7c2b54c22a60fba04',1,'helpers_asymm.h']]],
  ['dequantize_5fshort4',['dequantize_short4',['../helpers__asymm_8h.xhtml#a2b106b11a5f1e2e5b6a70e0afe1d9e5a',1,'helpers_asymm.h']]],
  ['dequantize_5fuchar1',['dequantize_uchar1',['../helpers__asymm_8h.xhtml#a3bb6724728c01a91aa349dba2a4edcc1',1,'helpers_asymm.h']]],
  ['dequantize_5fuchar16',['dequantize_uchar16',['../helpers__asymm_8h.xhtml#a2d9cac9c87356624d52b00c2e6950ec9',1,'helpers_asymm.h']]],
  ['dequantize_5fuchar4',['dequantize_uchar4',['../helpers__asymm_8h.xhtml#a951a47a7d1115404d183490f2aa11e40',1,'helpers_asymm.h']]],
  ['dequantize_5fuint1',['dequantize_uint1',['../helpers__asymm_8h.xhtml#ac870997ee5c5ea925bbe14f8b966f02e',1,'helpers_asymm.h']]],
  ['dequantize_5fuint16',['dequantize_uint16',['../helpers__asymm_8h.xhtml#ac4b7d00ffe62fa241cd5c3519467e6ac',1,'helpers_asymm.h']]],
  ['dequantize_5fushort16',['dequantize_ushort16',['../helpers__asymm_8h.xhtml#ad554c256832e2b36d187912753c83b14',1,'helpers_asymm.h']]],
  ['dequantize_5fushort4',['dequantize_ushort4',['../helpers__asymm_8h.xhtml#a5cdb515b62ef19a88f83d779240a02f4',1,'helpers_asymm.h']]],
  ['derivative',['derivative',['../derivative_8cl.xhtml#a5bd0ba0e3feaf66458557426291f2a77',1,'derivative():&#160;derivative.cl'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#aeae8f44225b61c5a6b05fdfcd82ae3d1',1,'arm_compute::test::validation::reference::derivative(const SimpleTensor&lt; U &gt; &amp;src, BorderMode border_mode, uint8_t constant_border_value, GradientDimension gradient_dimension)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#ac5079d3fc0f7cf5f8dfb40b882cea1af',1,'arm_compute::test::validation::reference::derivative(const SimpleTensor&lt; uint8_t &gt; &amp;src, BorderMode border_mode, uint8_t constant_border_value, GradientDimension gradient_dimension)']]],
  ['desc',['desc',['../classarm__compute_1_1graph_1_1_tensor.xhtml#a0d3608f94078b90ab1ff9e9465d4ed3b',1,'arm_compute::graph::Tensor::desc()'],['../classarm__compute_1_1graph_1_1_tensor.xhtml#ae0a7a8139c09a2e0dbbaeb547fcbe9ea',1,'arm_compute::graph::Tensor::desc() const']]],
  ['description',['description',['../structarm__compute_1_1test_1_1framework_1_1dataset_1_1_cartesian_product_dataset_1_1iterator.xhtml#a07ffe70037e0a16554c868bcdd8f83b5',1,'arm_compute::test::framework::dataset::CartesianProductDataset::iterator::description()'],['../structarm__compute_1_1test_1_1framework_1_1dataset_1_1_container_dataset_1_1iterator.xhtml#a07ffe70037e0a16554c868bcdd8f83b5',1,'arm_compute::test::framework::dataset::ContainerDataset::iterator::description()'],['../structarm__compute_1_1test_1_1framework_1_1dataset_1_1_initializer_list_dataset_1_1iterator.xhtml#a07ffe70037e0a16554c868bcdd8f83b5',1,'arm_compute::test::framework::dataset::InitializerListDataset::iterator::description()'],['../structarm__compute_1_1test_1_1framework_1_1dataset_1_1_join_dataset_1_1iterator.xhtml#a07ffe70037e0a16554c868bcdd8f83b5',1,'arm_compute::test::framework::dataset::JoinDataset::iterator::description()'],['../structarm__compute_1_1test_1_1framework_1_1dataset_1_1_range_dataset_1_1iterator.xhtml#a07ffe70037e0a16554c868bcdd8f83b5',1,'arm_compute::test::framework::dataset::RangeDataset::iterator::description()'],['../structarm__compute_1_1test_1_1framework_1_1dataset_1_1_singleton_dataset_1_1iterator.xhtml#a07ffe70037e0a16554c868bcdd8f83b5',1,'arm_compute::test::framework::dataset::SingletonDataset::iterator::description()'],['../structarm__compute_1_1test_1_1framework_1_1dataset_1_1_zip_dataset_1_1iterator.xhtml#a07ffe70037e0a16554c868bcdd8f83b5',1,'arm_compute::test::framework::dataset::ZipDataset::iterator::description()']]],
  ['descriptor',['descriptor',['../classarm__compute_1_1_i_c_l_h_o_g.xhtml#a27295b82a57124dd502fbe8cebe8f9ca',1,'arm_compute::ICLHOG::descriptor()'],['../classarm__compute_1_1_i_h_o_g.xhtml#afc824305b2eaceab36baf5b66a535316',1,'arm_compute::IHOG::descriptor()'],['../classarm__compute_1_1_h_o_g.xhtml#a27295b82a57124dd502fbe8cebe8f9ca',1,'arm_compute::HOG::descriptor()'],['../classarm__compute_1_1test_1_1_c_l_h_o_g_accessor.xhtml#a548b8c6fda024da07113ff6cf6ec6af6',1,'arm_compute::test::CLHOGAccessor::descriptor()'],['../classarm__compute_1_1test_1_1_i_h_o_g_accessor.xhtml#afc824305b2eaceab36baf5b66a535316',1,'arm_compute::test::IHOGAccessor::descriptor()'],['../classarm__compute_1_1test_1_1_h_o_g_accessor.xhtml#a548b8c6fda024da07113ff6cf6ec6af6',1,'arm_compute::test::HOGAccessor::descriptor()']]],
  ['descriptor_5fsize',['descriptor_size',['../classarm__compute_1_1_h_o_g_info.xhtml#a2a347c64540c1d48a579f830ddff622f',1,'arm_compute::HOGInfo']]],
  ['detection_5foutput_5finfo',['detection_output_info',['../classarm__compute_1_1graph_1_1_detection_output_layer_node.xhtml#a4491336dccd18464fbbf617c981736cf',1,'arm_compute::graph::DetectionOutputLayerNode']]],
  ['detection_5fper_5fclass',['detection_per_class',['../classarm__compute_1_1_detection_post_process_layer_info.xhtml#a36e65a7f80a07a2393e6a1cadd974740',1,'arm_compute::DetectionPostProcessLayerInfo']]],
  ['detection_5fpost_5fprocess_5finfo',['detection_post_process_info',['../classarm__compute_1_1graph_1_1_detection_post_process_layer_node.xhtml#a23ab280af362e61b91763038fc3194f4',1,'arm_compute::graph::DetectionPostProcessLayerNode']]],
  ['detection_5fwindow_5fsize',['detection_window_size',['../classarm__compute_1_1_h_o_g_info.xhtml#a7cbda2c789c461237f0c6eaee8f8cd2a',1,'arm_compute::HOGInfo']]],
  ['detection_5fwindows_5fnon_5fmaxima_5fsuppression',['detection_windows_non_maxima_suppression',['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a206dcc57b5f0396164931c3e65f52e20',1,'arm_compute::test::validation::reference']]],
  ['detectionoutputaccessor',['DetectionOutputAccessor',['../classarm__compute_1_1graph__utils_1_1_detection_output_accessor.xhtml#a27dfee7cd6e032a9d766786a8e1e3c8f',1,'arm_compute::graph_utils::DetectionOutputAccessor::DetectionOutputAccessor(const std::string &amp;labels_path, std::vector&lt; TensorShape &gt; &amp;imgs_tensor_shapes, std::ostream &amp;output_stream=std::cout)'],['../classarm__compute_1_1graph__utils_1_1_detection_output_accessor.xhtml#a9d991af8ac7b4f3379daebd90fd33e58',1,'arm_compute::graph_utils::DetectionOutputAccessor::DetectionOutputAccessor(DetectionOutputAccessor &amp;&amp;)=default'],['../classarm__compute_1_1graph__utils_1_1_detection_output_accessor.xhtml#ad844e13f53bb8d546007d0607445e966',1,'arm_compute::graph_utils::DetectionOutputAccessor::DetectionOutputAccessor(const DetectionOutputAccessor &amp;)=delete']]],
  ['detectionoutputlayer',['DetectionOutputLayer',['../classarm__compute_1_1graph_1_1frontend_1_1_detection_output_layer.xhtml#add9af3fe9c394a1994f926a6268260ed',1,'arm_compute::graph::frontend::DetectionOutputLayer']]],
  ['detectionoutputlayerinfo',['DetectionOutputLayerInfo',['../classarm__compute_1_1_detection_output_layer_info.xhtml#aba5c653899ad75de3548b6c60c08939c',1,'arm_compute::DetectionOutputLayerInfo::DetectionOutputLayerInfo()'],['../classarm__compute_1_1_detection_output_layer_info.xhtml#a13f922d9427581021eca1cc48faa431c',1,'arm_compute::DetectionOutputLayerInfo::DetectionOutputLayerInfo(int num_classes, bool share_location, DetectionOutputLayerCodeType code_type, int keep_top_k, float nms_threshold, int top_k=-1, int background_label_id=-1, float confidence_threshold=std::numeric_limits&lt; float &gt;::lowest(), bool variance_encoded_in_target=false, float eta=1)']]],
  ['detectionoutputlayernode',['DetectionOutputLayerNode',['../classarm__compute_1_1graph_1_1_detection_output_layer_node.xhtml#a747fc2559359c5004e3034a30ec7579c',1,'arm_compute::graph::DetectionOutputLayerNode']]],
  ['detectionpostprocesslayer',['DetectionPostProcessLayer',['../classarm__compute_1_1graph_1_1frontend_1_1_detection_post_process_layer.xhtml#a4c9b5e28705dc4e1b1b9418fc62bdedc',1,'arm_compute::graph::frontend::DetectionPostProcessLayer']]],
  ['detectionpostprocesslayerinfo',['DetectionPostProcessLayerInfo',['../classarm__compute_1_1_detection_post_process_layer_info.xhtml#a6eaedc96f1e42852da9afbb0c33df4be',1,'arm_compute::DetectionPostProcessLayerInfo::DetectionPostProcessLayerInfo()'],['../classarm__compute_1_1_detection_post_process_layer_info.xhtml#ae90105aa70d36e539722ec84f94554cf',1,'arm_compute::DetectionPostProcessLayerInfo::DetectionPostProcessLayerInfo(unsigned int max_detections, unsigned int max_classes_per_detection, float nms_score_threshold, float iou_threshold, unsigned int num_classes, std::array&lt; float, 4 &gt; scales_values, bool use_regular_nms=false, unsigned int detection_per_class=100, bool dequantize_scores=true)']]],
  ['detectionpostprocesslayernode',['DetectionPostProcessLayerNode',['../classarm__compute_1_1graph_1_1_detection_post_process_layer_node.xhtml#a5a5924785acf6009c34983a476fa3341',1,'arm_compute::graph::DetectionPostProcessLayerNode']]],
  ['detections_5fper_5fim',['detections_per_im',['../classarm__compute_1_1_box_n_m_s_limit_info.xhtml#af3ec399a9e0cea025fa9b37773a6eb13',1,'arm_compute::BoxNMSLimitInfo']]],
  ['device_5fsupports_5fextension',['device_supports_extension',['../namespacearm__compute.xhtml#a6c4a5ca34ebb51d4e2e119a110e4c8f0',1,'arm_compute']]],
  ['deviceproperties',['DeviceProperties',['../structarm__compute_1_1_device_properties.xhtml#a9e9ab2d51c656b164cb7499936576b71',1,'arm_compute::DeviceProperties']]],
  ['dfs',['dfs',['../namespacearm__compute_1_1graph.xhtml#a14abdeb0f575e919aa6d586a95f23920',1,'arm_compute::graph']]],
  ['dft_5f1d',['dft_1d',['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#afc02bc2a9b06db328e63c6bfbbdb23a8',1,'arm_compute::test::validation::reference::dft_1d(const SimpleTensor&lt; T &gt; &amp;src, FFTDirection direction)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a75345ce42cab379d55f2edf1b67ee4c2',1,'arm_compute::test::validation::reference::dft_1d(const SimpleTensor&lt; float &gt; &amp;src, FFTDirection direction)']]],
  ['dft_5f2d',['dft_2d',['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#af7677c34292be2590038f7fe6e0a6de7',1,'arm_compute::test::validation::reference::dft_2d(const SimpleTensor&lt; T &gt; &amp;src, FFTDirection direction)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#af4053ac59fe39737f4c28329b56277d1',1,'arm_compute::test::validation::reference::dft_2d(const SimpleTensor&lt; float &gt; &amp;src, FFTDirection direction)']]],
  ['digit_5freverse_5findices',['digit_reverse_indices',['../namespacearm__compute_1_1helpers_1_1fft.xhtml#acf1aaf9a5a9f908f6df4f37ad76f8fcd',1,'arm_compute::helpers::fft']]],
  ['dilate',['dilate',['../dilate_8cl.xhtml#ae69f64c97993985f7623a252cf9fbe69',1,'dilate():&#160;dilate.cl'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a2e49a7bdf96ed64920234da737e1bf86',1,'arm_compute::test::validation::reference::dilate(const SimpleTensor&lt; T &gt; &amp;src, BorderMode border_mode, T constant_border_value)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a9b18443e2ca2d82d1e314cc568ab997f',1,'arm_compute::test::validation::reference::dilate(const SimpleTensor&lt; uint8_t &gt; &amp;src, BorderMode border_mode, uint8_t constant_border_value)']]],
  ['dimension',['Dimension',['../classarm__compute_1_1_window_1_1_dimension.xhtml#a2c532d398a5661ff04367252701fa3d4',1,'arm_compute::Window::Dimension::Dimension()'],['../classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2',1,'arm_compute::ITensorInfo::dimension(size_t index) const =0'],['../classarm__compute_1_1_i_tensor_info.xhtml#ae3372a4569b4702a881b1606b0c144c4',1,'arm_compute::ITensorInfo::dimension(DataLayoutDimension dimension) const =0'],['../classarm__compute_1_1_sub_tensor_info.xhtml#a8813441b655b97c00139c6a5a6390e97',1,'arm_compute::SubTensorInfo::dimension(size_t index) const override'],['../classarm__compute_1_1_sub_tensor_info.xhtml#a650247f9a828d1ef60135b01f8f77765',1,'arm_compute::SubTensorInfo::dimension(DataLayoutDimension dimension) const override'],['../classarm__compute_1_1_tensor_info.xhtml#a8813441b655b97c00139c6a5a6390e97',1,'arm_compute::TensorInfo::dimension(size_t index) const override'],['../classarm__compute_1_1_tensor_info.xhtml#a650247f9a828d1ef60135b01f8f77765',1,'arm_compute::TensorInfo::dimension(DataLayoutDimension dimension) const override']]],
  ['dimensions',['Dimensions',['../classarm__compute_1_1_dimensions.xhtml#a669af0de951a474c4b443f7bc7c026e0',1,'arm_compute::Dimensions::Dimensions(Ts... dims)'],['../classarm__compute_1_1_dimensions.xhtml#a0d3c59537291735849c740364496a41c',1,'arm_compute::Dimensions::Dimensions(const Dimensions &amp;)=default'],['../classarm__compute_1_1_dimensions.xhtml#aa2c609345b3b6fa8da2486f75fff8ed8',1,'arm_compute::Dimensions::Dimensions(Dimensions &amp;&amp;)=default'],['../classarm__compute_1_1gles_1_1_n_d_range.xhtml#a38d1df78f2175f8f38f74d4357ad6a35',1,'arm_compute::gles::NDRange::dimensions()'],['../classarm__compute_1_1_i_distribution.xhtml#a254be7b34cd78d12ffc7ed2aba4882b1',1,'arm_compute::IDistribution::dimensions()'],['../classarm__compute_1_1_i_distribution1_d.xhtml#ad251169c06da412071bdfb6e92444e6e',1,'arm_compute::IDistribution1D::dimensions()']]],
  ['disabled_5ffixture_5fdata_5ftest_5fcase',['DISABLED_FIXTURE_DATA_TEST_CASE',['../namespacearm__compute_1_1test_1_1validation.xhtml#ad96d45ec005f26e4a61e1ca1f8b8ee31',1,'arm_compute::test::validation']]],
  ['dispatch',['dispatch',['../classarm__compute_1_1_g_c_scheduler.xhtml#a66a29e27a51a13250143981b0ee4ad19',1,'arm_compute::GCScheduler']]],
  ['distribution',['distribution',['../class_gemm_tuner_1_1_g_e_m_m_config_distribution.xhtml#a0bcb25e557abee63ef4a75e0d639fdb0',1,'GemmTuner.GEMMConfigDistribution.distribution()'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a756aeab6b5c217b924c3cc70222c975d',1,'arm_compute::test::validation::distribution()']]],
  ['distribution1d',['Distribution1D',['../classarm__compute_1_1_distribution1_d.xhtml#a243c829bced69df597b496eb7456efb0',1,'arm_compute::Distribution1D']]],
  ['distribution_5fb',['distribution_b',['../namespacearm__compute_1_1test_1_1validation.xhtml#aae1ff03a5732814dd9ecd75e0de7e72f',1,'arm_compute::test::validation']]],
  ['div_5fceil',['DIV_CEIL',['../namespacearm__compute.xhtml#acac1575c0edd329ceb4a54d9fe8dcb08',1,'arm_compute']]],
  ['do_5finstantiate',['do_instantiate',['../structarm__gemm_1_1_gemm_implementation.xhtml#ac5b4f98c3c427b056b137dca65169eb9',1,'arm_gemm::GemmImplementation::do_instantiate()'],['../structarm__gemm_1_1_gemm_implementation_3_01_top_00_01_tret_00_01_nothing_01_4.xhtml#a5a95bc71fa8a96ca2d3f4001369dea53',1,'arm_gemm::GemmImplementation&lt; Top, Tret, Nothing &gt;::do_instantiate()']]],
  ['do_5fis_5frecommended',['do_is_recommended',['../structarm__gemm_1_1_gemm_implementation.xhtml#ae13aa0f5a3421cbb243e9607b0eb32c5',1,'arm_gemm::GemmImplementation::do_is_recommended()'],['../structarm__gemm_1_1_gemm_implementation_3_01_top_00_01_tret_00_01_nothing_01_4.xhtml#a021a94f1f7529f6ce86900ec0d63e0f2',1,'arm_gemm::GemmImplementation&lt; Top, Tret, Nothing &gt;::do_is_recommended()']]],
  ['do_5fis_5fsupported',['do_is_supported',['../structarm__gemm_1_1_gemm_implementation.xhtml#aee0ab8a77c759d5e65f3987ff9fabdea',1,'arm_gemm::GemmImplementation::do_is_supported()'],['../structarm__gemm_1_1_gemm_implementation_3_01_top_00_01_tret_00_01_nothing_01_4.xhtml#aa3af9748daae0117fe4066ae1b3354a0',1,'arm_gemm::GemmImplementation&lt; Top, Tret, Nothing &gt;::do_is_supported()']]],
  ['do_5frun',['do_run',['../classarm__compute_1_1test_1_1framework_1_1_test_case.xhtml#a90b4bc2c4bae857bc3536f4a18e29772',1,'arm_compute::test::framework::TestCase::do_run()'],['../classarm__compute_1_1utils_1_1_graph_validate_example.xhtml#ab539da12e42174ad1a667f75b77a65c1',1,'arm_compute::utils::GraphValidateExample::do_run()'],['../classarm__compute_1_1utils_1_1_validate_example.xhtml#a90b4bc2c4bae857bc3536f4a18e29772',1,'arm_compute::utils::ValidateExample::do_run()'],['../classarm__compute_1_1utils_1_1_example.xhtml#a90b4bc2c4bae857bc3536f4a18e29772',1,'arm_compute::utils::Example::do_run()']]],
  ['do_5fsetup',['do_setup',['../classarm__compute_1_1test_1_1framework_1_1_test_case.xhtml#a5bf6aaa253bb8a13013294d33e168c45',1,'arm_compute::test::framework::TestCase::do_setup()'],['../classarm__compute_1_1utils_1_1_graph_validate_example.xhtml#aca0c669baad0b2ff3c1bdb38fdd77185',1,'arm_compute::utils::GraphValidateExample::do_setup()'],['../classarm__compute_1_1utils_1_1_validate_example.xhtml#ae678db013a8393ad2799a7de8b2b9304',1,'arm_compute::utils::ValidateExample::do_setup()'],['../classarm__compute_1_1utils_1_1_example.xhtml#ae678db013a8393ad2799a7de8b2b9304',1,'arm_compute::utils::Example::do_setup()']]],
  ['do_5fsync',['do_sync',['../classarm__compute_1_1test_1_1framework_1_1_test_case.xhtml#a197634795f22ff5c0d7789f5ccb3f9bd',1,'arm_compute::test::framework::TestCase']]],
  ['do_5fteardown',['do_teardown',['../classarm__compute_1_1test_1_1framework_1_1_test_case.xhtml#a9b3acd6be09cf86066760caaa89f7be5',1,'arm_compute::test::framework::TestCase::do_teardown()'],['../classarm__compute_1_1utils_1_1_graph_validate_example.xhtml#ad661ffd89241c1465c142b9d1f22f3d3',1,'arm_compute::utils::GraphValidateExample::do_teardown()'],['../classarm__compute_1_1utils_1_1_validate_example.xhtml#a9b3acd6be09cf86066760caaa89f7be5',1,'arm_compute::utils::ValidateExample::do_teardown()'],['../classarm__compute_1_1utils_1_1_example.xhtml#a9b3acd6be09cf86066760caaa89f7be5',1,'arm_compute::utils::Example::do_teardown()']]],
  ['do_5fvalidate',['do_validate',['../classarm__compute_1_1utils_1_1_validate_example.xhtml#a69a49661f6327627d02e346dbb844665',1,'arm_compute::utils::ValidateExample']]],
  ['dot8_5facc_5fsupported',['dot8_acc_supported',['../namespacearm__compute.xhtml#a4878daab91c6d7173de20283766e0c2c',1,'arm_compute']]],
  ['dot8_5fsupported',['dot8_supported',['../namespacearm__compute.xhtml#ac07e02c0066cf540a5a2665fa7d54934',1,'arm_compute']]],
  ['dotgraphvisitor',['DotGraphVisitor',['../classarm__compute_1_1graph_1_1_dot_graph_visitor.xhtml#aba079420016162d60cc142401885db44',1,'arm_compute::graph::DotGraphVisitor']]],
  ['draw_5fdetection_5frectangle',['draw_detection_rectangle',['../namespacearm__compute_1_1utils.xhtml#ad1b5373f466a3945e1f0ef1c9943c357',1,'arm_compute::utils']]],
  ['dummy',['dummy',['../structarm__compute_1_1detail_1_1dummy.xhtml#a9459460908c5314f6ea5333a397fea5b',1,'arm_compute::detail::dummy']]],
  ['dummyaccessor',['DummyAccessor',['../classarm__compute_1_1graph__utils_1_1_dummy_accessor.xhtml#ac5ae9597ba20e5581726743fe7c154b5',1,'arm_compute::graph_utils::DummyAccessor::DummyAccessor(unsigned int maximum=1)'],['../classarm__compute_1_1graph__utils_1_1_dummy_accessor.xhtml#a4a48cd865f33e4a907338c42d652d80f',1,'arm_compute::graph_utils::DummyAccessor::DummyAccessor(DummyAccessor &amp;&amp;)=default']]],
  ['dummylayer',['DummyLayer',['../classarm__compute_1_1graph_1_1frontend_1_1_dummy_layer.xhtml#a3ec4fedf20ceaf0c7bc62be065150f40',1,'arm_compute::graph::frontend::DummyLayer']]],
  ['dummynode',['DummyNode',['../classarm__compute_1_1graph_1_1_dummy_node.xhtml#aefa24b710045e042672a5e887c3efaef',1,'arm_compute::graph::DummyNode']]],
  ['duplicate',['duplicate',['../classarm__compute_1_1_blob_memory_pool.xhtml#a1854bcee41d35bbd99a3ff7b274e3819',1,'arm_compute::BlobMemoryPool::duplicate()'],['../classarm__compute_1_1_i_memory_pool.xhtml#af6c6c5e675fab42e482d11d02df2a79e',1,'arm_compute::IMemoryPool::duplicate()'],['../classarm__compute_1_1_offset_memory_pool.xhtml#a1854bcee41d35bbd99a3ff7b274e3819',1,'arm_compute::OffsetMemoryPool::duplicate()']]]
];
