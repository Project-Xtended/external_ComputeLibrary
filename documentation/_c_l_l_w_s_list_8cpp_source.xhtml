<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/runtime/CL/tuners/CLLWSList.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_c_l_l_w_s_list_8cpp_source.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">CLLWSList.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_c_l_l_w_s_list_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2019 ARM Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_c_l_l_w_s_list_8h.xhtml">arm_compute/runtime/CL/tuners/CLLWSList.h</a>&quot;</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;{</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="keyword">namespace </span>cl_tuner</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;{</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="keywordtype">size_t</span> CLLWSList::size()</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;{</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    <span class="keywordflow">return</span> search_space_shape.<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml#a0fdcb923dfd4c74858cc2bc326321efb">total_size</a>();</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;}</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div><div class="line"><a name="l00035"></a><span class="lineno"><a class="line" href="classarm__compute_1_1cl__tuner_1_1_c_l_l_w_s_list_exhaustive.xhtml#aa2dbe5abae0f6a0736189972c3fd9fe7">   35</a></span>&#160;cl::NDRange <a class="code" href="classarm__compute_1_1cl__tuner_1_1_c_l_l_w_s_list_exhaustive.xhtml#aa2dbe5abae0f6a0736189972c3fd9fe7">CLLWSListExhaustive::operator[]</a>(<span class="keywordtype">size_t</span> index)</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;{</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(index &gt;= size());</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    <span class="keyword">auto</span> coords = <a class="code" href="namespacearm__compute.xhtml#ad34f2150f1c9f8a3ecb7298162124e5d">index2coords</a>(search_space_shape, index);</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    <span class="keywordflow">return</span> cl::NDRange{ coords[0] + 1<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, coords[1] + 1<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, coords[2] + 1<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a> };</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;}</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;</div><div class="line"><a name="l00042"></a><span class="lineno"><a class="line" href="classarm__compute_1_1cl__tuner_1_1_c_l_l_w_s_list_exhaustive.xhtml#a4448191ee408c84417e42aec5763ff6c">   42</a></span>&#160;<a class="code" href="classarm__compute_1_1cl__tuner_1_1_c_l_l_w_s_list_exhaustive.xhtml#a5a2e0d059ae9669819cd7f33ae4e2348">CLLWSListExhaustive::CLLWSListExhaustive</a>(<span class="keyword">const</span> cl::NDRange &amp;gws)</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;{</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(gws);</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    search_space_shape = <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(<a class="code" href="namespacearm__compute_1_1cl__tuner.xhtml#afe38c917dac047258d18d711f9e2a406">max_lws_supported_x</a>,</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;                                     <a class="code" href="namespacearm__compute_1_1cl__tuner.xhtml#a74023a689f05760342bb4430e6be1727">max_lws_supported_y</a>,</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;                                     <a class="code" href="namespacearm__compute_1_1cl__tuner.xhtml#a1059103bbce12e2b177b72c49618f1ce">max_lws_supported_z</a>);</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;}</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div><div class="line"><a name="l00050"></a><span class="lineno"><a class="line" href="classarm__compute_1_1cl__tuner_1_1_c_l_l_w_s_list_normal.xhtml#aa2dbe5abae0f6a0736189972c3fd9fe7">   50</a></span>&#160;cl::NDRange <a class="code" href="classarm__compute_1_1cl__tuner_1_1_c_l_l_w_s_list_normal.xhtml#aa2dbe5abae0f6a0736189972c3fd9fe7">CLLWSListNormal::operator[]</a>(<span class="keywordtype">size_t</span> index)</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;{</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(index &gt;= size());</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <span class="keyword">auto</span> coords = <a class="code" href="namespacearm__compute.xhtml#ad34f2150f1c9f8a3ecb7298162124e5d">index2coords</a>(search_space_shape, index);</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <span class="keywordflow">return</span> cl::NDRange{ _lws_x[coords[0]], _lws_y[coords[1]], _lws_z[coords[2]] };</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;}</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div><div class="line"><a name="l00057"></a><span class="lineno"><a class="line" href="classarm__compute_1_1cl__tuner_1_1_c_l_l_w_s_list_normal.xhtml#adfc8790c19fa1019dbb1e3e671045b26">   57</a></span>&#160;CLLWSListNormal::CLLWSListNormal(<span class="keyword">const</span> cl::NDRange &amp;gws)</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;{</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <span class="keyword">auto</span> lws_x_max = std::min(static_cast&lt;unsigned int&gt;(gws[0]), <a class="code" href="namespacearm__compute_1_1cl__tuner.xhtml#afe38c917dac047258d18d711f9e2a406">max_lws_supported_x</a>);</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    <span class="keyword">auto</span> lws_y_max = std::min(static_cast&lt;unsigned int&gt;(gws[1]), <a class="code" href="namespacearm__compute_1_1cl__tuner.xhtml#a74023a689f05760342bb4430e6be1727">max_lws_supported_y</a>);</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <span class="keyword">auto</span> lws_z_max = std::min(static_cast&lt;unsigned int&gt;(gws[2]), <a class="code" href="namespacearm__compute_1_1cl__tuner.xhtml#a1059103bbce12e2b177b72c49618f1ce">max_lws_supported_z</a>);</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <span class="comment">// Initialize the LWS values to test</span></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    initialize_lws_values(_lws_x, gws[0], lws_x_max, gws[2] &gt; 16); <span class="comment">// Explore lws that are not factors of gws only when gws[2] &gt; 16</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    initialize_lws_values(_lws_y, gws[1], lws_y_max, gws[2] &gt; 16); <span class="comment">// Explore lws that are not factors of gws only when gws[2] &gt; 16</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    initialize_lws_values(_lws_z, gws[2], lws_z_max, <span class="keyword">false</span>);</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    search_space_shape = <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(_lws_x.size(), _lws_y.size(), _lws_z.size());</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;}</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="keywordtype">void</span> CLLWSListNormal::initialize_lws_values(std::vector&lt;unsigned int&gt; &amp;lws, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> gws, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> lws_max, <span class="keywordtype">bool</span> mod_let_one)</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;{</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    lws.push_back(1);</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i = 2; i &lt;= lws_max; ++i)</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    {</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        <span class="comment">// Power of two condition</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">bool</span> is_power_of_two = (i &amp; (i - 1)) == 0;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        <span class="comment">// Condition for the module accordingly with the mod_let_one flag</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">bool</span> mod_cond = mod_let_one ? (gws % i) &lt;= 1 : (gws % i) == 0;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        <span class="keywordflow">if</span>(mod_cond || is_power_of_two)</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        {</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;            lws.push_back(i);</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        }</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    }</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;}</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;</div><div class="line"><a name="l00090"></a><span class="lineno"><a class="line" href="classarm__compute_1_1cl__tuner_1_1_c_l_l_w_s_list_rapid.xhtml#a8a6ec6913e1a6e110ea1c735e38dfd37">   90</a></span>&#160;<a class="code" href="classarm__compute_1_1cl__tuner_1_1_c_l_l_w_s_list_rapid.xhtml#ad5665ec0184d2dfae5fbf7ec7ce7ed44">CLLWSListRapid::CLLWSListRapid</a>(<span class="keyword">const</span> cl::NDRange &amp;gws)</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;{</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <span class="keyword">auto</span> lws_x_max = std::min(static_cast&lt;unsigned int&gt;(gws[0]), 8u); <span class="comment">// Limit exploration to 1 - 8</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <span class="keyword">auto</span> lws_y_max = std::min(static_cast&lt;unsigned int&gt;(gws[1]), 4u); <span class="comment">// Limit exploration to 1 - 4</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <span class="keyword">auto</span> lws_z_max = std::min(static_cast&lt;unsigned int&gt;(gws[2]), 4u); <span class="comment">// Limit exploration to 1 - 4</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    <span class="comment">// Initialize the LWS values to test</span></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    initialize_lws_values(_lws_x, lws_x_max);</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    initialize_lws_values(_lws_y, lws_y_max);</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    initialize_lws_values(_lws_z, lws_z_max);</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    search_space_shape = <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(_lws_x.size(), _lws_y.size(), _lws_z.size());</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;}</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="keywordtype">void</span> CLLWSListRapid::initialize_lws_values(std::vector&lt;unsigned int&gt; &amp;lws, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> lws_max)</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;{</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    lws.push_back(1);</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i = 2; i &lt;= lws_max; i *= 4)</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    {</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        lws.push_back(i);</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    }</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;}</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;} <span class="comment">// namespace cl_tuner</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;} <span class="comment">// namespace arm_compute</span></div><div class="ttc" id="_c_l_l_w_s_list_8h_xhtml"><div class="ttname"><a href="_c_l_l_w_s_list_8h.xhtml">CLLWSList.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_shape_xhtml"><div class="ttname"><a href="classarm__compute_1_1_tensor_shape.xhtml">arm_compute::TensorShape</a></div><div class="ttdoc">Shape of a tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_shape_8h_source.xhtml#l00039">TensorShape.h:39</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ad34f2150f1c9f8a3ecb7298162124e5d"><div class="ttname"><a href="namespacearm__compute.xhtml#ad34f2150f1c9f8a3ecb7298162124e5d">arm_compute::index2coords</a></div><div class="ttdeci">Coordinates index2coords(const TensorShape &amp;shape, int index)</div><div class="ttdoc">Convert a linear index into n-dimensional coordinates.</div><div class="ttdef"><b>Definition:</b> <a href="_helpers_8inl_source.xhtml#l00290">Helpers.inl:290</a></div></div>
<div class="ttc" id="classarm__compute_1_1cl__tuner_1_1_c_l_l_w_s_list_normal_xhtml_aa2dbe5abae0f6a0736189972c3fd9fe7"><div class="ttname"><a href="classarm__compute_1_1cl__tuner_1_1_c_l_l_w_s_list_normal.xhtml#aa2dbe5abae0f6a0736189972c3fd9fe7">arm_compute::cl_tuner::CLLWSListNormal::operator[]</a></div><div class="ttdeci">cl::NDRange operator[](size_t) override</div><div class="ttdoc">Return the LWS value at the given index.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_l_w_s_list_8cpp_source.xhtml#l00050">CLLWSList.cpp:50</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00466">Error.h:466</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1cl__tuner_xhtml_a1059103bbce12e2b177b72c49618f1ce"><div class="ttname"><a href="namespacearm__compute_1_1cl__tuner.xhtml#a1059103bbce12e2b177b72c49618f1ce">arm_compute::cl_tuner::max_lws_supported_z</a></div><div class="ttdeci">constexpr unsigned int max_lws_supported_z</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_l_w_s_list_8h_source.xhtml#l00040">CLLWSList.h:40</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1cl__tuner_xhtml_a74023a689f05760342bb4430e6be1727"><div class="ttname"><a href="namespacearm__compute_1_1cl__tuner.xhtml#a74023a689f05760342bb4430e6be1727">arm_compute::cl_tuner::max_lws_supported_y</a></div><div class="ttdeci">constexpr unsigned int max_lws_supported_y</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_l_w_s_list_8h_source.xhtml#l00039">CLLWSList.h:39</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2020 ARM Limited.</div><div class="ttdef"><b>Definition:</b> <a href="00__introduction_8dox_source.xhtml#l00024">00_introduction.dox:24</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a6dc630a6ae9cc063b3924bcea8dee9d6"><div class="ttname"><a href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a></div><div class="ttdeci">#define ARM_COMPUTE_UNUSED(...)</div><div class="ttdoc">To avoid unused variables warnings.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00152">Error.h:152</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1utils_1_1cast_xhtml_a2ea3d1fc01a3a442900249ca182ffa5e"><div class="ttname"><a href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">arm_compute::utils::cast::U</a></div><div class="ttdeci">U</div><div class="ttdef"><b>Definition:</b> <a href="_saturate_cast_8h_source.xhtml#l00057">SaturateCast.h:57</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_shape_xhtml_a0fdcb923dfd4c74858cc2bc326321efb"><div class="ttname"><a href="classarm__compute_1_1_tensor_shape.xhtml#a0fdcb923dfd4c74858cc2bc326321efb">arm_compute::TensorShape::total_size</a></div><div class="ttdeci">size_t total_size() const</div><div class="ttdoc">Collapses all dimensions to a single linear total size.</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_shape_8h_source.xhtml#l00171">TensorShape.h:171</a></div></div>
<div class="ttc" id="classarm__compute_1_1cl__tuner_1_1_c_l_l_w_s_list_exhaustive_xhtml_aa2dbe5abae0f6a0736189972c3fd9fe7"><div class="ttname"><a href="classarm__compute_1_1cl__tuner_1_1_c_l_l_w_s_list_exhaustive.xhtml#aa2dbe5abae0f6a0736189972c3fd9fe7">arm_compute::cl_tuner::CLLWSListExhaustive::operator[]</a></div><div class="ttdeci">cl::NDRange operator[](size_t) override</div><div class="ttdoc">Return the LWS value at the given index.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_l_w_s_list_8cpp_source.xhtml#l00035">CLLWSList.cpp:35</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1cl__tuner_xhtml_afe38c917dac047258d18d711f9e2a406"><div class="ttname"><a href="namespacearm__compute_1_1cl__tuner.xhtml#afe38c917dac047258d18d711f9e2a406">arm_compute::cl_tuner::max_lws_supported_x</a></div><div class="ttdeci">constexpr unsigned int max_lws_supported_x</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_l_w_s_list_8h_source.xhtml#l00038">CLLWSList.h:38</a></div></div>
<div class="ttc" id="classarm__compute_1_1cl__tuner_1_1_c_l_l_w_s_list_rapid_xhtml_ad5665ec0184d2dfae5fbf7ec7ce7ed44"><div class="ttname"><a href="classarm__compute_1_1cl__tuner_1_1_c_l_l_w_s_list_rapid.xhtml#ad5665ec0184d2dfae5fbf7ec7ce7ed44">arm_compute::cl_tuner::CLLWSListRapid::CLLWSListRapid</a></div><div class="ttdeci">CLLWSListRapid()=delete</div><div class="ttdoc">Prevent default constructor calls.</div></div>
<div class="ttc" id="classarm__compute_1_1cl__tuner_1_1_c_l_l_w_s_list_exhaustive_xhtml_a5a2e0d059ae9669819cd7f33ae4e2348"><div class="ttname"><a href="classarm__compute_1_1cl__tuner_1_1_c_l_l_w_s_list_exhaustive.xhtml#a5a2e0d059ae9669819cd7f33ae4e2348">arm_compute::cl_tuner::CLLWSListExhaustive::CLLWSListExhaustive</a></div><div class="ttdeci">CLLWSListExhaustive()=delete</div><div class="ttdoc">Prevent default constructor calls.</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_bf9f26469d00835ba20ff8d80ee5a804.xhtml">runtime</a></li><li class="navelem"><a class="el" href="dir_43c3fdbf778d1fd99e2e38f09fddd920.xhtml">CL</a></li><li class="navelem"><a class="el" href="dir_50c9c9ef2ed96b9f05a6a6f40f0f5c9e.xhtml">tuners</a></li><li class="navelem"><a class="el" href="_c_l_l_w_s_list_8cpp.xhtml">CLLWSList.cpp</a></li>
    <li class="footer">Generated on Fri Feb 21 2020 11:10:16 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
