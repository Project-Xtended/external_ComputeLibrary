<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/graph/mutators/InPlaceOperationMutator.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">20.02.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_in_place_operation_mutator_8cpp_source.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">InPlaceOperationMutator.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_in_place_operation_mutator_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2018-2020 ARM Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_in_place_operation_mutator_8h.xhtml">arm_compute/graph/mutators/InPlaceOperationMutator.h</a>&quot;</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="graph_2_graph_8h.xhtml">arm_compute/graph/Graph.h</a>&quot;</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="graph_2_logger_8h.xhtml">arm_compute/graph/Logger.h</a>&quot;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;{</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="keyword">namespace </span>graph</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;{</div><div class="line"><a name="l00033"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1_in_place_operation_mutator.xhtml#a0ee2c922a45715b33e30f83f8c005b68">   33</a></span>&#160;<span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="classarm__compute_1_1graph_1_1_in_place_operation_mutator.xhtml#a0ee2c922a45715b33e30f83f8c005b68">InPlaceOperationMutator::name</a>()</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;{</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    <span class="keywordflow">return</span> <span class="stringliteral">&quot;InPlaceOperationMutator&quot;</span>;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;}</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div><div class="line"><a name="l00038"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1_in_place_operation_mutator.xhtml#ae8dc84fc3eb9c937069826830b13b06d">   38</a></span>&#160;<a class="code" href="classarm__compute_1_1graph_1_1_i_graph_mutator.xhtml#a15c294efeadfdffb6b0735dd93aedfd9">IGraphMutator::MutationType</a> <a class="code" href="classarm__compute_1_1graph_1_1_in_place_operation_mutator.xhtml#ae8dc84fc3eb9c937069826830b13b06d">InPlaceOperationMutator::type</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1graph_1_1_i_graph_mutator.xhtml#a15c294efeadfdffb6b0735dd93aedfd9a2e427c268ac1768b9add94b65e2d6c14">IGraphMutator::MutationType::Backend</a>;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;}</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div><div class="line"><a name="l00043"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1_in_place_operation_mutator.xhtml#af6705a49326de235df4e9b6028bdcdce">   43</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1graph_1_1_in_place_operation_mutator.xhtml#af6705a49326de235df4e9b6028bdcdce">InPlaceOperationMutator::mutate</a>(<a class="code" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;g)</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;{</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    std::set&lt;NodeType&gt; in_place_nodes = { <a class="code" href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16ad0146d2051fad860923cf31f7e00a732">NodeType::BatchNormalizationLayer</a>, <a class="code" href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16a041485a3394541feee82a34d40249d70">NodeType::ActivationLayer</a>, <a class="code" href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16a415d76e29ed6d61c9f71cc6f7cf3f656">NodeType::PrintLayer</a> };</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <span class="comment">// Not interested in the order of nodes</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <span class="keywordflow">for</span>(<span class="keyword">auto</span> &amp;node : g.<a class="code" href="classarm__compute_1_1graph_1_1_graph.xhtml#a8a979250f01a5edba059a02748b10ea3">nodes</a>())</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    {</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;        <span class="keywordflow">if</span>(node &amp;&amp; in_place_nodes.find(node-&gt;type()) != std::end(in_place_nodes))</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;        {</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;            <span class="comment">// Get input edge</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;            <a class="code" href="classarm__compute_1_1graph_1_1_edge.xhtml">Edge</a> *input_edge = node-&gt;input_edge(0);</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;            <span class="comment">// Check if parent has a single output if yes then force in place calculation else not</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;            <span class="keywordflow">if</span>((input_edge != <span class="keyword">nullptr</span>) &amp;&amp; (input_edge-&gt;<a class="code" href="classarm__compute_1_1graph_1_1_edge.xhtml#acef46a426a99b126a412e361125f2ce9">producer</a>() != <span class="keyword">nullptr</span>) &amp;&amp; (input_edge-&gt;<a class="code" href="classarm__compute_1_1graph_1_1_edge.xhtml#acef46a426a99b126a412e361125f2ce9">producer</a>()-&gt;<a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml#abbf8678d888561b348dd1c34d9e34af9">output_edges</a>().size() == 1))</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;            {</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;                <span class="comment">// Get current and new output tensors</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;                <span class="keyword">auto</span> current_output_tensor = node-&gt;output(0);</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;                <span class="keyword">auto</span> new_output_tensor     = input_edge-&gt;<a class="code" href="classarm__compute_1_1graph_1_1_edge.xhtml#aff6b38772acc09675f4f64e510e31055">tensor</a>();</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;                <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(current_output_tensor == <span class="keyword">nullptr</span> || new_output_tensor == <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;                <span class="comment">// Prevent in-place operation if there is an accessor bound to the in-place tensor or quantization info are different</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;                <span class="keywordflow">if</span>(new_output_tensor-&gt;accessor() != <span class="keyword">nullptr</span> || current_output_tensor-&gt;desc().quant_info != new_output_tensor-&gt;desc().quant_info)</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;                {</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;                    <a class="code" href="graph_2_logger_8h.xhtml#a300d153929a99c7b571d4cda3f7987a5">ARM_COMPUTE_LOG_GRAPH_VERBOSE</a>(<span class="stringliteral">&quot;Prevented in-place operation as there is an accessor bound to the input tensor or the quantization info are different.\n&quot;</span>);</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;                }</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;                <span class="keywordflow">else</span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;                {</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;                    <a class="code" href="graph_2_logger_8h.xhtml#a300d153929a99c7b571d4cda3f7987a5">ARM_COMPUTE_LOG_GRAPH_VERBOSE</a>(<span class="stringliteral">&quot;Switching to in-place computation for the node with ID : &quot;</span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;                                                  &lt;&lt; node-&gt;id() &lt;&lt; <span class="stringliteral">&quot; and name : &quot;</span> &lt;&lt; node-&gt;name() &lt;&lt; std::endl);</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;                    <span class="comment">// Update accessor</span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;                    new_output_tensor-&gt;set_accessor(current_output_tensor-&gt;extract_accessor());</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;                    <span class="comment">// Update output</span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;                    node-&gt;set_output_tensor(new_output_tensor-&gt;id(), 0);</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;                }</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;            }</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        }</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    }</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;}</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;} <span class="comment">// namespace graph</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;} <span class="comment">// namespace arm_compute</span></div><div class="ttc" id="namespacearm__compute_1_1graph_xhtml_acac9cbaeea226ed297804c012dc12b16a041485a3394541feee82a34d40249d70"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16a041485a3394541feee82a34d40249d70">arm_compute::graph::NodeType::ActivationLayer</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1graph_xhtml_acac9cbaeea226ed297804c012dc12b16ad0146d2051fad860923cf31f7e00a732"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16ad0146d2051fad860923cf31f7e00a732">arm_compute::graph::NodeType::BatchNormalizationLayer</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_i_node_xhtml_abbf8678d888561b348dd1c34d9e34af9"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_i_node.xhtml#abbf8678d888561b348dd1c34d9e34af9">arm_compute::graph::INode::output_edges</a></div><div class="ttdeci">const std::set&lt; EdgeID &gt; &amp; output_edges() const</div><div class="ttdoc">Returns output edge set.</div><div class="ttdef"><b>Definition:</b> <a href="_i_node_8cpp_source.xhtml#l00132">INode.cpp:132</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_edge_xhtml_aff6b38772acc09675f4f64e510e31055"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_edge.xhtml#aff6b38772acc09675f4f64e510e31055">arm_compute::graph::Edge::tensor</a></div><div class="ttdeci">Tensor * tensor() const</div><div class="ttdoc">Returns the tensor associated with this edge.</div><div class="ttdef"><b>Definition:</b> <a href="_edge_8h_source.xhtml#l00116">Edge.h:116</a></div></div>
<div class="ttc" id="_in_place_operation_mutator_8h_xhtml"><div class="ttname"><a href="_in_place_operation_mutator_8h.xhtml">InPlaceOperationMutator.h</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00466">Error.h:466</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2020 ARM Limited.</div><div class="ttdef"><b>Definition:</b> <a href="00__introduction_8dox_source.xhtml#l00024">00_introduction.dox:24</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_i_graph_mutator_xhtml_a15c294efeadfdffb6b0735dd93aedfd9a2e427c268ac1768b9add94b65e2d6c14"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_i_graph_mutator.xhtml#a15c294efeadfdffb6b0735dd93aedfd9a2e427c268ac1768b9add94b65e2d6c14">arm_compute::graph::IGraphMutator::MutationType::Backend</a></div><div class="ttdoc">IR specific mutation.</div></div>
<div class="ttc" id="graph_2_logger_8h_xhtml"><div class="ttname"><a href="graph_2_logger_8h.xhtml">Logger.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_graph_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_graph.xhtml">arm_compute::graph::Graph</a></div><div class="ttdoc">Graph class.</div><div class="ttdef"><b>Definition:</b> <a href="graph_2_graph_8h_source.xhtml#l00053">Graph.h:53</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_in_place_operation_mutator_xhtml_ae8dc84fc3eb9c937069826830b13b06d"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_in_place_operation_mutator.xhtml#ae8dc84fc3eb9c937069826830b13b06d">arm_compute::graph::InPlaceOperationMutator::type</a></div><div class="ttdeci">MutationType type() const override</div><div class="ttdoc">Returns mutation type.</div><div class="ttdef"><b>Definition:</b> <a href="_in_place_operation_mutator_8cpp_source.xhtml#l00038">InPlaceOperationMutator.cpp:38</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_graph_xhtml_a8a979250f01a5edba059a02748b10ea3"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_graph.xhtml#a8a979250f01a5edba059a02748b10ea3">arm_compute::graph::Graph::nodes</a></div><div class="ttdeci">const std::vector&lt; NodeID &gt; &amp; nodes(NodeType type)</div><div class="ttdoc">Returns graph input nodes.</div><div class="ttdef"><b>Definition:</b> <a href="_graph_8cpp_source.xhtml#l00174">Graph.cpp:174</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_edge_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_edge.xhtml">arm_compute::graph::Edge</a></div><div class="ttdoc">Graph Edge.</div><div class="ttdef"><b>Definition:</b> <a href="_edge_8h_source.xhtml#l00039">Edge.h:39</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_i_graph_mutator_xhtml_a15c294efeadfdffb6b0735dd93aedfd9"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_i_graph_mutator.xhtml#a15c294efeadfdffb6b0735dd93aedfd9">arm_compute::graph::IGraphMutator::MutationType</a></div><div class="ttdeci">MutationType</div><div class="ttdoc">Mutation type.</div><div class="ttdef"><b>Definition:</b> <a href="_i_graph_mutator_8h_source.xhtml#l00039">IGraphMutator.h:39</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_in_place_operation_mutator_xhtml_a0ee2c922a45715b33e30f83f8c005b68"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_in_place_operation_mutator.xhtml#a0ee2c922a45715b33e30f83f8c005b68">arm_compute::graph::InPlaceOperationMutator::name</a></div><div class="ttdeci">const char * name() override</div><div class="ttdoc">Returns mutator name.</div><div class="ttdef"><b>Definition:</b> <a href="_in_place_operation_mutator_8cpp_source.xhtml#l00033">InPlaceOperationMutator.cpp:33</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1graph_xhtml_acac9cbaeea226ed297804c012dc12b16a415d76e29ed6d61c9f71cc6f7cf3f656"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16a415d76e29ed6d61c9f71cc6f7cf3f656">arm_compute::graph::NodeType::PrintLayer</a></div></div>
<div class="ttc" id="graph_2_logger_8h_xhtml_a300d153929a99c7b571d4cda3f7987a5"><div class="ttname"><a href="graph_2_logger_8h.xhtml#a300d153929a99c7b571d4cda3f7987a5">ARM_COMPUTE_LOG_GRAPH_VERBOSE</a></div><div class="ttdeci">#define ARM_COMPUTE_LOG_GRAPH_VERBOSE(x)</div><div class="ttdef"><b>Definition:</b> <a href="graph_2_logger_8h_source.xhtml#l00050">Logger.h:50</a></div></div>
<div class="ttc" id="graph_2_graph_8h_xhtml"><div class="ttname"><a href="graph_2_graph_8h.xhtml">Graph.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_edge_xhtml_acef46a426a99b126a412e361125f2ce9"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_edge.xhtml#acef46a426a99b126a412e361125f2ce9">arm_compute::graph::Edge::producer</a></div><div class="ttdeci">INode * producer() const</div><div class="ttdoc">Returns producer node.</div><div class="ttdef"><b>Definition:</b> <a href="_edge_8h_source.xhtml#l00084">Edge.h:84</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_in_place_operation_mutator_xhtml_af6705a49326de235df4e9b6028bdcdce"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_in_place_operation_mutator.xhtml#af6705a49326de235df4e9b6028bdcdce">arm_compute::graph::InPlaceOperationMutator::mutate</a></div><div class="ttdeci">virtual void mutate(Graph &amp;g) override</div><div class="ttdoc">Walk the graph and perform a specific mutation.</div><div class="ttdef"><b>Definition:</b> <a href="_in_place_operation_mutator_8cpp_source.xhtml#l00043">InPlaceOperationMutator.cpp:43</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_d182250f0c231765fc862e69db210731.xhtml">graph</a></li><li class="navelem"><a class="el" href="dir_1b9e532a4c8623825d945e964c6e4c7f.xhtml">mutators</a></li><li class="navelem"><a class="el" href="_in_place_operation_mutator_8cpp.xhtml">InPlaceOperationMutator.cpp</a></li>
    <li class="footer">Generated on Thu Mar 5 2020 16:07:02 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
